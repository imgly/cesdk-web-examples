{
  "version": 3,
  "sources": ["../../../../../node_modules/base64-js/index.js", "../../../../../node_modules/ieee754/index.js", "../../../../../node_modules/buffer/index.js", "../../../../../esbuild/polyfill.noop.js", "../../../../../_builds/cesdk/wasm32-unknown-emscripten/RelWithDebInfo/cesdk.js", "../../../../../bindings/wasm/js_web/src/streams/index.ts", "../../../../../bindings/wasm/js_web/src/streams/Channel.ts", "../../../../../bindings/wasm/js_web/src/types/MimeType.ts", "../../../../../node_modules/superstruct/src/error.ts", "../../../../../node_modules/superstruct/src/utils.ts", "../../../../../node_modules/superstruct/src/struct.ts", "../../../../../node_modules/superstruct/src/structs/utilities.ts", "../../../../../node_modules/superstruct/src/structs/types.ts", "../../../../../node_modules/superstruct/src/structs/coercions.ts", "../../../../../node_modules/superstruct/src/structs/refinements.ts", "../../../../../bindings/wasm/js_web/src/assert.ts", "../../../../../bindings/wasm/js_web/src/reactor/decorate.ts", "../../../../../bindings/wasm/js_web/src/types/color.ts", "../../../../../bindings/wasm/js_web/src/ubq/ubq_result.ts", "../../../../../bindings/wasm/js_web/src/utils/Blob.ts", "../../../../../bindings/wasm/js_web/src/utils/cppVectorToArray.ts", "../../../../../bindings/wasm/js_web/src/BlockAPI.ts", "../../../../../bindings/wasm/js_web/src/EditorAPI.ts", "../../../../../bindings/wasm/js_web/src/SceneAPI.ts", "../../../../../bindings/wasm/js_web/src/AssetAPI.ts", "../../../../../bindings/wasm/js_web/src/types/engine.ts", "../../../../../bindings/wasm/js_web/src/utils/mapToEngineKey.ts", "../../../../../bindings/wasm/js_web/src/ubq/LegacyAPI.ts", "../../../../../bindings/wasm/js_web/src/VariableAPI.ts", "../../../../../bindings/wasm/js_web/src/configure.ts", "../../../../../bindings/wasm/js_web/src/license.ts", "../../../../../bindings/wasm/js_web/src/ubq/module.ts", "../../../../../bindings/wasm/js_web/src/ui/browser.ts", "../../../../../bindings/wasm/js_web/src/init.ts", "../../../../../bindings/wasm/js_web/src/workers/transferSettings.ts", "../../../../../bindings/wasm/js_web/src/workers/exportVideo.ts", "../../../../../bindings/wasm/js_web/src/workers/workerTypes.ts", "../../../../../bindings/wasm/js_web/src/workers/workerHost.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "/* polyfill.noop */\n", "\nvar CESDK = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir ||= __filename;\n  return (\nfunction(moduleArg = {}) {\n\n// include: shell.js\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = moduleArg;\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise((resolve, reject) => {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n[\"_malloc\",\"_free\",\"___indirect_function_table\",\"_ma_malloc_emscripten\",\"_ma_free_emscripten\",\"_ma_device_process_pcm_frames_capture__webaudio\",\"_ma_device_process_pcm_frames_playback__webaudio\",\"_isLocalTrackingEnabled\",\"_getTrackingOverrideEndpoint\",\"_jsUpdateTexture\",\"_getWindowHostname\",\"_setItem\",\"_getItem\",\"_isLocalStorageDefined\",\"_clearItem\",\"_main\",\"onRuntimeInitialized\"].forEach((prop) => {\n  if (!Object.getOwnPropertyDescriptor(Module['ready'], prop)) {\n    Object.defineProperty(Module['ready'], prop, {\n      get: () => abort('You are getting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n      set: () => abort('You are setting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n    });\n  }\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n\n  if (!Module.expectedDataFileDownloads) {\n    Module.expectedDataFileDownloads = 0;\n  }\n\n  Module.expectedDataFileDownloads++;\n  (function() {\n    // Do not attempt to redownload the virtual filesystem data when in a pthread or a Wasm Worker context.\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) return;\n    var loadPackage = function(metadata) {\n\n      var PACKAGE_PATH = '';\n      if (typeof window === 'object') {\n        PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');\n      } else if (typeof process === 'undefined' && typeof location !== 'undefined') {\n        // web worker\n        PACKAGE_PATH = encodeURIComponent(location.pathname.toString().substring(0, location.pathname.toString().lastIndexOf('/')) + '/');\n      }\n      var PACKAGE_NAME = 'cesdk.data';\n      var REMOTE_PACKAGE_BASE = 'cesdk.data';\n      if (typeof Module['locateFilePackage'] === 'function' && !Module['locateFile']) {\n        Module['locateFile'] = Module['locateFilePackage'];\n        err('warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)');\n      }\n      var REMOTE_PACKAGE_NAME = Module['locateFile'] ? Module['locateFile'](REMOTE_PACKAGE_BASE, '') : REMOTE_PACKAGE_BASE;\nvar REMOTE_PACKAGE_SIZE = metadata['remote_package_size'];\n\n      function fetchRemotePackage(packageName, packageSize, callback, errback) {\n        if (typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string') {\n          require('fs').readFile(packageName, function(err, contents) {\n            if (err) {\n              errback(err);\n            } else {\n              callback(contents.buffer);\n            }\n          });\n          return;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', packageName, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.onprogress = function(event) {\n          var url = packageName;\n          var size = packageSize;\n          if (event.total) size = event.total;\n          if (event.loaded) {\n            if (!xhr.addedTotal) {\n              xhr.addedTotal = true;\n              if (!Module.dataFileDownloads) Module.dataFileDownloads = {};\n              Module.dataFileDownloads[url] = {\n                loaded: event.loaded,\n                total: size\n              };\n            } else {\n              Module.dataFileDownloads[url].loaded = event.loaded;\n            }\n            var total = 0;\n            var loaded = 0;\n            var num = 0;\n            for (var download in Module.dataFileDownloads) {\n            var data = Module.dataFileDownloads[download];\n              total += data.total;\n              loaded += data.loaded;\n              num++;\n            }\n            total = Math.ceil(total * Module.expectedDataFileDownloads/num);\n            if (Module['setStatus']) Module['setStatus'](`Downloading data... (${loaded}/${total})`);\n          } else if (!Module.dataFileDownloads) {\n            if (Module['setStatus']) Module['setStatus']('Downloading data...');\n          }\n        };\n        xhr.onerror = function(event) {\n          throw new Error(\"NetworkError for: \" + packageName);\n        }\n        xhr.onload = function(event) {\n          if (xhr.status == 200 || xhr.status == 304 || xhr.status == 206 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n            var packageData = xhr.response;\n            callback(packageData);\n          } else {\n            throw new Error(xhr.statusText + \" : \" + xhr.responseURL);\n          }\n        };\n        xhr.send(null);\n      };\n\n      function handleError(error) {\n        console.error('package error:', error);\n      };\n\n      var fetchedCallback = null;\n      var fetched = Module['getPreloadedPackage'] ? Module['getPreloadedPackage'](REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE) : null;\n\n      if (!fetched) fetchRemotePackage(REMOTE_PACKAGE_NAME, REMOTE_PACKAGE_SIZE, function(data) {\n        if (fetchedCallback) {\n          fetchedCallback(data);\n          fetchedCallback = null;\n        } else {\n          fetched = data;\n        }\n      }, handleError);\n\n    function runWithFS() {\n\n      function assert(check, msg) {\n        if (!check) throw msg + new Error().stack;\n      }\nModule['FS_createPath'](\"/\", \"ly.img.cesdk\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk\", \"fonts\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk\", \"icons\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk\", \"icu\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk\", \"presets\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk\", \"shaders\", true, true);\nModule['FS_createPath'](\"/ly.img.cesdk/shaders\", \"common\", true, true);\n\n      /** @constructor */\n      function DataRequest(start, end, audio) {\n        this.start = start;\n        this.end = end;\n        this.audio = audio;\n      }\n      DataRequest.prototype = {\n        requests: {},\n        open: function(mode, name) {\n          this.name = name;\n          this.requests[name] = this;\n          Module['addRunDependency'](`fp ${this.name}`);\n        },\n        send: function() {},\n        onload: function() {\n          var byteArray = this.byteArray.subarray(this.start, this.end);\n          this.finish(byteArray);\n        },\n        finish: function(byteArray) {\n          var that = this;\n          // canOwn this data in the filesystem, it is a slide into the heap that will never change\n          Module['FS_createDataFile'](this.name, null, byteArray, true, true, true);\n          Module['removeRunDependency'](`fp ${that.name}`);\n          this.requests[this.name] = null;\n        }\n      };\n\n      var files = metadata['files'];\n      for (var i = 0; i < files.length; ++i) {\n        new DataRequest(files[i]['start'], files[i]['end'], files[i]['audio'] || 0).open('GET', files[i]['filename']);\n      }\n\n      function processPackageData(arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file failed.');\n        assert(arrayBuffer.constructor.name === ArrayBuffer.name, 'bad input to processPackageData');\n        var byteArray = new Uint8Array(arrayBuffer);\n        var curr;\n        // Reuse the bytearray from the XHR as the source for file reads.\n          DataRequest.prototype.byteArray = byteArray;\n          var files = metadata['files'];\n          for (var i = 0; i < files.length; ++i) {\n            DataRequest.prototype.requests[files[i].filename].onload();\n          }          Module['removeRunDependency']('datafile_cesdk.data');\n\n      };\n      Module['addRunDependency']('datafile_cesdk.data');\n\n      if (!Module.preloadResults) Module.preloadResults = {};\n\n      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};\n      if (fetched) {\n        processPackageData(fetched);\n        fetched = null;\n      } else {\n        fetchedCallback = processPackageData;\n      }\n\n    }\n    if (Module['calledRun']) {\n      runWithFS();\n    } else {\n      if (!Module['preRun']) Module['preRun'] = [];\n      Module[\"preRun\"].push(runWithFS); // FS is not initialized yet, wait for it\n    }\n\n    }\n    loadPackage({\"files\": [{\"filename\": \"/ly.img.cesdk/fonts/imgly_font_inter_semibold.otf\", \"start\": 0, \"end\": 270760}, {\"filename\": \"/ly.img.cesdk/icons/ErrorAudio.svg\", \"start\": 270760, \"end\": 271672}, {\"filename\": \"/ly.img.cesdk/icons/ErrorConnection.svg\", \"start\": 271672, \"end\": 272620}, {\"filename\": \"/ly.img.cesdk/icons/ErrorVideo.svg\", \"start\": 272620, \"end\": 273473}, {\"filename\": \"/ly.img.cesdk/icons/Move.svg\", \"start\": 273473, \"end\": 274413}, {\"filename\": \"/ly.img.cesdk/icons/RotateIndicator.svg\", \"start\": 274413, \"end\": 275394}, {\"filename\": \"/ly.img.cesdk/icu/icudt74l.dat\", \"start\": 275394, \"end\": 810498}, {\"filename\": \"/ly.img.cesdk/presets/.keep\", \"start\": 810498, \"end\": 810498}, {\"filename\": \"/ly.img.cesdk/shaders/adjustments.sksl\", \"start\": 810498, \"end\": 814387}, {\"filename\": \"/ly.img.cesdk/shaders/black_and_white_color_mixer.sksl\", \"start\": 814387, \"end\": 820704}, {\"filename\": \"/ly.img.cesdk/shaders/common/ubq_adjustments.sksl\", \"start\": 820704, \"end\": 825295}, {\"filename\": \"/ly.img.cesdk/shaders/common/ubq_color_conversions.sksl\", \"start\": 825295, \"end\": 835280}, {\"filename\": \"/ly.img.cesdk/shaders/common/ubq_constants.sksl\", \"start\": 835280, \"end\": 835770}, {\"filename\": \"/ly.img.cesdk/shaders/common/ubq_hue_constants.sksl\", \"start\": 835770, \"end\": 838937}, {\"filename\": \"/ly.img.cesdk/shaders/common/ubq_noise.sksl\", \"start\": 838937, \"end\": 841575}, {\"filename\": \"/ly.img.cesdk/shaders/cross_cut.sksl\", \"start\": 841575, \"end\": 842522}, {\"filename\": \"/ly.img.cesdk/shaders/dot_pattern.sksl\", \"start\": 842522, \"end\": 843600}, {\"filename\": \"/ly.img.cesdk/shaders/duotone_filter.sksl\", \"start\": 843600, \"end\": 844564}, {\"filename\": \"/ly.img.cesdk/shaders/extrude_blur.sksl\", \"start\": 844564, \"end\": 846681}, {\"filename\": \"/ly.img.cesdk/shaders/glow.sksl\", \"start\": 846681, \"end\": 847648}, {\"filename\": \"/ly.img.cesdk/shaders/half_tone.sksl\", \"start\": 847648, \"end\": 848142}, {\"filename\": \"/ly.img.cesdk/shaders/hsp_selective_adjustments.sksl\", \"start\": 848142, \"end\": 861742}, {\"filename\": \"/ly.img.cesdk/shaders/linocut.sksl\", \"start\": 861742, \"end\": 862527}, {\"filename\": \"/ly.img.cesdk/shaders/liquid.sksl\", \"start\": 862527, \"end\": 863009}, {\"filename\": \"/ly.img.cesdk/shaders/lut_filter.sksl\", \"start\": 863009, \"end\": 865872}, {\"filename\": \"/ly.img.cesdk/shaders/mask_color.sksl\", \"start\": 865872, \"end\": 866377}, {\"filename\": \"/ly.img.cesdk/shaders/mirror.sksl\", \"start\": 866377, \"end\": 866831}, {\"filename\": \"/ly.img.cesdk/shaders/outliner.sksl\", \"start\": 866831, \"end\": 868468}, {\"filename\": \"/ly.img.cesdk/shaders/pixelize.sksl\", \"start\": 868468, \"end\": 868768}, {\"filename\": \"/ly.img.cesdk/shaders/placeholder_overlay_lines.sksl\", \"start\": 868768, \"end\": 869456}, {\"filename\": \"/ly.img.cesdk/shaders/posterize.sksl\", \"start\": 869456, \"end\": 869668}, {\"filename\": \"/ly.img.cesdk/shaders/radial_pixel.sksl\", \"start\": 869668, \"end\": 870231}, {\"filename\": \"/ly.img.cesdk/shaders/recolor.sksl\", \"start\": 870231, \"end\": 872432}, {\"filename\": \"/ly.img.cesdk/shaders/sharpie.sksl\", \"start\": 872432, \"end\": 874737}, {\"filename\": \"/ly.img.cesdk/shaders/shifter.sksl\", \"start\": 874737, \"end\": 875421}, {\"filename\": \"/ly.img.cesdk/shaders/tiltshift.sksl\", \"start\": 875421, \"end\": 876003}, {\"filename\": \"/ly.img.cesdk/shaders/tv_glitch.sksl\", \"start\": 876003, \"end\": 876721}, {\"filename\": \"/ly.img.cesdk/shaders/vignette.sksl\", \"start\": 876721, \"end\": 877093}], \"remote_package_size\": 877093});\n\n  })();\n\n\n    // All the pre-js content up to here must remain later on, we need to run\n    // it.\n    if (Module['ENVIRONMENT_IS_PTHREAD'] || Module['$ww']) Module['preRun'] = [];\n    var necessaryPreJSTasks = Module['preRun'].slice();\n  if (typeof (window) === 'object' && typeof (window.performance) === 'object') {\n    Module.performance = performance;\n}\nelse if (typeof (global) === 'object' &&\n    typeof (global.perf_hooks) === 'object' &&\n    typeof (global.perf_hooks.performance) === 'object') {\n    Module.performance = global.perf_hooks.performance;\n}\nelse {\n    Module.performance = { mark: function () { }, measure: function () { } };\n}\nvar emscripten_ubq_FetchState;\n(function (emscripten_ubq_FetchState) {\n    emscripten_ubq_FetchState[emscripten_ubq_FetchState[\"PENDING\"] = 0] = \"PENDING\";\n    emscripten_ubq_FetchState[emscripten_ubq_FetchState[\"FINISHED\"] = 1] = \"FINISHED\";\n    emscripten_ubq_FetchState[emscripten_ubq_FetchState[\"ALLOCATED\"] = 2] = \"ALLOCATED\";\n    emscripten_ubq_FetchState[emscripten_ubq_FetchState[\"ERROR\"] = 3] = \"ERROR\";\n})(emscripten_ubq_FetchState || (emscripten_ubq_FetchState = {}));\nvar emscripten_ubq_FetchMethod;\n(function (emscripten_ubq_FetchMethod) {\n    emscripten_ubq_FetchMethod[emscripten_ubq_FetchMethod[\"GET\"] = 0] = \"GET\";\n    emscripten_ubq_FetchMethod[emscripten_ubq_FetchMethod[\"POST\"] = 1] = \"POST\";\n})(emscripten_ubq_FetchMethod || (emscripten_ubq_FetchMethod = {}));\nclass FetchProcess {\n    constructor(handle, uri) {\n        this.state = emscripten_ubq_FetchState.PENDING;\n        this.totalBytes = 0;\n        this.receivedLength = 0;\n        this.handle = handle;\n        this.uri = uri;\n        this.abortController = new AbortController();\n        this.abortSignal = this.abortController.signal;\n    }\n    async readChunks(body) {\n        let receivedLength = 0;\n        const chunks = [];\n        const readChunk = (chunk) => {\n            chunks.push(chunk);\n            receivedLength += chunk.length;\n            this.receivedLength = receivedLength;\n        };\n        if (body == null) {\n        }\n        else if ('getReader' in body) {\n            const reader = body.getReader();\n            for (;;) {\n                const { done, value } = await reader.read();\n                if (done)\n                    break;\n                if (this.abortSignal.aborted) {\n                    await reader.cancel();\n                    reader.releaseLock();\n                    throw new Error(this.abortSignal.reason);\n                }\n                readChunk(value);\n            }\n            reader.releaseLock();\n        }\n        else {\n            const handleAbort = () => body.destroy(new Error(this.abortSignal.reason));\n            this.abortSignal.addEventListener('abort', handleAbort, { once: true });\n            try {\n                await new Promise((resolve, reject) => {\n                    body.on('data', readChunk);\n                    body.on('end', () => resolve());\n                    body.on('error', (err) => reject(err));\n                });\n            }\n            finally {\n                this.abortSignal.removeEventListener('abort', handleAbort);\n            }\n        }\n        const mergedChunks = new Uint8Array(receivedLength);\n        let position = 0;\n        for (const chunk of chunks) {\n            mergedChunks.set(chunk, position);\n            position += chunk.length;\n        }\n        return this.finish(mergedChunks);\n    }\n    abort() {\n        if (this.isPending()) {\n            this.abortController.abort('Fetch aborted');\n        }\n    }\n    isPending() {\n        return this.state === emscripten_ubq_FetchState.PENDING;\n    }\n    isError() {\n        return this.state === emscripten_ubq_FetchState.ERROR;\n    }\n    isFinished() {\n        return this.state === emscripten_ubq_FetchState.FINISHED;\n    }\n    isAllocated() {\n        return this.state === emscripten_ubq_FetchState.ALLOCATED;\n    }\n    allocate() {\n        if (this.isAllocated())\n            return this;\n        if (this.isFinished()) {\n            const resultLength = this.result.length;\n            const resultAddress = Module._malloc(resultLength);\n            Module.HEAPU8.set(this.result, resultAddress);\n            const allocatedProcess = Object.assign(Object.assign({}, this), { state: emscripten_ubq_FetchState.ALLOCATED, resultAddress,\n                resultLength });\n            Object.assign(this, allocatedProcess);\n            return allocatedProcess;\n        }\n        return null;\n    }\n    finish(result) {\n        const finishedProcess = Object.assign(Object.assign({}, this), { state: emscripten_ubq_FetchState.FINISHED, result, totalBytes: result.length });\n        return Object.assign(this, finishedProcess);\n    }\n    fail(error) {\n        const erroredProcess = Object.assign(Object.assign({}, this), { state: emscripten_ubq_FetchState.ERROR, error });\n        return Object.assign(this, erroredProcess);\n    }\n}\nclass AsyncFetchManager {\n    constructor() {\n        this._nextHandle = 0;\n        this._nextHeaderHandle = 0;\n        this._processes = new Map();\n        this._headers = new Map();\n        this._fetchImpl = null;\n    }\n    _fetch(args, init) {\n        if (this._fetchImpl) {\n            return this._fetchImpl(args, init);\n        }\n        else {\n            return fetch(args, init);\n        }\n    }\n    setFetch(fetchImp) {\n        this._fetchImpl = fetchImp;\n    }\n    getProcess(handle) {\n        return this._processes.get(handle);\n    }\n    deleteProcess(handle) {\n        const process = this._processes.get(handle);\n        if (process === null || process === void 0 ? void 0 : process.isPending()) {\n            process.abort();\n        }\n        return this._processes.delete(handle);\n    }\n    clear() {\n        for (const process of this._processes.values()) {\n            if (process.isPending()) {\n                process.abort();\n            }\n        }\n        this._processes.clear();\n        this._headers.clear();\n    }\n    fetch(method, uriAddress, uriLength, headerHandlesAddress, headerHandleCount, requestBodyAddress, requestBodyLength, credentialsAddress, credentialsLength) {\n        const uriString = Module.UTF8ToString(uriAddress, uriLength);\n        const handle = this._nextHandle++;\n        const process = new FetchProcess(handle, uriString);\n        this._processes.set(handle, process);\n        if (uriString.match(/^file:/)) {\n            this._fetchFile(process).catch((error) => {\n                process.fail(error);\n            });\n        }\n        else {\n            this._fetchRemote(process, method, headerHandlesAddress, headerHandleCount, requestBodyAddress, requestBodyLength, credentialsAddress, credentialsLength).catch((error) => {\n                process.fail(error);\n            });\n        }\n        return process;\n    }\n    async _fetchFile(process) {\n        if (typeof window !== 'undefined')\n            throw new Error('File URLs supported only in Node.JS');\n        const fs = require('fs');\n        const { fileURLToPath } = require('url');\n        const readStream = fs.createReadStream(fileURLToPath(process.uri));\n        return process.readChunks(readStream);\n    }\n    async _fetchRemote(process, method, headerHandlesAddress, headerHandleCount, requestBodyAddress, requestBodyLength, credentialsAddress, credentialsLength) {\n        const credentials = Module.UTF8ToString(credentialsAddress, credentialsLength);\n        const headers = this.getHeaders(headerHandlesAddress, headerHandleCount);\n        const body = method === emscripten_ubq_FetchMethod.POST\n            ? new Uint8Array(new Uint8Array(Module.HEAPU8.buffer, requestBodyAddress, requestBodyLength))\n            : undefined;\n        const response = await this._fetch(process.uri, {\n            method: emscripten_ubq_FetchMethod[method],\n            headers,\n            body,\n            mode: 'cors',\n            credentials,\n            signal: process.abortSignal\n        });\n        if (response.status >= 200 && response.status <= 209) {\n            let contentLength = 0;\n            if (response.headers.has('Content-Length')) {\n                contentLength = +response.headers.get('Content-Length');\n            }\n            process.totalBytes = contentLength;\n            return process.readChunks(response.body);\n        }\n        else {\n            return process.fail(response.statusText);\n        }\n    }\n    getHeaders(address, count) {\n        const headers = {};\n        for (let i = 0; i < count; i++) {\n            const headerHandle = Module.getValue((address + i * 4), 'i32');\n            const header = this._headers.get(headerHandle);\n            headers[header.key] = header.value;\n        }\n        return headers;\n    }\n    createHeader(keyAddress, keyLength, valueAddress, valueLength) {\n        const key = Module.UTF8ToString(keyAddress, keyLength);\n        const value = Module.UTF8ToString(valueAddress, valueLength);\n        const handle = this._nextHeaderHandle++;\n        this._headers.set(handle, { key, value });\n        return handle;\n    }\n    deleteHeader(handle) {\n        return this._headers.delete(handle);\n    }\n}\nModule.emscripten_ubq_asyncFetchManager = new AsyncFetchManager();\n/* eslint-disable */\nModule.emscripten_ubq_codec_videoDecoders = new Map();\nModule.emscripten_ubq_codec_audioDecoders = new Map();\nModule.emscripten_ubq_codec_videoEncoders = new Map();\nModule.emscripten_ubq_codec_audioEncoders = new Map();\n\nModule.emscripten_ubq_codec_videoDecoderNextHandle = 1;\nModule.emscripten_ubq_codec_audioDecoderNextHandle = 1;\nModule.emscripten_ubq_codec_videoEncoderNextHandle = 1;\nModule.emscripten_ubq_codec_audioEncoderNextHandle = 1;\n\nModule.emscripten_ubq_codec_createNativeResult = function (result) {\n  // NOTE: this assumes a ptr size of 4 (works with wasm32 only) and matches the layout of `struct CodecResult`\n  const resultPtr = Module._malloc(8);\n  const array = Module.HEAPU32.subarray(resultPtr / 4, resultPtr / 4 + 2);\n  array[0] = result.handle ? result.handle : result.code ? result.code : 0;\n  if (result.error) {\n    const encoder = new TextEncoder();\n    const utf8String = encoder.encode(result.error);\n    const stringPtr = Module._malloc(utf8String.length + 1);\n    const string = Module.HEAPU8.subarray(stringPtr, stringPtr + utf8String.length + 1);\n    for (let i = 0; i < utf8String.length; i++) {\n      string[i] = utf8String[i];\n    }\n    string[utf8String.length] = 0;\n    array[1] = stringPtr;\n  } else {\n    array[1] = 0;\n  }\n  return resultPtr;\n}\n\nModule.emscripten_ubq_codec_createVideoDecoder = function (handle, codecServicePtr) {\n  const videoDecoder = new VideoDecoder({\n    output: (frame) => {\n      const textures = videoDecoder.textures;\n\n      let dropFrame = false;\n      if (videoDecoder.shouldDropFrames) {\n        dropFrame = true;\n      } else if (videoDecoder.decodedFrames < videoDecoder.requestedFrame) {\n        dropFrame = true;\n      } else if (videoDecoder.decodeQueueSize >= textures.length) {\n        dropFrame = true;\n      }\n\n      if (!dropFrame) {\n        var gl = Module.ctx;\n        const textureIndex = videoDecoder.decodedFrames % textures.length;\n        const prevTexture = gl.getParameter(gl.TEXTURE_BINDING_2D);\n        gl.bindTexture(gl.TEXTURE_2D, textures[textureIndex]);\n        gl.texImage2D(\n          gl.TEXTURE_2D,\n          0,\n          gl.RGBA,\n          gl.RGBA,\n          gl.UNSIGNED_BYTE,\n          frame\n        );\n        gl.bindTexture(gl.TEXTURE_2D, prevTexture);\n      }\n\n      // Close frame ASAP.\n      frame.close();\n      videoDecoder.decodedFrames++;\n      Module.emscripten_ubq_codec_onOutputDecodedVideoFrame(\n        handle,\n        videoDecoder.decodedFrames,\n        dropFrame,\n        codecServicePtr\n      );\n    },\n    error: (e) => {\n      videoDecoder.unexpectedError = e;\n      console.error(e);\n    }\n  });\n\n  videoDecoder.decodedFrames = 0;\n  videoDecoder.requestedFrame = 0;\n  videoDecoder.shouldDropFrames = false;\n\n  return videoDecoder;\n};\n\nModule.emscripten_ubq_codec_createAudioDecoder = function (\n  leftBufferPtr,\n  rightBufferPtr,\n  bufferLength\n) {\n  const audioDecoder = new AudioDecoder({\n    output: (data) => {\n      if (audioDecoder.flushing) {\n        data.close();\n        return;\n      }\n\n      const leftArray = Module.HEAPF32.subarray(\n        leftBufferPtr / 4,\n        leftBufferPtr / 4 + bufferLength\n      );\n      const rightArray = Module.HEAPF32.subarray(\n        rightBufferPtr / 4,\n        rightBufferPtr / 4 + bufferLength\n      );\n\n      const rightPlaneIndex = data.numberOfChannels === 1 ? 0 : 1;\n\n      if (data.format === 'f32-planar') {\n        let writeCursor = audioDecoder.writtenFrames % bufferLength;\n        if (writeCursor + data.numberOfFrames <= bufferLength) {\n          data.copyTo(leftArray.subarray(writeCursor), {\n            planeIndex: 0,\n            frameCount: data.numberOfFrames\n          });\n          data.copyTo(rightArray.subarray(writeCursor), {\n            planeIndex: rightPlaneIndex,\n            frameCount: data.numberOfFrames\n          });\n        } else {\n          const length = bufferLength - writeCursor;\n          data.copyTo(leftArray.subarray(writeCursor), {\n            planeIndex: 0,\n            frameCount: length\n          });\n          data.copyTo(rightArray.subarray(writeCursor), {\n            planeIndex: rightPlaneIndex,\n            frameCount: length\n          });\n          data.copyTo(leftArray, { planeIndex: 0, frameOffset: length });\n          data.copyTo(rightArray, { planeIndex: rightPlaneIndex, frameOffset: length });\n        }\n        audioDecoder.writtenFrames += data.numberOfFrames;\n      } else if (data.format === 's16-planar') {\n        if (data.numberOfChannels === 1) {\n          const buffer = new Int16Array(data.numberOfFrames);\n          data.copyTo(buffer, { planeIndex: 0 });\n          for (let frameIndex = 0; frameIndex < data.numberOfFrames; frameIndex++) {\n            const sample = buffer[frameIndex] / 32768.0;\n            let writeCursor = audioDecoder.writtenFrames % bufferLength;\n            leftArray[writeCursor] = sample;\n            rightArray[writeCursor] = sample;\n            audioDecoder.writtenFrames++;\n          }\n        } else {\n          const leftBuffer = new Int16Array(data.numberOfFrames);\n          const rightBuffer = new Int16Array(data.numberOfFrames);\n          data.copyTo(leftBuffer, { planeIndex: 0 });\n          data.copyTo(rightBuffer, { planeIndex: 1 });\n          for (let frameIndex = 0; frameIndex < data.numberOfFrames; frameIndex++) {\n            let writeCursor = audioDecoder.writtenFrames % bufferLength;\n            leftArray[writeCursor] = leftBuffer[frameIndex] / 32768.0;\n            rightArray[writeCursor] = rightBuffer[frameIndex] / 32768.0;\n            audioDecoder.writtenFrames++;\n          }\n        }\n      } else if (data.format === 's16') {\n        const buffer = new Int16Array(data.numberOfFrames * data.numberOfChannels);\n        data.copyTo(buffer, { planeIndex: 0 });\n        if (data.numberOfChannels === 1) {\n          for (let frameIndex = 0; frameIndex < data.numberOfFrames; frameIndex++) {\n            const sample = buffer[frameIndex] / 32768.0;\n            let writeCursor = audioDecoder.writtenFrames % bufferLength;\n            leftArray[writeCursor] = sample;\n            rightArray[writeCursor] = sample;\n            audioDecoder.writtenFrames++;\n          }\n        } else {\n          for (let frameIndex = 0; frameIndex < data.numberOfFrames; frameIndex++) {\n            let writeCursor = audioDecoder.writtenFrames % bufferLength;\n            leftArray[writeCursor] = buffer[frameIndex * data.numberOfChannels + 0] / 32768.0;\n            rightArray[writeCursor] = buffer[frameIndex * data.numberOfChannels + 1] / 32768.0;\n            audioDecoder.writtenFrames++;\n          }\n        }\n      } else {\n        console.error('Unsupported audio format:', data.format);\n      }\n\n      // Close ASAP.\n      data.close();\n    },\n    error: (e) => {\n      audioDecoder.unexpectedError = e;\n      console.error(e);\n    }\n  });\n  audioDecoder.writtenFrames = 0;\n  return audioDecoder;\n};\n/* eslint-disable */\nModule.emscripten_ubq_settings_forceWebGL1 = false;\n\n    if (!Module['preRun']) throw 'Module.preRun should exist because file support used it; did a pre-js delete it?';\n    necessaryPreJSTasks.forEach(function(task) {\n      if (Module['preRun'].indexOf(task) < 0) throw 'All preRun tasks that exist before user pre-js code should remain after; did you replace Module or modify Module.preRun?';\n    });\n  \n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  var nodeVersion = process.versions.node;\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\n  var minVersion = 181500;\n  if (numericVersion < 181500) {\n    throw new Error('This emscripten-generated code requires node v18.15.15.0 (detected v' + nodeVersion + ')');\n  }\n\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror, binary = true) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : 'utf8', (err, data) => {\n    if (err) onerror(err);\n    else onload(binary ? data.buffer : data);\n  });\n};\n// end include: node_shell_read.js\n  if (!Module['thisProgram'] && process.argv.length > 1) {\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process.argv.slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  quit_ = (status, toThrow) => {\n    process.exitCode = status;\n    throw toThrow;\n  };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = read;\n  }\n\n  readBinary = (f) => {\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    let data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = (f, onload, onerror) => {\n    setTimeout(() => onload(readBinary(f)));\n  };\n\n  if (typeof clearTimeout == 'undefined') {\n    globalThis.clearTimeout = (id) => {};\n  }\n\n  if (typeof setTimeout == 'undefined') {\n    // spidermonkey lacks setTimeout but we use it above in readAsync.\n    globalThis.setTimeout = (f) => (typeof f == 'function') ? f() : abort();\n  }\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      // Unlike node which has process.exitCode, d8 has no such mechanism. So we\n      // have no way to set the exit code and then let the program exit with\n      // that code when it naturally stops running (say, when all setTimeouts\n      // have completed). For that reason, we must call `quit` - the only way to\n      // set the exit code - but quit also halts immediately.  To increase\n      // consistency with node (and the web) we schedule the actual quit call\n      // using a setTimeout to give the current stack and any exception handlers\n      // a chance to run.  This enables features such as addOnPostRun (which\n      // expected to be able to run code after main returns).\n      setTimeout(() => {\n        if (!(toThrow instanceof ExitStatus)) {\n          let toLog = toThrow;\n          if (toThrow && typeof toThrow == 'object' && toThrow.stack) {\n            toLog = [toThrow, toThrow.stack];\n          }\n          err(`exiting due to exception: ${toLog}`);\n        }\n        quit(status);\n      });\n      throw toThrow;\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.startsWith('blob:')) {\n    scriptDirectory = '';\n  } else {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/')+1);\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\nread_ = (url) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, false);\n    xhr.send(null);\n    return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.responseType = 'arraybuffer';\n      xhr.send(null);\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.error.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('asm', 'wasmExports');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';\nvar ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';\nvar JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';\nvar OPFS = 'OPFS is no longer included by default; build with -lopfs.js';\n\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');\n\n\n// end include: shell.js\n// include: preamble.js\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary; \nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// include: base64Utils.js\n// Converts a string of base64 into a byte array (Uint8Array).\nfunction intArrayFromBase64(s) {\n  if (typeof ENVIRONMENT_IS_NODE != 'undefined' && ENVIRONMENT_IS_NODE) {\n    var buf = Buffer.from(s, 'base64');\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.length);\n  }\n\n  var decoded = atob(s);\n  var bytes = new Uint8Array(decoded.length);\n  for (var i = 0 ; i < decoded.length ; ++i) {\n    bytes[i] = decoded.charCodeAt(i);\n  }\n  return bytes;\n}\n\n// If filename is a base64 data URI, parses and returns data (Buffer on node,\n// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.\nfunction tryParseAsDataURI(filename) {\n  if (!isDataURI(filename)) {\n    return;\n  }\n\n  return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n}\n// end include: base64Utils.js\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n// don't define it at all in release modes.  This matches the behaviour of\n// MINIMAL_RUNTIME.\n// TODO(sbc): Make this the default even without STRICT enabled.\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\n\n// Memory management\n\nvar HEAP,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/* BigInt64Array type is not correctly defined in closure\n/** not-@type {!BigInt64Array} */\n  HEAP64,\n/* BigUInt64Array type is not correctly defined in closure\n/** not-t@type {!BigUint64Array} */\n  HEAPU64,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateMemoryViews() {\n  var b = wasmMemory.buffer;\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n  Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n  Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n}\n\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\n\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// In non-standalone/normal mode, we create the memory here.\n// include: runtime_init_memory.js\n// Create the wasm memory. (Note: this only applies if IMPORTED_MEMORY is defined)\n\nvar INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;legacyModuleProp('INITIAL_MEMORY', 'INITIAL_MEMORY');\n\nassert(INITIAL_MEMORY >= 65536, 'INITIAL_MEMORY should be larger than STACK_SIZE, was ' + INITIAL_MEMORY + '! (STACK_SIZE=' + 65536 + ')');\n  \n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\n\n  if (Module['wasmMemory']) {\n    wasmMemory = Module['wasmMemory'];\n  } else\n  {\n    wasmMemory = new WebAssembly.Memory({\n      'initial': INITIAL_MEMORY / 65536,\n      // In theory we should not need to emit the maximum if we want \"unlimited\"\n      // or 4GB of memory, but VMs error on that atm, see\n      // https://github.com/emscripten-core/emscripten/issues/14130\n      // And in the pthreads case we definitely need to emit a maximum. So\n      // always emit one.\n      'maximum': 2147483648 / 65536,\n    });\n  }\n\nupdateMemoryViews();\n\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\n// specifically provide the memory length with Module['INITIAL_MEMORY'].\nINITIAL_MEMORY = wasmMemory.buffer.byteLength;\nassert(INITIAL_MEMORY % 65536 === 0);\n// end include: runtime_init_memory.js\n\n// include: runtime_stack_check.js\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\n  // monitor writes to address zero.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x02135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[((0)>>2)] = 1668509029;\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[((0)>>2)] != 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATMAIN__    = []; // functions called when main() is to be run\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \nif (!Module['noFSInit'] && !FS.init.initialized)\n  FS.init();\nFS.ignorePermissions = false;\n\nTTY.init();\n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n  checkStackCookie();\n  \n  callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnPreMain(cb) {\n  __ATMAIN__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(() => {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err(`dependency: ${dep}`);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  Module['monitorRunDependencies']?.(runDependencies);\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  Module['onAbort']?.(what);\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// include: memoryprofiler.js\n// end include: memoryprofiler.js\n// include: URIUtils.js\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */\nvar isFileURI = (filename) => filename.startsWith('file://');\n// end include: URIUtils.js\nfunction createExportWrapper(name) {\n  return function() {\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\n    var f = wasmExports[name];\n    assert(f, `exported native function \\`${name}\\` not found`);\n    return f.apply(null, arguments);\n  };\n}\n\n// include: runtime_exceptions.js\n// end include: runtime_exceptions.js\nvar wasmBinaryFile;\n  wasmBinaryFile = 'cesdk.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinarySync(file) {\n  if (file == wasmBinaryFile && wasmBinary) {\n    return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n    return readBinary(file);\n  }\n  throw 'both async and sync fetching of the wasm failed';\n}\n\nfunction getBinaryPromise(binaryFile) {\n  // If we don't have the binary yet, try to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary\n      && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n    ) {\n      return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n        if (!response['ok']) {\n          throw `failed to load wasm binary file at '${binaryFile}'`;\n        }\n        return response['arrayBuffer']();\n      }).catch(() => getBinarySync(binaryFile));\n    }\n  }\n\n  // Otherwise, getBinarySync should be able to get it synchronously\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n  return getBinaryPromise(binaryFile).then((binary) => {\n    return WebAssembly.instantiate(binary, imports);\n  }).then((instance) => {\n    return instance;\n  }).then(receiver, (reason) => {\n    err(`failed to asynchronously prepare wasm: ${reason}`);\n\n    // Warn on some common problems.\n    if (isFileURI(wasmBinaryFile)) {\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\n    }\n    abort(reason);\n  });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n  if (!binary &&\n      typeof WebAssembly.instantiateStreaming == 'function' &&\n      !isDataURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE &&\n      typeof fetch == 'function') {\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\n      // Suppress closure warning here since the upstream definition for\n      // instantiateStreaming only allows Promise<Repsponse> rather than\n      // an actual Response.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n      /** @suppress {checkTypes} */\n      var result = WebAssembly.instantiateStreaming(response, imports);\n\n      return result.then(\n        callback,\n        function(reason) {\n          // We expect the most common failure cause to be a bad MIME type for the binary,\n          // in which case falling back to ArrayBuffer instantiation should work.\n          err(`wasm streaming compile failed: ${reason}`);\n          err('falling back to ArrayBuffer instantiation');\n          return instantiateArrayBuffer(binaryFile, imports, callback);\n        });\n    });\n  }\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': wasmImports,\n    'wasi_snapshot_preview1': wasmImports,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    wasmExports = instance.exports;\n\n    \n\n    wasmTable = wasmExports['__indirect_function_table'];\n    \n    assert(wasmTable, 'table not found in wasm exports');\n\n    addOnInit(wasmExports['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n    return wasmExports;\n  }\n  // wait for the pthread pool (if any)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to\n  // run the instantiation parallel to any other async startup actions they are\n  // performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this\n  // path.\n  if (Module['instantiateWasm']) {\n\n    try {\n      return Module['instantiateWasm'](info, receiveInstance);\n    } catch(e) {\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// include: runtime_debug.js\nfunction legacyModuleProp(prop, newName, incomming=true) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get() {\n        let extra = incomming ? ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)' : '';\n        abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\`` + extra);\n\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingGlobal(sym, msg) {\n  if (typeof globalThis !== 'undefined') {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\n        return undefined;\n      }\n    });\n  }\n}\n\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\nmissingGlobal('asm', 'Please use wasmExports instead');\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n  // Any symbol that is not included from the JS libary is also (by definition)\n  // not exported on the Module object.\n  unexportedRuntimeSymbol(sym);\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get() {\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// Used by XXXXX_DEBUG settings to output debug messages.\nfunction dbg(text) {\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n  // logging to show up as warnings.\n  console.warn.apply(console, arguments);\n}\n// end include: runtime_debug.js\n// === Body ===\n\nvar ASM_CONSTS = {\n  2581788: ($0, $1, $2, $3, $4) => { if (typeof window === 'undefined' || (window.AudioContext || window.webkitAudioContext) === undefined) { return 0; } if (typeof(window.miniaudio) === 'undefined') { window.miniaudio = { referenceCount: 0 }; window.miniaudio.device_type = {}; window.miniaudio.device_type.playback = $0; window.miniaudio.device_type.capture = $1; window.miniaudio.device_type.duplex = $2; window.miniaudio.device_state = {}; window.miniaudio.device_state.stopped = $3; window.miniaudio.device_state.started = $4; miniaudio.devices = []; miniaudio.track_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == null) { miniaudio.devices[iDevice] = device; return iDevice; } } miniaudio.devices.push(device); return miniaudio.devices.length - 1; }; miniaudio.untrack_device_by_index = function(deviceIndex) { miniaudio.devices[deviceIndex] = null; while (miniaudio.devices.length > 0) { if (miniaudio.devices[miniaudio.devices.length-1] == null) { miniaudio.devices.pop(); } else { break; } } }; miniaudio.untrack_device = function(device) { for (var iDevice = 0; iDevice < miniaudio.devices.length; ++iDevice) { if (miniaudio.devices[iDevice] == device) { return miniaudio.untrack_device_by_index(iDevice); } } }; miniaudio.get_device_by_index = function(deviceIndex) { return miniaudio.devices[deviceIndex]; }; miniaudio.unlock_event_types = (function(){ return ['touchstart', 'touchend', 'click']; })(); miniaudio.unlock = function() { for(var i = 0; i < miniaudio.devices.length; ++i) { var device = miniaudio.devices[i]; if (device != null && device.webaudio != null && device.state === 2 ) { device.webaudio.resume(); } } miniaudio.unlock_event_types.map(function(event_type) { document.removeEventListener(event_type, miniaudio.unlock, true); }); }; miniaudio.unlock_event_types.map(function(event_type) { document.addEventListener(event_type, miniaudio.unlock, true); }); } window.miniaudio.referenceCount += 1; return 1; },  \n 2583778: () => { if (typeof(window.miniaudio) !== 'undefined') { window.miniaudio.referenceCount -= 1; if (window.miniaudio.referenceCount === 0) { delete window.miniaudio; } } },  \n 2583942: () => { return (navigator.mediaDevices !== undefined && navigator.mediaDevices.getUserMedia !== undefined); },  \n 2584046: () => { try { var temp = new (window.AudioContext || window.webkitAudioContext)(); var sampleRate = temp.sampleRate; temp.close(); return sampleRate; } catch(e) { return 0; } },  \n 2584217: ($0, $1, $2, $3, $4, $5) => { var deviceType = $0; var channels = $1; var sampleRate = $2; var bufferSize = $3; var pIntermediaryBuffer = $4; var pDevice = $5; if (typeof(window.miniaudio) === 'undefined') { return -1; } var device = {}; var audioContextOptions = {}; if (deviceType == window.miniaudio.device_type.playback) { audioContextOptions.sampleRate = sampleRate; } device.webaudio = new (window.AudioContext || window.webkitAudioContext)(audioContextOptions); device.webaudio.suspend(); device.state = window.miniaudio.device_state.stopped; var channelCountIn = 0; var channelCountOut = channels; if (deviceType != window.miniaudio.device_type.playback) { channelCountIn = channels; } device.scriptNode = device.webaudio.createScriptProcessor(bufferSize, channelCountIn, channelCountOut); device.scriptNode.onaudioprocess = function(e) { if (device.intermediaryBufferView == null || device.intermediaryBufferView.length == 0) { device.intermediaryBufferView = new Float32Array(Module.HEAPF32.buffer, pIntermediaryBuffer, bufferSize * channels); } if (deviceType == miniaudio.device_type.capture || deviceType == miniaudio.device_type.duplex) { for (var iChannel = 0; iChannel < channels; iChannel += 1) { var inputBuffer = e.inputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { intermediaryBuffer[iFrame*channels + iChannel] = inputBuffer[iFrame]; } } _ma_device_process_pcm_frames_capture__webaudio(pDevice, bufferSize, pIntermediaryBuffer); } if (deviceType == miniaudio.device_type.playback || deviceType == miniaudio.device_type.duplex) { _ma_device_process_pcm_frames_playback__webaudio(pDevice, bufferSize, pIntermediaryBuffer); for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { var outputBuffer = e.outputBuffer.getChannelData(iChannel); var intermediaryBuffer = device.intermediaryBufferView; for (var iFrame = 0; iFrame < bufferSize; iFrame += 1) { outputBuffer[iFrame] = intermediaryBuffer[iFrame*channels + iChannel]; } } } else { for (var iChannel = 0; iChannel < e.outputBuffer.numberOfChannels; ++iChannel) { e.outputBuffer.getChannelData(iChannel).fill(0.0); } } }; if (deviceType == miniaudio.device_type.capture || deviceType == miniaudio.device_type.duplex) { navigator.mediaDevices.getUserMedia({audio:true, video:false}) .then(function(stream) { device.streamNode = device.webaudio.createMediaStreamSource(stream); device.streamNode.connect(device.scriptNode); device.scriptNode.connect(device.webaudio.destination); }) .catch(function(error) { console.log(\"Failed to get user media: \" + error); }); } if (deviceType == miniaudio.device_type.playback) { device.scriptNode.connect(device.webaudio.destination); } return miniaudio.track_device(device); },  \n 2587000: ($0) => { return miniaudio.get_device_by_index($0).webaudio.sampleRate; },  \n 2587066: ($0) => { var device = miniaudio.get_device_by_index($0); if (device.scriptNode !== undefined) { device.scriptNode.onaudioprocess = function(e) {}; device.scriptNode.disconnect(); device.scriptNode = undefined; } if (device.streamNode !== undefined) { device.streamNode.disconnect(); device.streamNode = undefined; } device.webaudio.close(); device.webaudio = undefined; },  \n 2587431: ($0) => { miniaudio.untrack_device_by_index($0); },  \n 2587474: ($0) => { var device = miniaudio.get_device_by_index($0); device.webaudio.resume(); device.state = miniaudio.device_state.started; },  \n 2587599: ($0) => { var device = miniaudio.get_device_by_index($0); device.webaudio.suspend(); device.state = miniaudio.device_state.stopped; },  \n 2587725: () => { return !!globalThis.ubq_browserTabHidden; },  \n 2587771: () => { return HEAP8.length }\n};\nfunction isLocalTrackingEnabled() { return typeof window !== 'undefined' && window.localTracking === true; }\nfunction getTrackingOverrideEndpoint() { if (typeof window !== 'undefined' && window.trackingEndpoint) { return stringToNewUTF8(window.trackingEndpoint); } return null; }\nfunction jsUpdateTexture(texID,bufferHandle) { const buffer = Emval.toValue(bufferHandle); const gl = Module.ctx; gl.bindTexture(gl.TEXTURE_2D, GL.textures[texID]); gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, buffer); }\nfunction getWindowHostname() { return typeof window !== 'undefined' ? stringToNewUTF8(window.location.hostname) : stringToNewUTF8(\"\") }\nfunction setItem(key,value) { var keyStr = UTF8ToString(key); var valueStr = UTF8ToString(value); localStorage.setItem(keyStr, valueStr); }\nfunction getItem(key) { var keyStr = UTF8ToString(key); var valueStr = localStorage.getItem(keyStr); if (valueStr == null) { return null; } return stringToNewUTF8(valueStr); }\nfunction isLocalStorageDefined() { return typeof localStorage !== 'undefined'; }\nfunction clearItem(key) { var keyStr = UTF8ToString(key); localStorage.removeItem(keyStr); }\n\n\n// end include: preamble.js\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n\n  var callRuntimeCallbacks = (callbacks) => {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': return HEAP8[((ptr)>>0)];\n      case 'i8': return HEAP8[((ptr)>>0)];\n      case 'i16': return HEAP16[((ptr)>>1)];\n      case 'i32': return HEAP32[((ptr)>>2)];\n      case 'i64': return HEAP64[((ptr)>>3)];\n      case 'float': return HEAPF32[((ptr)>>2)];\n      case 'double': return HEAPF64[((ptr)>>3)];\n      case '*': return HEAPU32[((ptr)>>2)];\n      default: abort(`invalid type for getValue: ${type}`);\n    }\n  }\n\n  var noExitRuntime = Module['noExitRuntime'] || true;\n\n  var ptrToString = (ptr) => {\n      assert(typeof ptr === 'number');\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n    if (type.endsWith('*')) type = '*';\n    switch (type) {\n      case 'i1': HEAP8[((ptr)>>0)] = value; break;\n      case 'i8': HEAP8[((ptr)>>0)] = value; break;\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\n      case 'i64': HEAP64[((ptr)>>3)] = BigInt(value); break;\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\n      default: abort(`invalid type for setValue: ${type}`);\n    }\n  }\n\n  var warnOnce = (text) => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    };\n\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n  \n    /**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */\n  var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  \n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n        }\n  \n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        }\n      }\n      return str;\n    };\n  \n    /**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */\n  var UTF8ToString = (ptr, maxBytesToRead) => {\n      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n  var ___assert_fail = (condition, filename, line, func) => {\n      abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\n    };\n\n  var exceptionCaught =  [];\n  \n  \n  var uncaughtExceptionCount = 0;\n  var ___cxa_begin_catch = (ptr) => {\n      var info = new ExceptionInfo(ptr);\n      if (!info.get_caught()) {\n        info.set_caught(true);\n        uncaughtExceptionCount--;\n      }\n      info.set_rethrown(false);\n      exceptionCaught.push(info);\n      ___cxa_increment_exception_refcount(info.excPtr);\n      return info.get_exception_ptr();\n    };\n\n  \n  var exceptionLast = 0;\n  \n  \n  var ___cxa_end_catch = () => {\n      // Clear state flag.\n      _setThrew(0, 0);\n      assert(exceptionCaught.length > 0);\n      // Call destructor if one is registered then clear it.\n      var info = exceptionCaught.pop();\n  \n      ___cxa_decrement_exception_refcount(info.excPtr);\n      exceptionLast = 0; // XXX in decRef?\n    };\n\n  \n  class ExceptionInfo {\n      // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.\n      constructor(excPtr) {\n        this.excPtr = excPtr;\n        this.ptr = excPtr - 24;\n      }\n  \n      set_type(type) {\n        HEAPU32[(((this.ptr)+(4))>>2)] = type;\n      }\n  \n      get_type() {\n        return HEAPU32[(((this.ptr)+(4))>>2)];\n      }\n  \n      set_destructor(destructor) {\n        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;\n      }\n  \n      get_destructor() {\n        return HEAPU32[(((this.ptr)+(8))>>2)];\n      }\n  \n      set_caught(caught) {\n        caught = caught ? 1 : 0;\n        HEAP8[(((this.ptr)+(12))>>0)] = caught;\n      }\n  \n      get_caught() {\n        return HEAP8[(((this.ptr)+(12))>>0)] != 0;\n      }\n  \n      set_rethrown(rethrown) {\n        rethrown = rethrown ? 1 : 0;\n        HEAP8[(((this.ptr)+(13))>>0)] = rethrown;\n      }\n  \n      get_rethrown() {\n        return HEAP8[(((this.ptr)+(13))>>0)] != 0;\n      }\n  \n      // Initialize native structure fields. Should be called once after allocated.\n      init(type, destructor) {\n        this.set_adjusted_ptr(0);\n        this.set_type(type);\n        this.set_destructor(destructor);\n      }\n  \n      set_adjusted_ptr(adjustedPtr) {\n        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;\n      }\n  \n      get_adjusted_ptr() {\n        return HEAPU32[(((this.ptr)+(16))>>2)];\n      }\n  \n      // Get pointer which is expected to be received by catch clause in C++ code. It may be adjusted\n      // when the pointer is casted to some of the exception object base classes (e.g. when virtual\n      // inheritance is used). When a pointer is thrown this method should return the thrown pointer\n      // itself.\n      get_exception_ptr() {\n        // Work around a fastcomp bug, this code is still included for some reason in a build without\n        // exceptions support.\n        var isPointer = ___cxa_is_pointer_type(this.get_type());\n        if (isPointer) {\n          return HEAPU32[((this.excPtr)>>2)];\n        }\n        var adjusted = this.get_adjusted_ptr();\n        if (adjusted !== 0) return adjusted;\n        return this.excPtr;\n      }\n    }\n  \n  var ___resumeException = (ptr) => {\n      if (!exceptionLast) {\n        exceptionLast = ptr;\n      }\n      assert(false, 'Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.');\n    };\n  \n  \n  var findMatchingCatch = (args) => {\n      var thrown =\n        exceptionLast;\n      if (!thrown) {\n        // just pass through the null ptr\n        setTempRet0(0);\n        return 0;\n      }\n      var info = new ExceptionInfo(thrown);\n      info.set_adjusted_ptr(thrown);\n      var thrownType = info.get_type();\n      if (!thrownType) {\n        // just pass through the thrown ptr\n        setTempRet0(0);\n        return thrown;\n      }\n  \n      // can_catch receives a **, add indirection\n      // The different catch blocks are denoted by different types.\n      // Due to inheritance, those types may not precisely match the\n      // type of the thrown object. Find one which matches, and\n      // return the type of the catch block which should be called.\n      for (var arg in args) {\n        var caughtType = args[arg];\n  \n        if (caughtType === 0 || caughtType === thrownType) {\n          // Catch all clause matched or exactly the same type is caught\n          break;\n        }\n        var adjusted_ptr_addr = info.ptr + 16;\n        if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {\n          setTempRet0(caughtType);\n          return thrown;\n        }\n      }\n      setTempRet0(thrownType);\n      return thrown;\n    };\n  var ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);\n\n  var ___cxa_find_matching_catch_3 = (arg0) => findMatchingCatch([arg0]);\n\n  \n  \n  var ___cxa_throw = (ptr, type, destructor) => {\n      var info = new ExceptionInfo(ptr);\n      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.\n      info.init(type, destructor);\n      exceptionLast = ptr;\n      uncaughtExceptionCount++;\n      assert(false, 'Exception thrown, but exception catching is not enabled. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.');\n    };\n\n\n  var PATH = {\n  isAbs:(path) => path.charAt(0) === '/',\n  splitPath:(filename) => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n  normalizeArray:(parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n  normalize:(path) => {\n        var isAbsolute = PATH.isAbs(path),\n            trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n  dirname:(path) => {\n        var result = PATH.splitPath(path),\n            root = result[0],\n            dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n  basename:(path) => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash+1);\n      },\n  join:function() {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n  join2:(l, r) => PATH.normalize(l + '/' + r),\n  };\n  \n  var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        return (view) => crypto.getRandomValues(view);\n      } else\n      if (ENVIRONMENT_IS_NODE) {\n        // for nodejs with or without crypto support included\n        try {\n          var crypto_module = require('crypto');\n          var randomFillSync = crypto_module['randomFillSync'];\n          if (randomFillSync) {\n            // nodejs with LTS crypto support\n            return (view) => crypto_module['randomFillSync'](view);\n          }\n          // very old nodejs with the original crypto API\n          var randomBytes = crypto_module['randomBytes'];\n          return (view) => (\n            view.set(randomBytes(view.byteLength)),\n            // Return the original view to match modern native implementations.\n            view\n          );\n        } catch (e) {\n          // nodejs doesn't have crypto support\n        }\n      }\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort('no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };');\n    };\n  var randomFill = (view) => {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    };\n  \n  \n  \n  var PATH_FS = {\n  resolve:function() {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = (i >= 0) ? arguments[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n      },\n  relative:(from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n  };\n  \n  \n  \n  var FS_stdin_getChar_buffer = [];\n  \n  var lengthBytesUTF8 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4; ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n  \n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0))\n        return 0;\n  \n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n  /** @type {function(string, boolean=, number=)} */\n  function intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull) u8array.length = numBytesWritten;\n    return u8array;\n  }\n  var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (ENVIRONMENT_IS_NODE) {\n          // we will read data by chunks of BUFSIZE\n          var BUFSIZE = 256;\n          var buf = Buffer.alloc(BUFSIZE);\n          var bytesRead = 0;\n  \n          // For some reason we must suppress a closure warning here, even though\n          // fd definitely exists on process.stdin, and is even the proper way to\n          // get the fd of stdin,\n          // https://github.com/nodejs/help/issues/2136#issuecomment-523649904\n          // This started to happen after moving this logic out of library_tty.js,\n          // so it is related to the surrounding code in some unclear manner.\n          /** @suppress {missingProperties} */\n          var fd = process.stdin.fd;\n  \n          try {\n            bytesRead = fs.readSync(fd, buf);\n          } catch(e) {\n            // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,\n            // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.\n            if (e.toString().includes('EOF')) bytesRead = 0;\n            else throw e;\n          }\n  \n          if (bytesRead > 0) {\n            result = buf.slice(0, bytesRead).toString('utf-8');\n          } else {\n            result = null;\n          }\n        } else\n        if (typeof window != 'undefined' &&\n          typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: ');  // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else if (typeof readline == 'function') {\n          // Command line.\n          result = readline();\n          if (result !== null) {\n            result += '\\n';\n          }\n        }\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n  var TTY = {\n  ttys:[],\n  init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n  shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n  register(dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n  stream_ops:{\n  open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n  close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n  fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n  read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset+i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n  write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n  },\n  default_tty_ops:{\n  get_char(tty) {\n          return FS_stdin_getChar();\n        },\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            ]\n          };\n        },\n  ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n  ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        },\n  },\n  default_tty1_ops:{\n  put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n  fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n  },\n  };\n  \n  \n  var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    };\n  \n  var alignMemory = (size, alignment) => {\n      assert(alignment, \"alignment argument is required\");\n      return Math.ceil(size / alignment) * alignment;\n    };\n  var mmapAlloc = (size) => {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    };\n  var MEMFS = {\n  ops_table:null,\n  mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },\n  createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null; \n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n  getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n  expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n  resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n  node_ops:{\n  getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n  setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n  lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n  mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n  rename(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now()\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n  unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n  readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n  symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n  readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n  },\n  stream_ops:{\n  read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          assert(size >= 0);\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n  write(stream, buffer, offset, length, position, canOwn) {\n          // The data buffer should be a typed array view\n          assert(!(buffer instanceof ArrayBuffer));\n          // If the buffer is located in main memory (HEAP), and if\n          // memory can grow, we can't hold on to references of the\n          // memory buffer, as they may get invalidated. That means we\n          // need to do copy its contents.\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n  \n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n  \n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\n            if (canOwn) {\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n  \n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position+length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n  llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n  allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n  mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            // Try to avoid unnecessary slices.\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr, allocated };\n        },\n  msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        },\n  },\n  };\n  \n  /** @param {boolean=} noRunDep */\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url, (arrayBuffer) => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, (event) => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n  \n  \n  var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n  \n  var preloadPlugins = Module['preloadPlugins'] || [];\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n  \n      var handled = false;\n      preloadPlugins.forEach((plugin) => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish?.();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload?.();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror?.();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n  \n  var FS_modeStringToFlags = (str) => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2,\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n  \n  var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n  \n  \n  \n  \n  var ERRNO_MESSAGES = {\n  0:\"Success\",\n  1:\"Arg list too long\",\n  2:\"Permission denied\",\n  3:\"Address already in use\",\n  4:\"Address not available\",\n  5:\"Address family not supported by protocol family\",\n  6:\"No more processes\",\n  7:\"Socket already connected\",\n  8:\"Bad file number\",\n  9:\"Trying to read unreadable message\",\n  10:\"Mount device busy\",\n  11:\"Operation canceled\",\n  12:\"No children\",\n  13:\"Connection aborted\",\n  14:\"Connection refused\",\n  15:\"Connection reset by peer\",\n  16:\"File locking deadlock error\",\n  17:\"Destination address required\",\n  18:\"Math arg out of domain of func\",\n  19:\"Quota exceeded\",\n  20:\"File exists\",\n  21:\"Bad address\",\n  22:\"File too large\",\n  23:\"Host is unreachable\",\n  24:\"Identifier removed\",\n  25:\"Illegal byte sequence\",\n  26:\"Connection already in progress\",\n  27:\"Interrupted system call\",\n  28:\"Invalid argument\",\n  29:\"I/O error\",\n  30:\"Socket is already connected\",\n  31:\"Is a directory\",\n  32:\"Too many symbolic links\",\n  33:\"Too many open files\",\n  34:\"Too many links\",\n  35:\"Message too long\",\n  36:\"Multihop attempted\",\n  37:\"File or path name too long\",\n  38:\"Network interface is not configured\",\n  39:\"Connection reset by network\",\n  40:\"Network is unreachable\",\n  41:\"Too many open files in system\",\n  42:\"No buffer space available\",\n  43:\"No such device\",\n  44:\"No such file or directory\",\n  45:\"Exec format error\",\n  46:\"No record locks available\",\n  47:\"The link has been severed\",\n  48:\"Not enough core\",\n  49:\"No message of desired type\",\n  50:\"Protocol not available\",\n  51:\"No space left on device\",\n  52:\"Function not implemented\",\n  53:\"Socket is not connected\",\n  54:\"Not a directory\",\n  55:\"Directory not empty\",\n  56:\"State not recoverable\",\n  57:\"Socket operation on non-socket\",\n  59:\"Not a typewriter\",\n  60:\"No such device or address\",\n  61:\"Value too large for defined data type\",\n  62:\"Previous owner died\",\n  63:\"Not super-user\",\n  64:\"Broken pipe\",\n  65:\"Protocol error\",\n  66:\"Unknown protocol\",\n  67:\"Protocol wrong type for socket\",\n  68:\"Math result not representable\",\n  69:\"Read only file system\",\n  70:\"Illegal seek\",\n  71:\"No such process\",\n  72:\"Stale file handle\",\n  73:\"Connection timed out\",\n  74:\"Text file busy\",\n  75:\"Cross-device link\",\n  100:\"Device not a stream\",\n  101:\"Bad font file fmt\",\n  102:\"Invalid slot\",\n  103:\"Invalid request code\",\n  104:\"No anode\",\n  105:\"Block device required\",\n  106:\"Channel number out of range\",\n  107:\"Level 3 halted\",\n  108:\"Level 3 reset\",\n  109:\"Link number out of range\",\n  110:\"Protocol driver not attached\",\n  111:\"No CSI structure available\",\n  112:\"Level 2 halted\",\n  113:\"Invalid exchange\",\n  114:\"Invalid request descriptor\",\n  115:\"Exchange full\",\n  116:\"No data (for no delay io)\",\n  117:\"Timer expired\",\n  118:\"Out of streams resources\",\n  119:\"Machine is not on the network\",\n  120:\"Package not installed\",\n  121:\"The object is remote\",\n  122:\"Advertise error\",\n  123:\"Srmount error\",\n  124:\"Communication error on send\",\n  125:\"Cross mount point (not really error)\",\n  126:\"Given log. name not unique\",\n  127:\"f.d. invalid for this operation\",\n  128:\"Remote address changed\",\n  129:\"Can   access a needed shared lib\",\n  130:\"Accessing a corrupted shared lib\",\n  131:\".lib section in a.out corrupted\",\n  132:\"Attempting to link in too many libs\",\n  133:\"Attempting to exec a shared library\",\n  135:\"Streams pipe error\",\n  136:\"Too many users\",\n  137:\"Socket type not supported\",\n  138:\"Not supported\",\n  139:\"Protocol family not supported\",\n  140:\"Can't send after socket shutdown\",\n  141:\"Too many references\",\n  142:\"Host is down\",\n  148:\"No medium (in tape drive)\",\n  156:\"Level 2 not synchronized\",\n  };\n  \n  var ERRNO_CODES = {\n      'EPERM': 63,\n      'ENOENT': 44,\n      'ESRCH': 71,\n      'EINTR': 27,\n      'EIO': 29,\n      'ENXIO': 60,\n      'E2BIG': 1,\n      'ENOEXEC': 45,\n      'EBADF': 8,\n      'ECHILD': 12,\n      'EAGAIN': 6,\n      'EWOULDBLOCK': 6,\n      'ENOMEM': 48,\n      'EACCES': 2,\n      'EFAULT': 21,\n      'ENOTBLK': 105,\n      'EBUSY': 10,\n      'EEXIST': 20,\n      'EXDEV': 75,\n      'ENODEV': 43,\n      'ENOTDIR': 54,\n      'EISDIR': 31,\n      'EINVAL': 28,\n      'ENFILE': 41,\n      'EMFILE': 33,\n      'ENOTTY': 59,\n      'ETXTBSY': 74,\n      'EFBIG': 22,\n      'ENOSPC': 51,\n      'ESPIPE': 70,\n      'EROFS': 69,\n      'EMLINK': 34,\n      'EPIPE': 64,\n      'EDOM': 18,\n      'ERANGE': 68,\n      'ENOMSG': 49,\n      'EIDRM': 24,\n      'ECHRNG': 106,\n      'EL2NSYNC': 156,\n      'EL3HLT': 107,\n      'EL3RST': 108,\n      'ELNRNG': 109,\n      'EUNATCH': 110,\n      'ENOCSI': 111,\n      'EL2HLT': 112,\n      'EDEADLK': 16,\n      'ENOLCK': 46,\n      'EBADE': 113,\n      'EBADR': 114,\n      'EXFULL': 115,\n      'ENOANO': 104,\n      'EBADRQC': 103,\n      'EBADSLT': 102,\n      'EDEADLOCK': 16,\n      'EBFONT': 101,\n      'ENOSTR': 100,\n      'ENODATA': 116,\n      'ETIME': 117,\n      'ENOSR': 118,\n      'ENONET': 119,\n      'ENOPKG': 120,\n      'EREMOTE': 121,\n      'ENOLINK': 47,\n      'EADV': 122,\n      'ESRMNT': 123,\n      'ECOMM': 124,\n      'EPROTO': 65,\n      'EMULTIHOP': 36,\n      'EDOTDOT': 125,\n      'EBADMSG': 9,\n      'ENOTUNIQ': 126,\n      'EBADFD': 127,\n      'EREMCHG': 128,\n      'ELIBACC': 129,\n      'ELIBBAD': 130,\n      'ELIBSCN': 131,\n      'ELIBMAX': 132,\n      'ELIBEXEC': 133,\n      'ENOSYS': 52,\n      'ENOTEMPTY': 55,\n      'ENAMETOOLONG': 37,\n      'ELOOP': 32,\n      'EOPNOTSUPP': 138,\n      'EPFNOSUPPORT': 139,\n      'ECONNRESET': 15,\n      'ENOBUFS': 42,\n      'EAFNOSUPPORT': 5,\n      'EPROTOTYPE': 67,\n      'ENOTSOCK': 57,\n      'ENOPROTOOPT': 50,\n      'ESHUTDOWN': 140,\n      'ECONNREFUSED': 14,\n      'EADDRINUSE': 3,\n      'ECONNABORTED': 13,\n      'ENETUNREACH': 40,\n      'ENETDOWN': 38,\n      'ETIMEDOUT': 73,\n      'EHOSTDOWN': 142,\n      'EHOSTUNREACH': 23,\n      'EINPROGRESS': 26,\n      'EALREADY': 7,\n      'EDESTADDRREQ': 17,\n      'EMSGSIZE': 35,\n      'EPROTONOSUPPORT': 66,\n      'ESOCKTNOSUPPORT': 137,\n      'EADDRNOTAVAIL': 4,\n      'ENETRESET': 39,\n      'EISCONN': 30,\n      'ENOTCONN': 53,\n      'ETOOMANYREFS': 141,\n      'EUSERS': 136,\n      'EDQUOT': 19,\n      'ESTALE': 72,\n      'ENOTSUP': 138,\n      'ENOMEDIUM': 148,\n      'EILSEQ': 25,\n      'EOVERFLOW': 61,\n      'ECANCELED': 11,\n      'ENOTRECOVERABLE': 56,\n      'EOWNERDEAD': 62,\n      'ESTRPIPE': 135,\n    };\n  var FS = {\n  root:null,\n  mounts:[],\n  devices:{\n  },\n  streams:[],\n  nextInode:1,\n  nameTable:null,\n  currentPath:\"/\",\n  initialized:false,\n  ignorePermissions:true,\n  ErrnoError:class extends Error {\n        // We set the `name` property to be able to identify `FS.ErrnoError`\n        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n        // - when using PROXYFS, an error can come from an underlying FS\n        // as different FS objects have their own FS.ErrnoError each,\n        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n        // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n        constructor(errno) {\n          super(ERRNO_MESSAGES[errno]);\n          // TODO(sbc): Use the inline member delclaration syntax once we\n          // support it in acorn and closure.\n          this.name = 'ErrnoError';\n          this.errno = errno;\n          for (var key in ERRNO_CODES) {\n            if (ERRNO_CODES[key] === errno) {\n              this.code = key;\n              break;\n            }\n          }\n        }\n      },\n  genericErrors:{\n  },\n  filesystems:null,\n  syncFSRequests:0,\n  lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n  \n        if (!path) return { path: '', node: null };\n  \n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts)\n  \n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n  \n        // split the absolute path\n        var parts = path.split('/').filter((p) => !!p);\n  \n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n  \n        for (var i = 0; i < parts.length; i++) {\n          var islast = (i === parts.length-1);\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n  \n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n  \n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n  \n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n  \n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\n              current = lookup.node;\n  \n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n  \n        return { path: current_path, node: current };\n      },\n  getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n  hashName(parentid, name) {\n        var hash = 0;\n  \n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n  hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n  hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n  lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n  createNode(parent, name, mode, rdev) {\n        assert(typeof parent == 'object')\n        var node = new FS.FSNode(parent, name, mode, rdev);\n  \n        FS.hashAddNode(node);\n  \n        return node;\n      },\n  destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n  isRoot(node) {\n        return node === node.parent;\n      },\n  isMountpoint(node) {\n        return !!node.mounted;\n      },\n  isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n  isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n  isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n  isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n  isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n  isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n  isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n  flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if ((flag & 512)) {\n          perms += 'w';\n        }\n        return perms;\n      },\n  nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n  mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n  mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {\n        }\n        return FS.nodePermissions(dir, 'wx');\n      },\n  mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n  mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n  MAX_OPEN_FDS:4096,\n  nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n  getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n  getStream:(fd) => FS.streams[fd],\n  createStream(stream, fd = -1) {\n        if (!FS.FSStream) {\n          FS.FSStream = /** @constructor */ function() {\n            this.shared = { };\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              /** @this {FS.FSStream} */\n              get() { return this.node; },\n              /** @this {FS.FSStream} */\n              set(val) { this.node = val; }\n            },\n            isRead: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 1; }\n            },\n            isWrite: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 2097155) !== 0; }\n            },\n            isAppend: {\n              /** @this {FS.FSStream} */\n              get() { return (this.flags & 1024); }\n            },\n            flags: {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.flags; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.flags = val; },\n            },\n            position : {\n              /** @this {FS.FSStream} */\n              get() { return this.shared.position; },\n              /** @this {FS.FSStream} */\n              set(val) { this.shared.position = val; },\n            },\n          });\n        }\n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n  closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n  chrdev_stream_ops:{\n  open(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          stream.stream_ops.open?.(stream);\n        },\n  llseek() {\n          throw new FS.ErrnoError(70);\n        },\n  },\n  major:(dev) => ((dev) >> 8),\n  minor:(dev) => ((dev) & 0xff),\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\n  registerDevice(dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n  getDevice:(dev) => FS.devices[dev],\n  getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n  \n        while (check.length) {\n          var m = check.pop();\n  \n          mounts.push(m);\n  \n          check.push.apply(check, m.mounts);\n        }\n  \n        return mounts;\n      },\n  syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n  \n        FS.syncFSRequests++;\n  \n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n  \n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n  \n        function doCallback(errCode) {\n          assert(FS.syncFSRequests > 0);\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n  \n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        };\n  \n        // sync all mounts\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n  mount(type, opts, mountpoint) {\n        if (typeof type == 'string') {\n          // The filesystem was not included, and instead we have an error\n          // message stored in the variable.\n          throw type;\n        }\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n  \n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n          mountpoint = lookup.path;  // use the absolute path\n          node = lookup.node;\n  \n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n  \n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n  \n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n  \n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n  \n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n  \n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n  \n        return mountRoot;\n      },\n  unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n  \n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n  \n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n  \n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n  \n          while (current) {\n            var next = current.name_next;\n  \n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n  \n            current = next;\n          }\n        });\n  \n        // no longer a mountpoint\n        node.mounted = null;\n  \n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        assert(idx !== -1);\n        node.mount.mounts.splice(idx, 1);\n      },\n  lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n  mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n  create(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n  mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch(e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n  mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n  symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n  rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n  \n        // let the errors from non existant directories percolate up\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n  \n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ?\n          FS.mayDelete(new_dir, new_name, isdir) :\n          FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n  rmdir(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n  readdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n  unlink(path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n  readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n  stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n  lstat(path) {\n        return FS.stat(path, true);\n      },\n  chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now()\n        });\n      },\n  lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n  fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n  chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },\n  lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n  fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n  truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n  ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n  utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n  open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\n        if ((flags & 64)) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if ((flags & 64)) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if ((flags & 128)) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if ((flags & 512) && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n  \n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),  // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n  close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n  isClosed(stream) {\n        return stream.fd === null;\n      },\n  llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n  read(stream, buffer, offset, length, position) {\n        assert(offset >= 0);\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n  write(stream, buffer, offset, length, position, canOwn) {\n        assert(offset >= 0);\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n  allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n  mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0\n            && (flags & 2) === 0\n            && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n  msync(stream, buffer, offset, length, mmapFlags) {\n        assert(offset >= 0);\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n  munmap:(stream) => 0,\n  ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n  readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n  writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n  cwd:() => FS.currentPath,\n  chdir(path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n  createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n  createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n  createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: { mountpoint: 'fake' },\n                  node_ops: { readlink: () => stream.path },\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n  createStandardStreams() {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n  \n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n  \n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n        assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\n        assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\n        assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\n      },\n  staticInit() {\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n  \n        FS.nameTable = new Array(4096);\n  \n        FS.mount(MEMFS, {}, '/');\n  \n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n  \n        FS.filesystems = {\n          'MEMFS': MEMFS,\n        };\n      },\n  init(input, output, error) {\n        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');\n        FS.init.initialized = true;\n  \n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n  \n        FS.createStandardStreams();\n      },\n  quit() {\n        FS.init.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        _fflush(0);\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n  findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n  analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {\n        }\n        var ret = {\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\n          parentExists: false, parentPath: null, parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        };\n        return ret;\n      },\n  createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },\n  createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n  createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            // flush any pending line data\n            if (output?.buffer?.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset+i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset+i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n  forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else if (read_) {\n          // Command-line.\n          try {\n            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as\n            //          read() will try to parse UTF8.\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n  createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.\n        /** @constructor */\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = []; // Loaded chunks. Index is the chunk number\n        }\n        LazyUint8Array.prototype.get = /** @this{Object} */ function LazyUint8Array_get(idx) {\n          if (idx > this.length-1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize)|0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n          this.getter = getter;\n        };\n        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n          // Find length\n          var xhr = new XMLHttpRequest();\n          xhr.open('HEAD', url, false);\n          xhr.send(null);\n          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n          var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n          var header;\n          var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n          var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n  \n          var chunkSize = 1024*1024; // Chunk size in bytes\n  \n          if (!hasByteServing) chunkSize = datalength;\n  \n          // Function to get a range from the remote URL.\n          var doXHR = (from, to) => {\n            if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n            if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n  \n            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n  \n            // Some hints to the browser that we want binary data.\n            xhr.responseType = 'arraybuffer';\n            if (xhr.overrideMimeType) {\n              xhr.overrideMimeType('text/plain; charset=x-user-defined');\n            }\n  \n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            if (xhr.response !== undefined) {\n              return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\n            }\n            return intArrayFromString(xhr.responseText || '', true);\n          };\n          var lazyArray = this;\n          lazyArray.setDataGetter((chunkNum) => {\n            var start = chunkNum * chunkSize;\n            var end = (chunkNum+1) * chunkSize - 1; // including this byte\n            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n              lazyArray.chunks[chunkNum] = doXHR(start, end);\n            }\n            if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n            return lazyArray.chunks[chunkNum];\n          });\n  \n          if (usesGzip || !datalength) {\n            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n            datalength = this.getter(0).length;\n            chunkSize = datalength;\n            out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n          }\n  \n          this._length = datalength;\n          this._chunkSize = chunkSize;\n          this.lengthKnown = true;\n        };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              }\n            },\n            chunkSize: {\n              get: /** @this{Object} */ function() {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              }\n            }\n          });\n  \n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n  \n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: /** @this {FSNode} */ function() { return this.contents.length; }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length)\n            return 0;\n          var size = Math.min(contents.length - position, length);\n          assert(size >= 0);\n          if (contents.slice) { // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position)\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n  absolutePath() {\n        abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');\n      },\n  createFolder() {\n        abort('FS.createFolder has been removed; use FS.mkdir instead');\n      },\n  createLink() {\n        abort('FS.createLink has been removed; use FS.symlink instead');\n      },\n  joinPath() {\n        abort('FS.joinPath has been removed; use PATH.join instead');\n      },\n  mmapAlloc() {\n        abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');\n      },\n  standardizePath() {\n        abort('FS.standardizePath has been removed; use PATH.normalize instead');\n      },\n  };\n  \n  var SYSCALLS = {\n  DEFAULT_POLLMASK:5,\n  calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);;\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n  doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[((buf)>>2)] = stat.dev;\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\n        HEAP64[(((buf)+(24))>>3)] = BigInt(stat.size);\n        HEAP32[(((buf)+(32))>>2)] = 4096;\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        HEAP64[(((buf)+(40))>>3)] = BigInt(Math.floor(atime / 1000));\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000;\n        HEAP64[(((buf)+(56))>>3)] = BigInt(Math.floor(mtime / 1000));\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000;\n        HEAP64[(((buf)+(72))>>3)] = BigInt(Math.floor(ctime / 1000));\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000;\n        HEAP64[(((buf)+(88))>>3)] = BigInt(stat.ino);\n        return 0;\n      },\n  doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n  varargs:undefined,\n  get() {\n        assert(SYSCALLS.varargs != undefined);\n        // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.\n        var ret = HEAP32[((+SYSCALLS.varargs)>>2)];\n        SYSCALLS.varargs += 4;\n        return ret;\n      },\n  getp() { return SYSCALLS.get() },\n  getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n  getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n  };\n  function ___syscall_chmod(path, mode) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.chmod(path, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fchmod(fd, mode) {\n  try {\n  \n      FS.fchmod(fd, mode);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fcntl64(fd, cmd, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (cmd) {\n        case 0: {\n          var arg = SYSCALLS.get();\n          if (arg < 0) {\n            return -28;\n          }\n          while (FS.streams[arg]) {\n            arg++;\n          }\n          var newStream;\n          newStream = FS.createStream(stream, arg);\n          return newStream.fd;\n        }\n        case 1:\n        case 2:\n          return 0;  // FD_CLOEXEC makes no sense for a single process.\n        case 3:\n          return stream.flags;\n        case 4: {\n          var arg = SYSCALLS.get();\n          stream.flags |= arg;\n          return 0;\n        }\n        case 12: {\n          var arg = SYSCALLS.getp();\n          var offset = 0;\n          // We're always unlocked.\n          HEAP16[(((arg)+(offset))>>1)] = 2;\n          return 0;\n        }\n        case 13:\n        case 14:\n          return 0; // Pretend that the locking is successful.\n      }\n      return -28;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_fstat64(fd, buf) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      return SYSCALLS.doStat(FS.stat, stream.path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_ioctl(fd, op, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      switch (op) {\n        case 21509: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21505: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcgets) {\n            var termios = stream.tty.ops.ioctl_tcgets(stream);\n            var argp = SYSCALLS.getp();\n            HEAP32[((argp)>>2)] = termios.c_iflag || 0;\n            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;\n            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;\n            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;\n            for (var i = 0; i < 32; i++) {\n              HEAP8[(((argp + i)+(17))>>0)] = termios.c_cc[i] || 0;\n            }\n            return 0;\n          }\n          return 0;\n        }\n        case 21510:\n        case 21511:\n        case 21512: {\n          if (!stream.tty) return -59;\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21506:\n        case 21507:\n        case 21508: {\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tcsets) {\n            var argp = SYSCALLS.getp();\n            var c_iflag = HEAP32[((argp)>>2)];\n            var c_oflag = HEAP32[(((argp)+(4))>>2)];\n            var c_cflag = HEAP32[(((argp)+(8))>>2)];\n            var c_lflag = HEAP32[(((argp)+(12))>>2)];\n            var c_cc = []\n            for (var i = 0; i < 32; i++) {\n              c_cc.push(HEAP8[(((argp + i)+(17))>>0)]);\n            }\n            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });\n          }\n          return 0; // no-op, not actually adjusting terminal settings\n        }\n        case 21519: {\n          if (!stream.tty) return -59;\n          var argp = SYSCALLS.getp();\n          HEAP32[((argp)>>2)] = 0;\n          return 0;\n        }\n        case 21520: {\n          if (!stream.tty) return -59;\n          return -28; // not supported\n        }\n        case 21531: {\n          var argp = SYSCALLS.getp();\n          return FS.ioctl(stream, op, argp);\n        }\n        case 21523: {\n          // TODO: in theory we should write to the winsize struct that gets\n          // passed in, but for now musl doesn't read anything on it\n          if (!stream.tty) return -59;\n          if (stream.tty.ops.ioctl_tiocgwinsz) {\n            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);\n            var argp = SYSCALLS.getp();\n            HEAP16[((argp)>>1)] = winsize[0];\n            HEAP16[(((argp)+(2))>>1)] = winsize[1];\n          }\n          return 0;\n        }\n        case 21524: {\n          // TODO: technically, this ioctl call should change the window size.\n          // but, since emscripten doesn't have any concept of a terminal window\n          // yet, we'll just silently throw it away as we do TIOCGWINSZ\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        case 21515: {\n          if (!stream.tty) return -59;\n          return 0;\n        }\n        default: return -28; // not supported\n      }\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_lstat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.lstat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_newfstatat(dirfd, path, buf, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      var nofollow = flags & 256;\n      var allowEmpty = flags & 4096;\n      flags = flags & (~6400);\n      assert(!flags, `unknown flags in __syscall_newfstatat: ${flags}`);\n      path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n      return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_openat(dirfd, path, flags, varargs) {\n  SYSCALLS.varargs = varargs;\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      var mode = varargs ? SYSCALLS.get() : 0;\n      return FS.open(path, flags, mode).fd;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_renameat(olddirfd, oldpath, newdirfd, newpath) {\n  try {\n  \n      oldpath = SYSCALLS.getStr(oldpath);\n      newpath = SYSCALLS.getStr(newpath);\n      oldpath = SYSCALLS.calculateAt(olddirfd, oldpath);\n      newpath = SYSCALLS.calculateAt(newdirfd, newpath);\n      FS.rename(oldpath, newpath);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_rmdir(path) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      FS.rmdir(path);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_stat64(path, buf) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      return SYSCALLS.doStat(FS.stat, path, buf);\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  function ___syscall_unlinkat(dirfd, path, flags) {\n  try {\n  \n      path = SYSCALLS.getStr(path);\n      path = SYSCALLS.calculateAt(dirfd, path);\n      if (flags === 0) {\n        FS.unlink(path);\n      } else if (flags === 512) {\n        FS.rmdir(path);\n      } else {\n        abort('Invalid flags passed to unlinkat');\n      }\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  }\n\n  var tupleRegistrations = {\n  };\n  \n  var runDestructors = (destructors) => {\n      while (destructors.length) {\n        var ptr = destructors.pop();\n        var del = destructors.pop();\n        del(ptr);\n      }\n    };\n  \n  /** @suppress {globalThis} */\n  function simpleReadValueFromPointer(pointer) {\n      return this['fromWireType'](HEAP32[((pointer)>>2)]);\n    }\n  \n  var awaitingDependencies = {\n  };\n  \n  var registeredTypes = {\n  };\n  \n  var typeDependencies = {\n  };\n  \n  var InternalError;\n  var throwInternalError = (message) => { throw new InternalError(message); };\n  var whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n      myTypes.forEach(function(type) {\n          typeDependencies[type] = dependentTypes;\n      });\n  \n      function onComplete(typeConverters) {\n          var myTypeConverters = getTypeConverters(typeConverters);\n          if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError('Mismatched type converter count');\n          }\n          for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n          }\n      }\n  \n      var typeConverters = new Array(dependentTypes.length);\n      var unregisteredTypes = [];\n      var registered = 0;\n      dependentTypes.forEach((dt, i) => {\n        if (registeredTypes.hasOwnProperty(dt)) {\n          typeConverters[i] = registeredTypes[dt];\n        } else {\n          unregisteredTypes.push(dt);\n          if (!awaitingDependencies.hasOwnProperty(dt)) {\n            awaitingDependencies[dt] = [];\n          }\n          awaitingDependencies[dt].push(() => {\n            typeConverters[i] = registeredTypes[dt];\n            ++registered;\n            if (registered === unregisteredTypes.length) {\n              onComplete(typeConverters);\n            }\n          });\n        }\n      });\n      if (0 === unregisteredTypes.length) {\n        onComplete(typeConverters);\n      }\n    };\n  var __embind_finalize_value_array = (rawTupleType) => {\n      var reg = tupleRegistrations[rawTupleType];\n      delete tupleRegistrations[rawTupleType];\n      var elements = reg.elements;\n      var elementsLength = elements.length;\n      var elementTypes = elements.map((elt) => elt.getterReturnType).\n                  concat(elements.map((elt) => elt.setterArgumentType));\n  \n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n  \n      whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes) {\n        elements.forEach((elt, i) => {\n          var getterReturnType = elementTypes[i];\n          var getter = elt.getter;\n          var getterContext = elt.getterContext;\n          var setterArgumentType = elementTypes[i + elementsLength];\n          var setter = elt.setter;\n          var setterContext = elt.setterContext;\n          elt.read = (ptr) => getterReturnType['fromWireType'](getter(getterContext, ptr));\n          elt.write = (ptr, o) => {\n            var destructors = [];\n            setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));\n            runDestructors(destructors);\n          };\n        });\n  \n        return [{\n          name: reg.name,\n          'fromWireType': (ptr) => {\n            var rv = new Array(elementsLength);\n            for (var i = 0; i < elementsLength; ++i) {\n              rv[i] = elements[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          'toWireType': (destructors, o) => {\n            if (elementsLength !== o.length) {\n              throw new TypeError(`Incorrect number of tuple elements for ${reg.name}: expected=${elementsLength}, actual=${o.length}`);\n            }\n            var ptr = rawConstructor();\n            for (var i = 0; i < elementsLength; ++i) {\n              elements[i].write(ptr, o[i]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          'argPackAdvance': GenericWireTypeSize,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: rawDestructor,\n        }];\n      });\n    };\n\n  var structRegistrations = {\n  };\n  \n  \n  \n  var __embind_finalize_value_object = (structType) => {\n      var reg = structRegistrations[structType];\n      delete structRegistrations[structType];\n  \n      var rawConstructor = reg.rawConstructor;\n      var rawDestructor = reg.rawDestructor;\n      var fieldRecords = reg.fields;\n      var fieldTypes = fieldRecords.map((field) => field.getterReturnType).\n                concat(fieldRecords.map((field) => field.setterArgumentType));\n      whenDependentTypesAreResolved([structType], fieldTypes, (fieldTypes) => {\n        var fields = {};\n        fieldRecords.forEach((field, i) => {\n          var fieldName = field.fieldName;\n          var getterReturnType = fieldTypes[i];\n          var getter = field.getter;\n          var getterContext = field.getterContext;\n          var setterArgumentType = fieldTypes[i + fieldRecords.length];\n          var setter = field.setter;\n          var setterContext = field.setterContext;\n          fields[fieldName] = {\n            read: (ptr) => getterReturnType['fromWireType'](getter(getterContext, ptr)),\n            write: (ptr, o) => {\n              var destructors = [];\n              setter(setterContext, ptr, setterArgumentType['toWireType'](destructors, o));\n              runDestructors(destructors);\n            }\n          };\n        });\n  \n        return [{\n          name: reg.name,\n          'fromWireType': (ptr) => {\n            var rv = {};\n            for (var i in fields) {\n              rv[i] = fields[i].read(ptr);\n            }\n            rawDestructor(ptr);\n            return rv;\n          },\n          'toWireType': (destructors, o) => {\n            // todo: Here we have an opportunity for -O3 level \"unsafe\" optimizations:\n            // assume all fields are present without checking.\n            for (var fieldName in fields) {\n              if (!(fieldName in o)) {\n                throw new TypeError(`Missing field: \"${fieldName}\"`);\n              }\n            }\n            var ptr = rawConstructor();\n            for (fieldName in fields) {\n              fields[fieldName].write(ptr, o[fieldName]);\n            }\n            if (destructors !== null) {\n              destructors.push(rawDestructor, ptr);\n            }\n            return ptr;\n          },\n          'argPackAdvance': GenericWireTypeSize,\n          'readValueFromPointer': simpleReadValueFromPointer,\n          destructorFunction: rawDestructor,\n        }];\n      });\n    };\n\n  var embindRepr = (v) => {\n      if (v === null) {\n          return 'null';\n      }\n      var t = typeof v;\n      if (t === 'object' || t === 'array' || t === 'function') {\n          return v.toString();\n      } else {\n          return '' + v;\n      }\n    };\n  \n  var embind_init_charCodes = () => {\n      var codes = new Array(256);\n      for (var i = 0; i < 256; ++i) {\n          codes[i] = String.fromCharCode(i);\n      }\n      embind_charCodes = codes;\n    };\n  var embind_charCodes;\n  var readLatin1String = (ptr) => {\n      var ret = \"\";\n      var c = ptr;\n      while (HEAPU8[c]) {\n          ret += embind_charCodes[HEAPU8[c++]];\n      }\n      return ret;\n    };\n  \n  \n  \n  \n  var BindingError;\n  var throwBindingError = (message) => { throw new BindingError(message); };\n  \n  /** @param {Object=} options */\n  function sharedRegisterType(rawType, registeredInstance, options = {}) {\n      var name = registeredInstance.name;\n      if (!rawType) {\n        throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n      }\n      if (registeredTypes.hasOwnProperty(rawType)) {\n        if (options.ignoreDuplicateRegistrations) {\n          return;\n        } else {\n          throwBindingError(`Cannot register type '${name}' twice`);\n        }\n      }\n  \n      registeredTypes[rawType] = registeredInstance;\n      delete typeDependencies[rawType];\n  \n      if (awaitingDependencies.hasOwnProperty(rawType)) {\n        var callbacks = awaitingDependencies[rawType];\n        delete awaitingDependencies[rawType];\n        callbacks.forEach((cb) => cb());\n      }\n    }\n  /** @param {Object=} options */\n  function registerType(rawType, registeredInstance, options = {}) {\n      if (!('argPackAdvance' in registeredInstance)) {\n        throw new TypeError('registerType registeredInstance requires argPackAdvance');\n      }\n      return sharedRegisterType(rawType, registeredInstance, options);\n    }\n  \n  var integerReadValueFromPointer = (name, width, signed) => {\n      // integers are quite common, so generate very specialized functions\n      switch (width) {\n          case 1: return signed ?\n              (pointer) => HEAP8[((pointer)>>0)] :\n              (pointer) => HEAPU8[((pointer)>>0)];\n          case 2: return signed ?\n              (pointer) => HEAP16[((pointer)>>1)] :\n              (pointer) => HEAPU16[((pointer)>>1)]\n          case 4: return signed ?\n              (pointer) => HEAP32[((pointer)>>2)] :\n              (pointer) => HEAPU32[((pointer)>>2)]\n          case 8: return signed ?\n              (pointer) => HEAP64[((pointer)>>3)] :\n              (pointer) => HEAPU64[((pointer)>>3)]\n          default:\n              throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n  /** @suppress {globalThis} */\n  var __embind_register_bigint = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n  \n      var isUnsignedType = (name.indexOf('u') != -1);\n  \n      // maxRange comes through as -1 for uint64_t (see issue 13902). Work around that temporarily\n      if (isUnsignedType) {\n        maxRange = (1n << 64n) - 1n;\n      }\n  \n      registerType(primitiveType, {\n        name,\n        'fromWireType': (value) => value,\n        'toWireType': function(destructors, value) {\n          if (typeof value != \"bigint\" && typeof value != \"number\") {\n            throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${this.name}`);\n          }\n          if (typeof value == \"number\") {\n            value = BigInt(value);\n          }\n          if (value < minRange || value > maxRange) {\n            throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\n          }\n          return value;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': integerReadValueFromPointer(name, size, !isUnsignedType),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  \n  var GenericWireTypeSize = 8;\n  /** @suppress {globalThis} */\n  var __embind_register_bool = (rawType, name, trueValue, falseValue) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n          name,\n          'fromWireType': function(wt) {\n              // ambiguous emscripten ABI: sometimes return values are\n              // true or false, and sometimes integers (0 or 1)\n              return !!wt;\n          },\n          'toWireType': function(destructors, o) {\n              return o ? trueValue : falseValue;\n          },\n          'argPackAdvance': GenericWireTypeSize,\n          'readValueFromPointer': function(pointer) {\n              return this['fromWireType'](HEAPU8[pointer]);\n          },\n          destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  \n  var shallowCopyInternalPointer = (o) => {\n      return {\n        count: o.count,\n        deleteScheduled: o.deleteScheduled,\n        preservePointerOnDelete: o.preservePointerOnDelete,\n        ptr: o.ptr,\n        ptrType: o.ptrType,\n        smartPtr: o.smartPtr,\n        smartPtrType: o.smartPtrType,\n      };\n    };\n  \n  var throwInstanceAlreadyDeleted = (obj) => {\n      function getInstanceTypeName(handle) {\n        return handle.$$.ptrType.registeredClass.name;\n      }\n      throwBindingError(getInstanceTypeName(obj) + ' instance already deleted');\n    };\n  \n  var finalizationRegistry = false;\n  \n  var detachFinalizer = (handle) => {};\n  \n  var runDestructor = ($$) => {\n      if ($$.smartPtr) {\n        $$.smartPtrType.rawDestructor($$.smartPtr);\n      } else {\n        $$.ptrType.registeredClass.rawDestructor($$.ptr);\n      }\n    };\n  var releaseClassHandle = ($$) => {\n      $$.count.value -= 1;\n      var toDelete = 0 === $$.count.value;\n      if (toDelete) {\n        runDestructor($$);\n      }\n    };\n  \n  var downcastPointer = (ptr, ptrClass, desiredClass) => {\n      if (ptrClass === desiredClass) {\n        return ptr;\n      }\n      if (undefined === desiredClass.baseClass) {\n        return null; // no conversion\n      }\n  \n      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n      if (rv === null) {\n        return null;\n      }\n      return desiredClass.downcast(rv);\n    };\n  \n  var registeredPointers = {\n  };\n  \n  var getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n  \n  var getLiveInheritedInstances = () => {\n      var rv = [];\n      for (var k in registeredInstances) {\n        if (registeredInstances.hasOwnProperty(k)) {\n          rv.push(registeredInstances[k]);\n        }\n      }\n      return rv;\n    };\n  \n  var deletionQueue = [];\n  var flushPendingDeletes = () => {\n      while (deletionQueue.length) {\n        var obj = deletionQueue.pop();\n        obj.$$.deleteScheduled = false;\n        obj['delete']();\n      }\n    };\n  \n  var delayFunction;\n  \n  \n  var setDelayFunction = (fn) => {\n      delayFunction = fn;\n      if (deletionQueue.length && delayFunction) {\n        delayFunction(flushPendingDeletes);\n      }\n    };\n  var init_embind = () => {\n      Module['getInheritedInstanceCount'] = getInheritedInstanceCount;\n      Module['getLiveInheritedInstances'] = getLiveInheritedInstances;\n      Module['flushPendingDeletes'] = flushPendingDeletes;\n      Module['setDelayFunction'] = setDelayFunction;\n    };\n  var registeredInstances = {\n  };\n  \n  var getBasestPointer = (class_, ptr) => {\n      if (ptr === undefined) {\n          throwBindingError('ptr should not be undefined');\n      }\n      while (class_.baseClass) {\n          ptr = class_.upcast(ptr);\n          class_ = class_.baseClass;\n      }\n      return ptr;\n    };\n  var getInheritedInstance = (class_, ptr) => {\n      ptr = getBasestPointer(class_, ptr);\n      return registeredInstances[ptr];\n    };\n  \n  \n  var makeClassHandle = (prototype, record) => {\n      if (!record.ptrType || !record.ptr) {\n        throwInternalError('makeClassHandle requires ptr and ptrType');\n      }\n      var hasSmartPtrType = !!record.smartPtrType;\n      var hasSmartPtr = !!record.smartPtr;\n      if (hasSmartPtrType !== hasSmartPtr) {\n        throwInternalError('Both smartPtrType and smartPtr must be specified');\n      }\n      record.count = { value: 1 };\n      return attachFinalizer(Object.create(prototype, {\n        $$: {\n          value: record,\n          writable: true,\n        },\n      }));\n    };\n  /** @suppress {globalThis} */\n  function RegisteredPointer_fromWireType(ptr) {\n      // ptr is a raw pointer (or a raw smartpointer)\n  \n      // rawPointer is a maybe-null raw pointer\n      var rawPointer = this.getPointee(ptr);\n      if (!rawPointer) {\n        this.destructor(ptr);\n        return null;\n      }\n  \n      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n      if (undefined !== registeredInstance) {\n        // JS object has been neutered, time to repopulate it\n        if (0 === registeredInstance.$$.count.value) {\n          registeredInstance.$$.ptr = rawPointer;\n          registeredInstance.$$.smartPtr = ptr;\n          return registeredInstance['clone']();\n        } else {\n          // else, just increment reference count on existing object\n          // it already has a reference to the smart pointer\n          var rv = registeredInstance['clone']();\n          this.destructor(ptr);\n          return rv;\n        }\n      }\n  \n      function makeDefaultHandle() {\n        if (this.isSmartPointer) {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this.pointeeType,\n            ptr: rawPointer,\n            smartPtrType: this,\n            smartPtr: ptr,\n          });\n        } else {\n          return makeClassHandle(this.registeredClass.instancePrototype, {\n            ptrType: this,\n            ptr,\n          });\n        }\n      }\n  \n      var actualType = this.registeredClass.getActualType(rawPointer);\n      var registeredPointerRecord = registeredPointers[actualType];\n      if (!registeredPointerRecord) {\n        return makeDefaultHandle.call(this);\n      }\n  \n      var toType;\n      if (this.isConst) {\n        toType = registeredPointerRecord.constPointerType;\n      } else {\n        toType = registeredPointerRecord.pointerType;\n      }\n      var dp = downcastPointer(\n          rawPointer,\n          this.registeredClass,\n          toType.registeredClass);\n      if (dp === null) {\n        return makeDefaultHandle.call(this);\n      }\n      if (this.isSmartPointer) {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n          smartPtrType: this,\n          smartPtr: ptr,\n        });\n      } else {\n        return makeClassHandle(toType.registeredClass.instancePrototype, {\n          ptrType: toType,\n          ptr: dp,\n        });\n      }\n    }\n  var attachFinalizer = (handle) => {\n      if ('undefined' === typeof FinalizationRegistry) {\n        attachFinalizer = (handle) => handle;\n        return handle;\n      }\n      // If the running environment has a FinalizationRegistry (see\n      // https://github.com/tc39/proposal-weakrefs), then attach finalizers\n      // for class handles.  We check for the presence of FinalizationRegistry\n      // at run-time, not build-time.\n      finalizationRegistry = new FinalizationRegistry((info) => {\n        console.warn(info.leakWarning.stack.replace(/^Error: /, ''));\n        releaseClassHandle(info.$$);\n      });\n      attachFinalizer = (handle) => {\n        var $$ = handle.$$;\n        var hasSmartPtr = !!$$.smartPtr;\n        if (hasSmartPtr) {\n          // We should not call the destructor on raw pointers in case other code expects the pointee to live\n          var info = { $$: $$ };\n          // Create a warning as an Error instance in advance so that we can store\n          // the current stacktrace and point to it when / if a leak is detected.\n          // This is more useful than the empty stacktrace of `FinalizationRegistry`\n          // callback.\n          var cls = $$.ptrType.registeredClass;\n          info.leakWarning = new Error(`Embind found a leaked C++ instance ${cls.name} <${ptrToString($$.ptr)}>.\\n` +\n          \"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\" +\n          \"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\" +\n          \"Originally allocated\"); // `.stack` will add \"at ...\" after this sentence\n          if ('captureStackTrace' in Error) {\n            Error.captureStackTrace(info.leakWarning, RegisteredPointer_fromWireType);\n          }\n          finalizationRegistry.register(handle, info, handle);\n        }\n        return handle;\n      };\n      detachFinalizer = (handle) => finalizationRegistry.unregister(handle);\n      return attachFinalizer(handle);\n    };\n  \n  \n  \n  var init_ClassHandle = () => {\n      Object.assign(ClassHandle.prototype, {\n        \"isAliasOf\"(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n  \n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          other.$$ = /** @type {Object} */ (other.$$);\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n  \n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n  \n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n  \n          return leftClass === rightClass && left === right;\n        },\n  \n        \"clone\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n              $$: {\n                value: shallowCopyInternalPointer(this.$$),\n              }\n            }));\n  \n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        },\n  \n        \"delete\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n  \n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n  \n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n  \n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = undefined;\n            this.$$.ptr = undefined;\n          }\n        },\n  \n        \"isDeleted\"() {\n          return !this.$$.ptr;\n        },\n  \n        \"deleteLater\"() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError('Object already scheduled for deletion');\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        },\n      });\n    };\n  /** @constructor */\n  function ClassHandle() {\n    }\n  \n  var createNamedFunction = (name, body) => Object.defineProperty(body, 'name', {\n      value: name\n    });\n  \n  \n  var ensureOverloadTable = (proto, methodName, humanName) => {\n      if (undefined === proto[methodName].overloadTable) {\n        var prevFunc = proto[methodName];\n        // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.\n        proto[methodName] = function() {\n          // TODO This check can be removed in -O3 level \"unsafe\" optimizations.\n          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n              throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`);\n          }\n          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n        };\n        // Move the previous function into the overload table.\n        proto[methodName].overloadTable = [];\n        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n      }\n    };\n  \n  /** @param {number=} numArguments */\n  var exposePublicSymbol = (name, value, numArguments) => {\n      if (Module.hasOwnProperty(name)) {\n        if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n          throwBindingError(`Cannot register public name '${name}' twice`);\n        }\n  \n        // We are exposing a function with the same name as an existing function. Create an overload table and a function selector\n        // that routes between the two.\n        ensureOverloadTable(Module, name, name);\n        if (Module.hasOwnProperty(numArguments)) {\n          throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n        }\n        // Add the new function into the overload table.\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        if (undefined !== numArguments) {\n          Module[name].numArguments = numArguments;\n        }\n      }\n    };\n  \n  var char_0 = 48;\n  \n  var char_9 = 57;\n  var makeLegalFunctionName = (name) => {\n      if (undefined === name) {\n        return '_unknown';\n      }\n      name = name.replace(/[^a-zA-Z0-9_]/g, '$');\n      var f = name.charCodeAt(0);\n      if (f >= char_0 && f <= char_9) {\n        return `_${name}`;\n      }\n      return name;\n    };\n  \n  \n  /** @constructor */\n  function RegisteredClass(name,\n                               constructor,\n                               instancePrototype,\n                               rawDestructor,\n                               baseClass,\n                               getActualType,\n                               upcast,\n                               downcast) {\n      this.name = name;\n      this.constructor = constructor;\n      this.instancePrototype = instancePrototype;\n      this.rawDestructor = rawDestructor;\n      this.baseClass = baseClass;\n      this.getActualType = getActualType;\n      this.upcast = upcast;\n      this.downcast = downcast;\n      this.pureVirtualFunctions = [];\n    }\n  \n  \n  var upcastPointer = (ptr, ptrClass, desiredClass) => {\n      while (ptrClass !== desiredClass) {\n        if (!ptrClass.upcast) {\n          throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n        }\n        ptr = ptrClass.upcast(ptr);\n        ptrClass = ptrClass.baseClass;\n      }\n      return ptr;\n    };\n  /** @suppress {globalThis} */\n  function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function genericPointerToWireType(destructors, handle) {\n      var ptr;\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n  \n        if (this.isSmartPointer) {\n          ptr = this.rawConstructor();\n          if (destructors !== null) {\n            destructors.push(this.rawDestructor, ptr);\n          }\n          return ptr;\n        } else {\n          return 0;\n        }\n      }\n  \n      if (!handle || !handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (!this.isConst && handle.$$.ptrType.isConst) {\n        throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n  \n      if (this.isSmartPointer) {\n        // TODO: this is not strictly true\n        // We could support BY_EMVAL conversions from raw pointers to smart pointers\n        // because the smart pointer can hold a reference to the handle\n        if (undefined === handle.$$.smartPtr) {\n          throwBindingError('Passing raw pointer to smart pointer is illegal');\n        }\n  \n        switch (this.sharingPolicy) {\n          case 0: // NONE\n            // no upcasting\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n            }\n            break;\n  \n          case 1: // INTRUSIVE\n            ptr = handle.$$.smartPtr;\n            break;\n  \n          case 2: // BY_EMVAL\n            if (handle.$$.smartPtrType === this) {\n              ptr = handle.$$.smartPtr;\n            } else {\n              var clonedHandle = handle['clone']();\n              ptr = this.rawShare(\n                ptr,\n                Emval.toHandle(() => clonedHandle['delete']())\n              );\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n            }\n            break;\n  \n          default:\n            throwBindingError('Unsupporting sharing policy');\n        }\n      }\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n      if (handle === null) {\n        if (this.isReference) {\n          throwBindingError(`null is not a valid ${this.name}`);\n        }\n        return 0;\n      }\n  \n      if (!handle.$$) {\n        throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n      }\n      if (!handle.$$.ptr) {\n        throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n      }\n      if (handle.$$.ptrType.isConst) {\n          throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n      }\n      var handleClass = handle.$$.ptrType.registeredClass;\n      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n      return ptr;\n    }\n  \n  \n  /** @suppress {globalThis} */\n  function readPointer(pointer) {\n      return this['fromWireType'](HEAPU32[((pointer)>>2)]);\n    }\n  \n  \n  var init_RegisteredPointer = () => {\n      Object.assign(RegisteredPointer.prototype, {\n        getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        },\n        destructor(ptr) {\n          this.rawDestructor?.(ptr);\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        'fromWireType': RegisteredPointer_fromWireType,\n      });\n    };\n  /** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */\n  function RegisteredPointer(\n      name,\n      registeredClass,\n      isReference,\n      isConst,\n  \n      // smart pointer properties\n      isSmartPointer,\n      pointeeType,\n      sharingPolicy,\n      rawGetPointee,\n      rawConstructor,\n      rawShare,\n      rawDestructor\n    ) {\n      this.name = name;\n      this.registeredClass = registeredClass;\n      this.isReference = isReference;\n      this.isConst = isConst;\n  \n      // smart pointer properties\n      this.isSmartPointer = isSmartPointer;\n      this.pointeeType = pointeeType;\n      this.sharingPolicy = sharingPolicy;\n      this.rawGetPointee = rawGetPointee;\n      this.rawConstructor = rawConstructor;\n      this.rawShare = rawShare;\n      this.rawDestructor = rawDestructor;\n  \n      if (!isSmartPointer && registeredClass.baseClass === undefined) {\n        if (isConst) {\n          this['toWireType'] = constNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        } else {\n          this['toWireType'] = nonConstNoSmartPtrRawPointerToWireType;\n          this.destructorFunction = null;\n        }\n      } else {\n        this['toWireType'] = genericPointerToWireType;\n        // Here we must leave this.destructorFunction undefined, since whether genericPointerToWireType returns\n        // a pointer that needs to be freed up is runtime-dependent, and cannot be evaluated at registration time.\n        // TODO: Create an alternative mechanism that allows removing the use of var destructors = []; array in\n        //       craftInvokerFunction altogether.\n      }\n    }\n  \n  /** @param {number=} numArguments */\n  var replacePublicSymbol = (name, value, numArguments) => {\n      if (!Module.hasOwnProperty(name)) {\n        throwInternalError('Replacing nonexistant public symbol');\n      }\n      // If there's an overload table for this symbol, replace the symbol in the overload table instead.\n      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n        Module[name].overloadTable[numArguments] = value;\n      }\n      else {\n        Module[name] = value;\n        Module[name].argCount = numArguments;\n      }\n    };\n  \n  \n  \n  var wasmTableMirror = [];\n  \n  var wasmTable;\n  var getWasmTableEntry = (funcPtr) => {\n      var func = wasmTableMirror[funcPtr];\n      if (!func) {\n        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n      }\n      assert(wasmTable.get(funcPtr) == func, 'JavaScript-side Wasm function table mirror is out of date!');\n      return func;\n    };\n  var embind__requireFunction = (signature, rawFunction) => {\n      signature = readLatin1String(signature);\n  \n      function makeDynCaller() {\n        return getWasmTableEntry(rawFunction);\n      }\n  \n      var fp = makeDynCaller();\n      if (typeof fp != \"function\") {\n          throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n      }\n      return fp;\n    };\n  \n  \n  \n  var extendError = (baseErrorType, errorName) => {\n      var errorClass = createNamedFunction(errorName, function(message) {\n        this.name = errorName;\n        this.message = message;\n  \n        var stack = (new Error(message)).stack;\n        if (stack !== undefined) {\n          this.stack = this.toString() + '\\n' +\n              stack.replace(/^Error(:[^\\n]*)?\\n/, '');\n        }\n      });\n      errorClass.prototype = Object.create(baseErrorType.prototype);\n      errorClass.prototype.constructor = errorClass;\n      errorClass.prototype.toString = function() {\n        if (this.message === undefined) {\n          return this.name;\n        } else {\n          return `${this.name}: ${this.message}`;\n        }\n      };\n  \n      return errorClass;\n    };\n  var UnboundTypeError;\n  \n  \n  \n  var getTypeName = (type) => {\n      var ptr = ___getTypeName(type);\n      var rv = readLatin1String(ptr);\n      _free(ptr);\n      return rv;\n    };\n  var throwUnboundTypeError = (message, types) => {\n      var unboundTypes = [];\n      var seen = {};\n      function visit(type) {\n        if (seen[type]) {\n          return;\n        }\n        if (registeredTypes[type]) {\n          return;\n        }\n        if (typeDependencies[type]) {\n          typeDependencies[type].forEach(visit);\n          return;\n        }\n        unboundTypes.push(type);\n        seen[type] = true;\n      }\n      types.forEach(visit);\n  \n      throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([', ']));\n    };\n  \n  var __embind_register_class = (rawType,\n                             rawPointerType,\n                             rawConstPointerType,\n                             baseClassRawType,\n                             getActualTypeSignature,\n                             getActualType,\n                             upcastSignature,\n                             upcast,\n                             downcastSignature,\n                             downcast,\n                             name,\n                             destructorSignature,\n                             rawDestructor) => {\n      name = readLatin1String(name);\n      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n      upcast &&= embind__requireFunction(upcastSignature, upcast);\n      downcast &&= embind__requireFunction(downcastSignature, downcast);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n      var legalFunctionName = makeLegalFunctionName(name);\n  \n      exposePublicSymbol(legalFunctionName, function() {\n        // this code cannot run if baseClassRawType is zero\n        throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [baseClassRawType]);\n      });\n  \n      whenDependentTypesAreResolved(\n        [rawType, rawPointerType, rawConstPointerType],\n        baseClassRawType ? [baseClassRawType] : [],\n        function(base) {\n          base = base[0];\n  \n          var baseClass;\n          var basePrototype;\n          if (baseClassRawType) {\n            baseClass = base.registeredClass;\n            basePrototype = baseClass.instancePrototype;\n          } else {\n            basePrototype = ClassHandle.prototype;\n          }\n  \n          var constructor = createNamedFunction(name, function() {\n            if (Object.getPrototypeOf(this) !== instancePrototype) {\n              throw new BindingError(\"Use 'new' to construct \" + name);\n            }\n            if (undefined === registeredClass.constructor_body) {\n              throw new BindingError(name + \" has no accessible constructor\");\n            }\n            var body = registeredClass.constructor_body[arguments.length];\n            if (undefined === body) {\n              throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\n            }\n            return body.apply(this, arguments);\n          });\n  \n          var instancePrototype = Object.create(basePrototype, {\n            constructor: { value: constructor },\n          });\n  \n          constructor.prototype = instancePrototype;\n  \n          var registeredClass = new RegisteredClass(name,\n                                                    constructor,\n                                                    instancePrototype,\n                                                    rawDestructor,\n                                                    baseClass,\n                                                    getActualType,\n                                                    upcast,\n                                                    downcast);\n  \n          if (registeredClass.baseClass) {\n            // Keep track of class hierarchy. Used to allow sub-classes to inherit class functions.\n            registeredClass.baseClass.__derivedClasses ??= [];\n  \n            registeredClass.baseClass.__derivedClasses.push(registeredClass);\n          }\n  \n          var referenceConverter = new RegisteredPointer(name,\n                                                         registeredClass,\n                                                         true,\n                                                         false,\n                                                         false);\n  \n          var pointerConverter = new RegisteredPointer(name + '*',\n                                                       registeredClass,\n                                                       false,\n                                                       false,\n                                                       false);\n  \n          var constPointerConverter = new RegisteredPointer(name + ' const*',\n                                                            registeredClass,\n                                                            false,\n                                                            true,\n                                                            false);\n  \n          registeredPointers[rawType] = {\n            pointerType: pointerConverter,\n            constPointerType: constPointerConverter\n          };\n  \n          replacePublicSymbol(legalFunctionName, constructor);\n  \n          return [referenceConverter, pointerConverter, constPointerConverter];\n        }\n      );\n    };\n\n  var heap32VectorToArray = (count, firstElement) => {\n      var array = [];\n      for (var i = 0; i < count; i++) {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/17310):\n          // Find a way to hoist the `>> 2` or `>> 3` out of this loop.\n          array.push(HEAPU32[(((firstElement)+(i * 4))>>2)]);\n      }\n      return array;\n    };\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  function usesDestructorStack(argTypes) {\n      for (var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.\n        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack\n          return true;\n        }\n      }\n      return false;\n    }\n  function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\n      // humanName: a human-readable string name for the function to be generated.\n      // argTypes: An array that contains the embind type objects for all types in the function signature.\n      //    argTypes[0] is the type object for the function return value.\n      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.\n      //    argTypes[2...] are the actual function parameters.\n      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.\n      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.\n      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.\n      // isAsync: Optional. If true, returns an async function. Async bindings are only supported with JSPI.\n      var argCount = argTypes.length;\n  \n      if (argCount < 2) {\n        throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n      }\n  \n      assert(!isAsync, 'Async bindings are only supported with JSPI.');\n  \n      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n  \n      // Free functions with signature \"void function()\" do not need an invoker that marshalls between wire types.\n  // TODO: This omits argument count check - enable only at -O3 or similar.\n  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == \"void\" && !isClassMethodFunc) {\n  //       return FUNCTION_TABLE[fn];\n  //    }\n  \n      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.\n      // TODO: Remove this completely once all function invokers are being dynamically generated.\n      var needsDestructorStack = usesDestructorStack(argTypes);\n  \n      var returns = (argTypes[0].name !== \"void\");\n  \n      var expectedArgCount = argCount - 2;\n      var argsWired = new Array(expectedArgCount);\n      var invokerFuncArgs = [];\n      var destructors = [];\n      var invokerFn = function() {\n        if (arguments.length !== expectedArgCount) {\n          throwBindingError(`function ${humanName} called with ${arguments.length} arguments, expected ${expectedArgCount}`);\n        }\n        destructors.length = 0;\n        var thisWired;\n        invokerFuncArgs.length = isClassMethodFunc ? 2 : 1;\n        invokerFuncArgs[0] = cppTargetFunc;\n        if (isClassMethodFunc) {\n          thisWired = argTypes[1]['toWireType'](destructors, this);\n          invokerFuncArgs[1] = thisWired;\n        }\n        for (var i = 0; i < expectedArgCount; ++i) {\n          argsWired[i] = argTypes[i + 2]['toWireType'](destructors, arguments[i]);\n          invokerFuncArgs.push(argsWired[i]);\n        }\n  \n        var rv = cppInvokerFunc.apply(null, invokerFuncArgs);\n  \n        function onDone(rv) {\n          if (needsDestructorStack) {\n            runDestructors(destructors);\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; i++) {\n              var param = i === 1 ? thisWired : argsWired[i - 2];\n              if (argTypes[i].destructorFunction !== null) {\n                argTypes[i].destructorFunction(param);\n              }\n            }\n          }\n  \n          if (returns) {\n            return argTypes[0]['fromWireType'](rv);\n          }\n        }\n  \n        return onDone(rv);\n      };\n      return createNamedFunction(humanName, invokerFn);\n    }\n  var __embind_register_class_constructor = (\n      rawClassType,\n      argCount,\n      rawArgTypesAddr,\n      invokerSignature,\n      invoker,\n      rawConstructor\n    ) => {\n      assert(argCount > 0);\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      invoker = embind__requireFunction(invokerSignature, invoker);\n      var args = [rawConstructor];\n      var destructors = [];\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = `constructor ${classType.name}`;\n  \n        if (undefined === classType.registeredClass.constructor_body) {\n          classType.registeredClass.constructor_body = [];\n        }\n        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n          throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n        }\n        classType.registeredClass.constructor_body[argCount - 1] = () => {\n          throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n        };\n  \n        whenDependentTypesAreResolved([], rawArgTypes, (argTypes) => {\n          // Insert empty slot for context type (argTypes[1]).\n          argTypes.splice(1, 0, null);\n          classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  \n  \n  \n  \n  \n  var getFunctionName = (signature) => {\n      signature = signature.trim();\n      const argsIndex = signature.indexOf(\"(\");\n      if (argsIndex !== -1) {\n        assert(signature[signature.length - 1] == \")\", \"Parentheses for argument names should match.\");\n        return signature.substr(0, argsIndex);\n      } else {\n        return signature;\n      }\n    };\n  var __embind_register_class_function = (rawClassType,\n                                      methodName,\n                                      argCount,\n                                      rawArgTypesAddr, // [ReturnType, ThisType, Args...]\n                                      invokerSignature,\n                                      rawInvoker,\n                                      context,\n                                      isPureVirtual,\n                                      isAsync) => {\n      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      methodName = readLatin1String(methodName);\n      methodName = getFunctionName(methodName);\n      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n  \n      whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n        classType = classType[0];\n        var humanName = `${classType.name}.${methodName}`;\n  \n        if (methodName.startsWith(\"@@\")) {\n          methodName = Symbol[methodName.substring(2)];\n        }\n  \n        if (isPureVirtual) {\n          classType.registeredClass.pureVirtualFunctions.push(methodName);\n        }\n  \n        function unboundTypesHandler() {\n          throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n        }\n  \n        var proto = classType.registeredClass.instancePrototype;\n        var method = proto[methodName];\n        if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n          // This is the first overload to be registered, OR we are replacing a\n          // function in the base class with a function in the derived class.\n          unboundTypesHandler.argCount = argCount - 2;\n          unboundTypesHandler.className = classType.name;\n          proto[methodName] = unboundTypesHandler;\n        } else {\n          // There was an existing function with the same name registered. Set up\n          // a function overload routing table.\n          ensureOverloadTable(proto, methodName, humanName);\n          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n        }\n  \n        whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n  \n          // Replace the initial unbound-handler-stub function with the appropriate member function, now that all types\n          // are resolved. If multiple overloads are registered for this function, the function goes into an overload table.\n          if (undefined === proto[methodName].overloadTable) {\n            // Set argCount in case an overload is registered later\n            memberFunction.argCount = argCount - 2;\n            proto[methodName] = memberFunction;\n          } else {\n            proto[methodName].overloadTable[argCount - 2] = memberFunction;\n          }\n  \n          return [];\n        });\n        return [];\n      });\n    };\n\n  \n  class HandleAllocator {\n      constructor() {\n        // TODO(sbc): Use class fields once we allow/enable es2022 in\n        // JavaScript input to acorn and closure.\n        // Reserve slot 0 so that 0 is always an invalid handle\n        this.allocated = [undefined];\n        this.freelist = [];\n      }\n      get(id) {\n        assert(this.allocated[id] !== undefined, `invalid handle: ${id}`);\n        return this.allocated[id];\n      };\n      has(id) {\n        return this.allocated[id] !== undefined;\n      };\n      allocate(handle) {\n        var id = this.freelist.pop() || this.allocated.length;\n        this.allocated[id] = handle;\n        return id;\n      };\n      free(id) {\n        assert(this.allocated[id] !== undefined);\n        // Set the slot to `undefined` rather than using `delete` here since\n        // apparently arrays with holes in them can be less efficient.\n        this.allocated[id] = undefined;\n        this.freelist.push(id);\n      };\n    }\n  var emval_handles = new HandleAllocator();;\n  var __emval_decref = (handle) => {\n      if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n        emval_handles.free(handle);\n      }\n    };\n  \n  \n  \n  var count_emval_handles = () => {\n      var count = 0;\n      for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n        if (emval_handles.allocated[i] !== undefined) {\n          ++count;\n        }\n      }\n      return count;\n    };\n  \n  var init_emval = () => {\n      // reserve some special values. These never get de-allocated.\n      // The HandleAllocator takes care of reserving zero.\n      emval_handles.allocated.push(\n        {value: undefined},\n        {value: null},\n        {value: true},\n        {value: false},\n      );\n      Object.assign(emval_handles, /** @lends {emval_handles} */ { reserved: emval_handles.allocated.length }),\n      Module['count_emval_handles'] = count_emval_handles;\n    };\n  var Emval = {\n  toValue:(handle) => {\n        if (!handle) {\n            throwBindingError('Cannot use deleted val. handle = ' + handle);\n        }\n        return emval_handles.get(handle).value;\n      },\n  toHandle:(value) => {\n        switch (value) {\n          case undefined: return 1;\n          case null: return 2;\n          case true: return 3;\n          case false: return 4;\n          default:{\n            return emval_handles.allocate({refcount: 1, value: value});\n          }\n        }\n      },\n  };\n  \n  \n  var EmValType = {\n      name: 'emscripten::val',\n      'fromWireType': (handle) => {\n        var rv = Emval.toValue(handle);\n        __emval_decref(handle);\n        return rv;\n      },\n      'toWireType': (destructors, value) => Emval.toHandle(value),\n      'argPackAdvance': GenericWireTypeSize,\n      'readValueFromPointer': simpleReadValueFromPointer,\n      destructorFunction: null, // This type does not need a destructor\n  \n      // TODO: do we need a deleteObject here?  write a test where\n      // emval is passed into JS via an interface\n    };\n  var __embind_register_emval = (rawType) => registerType(rawType, EmValType);\n\n  \n  var enumReadValueFromPointer = (name, width, signed) => {\n      switch (width) {\n          case 1: return signed ?\n              function(pointer) { return this['fromWireType'](HEAP8[((pointer)>>0)]) } :\n              function(pointer) { return this['fromWireType'](HEAPU8[((pointer)>>0)]) };\n          case 2: return signed ?\n              function(pointer) { return this['fromWireType'](HEAP16[((pointer)>>1)]) } :\n              function(pointer) { return this['fromWireType'](HEAPU16[((pointer)>>1)]) };\n          case 4: return signed ?\n              function(pointer) { return this['fromWireType'](HEAP32[((pointer)>>2)]) } :\n              function(pointer) { return this['fromWireType'](HEAPU32[((pointer)>>2)]) };\n          default:\n              throw new TypeError(`invalid integer width (${width}): ${name}`);\n      }\n    };\n  \n  \n  /** @suppress {globalThis} */\n  var __embind_register_enum = (rawType, name, size, isSigned) => {\n      name = readLatin1String(name);\n  \n      function ctor() {}\n      ctor.values = {};\n  \n      registerType(rawType, {\n        name,\n        constructor: ctor,\n        'fromWireType': function(c) {\n          return this.constructor.values[c];\n        },\n        'toWireType': (destructors, c) => c.value,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': enumReadValueFromPointer(name, size, isSigned),\n        destructorFunction: null,\n      });\n      exposePublicSymbol(name, ctor);\n    };\n\n  \n  \n  \n  \n  var requireRegisteredType = (rawType, humanName) => {\n      var impl = registeredTypes[rawType];\n      if (undefined === impl) {\n          throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n      }\n      return impl;\n    };\n  var __embind_register_enum_value = (rawEnumType, name, enumValue) => {\n      var enumType = requireRegisteredType(rawEnumType, 'enum');\n      name = readLatin1String(name);\n  \n      var Enum = enumType.constructor;\n  \n      var Value = Object.create(enumType.constructor.prototype, {\n        value: {value: enumValue},\n        constructor: {value: createNamedFunction(`${enumType.name}_${name}`, function() {})},\n      });\n      Enum.values[enumValue] = Value;\n      Enum[name] = Value;\n    };\n\n  \n  var floatReadValueFromPointer = (name, width) => {\n      switch (width) {\n          case 4: return function(pointer) {\n              return this['fromWireType'](HEAPF32[((pointer)>>2)]);\n          };\n          case 8: return function(pointer) {\n              return this['fromWireType'](HEAPF64[((pointer)>>3)]);\n          };\n          default:\n              throw new TypeError(`invalid float width (${width}): ${name}`);\n      }\n    };\n  \n  \n  var __embind_register_float = (rawType, name, size) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => value,\n        'toWireType': (destructors, value) => {\n          if (typeof value != \"number\" && typeof value != \"boolean\") {\n            throw new TypeError(`Cannot convert ${embindRepr(value)} to ${this.name}`);\n          }\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': floatReadValueFromPointer(name, size),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  \n  \n  \n  \n  \n  \n  \n  var __embind_register_function = (name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) => {\n      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n      name = readLatin1String(name);\n      name = getFunctionName(name);\n  \n      rawInvoker = embind__requireFunction(signature, rawInvoker);\n  \n      exposePublicSymbol(name, function() {\n        throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\n      }, argCount - 1);\n  \n      whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n        var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);\n        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn, isAsync), argCount - 1);\n        return [];\n      });\n    };\n\n  \n  \n  \n  /** @suppress {globalThis} */\n  var __embind_register_integer = (primitiveType, name, size, minRange, maxRange) => {\n      name = readLatin1String(name);\n      // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come\n      // out as 'i32 -1'. Always treat those as max u32.\n      if (maxRange === -1) {\n        maxRange = 4294967295;\n      }\n  \n      var fromWireType = (value) => value;\n  \n      if (minRange === 0) {\n        var bitshift = 32 - 8*size;\n        fromWireType = (value) => (value << bitshift) >>> bitshift;\n      }\n  \n      var isUnsignedType = (name.includes('unsigned'));\n      var checkAssertions = (value, toTypeName) => {\n        if (typeof value != \"number\" && typeof value != \"boolean\") {\n          throw new TypeError(`Cannot convert \"${embindRepr(value)}\" to ${toTypeName}`);\n        }\n        if (value < minRange || value > maxRange) {\n          throw new TypeError(`Passing a number \"${embindRepr(value)}\" from JS side to C/C++ side to an argument of type \"${name}\", which is outside the valid range [${minRange}, ${maxRange}]!`);\n        }\n      }\n      var toWireType;\n      if (isUnsignedType) {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          return value >>> 0;\n        }\n      } else {\n        toWireType = function(destructors, value) {\n          checkAssertions(value, this.name);\n          // The VM will perform JS to Wasm value conversion, according to the spec:\n          // https://www.w3.org/TR/wasm-js-api-1/#towebassemblyvalue\n          return value;\n        }\n      }\n      registerType(primitiveType, {\n        name,\n        'fromWireType': fromWireType,\n        'toWireType': toWireType,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': integerReadValueFromPointer(name, size, minRange !== 0),\n        destructorFunction: null, // This type does not need a destructor\n      });\n    };\n\n  \n  var __embind_register_memory_view = (rawType, dataTypeIndex, name) => {\n      var typeMapping = [\n        Int8Array,\n        Uint8Array,\n        Int16Array,\n        Uint16Array,\n        Int32Array,\n        Uint32Array,\n        Float32Array,\n        Float64Array,\n        BigInt64Array,\n        BigUint64Array,\n      ];\n  \n      var TA = typeMapping[dataTypeIndex];\n  \n      function decodeMemoryView(handle) {\n        var size = HEAPU32[((handle)>>2)];\n        var data = HEAPU32[(((handle)+(4))>>2)];\n        return new TA(HEAP8.buffer, data, size);\n      }\n  \n      name = readLatin1String(name);\n      registerType(rawType, {\n        name,\n        'fromWireType': decodeMemoryView,\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': decodeMemoryView,\n      }, {\n        ignoreDuplicateRegistrations: true,\n      });\n    };\n\n  \n  \n  var __embind_register_smart_ptr = (rawType,\n                                 rawPointeeType,\n                                 name,\n                                 sharingPolicy,\n                                 getPointeeSignature,\n                                 rawGetPointee,\n                                 constructorSignature,\n                                 rawConstructor,\n                                 shareSignature,\n                                 rawShare,\n                                 destructorSignature,\n                                 rawDestructor) => {\n      name = readLatin1String(name);\n      rawGetPointee = embind__requireFunction(getPointeeSignature, rawGetPointee);\n      rawConstructor = embind__requireFunction(constructorSignature, rawConstructor);\n      rawShare = embind__requireFunction(shareSignature, rawShare);\n      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n  \n      whenDependentTypesAreResolved([rawType], [rawPointeeType], function(pointeeType) {\n        pointeeType = pointeeType[0];\n  \n        var registeredPointer = new RegisteredPointer(name,\n                                                      pointeeType.registeredClass,\n                                                      false,\n                                                      false,\n                                                      // smart pointer properties\n                                                      true,\n                                                      pointeeType,\n                                                      sharingPolicy,\n                                                      rawGetPointee,\n                                                      rawConstructor,\n                                                      rawShare,\n                                                      rawDestructor);\n        return [registeredPointer];\n      });\n    };\n\n  \n  \n  \n  \n  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    };\n  \n  \n  \n  \n  var __embind_register_std_string = (rawType, name) => {\n      name = readLatin1String(name);\n      var stdStringIsUTF8\n      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>\n      = (name === \"std::string\");\n  \n      registerType(rawType, {\n        name,\n        // For some method names we use string keys here since they are part of\n        // the public/external API and/or used by the runtime-generated code.\n        'fromWireType'(value) {\n          var length = HEAPU32[((value)>>2)];\n          var payload = value + 4;\n  \n          var str;\n          if (stdStringIsUTF8) {\n            var decodeStartPtr = payload;\n            // Looping here to support possible embedded '0' bytes\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = payload + i;\n              if (i == length || HEAPU8[currentBytePtr] == 0) {\n                var maxRead = currentBytePtr - decodeStartPtr;\n                var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                if (str === undefined) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + 1;\n              }\n            }\n          } else {\n            var a = new Array(length);\n            for (var i = 0; i < length; ++i) {\n              a[i] = String.fromCharCode(HEAPU8[payload + i]);\n            }\n            str = a.join('');\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType'(destructors, value) {\n          if (value instanceof ArrayBuffer) {\n            value = new Uint8Array(value);\n          }\n  \n          var length;\n          var valueIsOfTypeString = (typeof value == 'string');\n  \n          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n            throwBindingError('Cannot pass non-string to std::string');\n          }\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            length = lengthBytesUTF8(value);\n          } else {\n            length = value.length;\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var base = _malloc(4 + length + 1);\n          var ptr = base + 4;\n          HEAPU32[((base)>>2)] = length;\n          if (stdStringIsUTF8 && valueIsOfTypeString) {\n            stringToUTF8(value, ptr, length + 1);\n          } else {\n            if (valueIsOfTypeString) {\n              for (var i = 0; i < length; ++i) {\n                var charCode = value.charCodeAt(i);\n                if (charCode > 255) {\n                  _free(ptr);\n                  throwBindingError('String has UTF-16 code units that do not fit in 8 bits');\n                }\n                HEAPU8[ptr + i] = charCode;\n              }\n            } else {\n              for (var i = 0; i < length; ++i) {\n                HEAPU8[ptr + i] = value[i];\n              }\n            }\n          }\n  \n          if (destructors !== null) {\n            destructors.push(_free, base);\n          }\n          return base;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': readPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        },\n      });\n    };\n\n  \n  \n  \n  var UTF16Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf-16le') : undefined;;\n  var UTF16ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');\n      var endPtr = ptr;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.\n      // Also, use the length info to avoid running tiny strings through\n      // TextDecoder, since .subarray() allocates garbage.\n      var idx = endPtr >> 1;\n      var maxIdx = idx + maxBytesToRead / 2;\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n      endPtr = idx << 1;\n  \n      if (endPtr - ptr > 32 && UTF16Decoder)\n        return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n  \n      // Fallback: decode without UTF16Decoder\n      var str = '';\n  \n      // If maxBytesToRead is not passed explicitly, it will be undefined, and the\n      // for-loop's condition will always evaluate to true. The loop is then\n      // terminated on the first null char.\n      for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n        var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\n        if (codeUnit == 0) break;\n        // fromCharCode constructs a character from a UTF-16 code unit, so we can\n        // pass the UTF16 string right through.\n        str += String.fromCharCode(codeUnit);\n      }\n  \n      return str;\n    };\n  \n  var stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 2) return 0;\n      maxBytesToWrite -= 2; // Null terminator.\n      var startPtr = outPtr;\n      var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\n      for (var i = 0; i < numCharsToWrite; ++i) {\n        // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        HEAP16[((outPtr)>>1)] = codeUnit;\n        outPtr += 2;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP16[((outPtr)>>1)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF16 = (str) => {\n      return str.length*2;\n    };\n  \n  var UTF32ToString = (ptr, maxBytesToRead) => {\n      assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');\n      var i = 0;\n  \n      var str = '';\n      // If maxBytesToRead is not passed explicitly, it will be undefined, and this\n      // will always evaluate to true. This saves on code size.\n      while (!(i >= maxBytesToRead / 4)) {\n        var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\n        if (utf32 == 0) break;\n        ++i;\n        // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        if (utf32 >= 0x10000) {\n          var ch = utf32 - 0x10000;\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n        } else {\n          str += String.fromCharCode(utf32);\n        }\n      }\n      return str;\n    };\n  \n  var stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n      assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');\n      assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n      // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\n      maxBytesToWrite ??= 0x7FFFFFFF;\n      if (maxBytesToWrite < 4) return 0;\n      var startPtr = outPtr;\n      var endPtr = startPtr + maxBytesToWrite - 4;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\n          var trailSurrogate = str.charCodeAt(++i);\n          codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\n        }\n        HEAP32[((outPtr)>>2)] = codeUnit;\n        outPtr += 4;\n        if (outPtr + 4 > endPtr) break;\n      }\n      // Null-terminate the pointer to the HEAP.\n      HEAP32[((outPtr)>>2)] = 0;\n      return outPtr - startPtr;\n    };\n  \n  var lengthBytesUTF32 = (str) => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var codeUnit = str.charCodeAt(i);\n        if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\n        len += 4;\n      }\n  \n      return len;\n    };\n  var __embind_register_std_wstring = (rawType, charSize, name) => {\n      name = readLatin1String(name);\n      var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n      if (charSize === 2) {\n        decodeString = UTF16ToString;\n        encodeString = stringToUTF16;\n        lengthBytesUTF = lengthBytesUTF16;\n        getHeap = () => HEAPU16;\n        shift = 1;\n      } else if (charSize === 4) {\n        decodeString = UTF32ToString;\n        encodeString = stringToUTF32;\n        lengthBytesUTF = lengthBytesUTF32;\n        getHeap = () => HEAPU32;\n        shift = 2;\n      }\n      registerType(rawType, {\n        name,\n        'fromWireType': (value) => {\n          // Code mostly taken from _embind_register_std_string fromWireType\n          var length = HEAPU32[((value)>>2)];\n          var HEAP = getHeap();\n          var str;\n  \n          var decodeStartPtr = value + 4;\n          // Looping here to support possible embedded '0' bytes\n          for (var i = 0; i <= length; ++i) {\n            var currentBytePtr = value + 4 + i * charSize;\n            if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n              var maxReadBytes = currentBytePtr - decodeStartPtr;\n              var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n              if (str === undefined) {\n                str = stringSegment;\n              } else {\n                str += String.fromCharCode(0);\n                str += stringSegment;\n              }\n              decodeStartPtr = currentBytePtr + charSize;\n            }\n          }\n  \n          _free(value);\n  \n          return str;\n        },\n        'toWireType': (destructors, value) => {\n          if (!(typeof value == 'string')) {\n            throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n          }\n  \n          // assumes POINTER_SIZE alignment\n          var length = lengthBytesUTF(value);\n          var ptr = _malloc(4 + length + charSize);\n          HEAPU32[((ptr)>>2)] = length >> shift;\n  \n          encodeString(value, ptr + 4, length + charSize);\n  \n          if (destructors !== null) {\n            destructors.push(_free, ptr);\n          }\n          return ptr;\n        },\n        'argPackAdvance': GenericWireTypeSize,\n        'readValueFromPointer': simpleReadValueFromPointer,\n        destructorFunction(ptr) {\n          _free(ptr);\n        }\n      });\n    };\n\n  \n  \n  var __embind_register_value_array = (\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor\n    ) => {\n      tupleRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        elements: [],\n      };\n    };\n\n  \n  var __embind_register_value_array_element = (\n      rawTupleType,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext\n    ) => {\n      tupleRegistrations[rawTupleType].elements.push({\n        getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext,\n        setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext,\n      });\n    };\n\n  \n  \n  var __embind_register_value_object = (\n      rawType,\n      name,\n      constructorSignature,\n      rawConstructor,\n      destructorSignature,\n      rawDestructor\n    ) => {\n      structRegistrations[rawType] = {\n        name: readLatin1String(name),\n        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),\n        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),\n        fields: [],\n      };\n    };\n\n  \n  \n  var __embind_register_value_object_field = (\n      structType,\n      fieldName,\n      getterReturnType,\n      getterSignature,\n      getter,\n      getterContext,\n      setterArgumentType,\n      setterSignature,\n      setter,\n      setterContext\n    ) => {\n      structRegistrations[structType].fields.push({\n        fieldName: readLatin1String(fieldName),\n        getterReturnType,\n        getter: embind__requireFunction(getterSignature, getter),\n        getterContext,\n        setterArgumentType,\n        setter: embind__requireFunction(setterSignature, setter),\n        setterContext,\n      });\n    };\n\n  \n  var __embind_register_void = (rawType, name) => {\n      name = readLatin1String(name);\n      registerType(rawType, {\n        isVoid: true, // void return values can be optimized out sometimes\n        name,\n        'argPackAdvance': 0,\n        'fromWireType': () => undefined,\n        // TODO: assert if anything else is given?\n        'toWireType': (destructors, o) => undefined,\n      });\n    };\n\n  var nowIsMonotonic = 1;\n  var __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\n  var __emscripten_throw_longjmp = () => {\n      throw Infinity;\n    };\n\n  \n  \n  var emval_returnValue = (returnType, destructorsRef, handle) => {\n      var destructors = [];\n      var result = returnType['toWireType'](destructors, handle);\n      if (destructors.length) {\n        // void, primitives and any other types w/o destructors don't need to allocate a handle\n        HEAPU32[((destructorsRef)>>2)] = Emval.toHandle(destructors);\n      }\n      return result;\n    };\n  var __emval_as = (handle, returnType, destructorsRef) => {\n      handle = Emval.toValue(handle);\n      returnType = requireRegisteredType(returnType, 'emval::as');\n      return emval_returnValue(returnType, destructorsRef, handle);\n    };\n\n  var emval_methodCallers = [];\n  \n  var __emval_call = (caller, handle, destructorsRef, args) => {\n      caller = emval_methodCallers[caller];\n      handle = Emval.toValue(handle);\n      return caller(null, handle, destructorsRef, args);\n    };\n\n  var emval_symbols = {\n  };\n  \n  var getStringOrSymbol = (address) => {\n      var symbol = emval_symbols[address];\n      if (symbol === undefined) {\n        return readLatin1String(address);\n      }\n      return symbol;\n    };\n  \n  \n  var __emval_call_method = (caller, objHandle, methodName, destructorsRef, args) => {\n      caller = emval_methodCallers[caller];\n      objHandle = Emval.toValue(objHandle);\n      methodName = getStringOrSymbol(methodName);\n      return caller(objHandle, objHandle[methodName], destructorsRef, args);\n    };\n\n\n  var __emval_equals = (first, second) => {\n      first = Emval.toValue(first);\n      second = Emval.toValue(second);\n      return first == second;\n    };\n\n  \n  \n  var emval_get_global = () => {\n      if (typeof globalThis == 'object') {\n        return globalThis;\n      }\n      function testGlobal(obj) {\n        obj['$$$embind_global$$$'] = obj;\n        var success = typeof $$$embind_global$$$ == 'object' && obj['$$$embind_global$$$'] == obj;\n        if (!success) {\n          delete obj['$$$embind_global$$$'];\n        }\n        return success;\n      }\n      if (typeof $$$embind_global$$$ == 'object') {\n        return $$$embind_global$$$;\n      }\n      if (typeof global == 'object' && testGlobal(global)) {\n        $$$embind_global$$$ = global;\n      } else if (typeof self == 'object' && testGlobal(self)) {\n        $$$embind_global$$$ = self; // This works for both \"window\" and \"self\" (Web Workers) global objects\n      }\n      if (typeof $$$embind_global$$$ == 'object') {\n        return $$$embind_global$$$;\n      }\n      throw Error('unable to get global object.');\n    };\n  var __emval_get_global = (name) => {\n      if (name===0) {\n        return Emval.toHandle(emval_get_global());\n      } else {\n        name = getStringOrSymbol(name);\n        return Emval.toHandle(emval_get_global()[name]);\n      }\n    };\n\n  var emval_addMethodCaller = (caller) => {\n      var id = emval_methodCallers.length;\n      emval_methodCallers.push(caller);\n      return id;\n    };\n  \n  var emval_lookupTypes = (argCount, argTypes) => {\n      var a = new Array(argCount);\n      for (var i = 0; i < argCount; ++i) {\n        a[i] = requireRegisteredType(HEAPU32[(((argTypes)+(i * 4))>>2)],\n                                     \"parameter \" + i);\n      }\n      return a;\n    };\n  \n  \n  var reflectConstruct = Reflect.construct;\n  \n  var __emval_get_method_caller = (argCount, argTypes, kind) => {\n      var types = emval_lookupTypes(argCount, argTypes);\n      var retType = types.shift();\n      argCount--; // remove the shifted off return type\n  \n      var argN = new Array(argCount);\n      var invokerFunction = (obj, func, destructorsRef, args) => {\n        var offset = 0;\n        for (var i = 0; i < argCount; ++i) {\n          argN[i] = types[i]['readValueFromPointer'](args + offset);\n          offset += types[i]['argPackAdvance'];\n        }\n        var rv = kind === /* CONSTRUCTOR */ 1 ? reflectConstruct(func, argN) : func.apply(obj, argN);\n        return emval_returnValue(retType, destructorsRef, rv);\n      };\n      var functionName = `methodCaller<(${types.map(t => t.name).join(', ')}) => ${retType.name}>`;\n      return emval_addMethodCaller(createNamedFunction(functionName, invokerFunction));\n    };\n\n  var __emval_get_property = (handle, key) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      return Emval.toHandle(handle[key]);\n    };\n\n  var __emval_incref = (handle) => {\n      if (handle > 4) {\n        emval_handles.get(handle).refcount += 1;\n      }\n    };\n\n  var __emval_instanceof = (object, constructor) => {\n      object = Emval.toValue(object);\n      constructor = Emval.toValue(constructor);\n      return object instanceof constructor;\n    };\n\n  var __emval_is_number = (handle) => {\n      handle = Emval.toValue(handle);\n      return typeof handle == 'number';\n    };\n\n  var __emval_is_string = (handle) => {\n      handle = Emval.toValue(handle);\n      return typeof handle == 'string';\n    };\n\n  var __emval_new_array = () => Emval.toHandle([]);\n\n  \n  var __emval_new_cstring = (v) => Emval.toHandle(getStringOrSymbol(v));\n\n  var __emval_new_object = () => Emval.toHandle({});\n\n  \n  \n  var __emval_run_destructors = (handle) => {\n      var destructors = Emval.toValue(handle);\n      runDestructors(destructors);\n      __emval_decref(handle);\n    };\n\n  var __emval_set_property = (handle, key, value) => {\n      handle = Emval.toValue(handle);\n      key = Emval.toValue(key);\n      value = Emval.toValue(value);\n      handle[key] = value;\n    };\n\n  \n  var __emval_take_value = (type, arg) => {\n      type = requireRegisteredType(type, '_emval_take_value');\n      var v = type['readValueFromPointer'](arg);\n      return Emval.toHandle(v);\n    };\n\n  var __emval_throw = (object) => {\n      object = Emval.toValue(object);\n      throw object;\n    };\n\n  var __emval_typeof = (handle) => {\n      handle = Emval.toValue(handle);\n      return Emval.toHandle(typeof handle);\n    };\n\n  var MAX_INT53 = 9007199254740992;\n  \n  var MIN_INT53 = -9007199254740992;\n  var bigintToI53Checked = (num) => (num < MIN_INT53 || num > MAX_INT53) ? NaN : Number(num);\n  function __gmtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);;\n  \n    \n      var date = new Date(time * 1000);\n      HEAP32[((tmPtr)>>2)] = date.getUTCSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getUTCMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getUTCHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getUTCDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getUTCMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getUTCFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getUTCDay();\n      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);\n      var yday = ((date.getTime() - start) / (1000 * 60 * 60 * 24))|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n    ;\n  }\n\n  var isLeapYear = (year) => year%4 === 0 && (year%100 !== 0 || year%400 === 0);\n  \n  var MONTH_DAYS_LEAP_CUMULATIVE = [0,31,60,91,121,152,182,213,244,274,305,335];\n  \n  var MONTH_DAYS_REGULAR_CUMULATIVE = [0,31,59,90,120,151,181,212,243,273,304,334];\n  var ydayFromDate = (date) => {\n      var leap = isLeapYear(date.getFullYear());\n      var monthDaysCumulative = (leap ? MONTH_DAYS_LEAP_CUMULATIVE : MONTH_DAYS_REGULAR_CUMULATIVE);\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1; // -1 since it's days since Jan 1\n  \n      return yday;\n    };\n  \n  function __localtime_js(time, tmPtr) {\n    time = bigintToI53Checked(time);;\n  \n    \n      var date = new Date(time*1000);\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getFullYear()-1900;\n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n  \n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      HEAP32[(((tmPtr)+(36))>>2)] = -(date.getTimezoneOffset() * 60);\n  \n      // Attention: DST is in December in South, and some regions don't have DST at all.\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;\n      HEAP32[(((tmPtr)+(32))>>2)] = dst;\n    ;\n  }\n\n  \n  var __mktime_js = function(tmPtr) {\n  \n    var ret = (() => { \n      var date = new Date(HEAP32[(((tmPtr)+(20))>>2)] + 1900,\n                          HEAP32[(((tmPtr)+(16))>>2)],\n                          HEAP32[(((tmPtr)+(12))>>2)],\n                          HEAP32[(((tmPtr)+(8))>>2)],\n                          HEAP32[(((tmPtr)+(4))>>2)],\n                          HEAP32[((tmPtr)>>2)],\n                          0);\n  \n      // There's an ambiguous hour when the time goes back; the tm_isdst field is\n      // used to disambiguate it.  Date() basically guesses, so we fix it up if it\n      // guessed wrong, or fill in tm_isdst with the guess if it's -1.\n      var dst = HEAP32[(((tmPtr)+(32))>>2)];\n      var guessedOffset = date.getTimezoneOffset();\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dstOffset = Math.min(winterOffset, summerOffset); // DST is in December in South\n      if (dst < 0) {\n        // Attention: some regions don't have DST at all.\n        HEAP32[(((tmPtr)+(32))>>2)] = Number(summerOffset != winterOffset && dstOffset == guessedOffset);\n      } else if ((dst > 0) != (dstOffset == guessedOffset)) {\n        var nonDstOffset = Math.max(winterOffset, summerOffset);\n        var trueOffset = dst > 0 ? dstOffset : nonDstOffset;\n        // Don't try setMinutes(date.getMinutes() + ...) -- it's messed up.\n        date.setTime(date.getTime() + (trueOffset - guessedOffset)*60000);\n      }\n  \n      HEAP32[(((tmPtr)+(24))>>2)] = date.getDay();\n      var yday = ydayFromDate(date)|0;\n      HEAP32[(((tmPtr)+(28))>>2)] = yday;\n      // To match expected behavior, update fields from date\n      HEAP32[((tmPtr)>>2)] = date.getSeconds();\n      HEAP32[(((tmPtr)+(4))>>2)] = date.getMinutes();\n      HEAP32[(((tmPtr)+(8))>>2)] = date.getHours();\n      HEAP32[(((tmPtr)+(12))>>2)] = date.getDate();\n      HEAP32[(((tmPtr)+(16))>>2)] = date.getMonth();\n      HEAP32[(((tmPtr)+(20))>>2)] = date.getYear();\n  \n      var timeMs = date.getTime();\n      if (isNaN(timeMs)) {\n        return -1;\n      }\n      // Return time in microseconds\n      return timeMs / 1000;\n     })();\n    return BigInt(ret);\n  };\n\n  \n  \n  \n  \n  \n  function __mmap_js(len, prot, flags, fd, offset, allocated, addr) {\n    offset = bigintToI53Checked(offset);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var res = FS.mmap(stream, len, offset, prot, flags);\n      var ptr = res.ptr;\n      HEAP32[((allocated)>>2)] = res.allocated;\n      HEAPU32[((addr)>>2)] = ptr;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  ;\n  }\n\n  \n  function __munmap_js(addr, len, prot, flags, fd, offset) {\n    offset = bigintToI53Checked(offset);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      if (prot & 2) {\n        SYSCALLS.doMsync(addr, stream, len, flags, offset);\n      }\n      FS.munmap(stream);\n      // implicitly return 0\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return -e.errno;\n  }\n  ;\n  }\n\n  \n  \n  var stringToNewUTF8 = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8(str, ret, size);\n      return ret;\n    };\n  var __tzset_js = (timezone, daylight, tzname) => {\n      // TODO: Use (malleable) environment variables instead of system settings.\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n  \n      // Local standard timezone offset. Local standard time is not adjusted for daylight savings.\n      // This code uses the fact that getTimezoneOffset returns a greater value during Standard Time versus Daylight Saving Time (DST).\n      // Thus it determines the expected output during Standard Time, and it compares whether the output of the given date the same (Standard) or less (DST).\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n  \n      // timezone is specified as seconds west of UTC (\"The external variable\n      // `timezone` shall be set to the difference, in seconds, between\n      // Coordinated Universal Time (UTC) and local standard time.\"), the same\n      // as returned by stdTimezoneOffset.\n      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html\n      HEAPU32[((timezone)>>2)] = stdTimezoneOffset * 60;\n  \n      HEAP32[((daylight)>>2)] = Number(winterOffset != summerOffset);\n  \n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : \"GMT\";\n      };\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = stringToNewUTF8(winterName);\n      var summerNamePtr = stringToNewUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        // Northern hemisphere\n        HEAPU32[((tzname)>>2)] = winterNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = summerNamePtr;\n      } else {\n        HEAPU32[((tzname)>>2)] = summerNamePtr;\n        HEAPU32[(((tzname)+(4))>>2)] = winterNamePtr;\n      }\n    };\n\n  var _abort = () => {\n      abort('native code called abort()');\n    };\n\n  var _emscripten_set_main_loop_timing = (mode, value) => {\n      Browser.mainLoop.timingMode = mode;\n      Browser.mainLoop.timingValue = value;\n  \n      if (!Browser.mainLoop.func) {\n        err('emscripten_set_main_loop_timing: Cannot set timing mode for main loop since a main loop does not exist! Call emscripten_set_main_loop first to set one up.');\n        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.\n      }\n  \n      if (!Browser.mainLoop.running) {\n        \n        Browser.mainLoop.running = true;\n      }\n      if (mode == 0) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {\n          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;\n          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop\n        };\n        Browser.mainLoop.method = 'timeout';\n      } else if (mode == 1) {\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {\n          Browser.requestAnimationFrame(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'rAF';\n      } else if (mode == 2) {\n        if (typeof Browser.setImmediate == 'undefined') {\n          if (typeof setImmediate == 'undefined') {\n            // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)\n            var setImmediates = [];\n            var emscriptenMainLoopMessageId = 'setimmediate';\n            /** @param {Event} event */\n            var Browser_setImmediate_messageHandler = (event) => {\n              // When called in current thread or Worker, the main loop ID is structured slightly different to accommodate for --proxy-to-worker runtime listening to Worker events,\n              // so check for both cases.\n              if (event.data === emscriptenMainLoopMessageId || event.data.target === emscriptenMainLoopMessageId) {\n                event.stopPropagation();\n                setImmediates.shift()();\n              }\n            };\n            addEventListener(\"message\", Browser_setImmediate_messageHandler, true);\n            Browser.setImmediate = /** @type{function(function(): ?, ...?): number} */(function Browser_emulated_setImmediate(func) {\n              setImmediates.push(func);\n              if (ENVIRONMENT_IS_WORKER) {\n                if (Module['setImmediates'] === undefined) Module['setImmediates'] = [];\n                Module['setImmediates'].push(func);\n                postMessage({target: emscriptenMainLoopMessageId}); // In --proxy-to-worker, route the message via proxyClient.js\n              } else postMessage(emscriptenMainLoopMessageId, \"*\"); // On the main thread, can just send the message to itself.\n            });\n          } else {\n            Browser.setImmediate = setImmediate;\n          }\n        }\n        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {\n          Browser.setImmediate(Browser.mainLoop.runner);\n        };\n        Browser.mainLoop.method = 'immediate';\n      }\n      return 0;\n    };\n  \n  var _emscripten_get_now;\n      // Modern environment where performance.now() is supported:\n      // N.B. a shorter form \"_emscripten_get_now = performance.now;\" is\n      // unfortunately not allowed even in current browsers (e.g. FF Nightly 75).\n      _emscripten_get_now = () => performance.now();\n  ;\n  \n  \n    /**\n     * @param {number=} arg\n     * @param {boolean=} noSetTiming\n     */\n  var setMainLoop = (browserIterationFunc, fps, simulateInfiniteLoop, arg, noSetTiming) => {\n      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');\n  \n      Browser.mainLoop.func = browserIterationFunc;\n      Browser.mainLoop.arg = arg;\n  \n      // Closure compiler bug(?): Closure does not see that the assignment\n      //   var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop\n      // is a value copy of a number (even with the JSDoc @type annotation)\n      // but optimizeis the code as if the assignment was a reference assignment,\n      // which results in Browser.mainLoop.pause() not working. Hence use a\n      // workaround to make Closure believe this is a value copy that should occur:\n      // (TODO: Minimize this down to a small test case and report - was unable\n      // to reproduce in a small written test case)\n      /** @type{number} */\n      var thisMainLoopId = (() => Browser.mainLoop.currentlyRunningMainloop)();\n      function checkIsRunning() {\n        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) {\n          \n          return false;\n        }\n        return true;\n      }\n  \n      // We create the loop runner here but it is not actually running until\n      // _emscripten_set_main_loop_timing is called (which might happen a\n      // later time).  This member signifies that the current runner has not\n      // yet been started so that we can call runtimeKeepalivePush when it\n      // gets it timing set for the first time.\n      Browser.mainLoop.running = false;\n      Browser.mainLoop.runner = function Browser_mainLoop_runner() {\n        if (ABORT) return;\n        if (Browser.mainLoop.queue.length > 0) {\n          var start = Date.now();\n          var blocker = Browser.mainLoop.queue.shift();\n          blocker.func(blocker.arg);\n          if (Browser.mainLoop.remainingBlockers) {\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);\n            if (blocker.counted) {\n              Browser.mainLoop.remainingBlockers = next;\n            } else {\n              // not counted, but move the progress along a tiny bit\n              next = next + 0.5; // do not steal all the next one's progress\n              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;\n            }\n          }\n          Browser.mainLoop.updateStatus();\n  \n          // catches pause/resume main loop from blocker execution\n          if (!checkIsRunning()) return;\n  \n          setTimeout(Browser.mainLoop.runner, 0);\n          return;\n        }\n  \n        // catch pauses from non-main loop sources\n        if (!checkIsRunning()) return;\n  \n        // Implement very basic swap interval control\n        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;\n        if (Browser.mainLoop.timingMode == 1 && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {\n          // Not the scheduled time to render this frame - skip.\n          Browser.mainLoop.scheduler();\n          return;\n        } else if (Browser.mainLoop.timingMode == 0) {\n          Browser.mainLoop.tickStartTime = _emscripten_get_now();\n        }\n  \n        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize\n        // VBO double-buffering and reduce GPU stalls.\n  \n        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {\n          warnOnce('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');\n          Browser.mainLoop.method = ''; // just warn once per call to set main loop\n        }\n  \n        Browser.mainLoop.runIter(browserIterationFunc);\n  \n        checkStackCookie();\n  \n        // catch pauses from the main loop itself\n        if (!checkIsRunning()) return;\n  \n        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able\n        // to queue the newest produced audio samples.\n        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()\n        //       do not need to be hardcoded into this function, but can be more generic.\n        if (typeof SDL == 'object') SDL.audio?.queueNewAudioData?.();\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (!noSetTiming) {\n        if (fps && fps > 0) {\n          _emscripten_set_main_loop_timing(0, 1000.0 / fps);\n        } else {\n          // Do rAF by rendering each frame (no decimating)\n          _emscripten_set_main_loop_timing(1, 1);\n        }\n  \n        Browser.mainLoop.scheduler();\n      }\n  \n      if (simulateInfiniteLoop) {\n        throw 'unwind';\n      }\n    };\n  \n  var handleException = (e) => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      checkStackCookie();\n      if (e instanceof WebAssembly.RuntimeError) {\n        if (_emscripten_stack_get_current() <= 0) {\n          err('Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)');\n        }\n      }\n      quit_(1, e);\n    };\n  \n  \n  var runtimeKeepaliveCounter = 0;\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n  var _proc_exit = (code) => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        Module['onExit']?.(code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n  \n  /** @suppress {duplicate } */\n  /** @param {boolean|number=} implicit */\n  var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n  \n      checkUnflushedContent();\n  \n      // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\n      if (keepRuntimeAlive() && !implicit) {\n        var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n        readyPromiseReject(msg);\n        err(msg);\n      }\n  \n      _proc_exit(status);\n    };\n  var _exit = exitJS;\n  \n  \n  var maybeExit = () => {\n      if (!keepRuntimeAlive()) {\n        try {\n          _exit(EXITSTATUS);\n        } catch (e) {\n          handleException(e);\n        }\n      }\n    };\n  var callUserCallback = (func) => {\n      if (ABORT) {\n        err('user callback triggered after runtime exited or application aborted.  Ignoring.');\n        return;\n      }\n      try {\n        func();\n        maybeExit();\n      } catch (e) {\n        handleException(e);\n      }\n    };\n  \n  /** @param {number=} timeout */\n  var safeSetTimeout = (func, timeout) => {\n      \n      return setTimeout(() => {\n        \n        callUserCallback(func);\n      }, timeout);\n    };\n  \n  \n  \n  \n  var Browser = {\n  mainLoop:{\n  running:false,\n  scheduler:null,\n  method:\"\",\n  currentlyRunningMainloop:0,\n  func:null,\n  arg:0,\n  timingMode:0,\n  timingValue:0,\n  currentFrameNumber:0,\n  queue:[],\n  pause() {\n          Browser.mainLoop.scheduler = null;\n          // Incrementing this signals the previous main loop that it's now become old, and it must return.\n          Browser.mainLoop.currentlyRunningMainloop++;\n        },\n  resume() {\n          Browser.mainLoop.currentlyRunningMainloop++;\n          var timingMode = Browser.mainLoop.timingMode;\n          var timingValue = Browser.mainLoop.timingValue;\n          var func = Browser.mainLoop.func;\n          Browser.mainLoop.func = null;\n          // do not set timing and call scheduler, we will do it on the next lines\n          setMainLoop(func, 0, false, Browser.mainLoop.arg, true);\n          _emscripten_set_main_loop_timing(timingMode, timingValue);\n          Browser.mainLoop.scheduler();\n        },\n  updateStatus() {\n          if (Module['setStatus']) {\n            var message = Module['statusMessage'] || 'Please wait...';\n            var remaining = Browser.mainLoop.remainingBlockers;\n            var expected = Browser.mainLoop.expectedBlockers;\n            if (remaining) {\n              if (remaining < expected) {\n                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');\n              } else {\n                Module['setStatus'](message);\n              }\n            } else {\n              Module['setStatus']('');\n            }\n          }\n        },\n  runIter(func) {\n          if (ABORT) return;\n          if (Module['preMainLoop']) {\n            var preRet = Module['preMainLoop']();\n            if (preRet === false) {\n              return; // |return false| skips a frame\n            }\n          }\n          callUserCallback(func);\n          Module['postMainLoop']?.();\n        },\n  },\n  isFullscreen:false,\n  pointerLock:false,\n  moduleContextCreatedCallbacks:[],\n  workers:[],\n  init() {\n        if (Browser.initted) return;\n        Browser.initted = true;\n  \n        // Support for plugins that can process preloaded files. You can add more of these to\n        // your app by creating and appending to preloadPlugins.\n        //\n        // Each plugin is asked if it can handle a file based on the file's name. If it can,\n        // it is given the file's raw data. When it is done, it calls a callback with the file's\n        // (possibly modified) data. For example, a plugin might decompress a file, or it\n        // might create some side data structure for use later (like an Image element, etc.).\n  \n        var imagePlugin = {};\n        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {\n          return !Module.noImageDecoding && /\\.(jpg|jpeg|png|bmp)$/i.test(name);\n        };\n        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          if (b.size !== byteArray.length) { // Safari bug #118630\n            // Safari's Blob can only take an ArrayBuffer\n            b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });\n          }\n          var url = URL.createObjectURL(b);\n          assert(typeof url == 'string', 'createObjectURL must return a url as a string');\n          var img = new Image();\n          img.onload = () => {\n            assert(img.complete, `Image ${name} could not be decoded`);\n            var canvas = /** @type {!HTMLCanvasElement} */ (document.createElement('canvas'));\n            canvas.width = img.width;\n            canvas.height = img.height;\n            var ctx = canvas.getContext('2d');\n            ctx.drawImage(img, 0, 0);\n            preloadedImages[name] = canvas;\n            URL.revokeObjectURL(url);\n            onload?.(byteArray);\n          };\n          img.onerror = (event) => {\n            err(`Image ${url} could not be decoded`);\n            onerror?.();\n          };\n          img.src = url;\n        };\n        preloadPlugins.push(imagePlugin);\n  \n        var audioPlugin = {};\n        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {\n          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };\n        };\n        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {\n          var done = false;\n          function finish(audio) {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = audio;\n            onload?.(byteArray);\n          }\n          function fail() {\n            if (done) return;\n            done = true;\n            preloadedAudios[name] = new Audio(); // empty shim\n            onerror?.();\n          }\n          var b = new Blob([byteArray], { type: Browser.getMimetype(name) });\n          var url = URL.createObjectURL(b); // XXX we never revoke this!\n          assert(typeof url == 'string', 'createObjectURL must return a url as a string');\n          var audio = new Audio();\n          audio.addEventListener('canplaythrough', () => finish(audio), false); // use addEventListener due to chromium bug 124926\n          audio.onerror = function audio_onerror(event) {\n            if (done) return;\n            err(`warning: browser could not fully decode audio ${name}, trying slower base64 approach`);\n            function encode64(data) {\n              var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n              var PAD = '=';\n              var ret = '';\n              var leftchar = 0;\n              var leftbits = 0;\n              for (var i = 0; i < data.length; i++) {\n                leftchar = (leftchar << 8) | data[i];\n                leftbits += 8;\n                while (leftbits >= 6) {\n                  var curr = (leftchar >> (leftbits-6)) & 0x3f;\n                  leftbits -= 6;\n                  ret += BASE[curr];\n                }\n              }\n              if (leftbits == 2) {\n                ret += BASE[(leftchar&3) << 4];\n                ret += PAD + PAD;\n              } else if (leftbits == 4) {\n                ret += BASE[(leftchar&0xf) << 2];\n                ret += PAD;\n              }\n              return ret;\n            }\n            audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);\n            finish(audio); // we don't wait for confirmation this worked - but it's worth trying\n          };\n          audio.src = url;\n          // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror\n          safeSetTimeout(() => {\n            finish(audio); // try to use it even though it is not necessarily ready to play\n          }, 10000);\n        };\n        preloadPlugins.push(audioPlugin);\n  \n        // Canvas event setup\n  \n        function pointerLockChange() {\n          Browser.pointerLock = document['pointerLockElement'] === Module['canvas'] ||\n                                document['mozPointerLockElement'] === Module['canvas'] ||\n                                document['webkitPointerLockElement'] === Module['canvas'] ||\n                                document['msPointerLockElement'] === Module['canvas'];\n        }\n        var canvas = Module['canvas'];\n        if (canvas) {\n          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module\n          // Module['forcedAspectRatio'] = 4 / 3;\n  \n          canvas.requestPointerLock = canvas['requestPointerLock'] ||\n                                      canvas['mozRequestPointerLock'] ||\n                                      canvas['webkitRequestPointerLock'] ||\n                                      canvas['msRequestPointerLock'] ||\n                                      (() => {});\n          canvas.exitPointerLock = document['exitPointerLock'] ||\n                                   document['mozExitPointerLock'] ||\n                                   document['webkitExitPointerLock'] ||\n                                   document['msExitPointerLock'] ||\n                                   (() => {}); // no-op if function does not exist\n          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);\n  \n          document.addEventListener('pointerlockchange', pointerLockChange, false);\n          document.addEventListener('mozpointerlockchange', pointerLockChange, false);\n          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);\n          document.addEventListener('mspointerlockchange', pointerLockChange, false);\n  \n          if (Module['elementPointerLock']) {\n            canvas.addEventListener(\"click\", (ev) => {\n              if (!Browser.pointerLock && Module['canvas'].requestPointerLock) {\n                Module['canvas'].requestPointerLock();\n                ev.preventDefault();\n              }\n            }, false);\n          }\n        }\n      },\n  createContext(/** @type {HTMLCanvasElement} */ canvas, useWebGL, setInModule, webGLContextAttributes) {\n        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.\n  \n        var ctx;\n        var contextHandle;\n        if (useWebGL) {\n          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.\n          var contextAttributes = {\n            antialias: false,\n            alpha: false,\n            majorVersion: (typeof WebGL2RenderingContext != 'undefined') ? 2 : 1,\n          };\n  \n          if (webGLContextAttributes) {\n            for (var attribute in webGLContextAttributes) {\n              contextAttributes[attribute] = webGLContextAttributes[attribute];\n            }\n          }\n  \n          // This check of existence of GL is here to satisfy Closure compiler, which yells if variable GL is referenced below but GL object is not\n          // actually compiled in because application is not doing any GL operations. TODO: Ideally if GL is not being used, this function\n          // Browser.createContext() should not even be emitted.\n          if (typeof GL != 'undefined') {\n            contextHandle = GL.createContext(canvas, contextAttributes);\n            if (contextHandle) {\n              ctx = GL.getContext(contextHandle).GLctx;\n            }\n          }\n        } else {\n          ctx = canvas.getContext('2d');\n        }\n  \n        if (!ctx) return null;\n  \n        if (setInModule) {\n          if (!useWebGL) assert(typeof GLctx == 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');\n  \n          Module.ctx = ctx;\n          if (useWebGL) GL.makeContextCurrent(contextHandle);\n          Module.useWebGL = useWebGL;\n          Browser.moduleContextCreatedCallbacks.forEach((callback) => callback());\n          Browser.init();\n        }\n        return ctx;\n      },\n  destroyContext(canvas, useWebGL, setInModule) {},\n  fullscreenHandlersInstalled:false,\n  lockPointer:undefined,\n  resizeCanvas:undefined,\n  requestFullscreen(lockPointer, resizeCanvas) {\n        Browser.lockPointer = lockPointer;\n        Browser.resizeCanvas = resizeCanvas;\n        if (typeof Browser.lockPointer == 'undefined') Browser.lockPointer = true;\n        if (typeof Browser.resizeCanvas == 'undefined') Browser.resizeCanvas = false;\n  \n        var canvas = Module['canvas'];\n        function fullscreenChange() {\n          Browser.isFullscreen = false;\n          var canvasContainer = canvas.parentNode;\n          if ((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n               document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n               document['webkitCurrentFullScreenElement']) === canvasContainer) {\n            canvas.exitFullscreen = Browser.exitFullscreen;\n            if (Browser.lockPointer) canvas.requestPointerLock();\n            Browser.isFullscreen = true;\n            if (Browser.resizeCanvas) {\n              Browser.setFullscreenCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          } else {\n            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen\n            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);\n            canvasContainer.parentNode.removeChild(canvasContainer);\n  \n            if (Browser.resizeCanvas) {\n              Browser.setWindowedCanvasSize();\n            } else {\n              Browser.updateCanvasDimensions(canvas);\n            }\n          }\n          Module['onFullScreen']?.(Browser.isFullscreen);\n          Module['onFullscreen']?.(Browser.isFullscreen);\n        }\n  \n        if (!Browser.fullscreenHandlersInstalled) {\n          Browser.fullscreenHandlersInstalled = true;\n          document.addEventListener('fullscreenchange', fullscreenChange, false);\n          document.addEventListener('mozfullscreenchange', fullscreenChange, false);\n          document.addEventListener('webkitfullscreenchange', fullscreenChange, false);\n          document.addEventListener('MSFullscreenChange', fullscreenChange, false);\n        }\n  \n        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root\n        var canvasContainer = document.createElement(\"div\");\n        canvas.parentNode.insertBefore(canvasContainer, canvas);\n        canvasContainer.appendChild(canvas);\n  \n        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)\n        canvasContainer.requestFullscreen = canvasContainer['requestFullscreen'] ||\n                                            canvasContainer['mozRequestFullScreen'] ||\n                                            canvasContainer['msRequestFullscreen'] ||\n                                           (canvasContainer['webkitRequestFullscreen'] ? () => canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) : null) ||\n                                           (canvasContainer['webkitRequestFullScreen'] ? () => canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) : null);\n  \n        canvasContainer.requestFullscreen();\n      },\n  requestFullScreen() {\n        abort('Module.requestFullScreen has been replaced by Module.requestFullscreen (without a capital S)');\n      },\n  exitFullscreen() {\n        // This is workaround for chrome. Trying to exit from fullscreen\n        // not in fullscreen state will cause \"TypeError: Document not active\"\n        // in chrome. See https://github.com/emscripten-core/emscripten/pull/8236\n        if (!Browser.isFullscreen) {\n          return false;\n        }\n  \n        var CFS = document['exitFullscreen'] ||\n                  document['cancelFullScreen'] ||\n                  document['mozCancelFullScreen'] ||\n                  document['msExitFullscreen'] ||\n                  document['webkitCancelFullScreen'] ||\n            (() => {});\n        CFS.apply(document, []);\n        return true;\n      },\n  nextRAF:0,\n  fakeRequestAnimationFrame(func) {\n        // try to keep 60fps between calls to here\n        var now = Date.now();\n        if (Browser.nextRAF === 0) {\n          Browser.nextRAF = now + 1000/60;\n        } else {\n          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0\n            Browser.nextRAF += 1000/60;\n          }\n        }\n        var delay = Math.max(Browser.nextRAF - now, 0);\n        setTimeout(func, delay);\n      },\n  requestAnimationFrame(func) {\n        if (typeof requestAnimationFrame == 'function') {\n          requestAnimationFrame(func);\n          return;\n        }\n        var RAF = Browser.fakeRequestAnimationFrame;\n        RAF(func);\n      },\n  safeSetTimeout(func, timeout) {\n        // Legacy function, this is used by the SDL2 port so we need to keep it\n        // around at least until that is updated.\n        // See https://github.com/libsdl-org/SDL/pull/6304\n        return safeSetTimeout(func, timeout);\n      },\n  safeRequestAnimationFrame(func) {\n        \n        return Browser.requestAnimationFrame(() => {\n          \n          callUserCallback(func);\n        });\n      },\n  getMimetype(name) {\n        return {\n          'jpg': 'image/jpeg',\n          'jpeg': 'image/jpeg',\n          'png': 'image/png',\n          'bmp': 'image/bmp',\n          'ogg': 'audio/ogg',\n          'wav': 'audio/wav',\n          'mp3': 'audio/mpeg'\n        }[name.substr(name.lastIndexOf('.')+1)];\n      },\n  getUserMedia(func) {\n        window.getUserMedia ||= navigator['getUserMedia'] ||\n                                navigator['mozGetUserMedia'];\n        window.getUserMedia(func);\n      },\n  getMovementX(event) {\n        return event['movementX'] ||\n               event['mozMovementX'] ||\n               event['webkitMovementX'] ||\n               0;\n      },\n  getMovementY(event) {\n        return event['movementY'] ||\n               event['mozMovementY'] ||\n               event['webkitMovementY'] ||\n               0;\n      },\n  getMouseWheelDelta(event) {\n        var delta = 0;\n        switch (event.type) {\n          case 'DOMMouseScroll':\n            // 3 lines make up a step\n            delta = event.detail / 3;\n            break;\n          case 'mousewheel':\n            // 120 units make up a step\n            delta = event.wheelDelta / 120;\n            break;\n          case 'wheel':\n            delta = event.deltaY\n            switch (event.deltaMode) {\n              case 0:\n                // DOM_DELTA_PIXEL: 100 pixels make up a step\n                delta /= 100;\n                break;\n              case 1:\n                // DOM_DELTA_LINE: 3 lines make up a step\n                delta /= 3;\n                break;\n              case 2:\n                // DOM_DELTA_PAGE: A page makes up 80 steps\n                delta *= 80;\n                break;\n              default:\n                throw 'unrecognized mouse wheel delta mode: ' + event.deltaMode;\n            }\n            break;\n          default:\n            throw 'unrecognized mouse wheel event: ' + event.type;\n        }\n        return delta;\n      },\n  mouseX:0,\n  mouseY:0,\n  mouseMovementX:0,\n  mouseMovementY:0,\n  touches:{\n  },\n  lastTouches:{\n  },\n  calculateMouseCoords(pageX, pageY) {\n        // Calculate the movement based on the changes\n        // in the coordinates.\n        var rect = Module[\"canvas\"].getBoundingClientRect();\n        var cw = Module[\"canvas\"].width;\n        var ch = Module[\"canvas\"].height;\n  \n        // Neither .scrollX or .pageXOffset are defined in a spec, but\n        // we prefer .scrollX because it is currently in a spec draft.\n        // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)\n        var scrollX = ((typeof window.scrollX != 'undefined') ? window.scrollX : window.pageXOffset);\n        var scrollY = ((typeof window.scrollY != 'undefined') ? window.scrollY : window.pageYOffset);\n        // If this assert lands, it's likely because the browser doesn't support scrollX or pageXOffset\n        // and we have no viable fallback.\n        assert((typeof scrollX != 'undefined') && (typeof scrollY != 'undefined'), 'Unable to retrieve scroll position, mouse positions likely broken.');\n        var adjustedX = pageX - (scrollX + rect.left);\n        var adjustedY = pageY - (scrollY + rect.top);\n  \n        // the canvas might be CSS-scaled compared to its backbuffer;\n        // SDL-using content will want mouse coordinates in terms\n        // of backbuffer units.\n        adjustedX = adjustedX * (cw / rect.width);\n        adjustedY = adjustedY * (ch / rect.height);\n  \n        return { x: adjustedX, y: adjustedY };\n      },\n  setMouseCoords(pageX, pageY) {\n        const {x, y} = Browser.calculateMouseCoords(pageX, pageY);\n        Browser.mouseMovementX = x - Browser.mouseX;\n        Browser.mouseMovementY = y - Browser.mouseY;\n        Browser.mouseX = x;\n        Browser.mouseY = y;\n      },\n  calculateMouseEvent(event) { // event should be mousemove, mousedown or mouseup\n        if (Browser.pointerLock) {\n          // When the pointer is locked, calculate the coordinates\n          // based on the movement of the mouse.\n          // Workaround for Firefox bug 764498\n          if (event.type != 'mousemove' &&\n              ('mozMovementX' in event)) {\n            Browser.mouseMovementX = Browser.mouseMovementY = 0;\n          } else {\n            Browser.mouseMovementX = Browser.getMovementX(event);\n            Browser.mouseMovementY = Browser.getMovementY(event);\n          }\n  \n          // check if SDL is available\n          if (typeof SDL != \"undefined\") {\n            Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;\n            Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;\n          } else {\n            // just add the mouse delta to the current absolut mouse position\n            // FIXME: ideally this should be clamped against the canvas size and zero\n            Browser.mouseX += Browser.mouseMovementX;\n            Browser.mouseY += Browser.mouseMovementY;\n          }\n        } else {\n          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {\n            var touch = event.touch;\n            if (touch === undefined) {\n              return; // the \"touch\" property is only defined in SDL\n  \n            }\n            var coords = Browser.calculateMouseCoords(touch.pageX, touch.pageY);\n  \n            if (event.type === 'touchstart') {\n              Browser.lastTouches[touch.identifier] = coords;\n              Browser.touches[touch.identifier] = coords;\n            } else if (event.type === 'touchend' || event.type === 'touchmove') {\n              var last = Browser.touches[touch.identifier];\n              last ||= coords;\n              Browser.lastTouches[touch.identifier] = last;\n              Browser.touches[touch.identifier] = coords;\n            }\n            return;\n          }\n  \n          Browser.setMouseCoords(event.pageX, event.pageY);\n        }\n      },\n  resizeListeners:[],\n  updateResizeListeners() {\n        var canvas = Module['canvas'];\n        Browser.resizeListeners.forEach((listener) => listener(canvas.width, canvas.height));\n      },\n  setCanvasSize(width, height, noUpdates) {\n        var canvas = Module['canvas'];\n        Browser.updateCanvasDimensions(canvas, width, height);\n        if (!noUpdates) Browser.updateResizeListeners();\n      },\n  windowedWidth:0,\n  windowedHeight:0,\n  setFullscreenCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags | 0x00800000; // set SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  setWindowedCanvasSize() {\n        // check if SDL is available\n        if (typeof SDL != \"undefined\") {\n          var flags = HEAPU32[((SDL.screen)>>2)];\n          flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag\n          HEAP32[((SDL.screen)>>2)] = flags;\n        }\n        Browser.updateCanvasDimensions(Module['canvas']);\n        Browser.updateResizeListeners();\n      },\n  updateCanvasDimensions(canvas, wNative, hNative) {\n        if (wNative && hNative) {\n          canvas.widthNative = wNative;\n          canvas.heightNative = hNative;\n        } else {\n          wNative = canvas.widthNative;\n          hNative = canvas.heightNative;\n        }\n        var w = wNative;\n        var h = hNative;\n        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {\n          if (w/h < Module['forcedAspectRatio']) {\n            w = Math.round(h * Module['forcedAspectRatio']);\n          } else {\n            h = Math.round(w / Module['forcedAspectRatio']);\n          }\n        }\n        if (((document['fullscreenElement'] || document['mozFullScreenElement'] ||\n             document['msFullscreenElement'] || document['webkitFullscreenElement'] ||\n             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {\n           var factor = Math.min(screen.width / w, screen.height / h);\n           w = Math.round(w * factor);\n           h = Math.round(h * factor);\n        }\n        if (Browser.resizeCanvas) {\n          if (canvas.width  != w) canvas.width  = w;\n          if (canvas.height != h) canvas.height = h;\n          if (typeof canvas.style != 'undefined') {\n            canvas.style.removeProperty( \"width\");\n            canvas.style.removeProperty(\"height\");\n          }\n        } else {\n          if (canvas.width  != wNative) canvas.width  = wNative;\n          if (canvas.height != hNative) canvas.height = hNative;\n          if (typeof canvas.style != 'undefined') {\n            if (w != wNative || h != hNative) {\n              canvas.style.setProperty( \"width\", w + \"px\", \"important\");\n              canvas.style.setProperty(\"height\", h + \"px\", \"important\");\n            } else {\n              canvas.style.removeProperty( \"width\");\n              canvas.style.removeProperty(\"height\");\n            }\n          }\n        }\n      },\n  };\n  \n  var EGL = {\n  errorCode:12288,\n  defaultDisplayInitialized:false,\n  currentContext:0,\n  currentReadSurface:0,\n  currentDrawSurface:0,\n  contextAttributes:{\n  alpha:false,\n  depth:false,\n  stencil:false,\n  antialias:false,\n  },\n  stringCache:{\n  },\n  setErrorCode(code) {\n        EGL.errorCode = code;\n      },\n  chooseConfig(display, attribList, config, config_size, numConfigs) {\n        if (display != 62000) {\n          EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n          return 0;\n        }\n  \n        if (attribList) {\n          // read attribList if it is non-null\n          for (;;) {\n            var param = HEAP32[((attribList)>>2)];\n            if (param == 0x3021 /*EGL_ALPHA_SIZE*/) {\n              var alphaSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.alpha = (alphaSize > 0);\n            } else if (param == 0x3025 /*EGL_DEPTH_SIZE*/) {\n              var depthSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.depth = (depthSize > 0);\n            } else if (param == 0x3026 /*EGL_STENCIL_SIZE*/) {\n              var stencilSize = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.stencil = (stencilSize > 0);\n            } else if (param == 0x3031 /*EGL_SAMPLES*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples > 0);\n            } else if (param == 0x3032 /*EGL_SAMPLE_BUFFERS*/) {\n              var samples = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.antialias = (samples == 1);\n            } else if (param == 0x3100 /*EGL_CONTEXT_PRIORITY_LEVEL_IMG*/) {\n              var requestedPriority = HEAP32[(((attribList)+(4))>>2)];\n              EGL.contextAttributes.lowLatency = (requestedPriority != 0x3103 /*EGL_CONTEXT_PRIORITY_LOW_IMG*/);\n            } else if (param == 0x3038 /*EGL_NONE*/) {\n                break;\n            }\n            attribList += 8;\n          }\n        }\n  \n        if ((!config || !config_size) && !numConfigs) {\n          EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n          return 0;\n        }\n        if (numConfigs) {\n          HEAP32[((numConfigs)>>2)] = 1; // Total number of supported configs: 1.\n        }\n        if (config && config_size > 0) {\n          HEAPU32[((config)>>2)] = 62002;\n        }\n  \n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1;\n      },\n  };\n  var _eglChooseConfig = (display, attrib_list, configs, config_size, numConfigs) => {\n      return EGL.chooseConfig(display, attrib_list, configs, config_size, numConfigs);\n    };\n\n  \n  var GL = {\n  counter:1,\n  buffers:[],\n  programs:[],\n  framebuffers:[],\n  renderbuffers:[],\n  textures:[],\n  shaders:[],\n  vaos:[],\n  contexts:[],\n  offscreenCanvases:{\n  },\n  queries:[],\n  samplers:[],\n  transformFeedbacks:[],\n  syncs:[],\n  stringCache:{\n  },\n  stringiCache:{\n  },\n  unpackAlignment:4,\n  recordError:function recordError(errorCode) {\n        if (!GL.lastError) {\n          GL.lastError = errorCode;\n        }\n      },\n  getNewId:(table) => {\n        var ret = GL.counter++;\n        for (var i = table.length; i < ret; i++) {\n          table[i] = null;\n        }\n        return ret;\n      },\n  getSource:(shader, count, string, length) => {\n        var source = '';\n        for (var i = 0; i < count; ++i) {\n          var len = length ? HEAPU32[(((length)+(i*4))>>2)] : undefined;\n          source += UTF8ToString(HEAPU32[(((string)+(i*4))>>2)], len);\n        }\n        return source;\n      },\n  createContext:(/** @type {HTMLCanvasElement} */ canvas, webGLContextAttributes) => {\n  \n        // BUG: Workaround Safari WebGL issue: After successfully acquiring WebGL\n        // context on a canvas, calling .getContext() will always return that\n        // context independent of which 'webgl' or 'webgl2'\n        // context version was passed. See:\n        //   https://bugs.webkit.org/show_bug.cgi?id=222758\n        // and:\n        //   https://github.com/emscripten-core/emscripten/issues/13295.\n        // TODO: Once the bug is fixed and shipped in Safari, adjust the Safari\n        // version field in above check.\n        if (!canvas.getContextSafariWebGL2Fixed) {\n          canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n          /** @type {function(this:HTMLCanvasElement, string, (Object|null)=): (Object|null)} */\n          function fixedGetContext(ver, attrs) {\n            var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n            return ((ver == 'webgl') == (gl instanceof WebGLRenderingContext)) ? gl : null;\n          }\n          canvas.getContext = fixedGetContext;\n        }\n  \n        var ctx =\n          (webGLContextAttributes.majorVersion > 1)\n          ?\n            canvas.getContext(\"webgl2\", webGLContextAttributes)\n          :\n          (canvas.getContext(\"webgl\", webGLContextAttributes)\n            // https://caniuse.com/#feat=webgl\n            );\n  \n        if (!ctx) return 0;\n  \n        var handle = GL.registerContext(ctx, webGLContextAttributes);\n  \n        return handle;\n      },\n  registerContext:(ctx, webGLContextAttributes) => {\n        // without pthreads a context is just an integer ID\n        var handle = GL.getNewId(GL.contexts);\n  \n        var context = {\n          handle,\n          attributes: webGLContextAttributes,\n          version: webGLContextAttributes.majorVersion,\n          GLctx: ctx\n        };\n  \n        // Store the created context object so that we can access the context\n        // given a canvas without having to pass the parameters again.\n        if (ctx.canvas) ctx.canvas.GLctxObject = context;\n        GL.contexts[handle] = context;\n  \n        return handle;\n      },\n  makeContextCurrent:(contextHandle) => {\n  \n        // Active Emscripten GL layer context object.\n        GL.currentContext = GL.contexts[contextHandle];\n        // Active WebGL context object.\n        Module.ctx = GLctx = GL.currentContext?.GLctx;\n        return !(contextHandle && !GLctx);\n      },\n  getContext:(contextHandle) => {\n        return GL.contexts[contextHandle];\n      },\n  deleteContext:(contextHandle) => {\n        if (GL.currentContext === GL.contexts[contextHandle]) {\n          GL.currentContext = null;\n        }\n        if (typeof JSEvents == 'object') {\n          // Release all JS event handlers on the DOM element that the GL context is\n          // associated with since the context is now deleted.\n          JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n        }\n        // Make sure the canvas object no longer refers to the context object so\n        // there are no GC surprises.\n        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) {\n          GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined;\n        }\n        GL.contexts[contextHandle] = null;\n      },\n  };\n  \n  var _eglCreateContext = (display, config, hmm, contextAttribs) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n  \n      // EGL 1.4 spec says default EGL_CONTEXT_CLIENT_VERSION is GLES1, but this is not supported by Emscripten.\n      // So user must pass EGL_CONTEXT_CLIENT_VERSION == 2 to initialize EGL.\n      var glesContextVersion = 1;\n      for (;;) {\n        var param = HEAP32[((contextAttribs)>>2)];\n        if (param == 0x3098 /*EGL_CONTEXT_CLIENT_VERSION*/) {\n          glesContextVersion = HEAP32[(((contextAttribs)+(4))>>2)];\n        } else if (param == 0x3038 /*EGL_NONE*/) {\n          break;\n        } else {\n          /* EGL1.4 specifies only EGL_CONTEXT_CLIENT_VERSION as supported attribute */\n          EGL.setErrorCode(0x3004 /*EGL_BAD_ATTRIBUTE*/);\n          return 0;\n        }\n        contextAttribs += 8;\n      }\n      if (glesContextVersion < 2 || glesContextVersion > 3) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0; /* EGL_NO_CONTEXT */\n      }\n  \n      EGL.contextAttributes.majorVersion = glesContextVersion - 1; // WebGL 1 is GLES 2, WebGL2 is GLES3\n      EGL.contextAttributes.minorVersion = 0;\n  \n      EGL.context = GL.createContext(Module['canvas'], EGL.contextAttributes);\n  \n      if (EGL.context != 0) {\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n  \n        // Run callbacks so that GL emulation works\n        GL.makeContextCurrent(EGL.context);\n        Module.useWebGL = true;\n        Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });\n  \n        // Note: This function only creates a context, but it shall not make it active.\n        GL.makeContextCurrent(null);\n        return 62004;\n      } else {\n        EGL.setErrorCode(0x3009 /* EGL_BAD_MATCH */); // By the EGL 1.4 spec, an implementation that does not support GLES2 (WebGL in this case), this error code is set.\n        return 0; /* EGL_NO_CONTEXT */\n      }\n    };\n\n  var _eglCreateWindowSurface = (display, config, win, attrib_list) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      // TODO: Examine attrib_list! Parameters that can be present there are:\n      // - EGL_RENDER_BUFFER (must be EGL_BACK_BUFFER)\n      // - EGL_VG_COLORSPACE (can't be set)\n      // - EGL_VG_ALPHA_FORMAT (can't be set)\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 62006; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  \n  var _eglDestroyContext = (display, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n  \n      GL.deleteContext(EGL.context);\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      if (EGL.currentContext == context) {\n        EGL.currentContext = 0;\n      }\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglDestroySurface = (display, surface) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (surface != 62006 /* Magic ID for the only EGLSurface supported by Emscripten */) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 1;\n      }\n      if (EGL.currentReadSurface == surface) {\n        EGL.currentReadSurface = 0;\n      }\n      if (EGL.currentDrawSurface == surface) {\n        EGL.currentDrawSurface = 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1; /* Magic ID for Emscripten 'default surface' */\n    };\n\n  var _eglGetConfigAttrib = (display, config, attribute, value) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (config != 62002) {\n        EGL.setErrorCode(0x3005 /* EGL_BAD_CONFIG */);\n        return 0;\n      }\n      if (!value) {\n        EGL.setErrorCode(0x300C /* EGL_BAD_PARAMETER */);\n        return 0;\n      }\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      switch (attribute) {\n      case 0x3020: // EGL_BUFFER_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 32 : 24;\n        return 1;\n      case 0x3021: // EGL_ALPHA_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.alpha ? 8 : 0;\n        return 1;\n      case 0x3022: // EGL_BLUE_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3023: // EGL_GREEN_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3024: // EGL_RED_SIZE\n        HEAP32[((value)>>2)] = 8;\n        return 1;\n      case 0x3025: // EGL_DEPTH_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.depth ? 24 : 0;\n        return 1;\n      case 0x3026: // EGL_STENCIL_SIZE\n        HEAP32[((value)>>2)] = EGL.contextAttributes.stencil ? 8 : 0;\n        return 1;\n      case 0x3027: // EGL_CONFIG_CAVEAT\n        // We can return here one of EGL_NONE (0x3038), EGL_SLOW_CONFIG (0x3050) or EGL_NON_CONFORMANT_CONFIG (0x3051).\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3028: // EGL_CONFIG_ID\n        HEAP32[((value)>>2)] = 62002;\n        return 1;\n      case 0x3029: // EGL_LEVEL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302A: // EGL_MAX_PBUFFER_HEIGHT\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302B: // EGL_MAX_PBUFFER_PIXELS\n        HEAP32[((value)>>2)] = 16777216;\n        return 1;\n      case 0x302C: // EGL_MAX_PBUFFER_WIDTH\n        HEAP32[((value)>>2)] = 4096;\n        return 1;\n      case 0x302D: // EGL_NATIVE_RENDERABLE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302E: // EGL_NATIVE_VISUAL_ID\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x302F: // EGL_NATIVE_VISUAL_TYPE\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3031: // EGL_SAMPLES\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 4 : 0;\n        return 1;\n      case 0x3032: // EGL_SAMPLE_BUFFERS\n        HEAP32[((value)>>2)] = EGL.contextAttributes.antialias ? 1 : 0;\n        return 1;\n      case 0x3033: // EGL_SURFACE_TYPE\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3034: // EGL_TRANSPARENT_TYPE\n        // If this returns EGL_TRANSPARENT_RGB (0x3052), transparency is used through color-keying. No such thing applies to Emscripten canvas.\n        HEAP32[((value)>>2)] = 0x3038;\n        return 1;\n      case 0x3035: // EGL_TRANSPARENT_BLUE_VALUE\n      case 0x3036: // EGL_TRANSPARENT_GREEN_VALUE\n      case 0x3037: // EGL_TRANSPARENT_RED_VALUE\n        // \"If EGL_TRANSPARENT_TYPE is EGL_NONE, then the values for EGL_TRANSPARENT_RED_VALUE, EGL_TRANSPARENT_GREEN_VALUE, and EGL_TRANSPARENT_BLUE_VALUE are undefined.\"\n        HEAP32[((value)>>2)] = -1;\n        return 1;\n      case 0x3039: // EGL_BIND_TO_TEXTURE_RGB\n      case 0x303A: // EGL_BIND_TO_TEXTURE_RGBA\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303B: // EGL_MIN_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303C: // EGL_MAX_SWAP_INTERVAL\n        HEAP32[((value)>>2)] = 1;\n        return 1;\n      case 0x303D: // EGL_LUMINANCE_SIZE\n      case 0x303E: // EGL_ALPHA_MASK_SIZE\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      case 0x303F: // EGL_COLOR_BUFFER_TYPE\n        // EGL has two types of buffers: EGL_RGB_BUFFER and EGL_LUMINANCE_BUFFER.\n        HEAP32[((value)>>2)] = 0x308E;\n        return 1;\n      case 0x3040: // EGL_RENDERABLE_TYPE\n        // A bit combination of EGL_OPENGL_ES_BIT,EGL_OPENVG_BIT,EGL_OPENGL_ES2_BIT and EGL_OPENGL_BIT.\n        HEAP32[((value)>>2)] = 0x4;\n        return 1;\n      case 0x3042: // EGL_CONFORMANT\n        // \"EGL_CONFORMANT is a mask indicating if a client API context created with respect to the corresponding EGLConfig will pass the required conformance tests for that API.\"\n        HEAP32[((value)>>2)] = 0;\n        return 1;\n      default:\n        EGL.setErrorCode(0x3004 /* EGL_BAD_ATTRIBUTE */);\n        return 0;\n      }\n    };\n\n  var _eglGetDisplay = (nativeDisplayType) => {\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      // Emscripten EGL implementation \"emulates\" X11, and eglGetDisplay is\n      // expected to accept/receive a pointer to an X11 Display object (or\n      // EGL_DEFAULT_DISPLAY).\n      if (nativeDisplayType != 0 /* EGL_DEFAULT_DISPLAY */ && nativeDisplayType != 1 /* see library_xlib.js */) {\n        return 0; // EGL_NO_DISPLAY\n      }\n      return 62000;\n    };\n\n  var _eglGetError = () => EGL.errorCode;\n\n  var _eglInitialize = (display, majorVersion, minorVersion) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      if (majorVersion) {\n        HEAP32[((majorVersion)>>2)] = 1; // Advertise EGL Major version: '1'\n      }\n      if (minorVersion) {\n        HEAP32[((minorVersion)>>2)] = 4; // Advertise EGL Minor version: '4'\n      }\n      EGL.defaultDisplayInitialized = true;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  \n  var _eglMakeCurrent = (display, draw, read, context) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0 /* EGL_FALSE */;\n      }\n      //\\todo An EGL_NOT_INITIALIZED error is generated if EGL is not initialized for dpy.\n      if (context != 0 && context != 62004) {\n        EGL.setErrorCode(0x3006 /* EGL_BAD_CONTEXT */);\n        return 0;\n      }\n      if ((read != 0 && read != 62006) || (draw != 0 && draw != 62006 /* Magic ID for Emscripten 'default surface' */)) {\n        EGL.setErrorCode(0x300D /* EGL_BAD_SURFACE */);\n        return 0;\n      }\n  \n      GL.makeContextCurrent(context ? EGL.context : null);\n  \n      EGL.currentContext = context;\n      EGL.currentDrawSurface = draw;\n      EGL.currentReadSurface = read;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1 /* EGL_TRUE */;\n    };\n\n  var _eglSwapBuffers = (dpy, surface) => {\n  \n      if (!EGL.defaultDisplayInitialized) {\n        EGL.setErrorCode(0x3001 /* EGL_NOT_INITIALIZED */);\n      } else if (!Module.ctx) {\n        EGL.setErrorCode(0x3002 /* EGL_BAD_ACCESS */);\n      } else if (Module.ctx.isContextLost()) {\n        EGL.setErrorCode(0x300E /* EGL_CONTEXT_LOST */);\n      } else {\n        // According to documentation this does an implicit flush.\n        // Due to discussion at https://github.com/emscripten-core/emscripten/pull/1871\n        // the flush was removed since this _may_ result in slowing code down.\n        //_glFlush();\n        EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n        return 1 /* EGL_TRUE */;\n      }\n      return 0 /* EGL_FALSE */;\n    };\n\n  var _eglTerminate = (display) => {\n      if (display != 62000) {\n        EGL.setErrorCode(0x3008 /* EGL_BAD_DISPLAY */);\n        return 0;\n      }\n      EGL.currentContext = 0;\n      EGL.currentReadSurface = 0;\n      EGL.currentDrawSurface = 0;\n      EGL.defaultDisplayInitialized = false;\n      EGL.setErrorCode(0x3000 /* EGL_SUCCESS */);\n      return 1;\n    };\n\n  var readEmAsmArgsArray = [];\n  var readEmAsmArgs = (sigPtr, buf) => {\n      // Nobody should have mutated _readEmAsmArgsArray underneath us to be something else than an array.\n      assert(Array.isArray(readEmAsmArgsArray));\n      // The input buffer is allocated on the stack, so it must be stack-aligned.\n      assert(buf % 16 == 0);\n      readEmAsmArgsArray.length = 0;\n      var ch;\n      // Most arguments are i32s, so shift the buffer pointer so it is a plain\n      // index into HEAP32.\n      while (ch = HEAPU8[sigPtr++]) {\n        var chr = String.fromCharCode(ch);\n        var validChars = ['d', 'f', 'i', 'p'];\n        // In WASM_BIGINT mode we support passing i64 values as bigint.\n        validChars.push('j');\n        assert(validChars.includes(chr), `Invalid character ${ch}(\"${chr}\") in readEmAsmArgs! Use only [${validChars}], and do not specify \"v\" for void return argument.`);\n        // Floats are always passed as doubles, so all types except for 'i'\n        // are 8 bytes and require alignment.\n        var wide = (ch != 105);\n        wide &= (ch != 112);\n        buf += wide && (buf % 8) ? 4 : 0;\n        readEmAsmArgsArray.push(\n          // Special case for pointers under wasm64 or CAN_ADDRESS_2GB mode.\n          ch == 112 ? HEAPU32[((buf)>>2)] :\n          ch == 106 ? HEAP64[((buf)>>3)] :\n          ch == 105 ?\n            HEAP32[((buf)>>2)] :\n            HEAPF64[((buf)>>3)]\n        );\n        buf += wide ? 8 : 4;\n      }\n      return readEmAsmArgsArray;\n    };\n  var runEmAsmFunction = (code, sigPtr, argbuf) => {\n      var args = readEmAsmArgs(sigPtr, argbuf);\n      assert(ASM_CONSTS.hasOwnProperty(code), `No EM_ASM constant found at address ${code}.  The loaded WebAssembly file is likely out of sync with the generated JavaScript.`);\n      return ASM_CONSTS[code].apply(null, args);\n    };\n  var _emscripten_asm_const_int = (code, sigPtr, argbuf) => {\n      return runEmAsmFunction(code, sigPtr, argbuf);\n    };\n\n  var _emscripten_console_error = (str) => {\n      assert(typeof str == 'number');\n      console.error(UTF8ToString(str));\n    };\n\n  var _emscripten_console_log = (str) => {\n      assert(typeof str == 'number');\n      console.log(UTF8ToString(str));\n    };\n\n  var _emscripten_console_warn = (str) => {\n      assert(typeof str == 'number');\n      console.warn(UTF8ToString(str));\n    };\n\n  var _emscripten_date_now = () => Date.now();\n\n  function _emscripten_debugger() { debugger }\n\n  var _emscripten_err = (str) => err(UTF8ToString(str));\n\n  var getHeapMax = () =>\n      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate\n      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side\n      // for any code that deals with heap sizes, which would require special\n      // casing all heap size related code to treat 0 specially.\n      2147483648;\n  var _emscripten_get_heap_max = () => getHeapMax();\n\n\n  /** @suppress {duplicate } */\n  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }\n  var _emscripten_glActiveTexture = _glActiveTexture;\n\n  /** @suppress {duplicate } */\n  var _glAttachShader = (program, shader) => {\n      GLctx.attachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glAttachShader = _glAttachShader;\n\n  /** @suppress {duplicate } */\n  var _glBeginQuery = (target, id) => {\n      GLctx.beginQuery(target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQuery = _glBeginQuery;\n\n  /** @suppress {duplicate } */\n  var _glBeginQueryEXT = (target, id) => {\n      GLctx.disjointTimerQueryExt['beginQueryEXT'](target, GL.queries[id]);\n    };\n  var _emscripten_glBeginQueryEXT = _glBeginQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glBeginTransformFeedback(x0) { GLctx.beginTransformFeedback(x0) }\n  var _emscripten_glBeginTransformFeedback = _glBeginTransformFeedback;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindAttribLocation = (program, index, name) => {\n      GLctx.bindAttribLocation(GL.programs[program], index, UTF8ToString(name));\n    };\n  var _emscripten_glBindAttribLocation = _glBindAttribLocation;\n\n  /** @suppress {duplicate } */\n  var _glBindBuffer = (target, buffer) => {\n  \n      if (target == 0x88EB /*GL_PIXEL_PACK_BUFFER*/) {\n        // In WebGL 2 glReadPixels entry point, we need to use a different WebGL 2\n        // API function call when a buffer is bound to\n        // GL_PIXEL_PACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelPackBufferBinding = buffer;\n      } else if (target == 0x88EC /*GL_PIXEL_UNPACK_BUFFER*/) {\n        // In WebGL 2 gl(Compressed)Tex(Sub)Image[23]D entry points, we need to\n        // use a different WebGL 2 API function call when a buffer is bound to\n        // GL_PIXEL_UNPACK_BUFFER_BINDING point, so must keep track whether that\n        // binding point is non-null to know what is the proper API function to\n        // call.\n        GLctx.currentPixelUnpackBufferBinding = buffer;\n      }\n      GLctx.bindBuffer(target, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBuffer = _glBindBuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferBase = (target, index, buffer) => {\n      GLctx.bindBufferBase(target, index, GL.buffers[buffer]);\n    };\n  var _emscripten_glBindBufferBase = _glBindBufferBase;\n\n  /** @suppress {duplicate } */\n  var _glBindBufferRange = (target, index, buffer, offset, ptrsize) => {\n      GLctx.bindBufferRange(target, index, GL.buffers[buffer], offset, ptrsize);\n    };\n  var _emscripten_glBindBufferRange = _glBindBufferRange;\n\n  /** @suppress {duplicate } */\n  var _glBindFramebuffer = (target, framebuffer) => {\n  \n      GLctx.bindFramebuffer(target, GL.framebuffers[framebuffer]);\n  \n    };\n  var _emscripten_glBindFramebuffer = _glBindFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindRenderbuffer = (target, renderbuffer) => {\n      GLctx.bindRenderbuffer(target, GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glBindRenderbuffer = _glBindRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glBindSampler = (unit, sampler) => {\n      GLctx.bindSampler(unit, GL.samplers[sampler]);\n    };\n  var _emscripten_glBindSampler = _glBindSampler;\n\n  /** @suppress {duplicate } */\n  var _glBindTexture = (target, texture) => {\n      GLctx.bindTexture(target, GL.textures[texture]);\n    };\n  var _emscripten_glBindTexture = _glBindTexture;\n\n  /** @suppress {duplicate } */\n  var _glBindTransformFeedback = (target, id) => {\n      GLctx.bindTransformFeedback(target, GL.transformFeedbacks[id]);\n    };\n  var _emscripten_glBindTransformFeedback = _glBindTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glBindVertexArray = (vao) => {\n      GLctx.bindVertexArray(GL.vaos[vao]);\n    };\n  var _emscripten_glBindVertexArray = _glBindVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glBindVertexArrayOES = _glBindVertexArray;\n  var _emscripten_glBindVertexArrayOES = _glBindVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }\n  var _emscripten_glBlendColor = _glBlendColor;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquation(x0) { GLctx.blendEquation(x0) }\n  var _emscripten_glBlendEquation = _glBlendEquation;\n\n  /** @suppress {duplicate } */\n  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }\n  var _emscripten_glBlendEquationSeparate = _glBlendEquationSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlendFunc(x0, x1) { GLctx.blendFunc(x0, x1) }\n  var _emscripten_glBlendFunc = _glBlendFunc;\n\n  /** @suppress {duplicate } */\n  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glBlendFuncSeparate = _glBlendFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glBlitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) { GLctx.blitFramebuffer(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9) }\n  var _emscripten_glBlitFramebuffer = _glBlitFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glBufferData = (target, size, data, usage) => {\n  \n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.  If size is zero, WebGL would interpret\n        // uploading the whole input arraybuffer (starting from given offset),\n        // which would not make sense in WebAssembly, so avoid uploading if size\n        // is zero. However we must still call bufferData to establish a backing\n        // storage of zero bytes.\n        if (data && size) {\n          GLctx.bufferData(target, HEAPU8, usage, data, size);\n        } else {\n          GLctx.bufferData(target, size, usage);\n        }\n      } else {\n        // N.b. here first form specifies a heap subarray, second form an integer\n        // size, so the ?: code here is polymorphic. It is advised to avoid\n        // randomly mixing both uses in calling code, to avoid any potential JS\n        // engine JIT issues.\n        GLctx.bufferData(target, data ? HEAPU8.subarray(data, data+size) : size, usage);\n      }\n    };\n  var _emscripten_glBufferData = _glBufferData;\n\n  /** @suppress {duplicate } */\n  var _glBufferSubData = (target, offset, size, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        size && GLctx.bufferSubData(target, offset, HEAPU8, data, size);\n        return;\n      }\n      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));\n    };\n  var _emscripten_glBufferSubData = _glBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }\n  var _emscripten_glCheckFramebufferStatus = _glCheckFramebufferStatus;\n\n  /** @suppress {duplicate } */\n  function _glClear(x0) { GLctx.clear(x0) }\n  var _emscripten_glClear = _glClear;\n\n  /** @suppress {duplicate } */\n  function _glClearBufferfi(x0, x1, x2, x3) { GLctx.clearBufferfi(x0, x1, x2, x3) }\n  var _emscripten_glClearBufferfi = _glClearBufferfi;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferfv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferfv(buffer, drawbuffer, HEAPF32, value>>2);\n    };\n  var _emscripten_glClearBufferfv = _glClearBufferfv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferiv(buffer, drawbuffer, HEAP32, value>>2);\n    };\n  var _emscripten_glClearBufferiv = _glClearBufferiv;\n\n  /** @suppress {duplicate } */\n  var _glClearBufferuiv = (buffer, drawbuffer, value) => {\n  \n      GLctx.clearBufferuiv(buffer, drawbuffer, HEAPU32, value>>2);\n    };\n  var _emscripten_glClearBufferuiv = _glClearBufferuiv;\n\n  /** @suppress {duplicate } */\n  function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }\n  var _emscripten_glClearColor = _glClearColor;\n\n  /** @suppress {duplicate } */\n  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }\n  var _emscripten_glClearDepthf = _glClearDepthf;\n\n  /** @suppress {duplicate } */\n  function _glClearStencil(x0) { GLctx.clearStencil(x0) }\n  var _emscripten_glClearStencil = _glClearStencil;\n\n  /** @suppress {duplicate } */\n  var _glClientWaitSync = (sync, flags, timeout) => {\n      // WebGL2 vs GLES3 differences: in GLES3, the timeout parameter is a uint64, where 0xFFFFFFFFFFFFFFFFULL means GL_TIMEOUT_IGNORED.\n      // In JS, there's no 64-bit value types, so instead timeout is taken to be signed, and GL_TIMEOUT_IGNORED is given value -1.\n      // Inherently the value accepted in the timeout is lossy, and can't take in arbitrary u64 bit pattern (but most likely doesn't matter)\n      // See https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15\n      timeout = Number(timeout);\n      return GLctx.clientWaitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glClientWaitSync = _glClientWaitSync;\n\n  /** @suppress {duplicate } */\n  var _glColorMask = (red, green, blue, alpha) => {\n      GLctx.colorMask(!!red, !!green, !!blue, !!alpha);\n    };\n  var _emscripten_glColorMask = _glColorMask;\n\n  /** @suppress {duplicate } */\n  var _glCompileShader = (shader) => {\n      GLctx.compileShader(GL.shaders[shader]);\n    };\n  var _emscripten_glCompileShader = _glCompileShader;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage2D = (target, level, internalFormat, width, height, border, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data);\n        } else {\n          GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexImage2D(target, level, internalFormat, width, height, border, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexImage2D = _glCompressedTexImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexImage3D = (target, level, internalFormat, width, height, depth, border, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, imageSize, data);\n      } else {\n        GLctx.compressedTexImage3D(target, level, internalFormat, width, height, depth, border, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexImage3D = _glCompressedTexImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, imageSize, data) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding || !imageSize) {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);\n        } else {\n          GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, HEAPU8, data, imageSize);\n        }\n        return;\n      }\n      GLctx.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data ? HEAPU8.subarray((data), (data+imageSize)) : null);\n    };\n  var _emscripten_glCompressedTexSubImage2D = _glCompressedTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  var _glCompressedTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);\n      } else {\n        GLctx.compressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, HEAPU8, data, imageSize);\n      }\n    };\n  var _emscripten_glCompressedTexSubImage3D = _glCompressedTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  function _glCopyBufferSubData(x0, x1, x2, x3, x4) { GLctx.copyBufferSubData(x0, x1, x2, x3, x4) }\n  var _emscripten_glCopyBufferSubData = _glCopyBufferSubData;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexImage2D = _glCopyTexImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) { GLctx.copyTexSubImage2D(x0, x1, x2, x3, x4, x5, x6, x7) }\n  var _emscripten_glCopyTexSubImage2D = _glCopyTexSubImage2D;\n\n  /** @suppress {duplicate } */\n  function _glCopyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) { GLctx.copyTexSubImage3D(x0, x1, x2, x3, x4, x5, x6, x7, x8) }\n  var _emscripten_glCopyTexSubImage3D = _glCopyTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glCreateProgram = () => {\n      var id = GL.getNewId(GL.programs);\n      var program = GLctx.createProgram();\n      // Store additional information needed for each shader program:\n      program.name = id;\n      // Lazy cache results of\n      // glGetProgramiv(GL_ACTIVE_UNIFORM_MAX_LENGTH/GL_ACTIVE_ATTRIBUTE_MAX_LENGTH/GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH)\n      program.maxUniformLength = program.maxAttributeLength = program.maxUniformBlockNameLength = 0;\n      program.uniformIdCounter = 1;\n      GL.programs[id] = program;\n      return id;\n    };\n  var _emscripten_glCreateProgram = _glCreateProgram;\n\n  /** @suppress {duplicate } */\n  var _glCreateShader = (shaderType) => {\n      var id = GL.getNewId(GL.shaders);\n      GL.shaders[id] = GLctx.createShader(shaderType);\n  \n      return id;\n    };\n  var _emscripten_glCreateShader = _glCreateShader;\n\n  /** @suppress {duplicate } */\n  function _glCullFace(x0) { GLctx.cullFace(x0) }\n  var _emscripten_glCullFace = _glCullFace;\n\n  /** @suppress {duplicate } */\n  var _glDeleteBuffers = (n, buffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((buffers)+(i*4))>>2)];\n        var buffer = GL.buffers[id];\n  \n        // From spec: \"glDeleteBuffers silently ignores 0's and names that do not\n        // correspond to existing buffer objects.\"\n        if (!buffer) continue;\n  \n        GLctx.deleteBuffer(buffer);\n        buffer.name = 0;\n        GL.buffers[id] = null;\n  \n        if (id == GLctx.currentPixelPackBufferBinding) GLctx.currentPixelPackBufferBinding = 0;\n        if (id == GLctx.currentPixelUnpackBufferBinding) GLctx.currentPixelUnpackBufferBinding = 0;\n      }\n    };\n  var _emscripten_glDeleteBuffers = _glDeleteBuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteFramebuffers = (n, framebuffers) => {\n      for (var i = 0; i < n; ++i) {\n        var id = HEAP32[(((framebuffers)+(i*4))>>2)];\n        var framebuffer = GL.framebuffers[id];\n        if (!framebuffer) continue; // GL spec: \"glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects\".\n        GLctx.deleteFramebuffer(framebuffer);\n        framebuffer.name = 0;\n        GL.framebuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteFramebuffers = _glDeleteFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteProgram = (id) => {\n      if (!id) return;\n      var program = GL.programs[id];\n      if (!program) {\n        // glDeleteProgram actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteProgram(program);\n      program.name = 0;\n      GL.programs[id] = null;\n    };\n  var _emscripten_glDeleteProgram = _glDeleteProgram;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueries = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteQuery(query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueries = _glDeleteQueries;\n\n  /** @suppress {duplicate } */\n  var _glDeleteQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var query = GL.queries[id];\n        if (!query) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.disjointTimerQueryExt['deleteQueryEXT'](query);\n        GL.queries[id] = null;\n      }\n    };\n  var _emscripten_glDeleteQueriesEXT = _glDeleteQueriesEXT;\n\n  /** @suppress {duplicate } */\n  var _glDeleteRenderbuffers = (n, renderbuffers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];\n        var renderbuffer = GL.renderbuffers[id];\n        if (!renderbuffer) continue; // GL spec: \"glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects\".\n        GLctx.deleteRenderbuffer(renderbuffer);\n        renderbuffer.name = 0;\n        GL.renderbuffers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteRenderbuffers = _glDeleteRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSamplers = (n, samplers) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((samplers)+(i*4))>>2)];\n        var sampler = GL.samplers[id];\n        if (!sampler) continue;\n        GLctx.deleteSampler(sampler);\n        sampler.name = 0;\n        GL.samplers[id] = null;\n      }\n    };\n  var _emscripten_glDeleteSamplers = _glDeleteSamplers;\n\n  /** @suppress {duplicate } */\n  var _glDeleteShader = (id) => {\n      if (!id) return;\n      var shader = GL.shaders[id];\n      if (!shader) {\n        // glDeleteShader actually signals an error when deleting a nonexisting\n        // object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteShader(shader);\n      GL.shaders[id] = null;\n    };\n  var _emscripten_glDeleteShader = _glDeleteShader;\n\n  /** @suppress {duplicate } */\n  var _glDeleteSync = (id) => {\n      if (!id) return;\n      var sync = GL.syncs[id];\n      if (!sync) { // glDeleteSync signals an error when deleting a nonexisting object, unlike some other GL delete functions.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      GLctx.deleteSync(sync);\n      sync.name = 0;\n      GL.syncs[id] = null;\n    };\n  var _emscripten_glDeleteSync = _glDeleteSync;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTextures = (n, textures) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((textures)+(i*4))>>2)];\n        var texture = GL.textures[id];\n        // GL spec: \"glDeleteTextures silently ignores 0s and names that do not\n        // correspond to existing textures\".\n        if (!texture) continue;\n        GLctx.deleteTexture(texture);\n        texture.name = 0;\n        GL.textures[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTextures = _glDeleteTextures;\n\n  /** @suppress {duplicate } */\n  var _glDeleteTransformFeedbacks = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((ids)+(i*4))>>2)];\n        var transformFeedback = GL.transformFeedbacks[id];\n        if (!transformFeedback) continue; // GL spec: \"unused names in ids are ignored, as is the name zero.\"\n        GLctx.deleteTransformFeedback(transformFeedback);\n        transformFeedback.name = 0;\n        GL.transformFeedbacks[id] = null;\n      }\n    };\n  var _emscripten_glDeleteTransformFeedbacks = _glDeleteTransformFeedbacks;\n\n  /** @suppress {duplicate } */\n  var _glDeleteVertexArrays = (n, vaos) => {\n      for (var i = 0; i < n; i++) {\n        var id = HEAP32[(((vaos)+(i*4))>>2)];\n        GLctx.deleteVertexArray(GL.vaos[id]);\n        GL.vaos[id] = null;\n      }\n    };\n  var _emscripten_glDeleteVertexArrays = _glDeleteVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glDeleteVertexArraysOES = _glDeleteVertexArrays;\n  var _emscripten_glDeleteVertexArraysOES = _glDeleteVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }\n  var _emscripten_glDepthFunc = _glDepthFunc;\n\n  /** @suppress {duplicate } */\n  var _glDepthMask = (flag) => {\n      GLctx.depthMask(!!flag);\n    };\n  var _emscripten_glDepthMask = _glDepthMask;\n\n  /** @suppress {duplicate } */\n  function _glDepthRangef(x0, x1) { GLctx.depthRange(x0, x1) }\n  var _emscripten_glDepthRangef = _glDepthRangef;\n\n  /** @suppress {duplicate } */\n  var _glDetachShader = (program, shader) => {\n      GLctx.detachShader(GL.programs[program], GL.shaders[shader]);\n    };\n  var _emscripten_glDetachShader = _glDetachShader;\n\n  /** @suppress {duplicate } */\n  function _glDisable(x0) { GLctx.disable(x0) }\n  var _emscripten_glDisable = _glDisable;\n\n  /** @suppress {duplicate } */\n  var _glDisableVertexAttribArray = (index) => {\n      GLctx.disableVertexAttribArray(index);\n    };\n  var _emscripten_glDisableVertexAttribArray = _glDisableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  var _glDrawArrays = (mode, first, count) => {\n  \n      GLctx.drawArrays(mode, first, count);\n  \n    };\n  var _emscripten_glDrawArrays = _glDrawArrays;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstanced = (mode, first, count, primcount) => {\n      GLctx.drawArraysInstanced(mode, first, count, primcount);\n    };\n  var _emscripten_glDrawArraysInstanced = _glDrawArraysInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedANGLE = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedANGLE = _glDrawArraysInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedARB = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedARB = _glDrawArraysInstancedARB;\n\n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedBaseInstanceWEBGL = (mode, first, count, instanceCount, baseInstance) => {\n      GLctx.dibvbi['drawArraysInstancedBaseInstanceWEBGL'](mode, first, count, instanceCount, baseInstance);\n    };\n  var _emscripten_glDrawArraysInstancedBaseInstanceWEBGL = _glDrawArraysInstancedBaseInstanceWEBGL;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedEXT = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedEXT = _glDrawArraysInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawArraysInstancedNV = _glDrawArraysInstanced;\n  var _emscripten_glDrawArraysInstancedNV = _glDrawArraysInstancedNV;\n\n  var tempFixedLengthArray = [];\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffers = (n, bufs) => {\n  \n      var bufArray = tempFixedLengthArray[n];\n      for (var i = 0; i < n; i++) {\n        bufArray[i] = HEAP32[(((bufs)+(i*4))>>2)];\n      }\n  \n      GLctx.drawBuffers(bufArray);\n    };\n  var _emscripten_glDrawBuffers = _glDrawBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersEXT = _glDrawBuffers;\n  var _emscripten_glDrawBuffersEXT = _glDrawBuffersEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawBuffersWEBGL = _glDrawBuffers;\n  var _emscripten_glDrawBuffersWEBGL = _glDrawBuffersWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glDrawElements = (mode, count, type, indices) => {\n  \n      GLctx.drawElements(mode, count, type, indices);\n  \n    };\n  var _emscripten_glDrawElements = _glDrawElements;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstanced = (mode, count, type, indices, primcount) => {\n      GLctx.drawElementsInstanced(mode, count, type, indices, primcount);\n    };\n  var _emscripten_glDrawElementsInstanced = _glDrawElementsInstanced;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedANGLE = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedANGLE = _glDrawElementsInstancedANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedARB = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedARB = _glDrawElementsInstancedARB;\n\n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedBaseVertexBaseInstanceWEBGL = (mode, count, type, offset, instanceCount, baseVertex, baseinstance) => {\n      GLctx.dibvbi['drawElementsInstancedBaseVertexBaseInstanceWEBGL'](mode, count, type, offset, instanceCount, baseVertex, baseinstance);\n    };\n  var _emscripten_glDrawElementsInstancedBaseVertexBaseInstanceWEBGL = _glDrawElementsInstancedBaseVertexBaseInstanceWEBGL;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedEXT = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedEXT = _glDrawElementsInstancedEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glDrawElementsInstancedNV = _glDrawElementsInstanced;\n  var _emscripten_glDrawElementsInstancedNV = _glDrawElementsInstancedNV;\n\n  /** @suppress {duplicate } */\n  var _glDrawRangeElements = (mode, start, end, count, type, indices) => {\n      // TODO: This should be a trivial pass-though function registered at the bottom of this page as\n      // glFuncs[6][1] += ' drawRangeElements';\n      // but due to https://bugzilla.mozilla.org/show_bug.cgi?id=1202427,\n      // we work around by ignoring the range.\n      _glDrawElements(mode, count, type, indices);\n    };\n  var _emscripten_glDrawRangeElements = _glDrawRangeElements;\n\n  /** @suppress {duplicate } */\n  function _glEnable(x0) { GLctx.enable(x0) }\n  var _emscripten_glEnable = _glEnable;\n\n  /** @suppress {duplicate } */\n  var _glEnableVertexAttribArray = (index) => {\n      GLctx.enableVertexAttribArray(index);\n    };\n  var _emscripten_glEnableVertexAttribArray = _glEnableVertexAttribArray;\n\n  /** @suppress {duplicate } */\n  function _glEndQuery(x0) { GLctx.endQuery(x0) }\n  var _emscripten_glEndQuery = _glEndQuery;\n\n  /** @suppress {duplicate } */\n  var _glEndQueryEXT = (target) => {\n      GLctx.disjointTimerQueryExt['endQueryEXT'](target);\n    };\n  var _emscripten_glEndQueryEXT = _glEndQueryEXT;\n\n  /** @suppress {duplicate } */\n  function _glEndTransformFeedback() { GLctx.endTransformFeedback() }\n  var _emscripten_glEndTransformFeedback = _glEndTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glFenceSync = (condition, flags) => {\n      var sync = GLctx.fenceSync(condition, flags);\n      if (sync) {\n        var id = GL.getNewId(GL.syncs);\n        sync.name = id;\n        GL.syncs[id] = sync;\n        return id;\n      }\n      return 0; // Failed to create a sync object\n    };\n  var _emscripten_glFenceSync = _glFenceSync;\n\n  /** @suppress {duplicate } */\n  function _glFinish() { GLctx.finish() }\n  var _emscripten_glFinish = _glFinish;\n\n  /** @suppress {duplicate } */\n  function _glFlush() { GLctx.flush() }\n  var _emscripten_glFlush = _glFlush;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferRenderbuffer = (target, attachment, renderbuffertarget, renderbuffer) => {\n      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,\n                                         GL.renderbuffers[renderbuffer]);\n    };\n  var _emscripten_glFramebufferRenderbuffer = _glFramebufferRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTexture2D = (target, attachment, textarget, texture, level) => {\n      GLctx.framebufferTexture2D(target, attachment, textarget,\n                                      GL.textures[texture], level);\n    };\n  var _emscripten_glFramebufferTexture2D = _glFramebufferTexture2D;\n\n  /** @suppress {duplicate } */\n  var _glFramebufferTextureLayer = (target, attachment, texture, level, layer) => {\n      GLctx.framebufferTextureLayer(target, attachment, GL.textures[texture], level, layer);\n    };\n  var _emscripten_glFramebufferTextureLayer = _glFramebufferTextureLayer;\n\n  /** @suppress {duplicate } */\n  function _glFrontFace(x0) { GLctx.frontFace(x0) }\n  var _emscripten_glFrontFace = _glFrontFace;\n\n  var __glGenObject = (n, buffers, createFunction, objectTable\n      ) => {\n      for (var i = 0; i < n; i++) {\n        var buffer = GLctx[createFunction]();\n        var id = buffer && GL.getNewId(objectTable);\n        if (buffer) {\n          buffer.name = id;\n          objectTable[id] = buffer;\n        } else {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n        }\n        HEAP32[(((buffers)+(i*4))>>2)] = id;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGenBuffers = (n, buffers) => {\n      __glGenObject(n, buffers, 'createBuffer', GL.buffers\n        );\n    };\n  var _emscripten_glGenBuffers = _glGenBuffers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenFramebuffers = (n, ids) => {\n      __glGenObject(n, ids, 'createFramebuffer', GL.framebuffers\n        );\n    };\n  var _emscripten_glGenFramebuffers = _glGenFramebuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenQueries = (n, ids) => {\n      __glGenObject(n, ids, 'createQuery', GL.queries\n        );\n    };\n  var _emscripten_glGenQueries = _glGenQueries;\n\n  /** @suppress {duplicate } */\n  var _glGenQueriesEXT = (n, ids) => {\n      for (var i = 0; i < n; i++) {\n        var query = GLctx.disjointTimerQueryExt['createQueryEXT']();\n        if (!query) {\n          GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n          while (i < n) HEAP32[(((ids)+(i++*4))>>2)] = 0;\n          return;\n        }\n        var id = GL.getNewId(GL.queries);\n        query.name = id;\n        GL.queries[id] = query;\n        HEAP32[(((ids)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGenQueriesEXT = _glGenQueriesEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenRenderbuffers = (n, renderbuffers) => {\n      __glGenObject(n, renderbuffers, 'createRenderbuffer', GL.renderbuffers\n        );\n    };\n  var _emscripten_glGenRenderbuffers = _glGenRenderbuffers;\n\n  /** @suppress {duplicate } */\n  var _glGenSamplers = (n, samplers) => {\n      __glGenObject(n, samplers, 'createSampler', GL.samplers\n        );\n    };\n  var _emscripten_glGenSamplers = _glGenSamplers;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenTextures = (n, textures) => {\n      __glGenObject(n, textures, 'createTexture', GL.textures\n        );\n    };\n  var _emscripten_glGenTextures = _glGenTextures;\n\n  /** @suppress {duplicate } */\n  var _glGenTransformFeedbacks = (n, ids) => {\n      __glGenObject(n, ids, 'createTransformFeedback', GL.transformFeedbacks\n        );\n    };\n  var _emscripten_glGenTransformFeedbacks = _glGenTransformFeedbacks;\n\n  \n  /** @suppress {duplicate } */\n  function _glGenVertexArrays(n, arrays) {\n      __glGenObject(n, arrays, 'createVertexArray', GL.vaos\n        );\n    }\n  var _emscripten_glGenVertexArrays = _glGenVertexArrays;\n\n  \n  /** @suppress {duplicate } */\n  var _glGenVertexArraysOES = _glGenVertexArrays;\n  var _emscripten_glGenVertexArraysOES = _glGenVertexArraysOES;\n\n  /** @suppress {duplicate } */\n  function _glGenerateMipmap(x0) { GLctx.generateMipmap(x0) }\n  var _emscripten_glGenerateMipmap = _glGenerateMipmap;\n\n  \n  var __glGetActiveAttribOrUniform = (funcName, program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx[funcName](program, index);\n      if (info) {\n        // If an error occurs, nothing will be written to length, size and type and name.\n        var numBytesWrittenExclNull = name && stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n        if (size) HEAP32[((size)>>2)] = info.size;\n        if (type) HEAP32[((type)>>2)] = info.type;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveAttrib = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveAttrib', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveAttrib = _glGetActiveAttrib;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetActiveUniform = (program, index, bufSize, length, size, type, name) => {\n      __glGetActiveAttribOrUniform('getActiveUniform', program, index, bufSize, length, size, type, name);\n    };\n  var _emscripten_glGetActiveUniform = _glGetActiveUniform;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockName = (program, uniformBlockIndex, bufSize, length, uniformBlockName) => {\n      program = GL.programs[program];\n  \n      var result = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n      if (!result) return; // If an error occurs, nothing will be written to uniformBlockName or length.\n      if (uniformBlockName && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(result, uniformBlockName, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockName = _glGetActiveUniformBlockName;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformBlockiv = (program, uniformBlockIndex, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n  \n      if (pname == 0x8A41 /* GL_UNIFORM_BLOCK_NAME_LENGTH */) {\n        var name = GLctx.getActiveUniformBlockName(program, uniformBlockIndex);\n        HEAP32[((params)>>2)] = name.length+1;\n        return;\n      }\n  \n      var result = GLctx.getActiveUniformBlockParameter(program, uniformBlockIndex, pname);\n      if (result === null) return; // If an error occurs, nothing should be written to params.\n      if (pname == 0x8A43 /*GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES*/) {\n        for (var i = 0; i < result.length; i++) {\n          HEAP32[(((params)+(i*4))>>2)] = result[i];\n        }\n      } else {\n        HEAP32[((params)>>2)] = result;\n      }\n    };\n  var _emscripten_glGetActiveUniformBlockiv = _glGetActiveUniformBlockiv;\n\n  /** @suppress {duplicate } */\n  var _glGetActiveUniformsiv = (program, uniformCount, uniformIndices, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && uniformIndices == 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var ids = [];\n      for (var i = 0; i < uniformCount; i++) {\n        ids.push(HEAP32[(((uniformIndices)+(i*4))>>2)]);\n      }\n  \n      var result = GLctx.getActiveUniforms(program, ids, pname);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to params.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((params)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetActiveUniformsiv = _glGetActiveUniformsiv;\n\n  /** @suppress {duplicate } */\n  var _glGetAttachedShaders = (program, maxCount, count, shaders) => {\n      var result = GLctx.getAttachedShaders(GL.programs[program]);\n      var len = result.length;\n      if (len > maxCount) {\n        len = maxCount;\n      }\n      HEAP32[((count)>>2)] = len;\n      for (var i = 0; i < len; ++i) {\n        var id = GL.shaders.indexOf(result[i]);\n        HEAP32[(((shaders)+(i*4))>>2)] = id;\n      }\n    };\n  var _emscripten_glGetAttachedShaders = _glGetAttachedShaders;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetAttribLocation = (program, name) => {\n      return GLctx.getAttribLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetAttribLocation = _glGetAttribLocation;\n\n  var readI53FromI64 = (ptr) => {\n      return HEAPU32[((ptr)>>2)] + HEAP32[(((ptr)+(4))>>2)] * 4294967296;\n    };\n  \n  var readI53FromU64 = (ptr) => {\n      return HEAPU32[((ptr)>>2)] + HEAPU32[(((ptr)+(4))>>2)] * 4294967296;\n    };\n  var writeI53ToI64 = (ptr, num) => {\n      HEAPU32[((ptr)>>2)] = num;\n      var lower = HEAPU32[((ptr)>>2)];\n      HEAPU32[(((ptr)+(4))>>2)] = (num - lower)/4294967296;\n      var deserialized = (num >= 0) ? readI53FromU64(ptr) : readI53FromI64(ptr);\n      var offset = ((ptr)>>2);\n      if (deserialized != num) warnOnce(`writeI53ToI64() out of range: serialized JS Number ${num} to Wasm heap as bytes lo=${ptrToString(HEAPU32[offset])}, hi=${ptrToString(HEAPU32[offset+1])}, which deserializes back to ${deserialized} instead!`);\n    };\n  \n  var getEmscriptenSupportedExtensions = function(ctx) {\n      // Restrict the list of advertised extensions to those that we actually\n      // support.\n      var supportedExtensions = [\n        // WebGL 1 extensions\n        'ANGLE_instanced_arrays',\n        'EXT_blend_minmax',\n        'EXT_disjoint_timer_query',\n        'EXT_frag_depth',\n        'EXT_shader_texture_lod',\n        'EXT_sRGB',\n        'OES_element_index_uint',\n        'OES_fbo_render_mipmap',\n        'OES_standard_derivatives',\n        'OES_texture_float',\n        'OES_texture_half_float',\n        'OES_texture_half_float_linear',\n        'OES_vertex_array_object',\n        'WEBGL_color_buffer_float',\n        'WEBGL_depth_texture',\n        'WEBGL_draw_buffers',\n        // WebGL 2 extensions\n        'EXT_color_buffer_float',\n        'EXT_disjoint_timer_query_webgl2',\n        'EXT_texture_norm16',\n        'WEBGL_clip_cull_distance',\n        // WebGL 1 and WebGL 2 extensions\n        'EXT_color_buffer_half_float',\n        'EXT_float_blend',\n        'EXT_texture_compression_bptc',\n        'EXT_texture_compression_rgtc',\n        'EXT_texture_filter_anisotropic',\n        'KHR_parallel_shader_compile',\n        'OES_texture_float_linear',\n        'WEBGL_compressed_texture_s3tc',\n        'WEBGL_compressed_texture_s3tc_srgb',\n        'WEBGL_debug_renderer_info',\n        'WEBGL_debug_shaders',\n        'WEBGL_lose_context',\n        'WEBGL_multi_draw',\n      ];\n      // .getSupportedExtensions() can return null if context is lost, so coerce to empty array.\n      return (ctx.getSupportedExtensions() || []).filter(ext => supportedExtensions.includes(ext));\n    };\n  \n  var webglGetExtensions = function $webglGetExtensions() {\n      var exts = getEmscriptenSupportedExtensions(GLctx);\n      exts = exts.concat(exts.map((e) => \"GL_\" + e));\n      return exts;\n    };\n  \n  var emscriptenWebGLGet = (name_, p, type) => {\n      // Guard against user passing a null pointer.\n      // Note that GLES2 spec does not say anything about how passing a null\n      // pointer should be treated.  Testing on desktop core GL 3, the application\n      // crashes on glGetIntegerv to a null pointer, but better to report an error\n      // instead of doing anything random.\n      if (!p) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = undefined;\n      switch (name_) { // Handle a few trivial GLES values\n        case 0x8DFA: // GL_SHADER_COMPILER\n          ret = 1;\n          break;\n        case 0x8DF8: // GL_SHADER_BINARY_FORMATS\n          if (type != 0 && type != 1) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n          }\n          // Do not write anything to the out pointer, since no binary formats are\n          // supported.\n          return;\n        case 0x87FE: // GL_NUM_PROGRAM_BINARY_FORMATS\n        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS\n          ret = 0;\n          break;\n        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS\n          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete\n          // since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be\n          // queried for length), so implement it ourselves to allow C++ GLES2\n          // code get the length.\n          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);\n          ret = formats ? formats.length : 0;\n          break;\n  \n        case 0x821D: // GL_NUM_EXTENSIONS\n          if (GL.currentContext.version < 2) {\n            // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n            GL.recordError(0x502 /* GL_INVALID_OPERATION */);\n            return;\n          }\n          ret = webglGetExtensions().length;\n          break;\n        case 0x821B: // GL_MAJOR_VERSION\n        case 0x821C: // GL_MINOR_VERSION\n          if (GL.currentContext.version < 2) {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          ret = name_ == 0x821B ? 3 : 0; // return version 3.0\n          break;\n      }\n  \n      if (ret === undefined) {\n        var result = GLctx.getParameter(name_);\n        switch (typeof result) {\n          case \"number\":\n            ret = result;\n            break;\n          case \"boolean\":\n            ret = result ? 1 : 0;\n            break;\n          case \"string\":\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          case \"object\":\n            if (result === null) {\n              // null is a valid result for some (e.g., which buffer is bound -\n              // perhaps nothing is bound), but otherwise can mean an invalid\n              // name_, which we need to report as an error\n              switch (name_) {\n                case 0x8894: // ARRAY_BUFFER_BINDING\n                case 0x8B8D: // CURRENT_PROGRAM\n                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING\n                case 0x8CA6: // FRAMEBUFFER_BINDING or DRAW_FRAMEBUFFER_BINDING\n                case 0x8CA7: // RENDERBUFFER_BINDING\n                case 0x8069: // TEXTURE_BINDING_2D\n                case 0x85B5: // WebGL 2 GL_VERTEX_ARRAY_BINDING, or WebGL 1 extension OES_vertex_array_object GL_VERTEX_ARRAY_BINDING_OES\n                case 0x8F36: // COPY_READ_BUFFER_BINDING or COPY_READ_BUFFER\n                case 0x8F37: // COPY_WRITE_BUFFER_BINDING or COPY_WRITE_BUFFER\n                case 0x88ED: // PIXEL_PACK_BUFFER_BINDING\n                case 0x88EF: // PIXEL_UNPACK_BUFFER_BINDING\n                case 0x8CAA: // READ_FRAMEBUFFER_BINDING\n                case 0x8919: // SAMPLER_BINDING\n                case 0x8C1D: // TEXTURE_BINDING_2D_ARRAY\n                case 0x806A: // TEXTURE_BINDING_3D\n                case 0x8E25: // TRANSFORM_FEEDBACK_BINDING\n                case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n                case 0x8A28: // UNIFORM_BUFFER_BINDING\n                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP\n                  ret = 0;\n                  break;\n                }\n                default: {\n                  GL.recordError(0x500); // GL_INVALID_ENUM\n                  return;\n                }\n              }\n            } else if (result instanceof Float32Array ||\n                       result instanceof Uint32Array ||\n                       result instanceof Int32Array ||\n                       result instanceof Array) {\n              for (var i = 0; i < result.length; ++i) {\n                switch (type) {\n                  case 0: HEAP32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 2: HEAPF32[(((p)+(i*4))>>2)] = result[i]; break;\n                  case 4: HEAP8[(((p)+(i))>>0)] = result[i] ? 1 : 0; break;\n                }\n              }\n              return;\n            } else {\n              try {\n                ret = result.name | 0;\n              } catch(e) {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                err(`GL_INVALID_ENUM in glGet${type}v: Unknown object returned from WebGL getParameter(${name_})! (error: ${e})`);\n                return;\n              }\n            }\n            break;\n          default:\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            err(`GL_INVALID_ENUM in glGet${type}v: Native code calling glGet${type}v(${name_}) and it returns ${result} of type ${typeof(result)}!`);\n            return;\n        }\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(p, ret); break;\n        case 0: HEAP32[((p)>>2)] = ret; break;\n        case 2:   HEAPF32[((p)>>2)] = ret; break;\n        case 4: HEAP8[((p)>>0)] = ret ? 1 : 0; break;\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetBooleanv = (name_, p) => emscriptenWebGLGet(name_, p, 4);\n  var _emscripten_glGetBooleanv = _glGetBooleanv;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteri64v = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      writeI53ToI64(data, GLctx.getBufferParameter(target, value));\n    };\n  var _emscripten_glGetBufferParameteri64v = _glGetBufferParameteri64v;\n\n  /** @suppress {duplicate } */\n  var _glGetBufferParameteriv = (target, value, data) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null\n        // pointer. Since calling this function does not make sense if data ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((data)>>2)] = GLctx.getBufferParameter(target, value);\n    };\n  var _emscripten_glGetBufferParameteriv = _glGetBufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetError = () => {\n      var error = GLctx.getError() || GL.lastError;\n      GL.lastError = 0/*GL_NO_ERROR*/;\n      return error;\n    };\n  var _emscripten_glGetError = _glGetError;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetFloatv = (name_, p) => emscriptenWebGLGet(name_, p, 2);\n  var _emscripten_glGetFloatv = _glGetFloatv;\n\n  /** @suppress {duplicate } */\n  var _glGetFragDataLocation = (program, name) => {\n      return GLctx.getFragDataLocation(GL.programs[program], UTF8ToString(name));\n    };\n  var _emscripten_glGetFragDataLocation = _glGetFragDataLocation;\n\n  /** @suppress {duplicate } */\n  var _glGetFramebufferAttachmentParameteriv = (target, attachment, pname, params) => {\n      var result = GLctx.getFramebufferAttachmentParameter(target, attachment, pname);\n      if (result instanceof WebGLRenderbuffer ||\n          result instanceof WebGLTexture) {\n        result = result.name | 0;\n      }\n      HEAP32[((params)>>2)] = result;\n    };\n  var _emscripten_glGetFramebufferAttachmentParameteriv = _glGetFramebufferAttachmentParameteriv;\n\n  var emscriptenWebGLGetIndexed = (target, index, data, type) => {\n      if (!data) {\n        // GLES2 specification does not specify how to behave if data is a null pointer. Since calling this function does not make sense\n        // if data == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var result = GLctx.getIndexedParameter(target, index);\n      var ret;\n      switch (typeof result) {\n        case 'boolean':\n          ret = result ? 1 : 0;\n          break;\n        case 'number':\n          ret = result;\n          break;\n        case 'object':\n          if (result === null) {\n            switch (target) {\n              case 0x8C8F: // TRANSFORM_FEEDBACK_BUFFER_BINDING\n              case 0x8A28: // UNIFORM_BUFFER_BINDING\n                ret = 0;\n                break;\n              default: {\n                GL.recordError(0x500); // GL_INVALID_ENUM\n                return;\n              }\n            }\n          } else if (result instanceof WebGLBuffer) {\n            ret = result.name | 0;\n          } else {\n            GL.recordError(0x500); // GL_INVALID_ENUM\n            return;\n          }\n          break;\n        default:\n          GL.recordError(0x500); // GL_INVALID_ENUM\n          return;\n      }\n  \n      switch (type) {\n        case 1: writeI53ToI64(data, ret); break;\n        case 0: HEAP32[((data)>>2)] = ret; break;\n        case 2: HEAPF32[((data)>>2)] = ret; break;\n        case 4: HEAP8[((data)>>0)] = ret ? 1 : 0; break;\n        default: throw 'internal emscriptenWebGLGetIndexed() error, bad type: ' + type;\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetInteger64i_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 1);\n  var _emscripten_glGetInteger64i_v = _glGetInteger64i_v;\n\n  /** @suppress {duplicate } */\n  var _glGetInteger64v = (name_, p) => {\n      emscriptenWebGLGet(name_, p, 1);\n    };\n  var _emscripten_glGetInteger64v = _glGetInteger64v;\n\n  /** @suppress {duplicate } */\n  var _glGetIntegeri_v = (target, index, data) =>\n      emscriptenWebGLGetIndexed(target, index, data, 0);\n  var _emscripten_glGetIntegeri_v = _glGetIntegeri_v;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetIntegerv = (name_, p) => emscriptenWebGLGet(name_, p, 0);\n  var _emscripten_glGetIntegerv = _glGetIntegerv;\n\n  /** @suppress {duplicate } */\n  var _glGetInternalformativ = (target, internalformat, pname, bufSize, params) => {\n      if (bufSize < 0) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!params) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getInternalformatParameter(target, internalformat, pname);\n      if (ret === null) return;\n      for (var i = 0; i < ret.length && i < bufSize; ++i) {\n        HEAP32[(((params)+(i*4))>>2)] = ret[i];\n      }\n    };\n  var _emscripten_glGetInternalformativ = _glGetInternalformativ;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramBinary = (program, bufSize, length, binaryFormat, binary) => {\n      GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n    };\n  var _emscripten_glGetProgramBinary = _glGetProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramInfoLog = (program, maxLength, length, infoLog) => {\n      var log = GLctx.getProgramInfoLog(GL.programs[program]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetProgramInfoLog = _glGetProgramInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetProgramiv = (program, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      if (program >= GL.counter) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n  \n      program = GL.programs[program];\n  \n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getProgramInfoLog(program);\n        if (log === null) log = '(unknown error)';\n        HEAP32[((p)>>2)] = log.length + 1;\n      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {\n        if (!program.maxUniformLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n            program.maxUniformLength = Math.max(program.maxUniformLength, GLctx.getActiveUniform(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformLength;\n      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {\n        if (!program.maxAttributeLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8B89/*GL_ACTIVE_ATTRIBUTES*/); ++i) {\n            program.maxAttributeLength = Math.max(program.maxAttributeLength, GLctx.getActiveAttrib(program, i).name.length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxAttributeLength;\n      } else if (pname == 0x8A35 /* GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH */) {\n        if (!program.maxUniformBlockNameLength) {\n          for (var i = 0; i < GLctx.getProgramParameter(program, 0x8A36/*GL_ACTIVE_UNIFORM_BLOCKS*/); ++i) {\n            program.maxUniformBlockNameLength = Math.max(program.maxUniformBlockNameLength, GLctx.getActiveUniformBlockName(program, i).length+1);\n          }\n        }\n        HEAP32[((p)>>2)] = program.maxUniformBlockNameLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getProgramParameter(program, pname);\n      }\n    };\n  var _emscripten_glGetProgramiv = _glGetProgramiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjecti64vEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param;\n      if (GL.currentContext.version < 2)\n      {\n        param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      }\n      else {\n        param = GLctx.getQueryParameter(query, pname);\n      }\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      writeI53ToI64(params, ret);\n    };\n  var _emscripten_glGetQueryObjecti64vEXT = _glGetQueryObjecti64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectivEXT = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.disjointTimerQueryExt['getQueryObjectEXT'](query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectivEXT = _glGetQueryObjectivEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectui64vEXT = _glGetQueryObjecti64vEXT;\n  var _emscripten_glGetQueryObjectui64vEXT = _glGetQueryObjectui64vEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuiv = (id, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var query = GL.queries[id];\n      var param = GLctx.getQueryParameter(query, pname);\n      var ret;\n      if (typeof param == 'boolean') {\n        ret = param ? 1 : 0;\n      } else {\n        ret = param;\n      }\n      HEAP32[((params)>>2)] = ret;\n    };\n  var _emscripten_glGetQueryObjectuiv = _glGetQueryObjectuiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetQueryObjectuivEXT = _glGetQueryObjectivEXT;\n  var _emscripten_glGetQueryObjectuivEXT = _glGetQueryObjectuivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryiv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getQuery(target, pname);\n    };\n  var _emscripten_glGetQueryiv = _glGetQueryiv;\n\n  /** @suppress {duplicate } */\n  var _glGetQueryivEXT = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.disjointTimerQueryExt['getQueryEXT'](target, pname);\n    };\n  var _emscripten_glGetQueryivEXT = _glGetQueryivEXT;\n\n  /** @suppress {duplicate } */\n  var _glGetRenderbufferParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if params == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getRenderbufferParameter(target, pname);\n    };\n  var _emscripten_glGetRenderbufferParameteriv = _glGetRenderbufferParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameterfv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameterfv = _glGetSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetSamplerParameteriv = (sampler, pname, params) => {\n      if (!params) {\n        // GLES3 specification does not specify how to behave if params is a null pointer. Since calling this function does not make sense\n        // if p == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getSamplerParameter(GL.samplers[sampler], pname);\n    };\n  var _emscripten_glGetSamplerParameteriv = _glGetSamplerParameteriv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetShaderInfoLog = (shader, maxLength, length, infoLog) => {\n      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n      if (log === null) log = '(unknown error)';\n      var numBytesWrittenExclNull = (maxLength > 0 && infoLog) ? stringToUTF8(log, infoLog, maxLength) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderInfoLog = _glGetShaderInfoLog;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderPrecisionFormat = (shaderType, precisionType, range, precision) => {\n      var result = GLctx.getShaderPrecisionFormat(shaderType, precisionType);\n      HEAP32[((range)>>2)] = result.rangeMin;\n      HEAP32[(((range)+(4))>>2)] = result.rangeMax;\n      HEAP32[((precision)>>2)] = result.precision;\n    };\n  var _emscripten_glGetShaderPrecisionFormat = _glGetShaderPrecisionFormat;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderSource = (shader, bufSize, length, source) => {\n      var result = GLctx.getShaderSource(GL.shaders[shader]);\n      if (!result) return; // If an error occurs, nothing will be written to length or source.\n      var numBytesWrittenExclNull = (bufSize > 0 && source) ? stringToUTF8(result, source, bufSize) : 0;\n      if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n    };\n  var _emscripten_glGetShaderSource = _glGetShaderSource;\n\n  /** @suppress {duplicate } */\n  var _glGetShaderiv = (shader, pname, p) => {\n      if (!p) {\n        // GLES2 specification does not specify how to behave if p is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH\n        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);\n        if (log === null) log = '(unknown error)';\n        // The GLES2 specification says that if the shader has an empty info log,\n        // a value of 0 is returned. Otherwise the log has a null char appended.\n        // (An empty string is falsey, so we can just check that instead of\n        // looking at log.length.)\n        var logLength = log ? log.length + 1 : 0;\n        HEAP32[((p)>>2)] = logLength;\n      } else if (pname == 0x8B88) { // GL_SHADER_SOURCE_LENGTH\n        var source = GLctx.getShaderSource(GL.shaders[shader]);\n        // source may be a null, or the empty string, both of which are falsey\n        // values that we report a 0 length for.\n        var sourceLength = source ? source.length + 1 : 0;\n        HEAP32[((p)>>2)] = sourceLength;\n      } else {\n        HEAP32[((p)>>2)] = GLctx.getShaderParameter(GL.shaders[shader], pname);\n      }\n    };\n  var _emscripten_glGetShaderiv = _glGetShaderiv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glGetString = (name_) => {\n      var ret = GL.stringCache[name_];\n      if (!ret) {\n        switch (name_) {\n          case 0x1F03 /* GL_EXTENSIONS */:\n            ret = stringToNewUTF8(webglGetExtensions().join(' '));\n            break;\n          case 0x1F00 /* GL_VENDOR */:\n          case 0x1F01 /* GL_RENDERER */:\n          case 0x9245 /* UNMASKED_VENDOR_WEBGL */:\n          case 0x9246 /* UNMASKED_RENDERER_WEBGL */:\n            var s = GLctx.getParameter(name_);\n            if (!s) {\n              GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            }\n            ret = s ? stringToNewUTF8(s) : 0;\n            break;\n  \n          case 0x1F02 /* GL_VERSION */:\n            var glVersion = GLctx.getParameter(0x1F02 /*GL_VERSION*/);\n            // return GLES version string corresponding to the version of the WebGL context\n            if (GL.currentContext.version >= 2) glVersion = `OpenGL ES 3.0 (${glVersion})`;\n            else\n            {\n              glVersion = `OpenGL ES 2.0 (${glVersion})`;\n            }\n            ret = stringToNewUTF8(glVersion);\n            break;\n          case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:\n            var glslVersion = GLctx.getParameter(0x8B8C /*GL_SHADING_LANGUAGE_VERSION*/);\n            // extract the version number 'N.M' from the string 'WebGL GLSL ES N.M ...'\n            var ver_re = /^WebGL GLSL ES ([0-9]\\.[0-9][0-9]?)(?:$| .*)/;\n            var ver_num = glslVersion.match(ver_re);\n            if (ver_num !== null) {\n              if (ver_num[1].length == 3) ver_num[1] = ver_num[1] + '0'; // ensure minor version has 2 digits\n              glslVersion = `OpenGL ES GLSL ES ${ver_num[1]} (${glslVersion})`;\n            }\n            ret = stringToNewUTF8(glslVersion);\n            break;\n          default:\n            GL.recordError(0x500/*GL_INVALID_ENUM*/);\n            // fall through\n        }\n        GL.stringCache[name_] = ret;\n      }\n      return ret;\n    };\n  var _emscripten_glGetString = _glGetString;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetStringi = (name, index) => {\n      if (GL.currentContext.version < 2) {\n        GL.recordError(0x502 /* GL_INVALID_OPERATION */); // Calling GLES3/WebGL2 function with a GLES2/WebGL1 context\n        return 0;\n      }\n      var stringiCache = GL.stringiCache[name];\n      if (stringiCache) {\n        if (index < 0 || index >= stringiCache.length) {\n          GL.recordError(0x501/*GL_INVALID_VALUE*/);\n          return 0;\n        }\n        return stringiCache[index];\n      }\n      switch (name) {\n        case 0x1F03 /* GL_EXTENSIONS */:\n          var exts = webglGetExtensions().map(stringToNewUTF8);\n          stringiCache = GL.stringiCache[name] = exts;\n          if (index < 0 || index >= stringiCache.length) {\n            GL.recordError(0x501/*GL_INVALID_VALUE*/);\n            return 0;\n          }\n          return stringiCache[index];\n        default:\n          GL.recordError(0x500/*GL_INVALID_ENUM*/);\n          return 0;\n      }\n    };\n  var _emscripten_glGetStringi = _glGetStringi;\n\n  /** @suppress {duplicate } */\n  var _glGetSynciv = (sync, pname, bufSize, length, values) => {\n      if (bufSize < 0) {\n        // GLES3 specification does not specify how to behave if bufSize < 0, however in the spec wording for glGetInternalformativ, it does say that GL_INVALID_VALUE should be raised,\n        // so raise GL_INVALID_VALUE here as well.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (!values) {\n        // GLES3 specification does not specify how to behave if values is a null pointer. Since calling this function does not make sense\n        // if values == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var ret = GLctx.getSyncParameter(GL.syncs[sync], pname);\n      if (ret !== null) {\n        HEAP32[((values)>>2)] = ret;\n        if (length) HEAP32[((length)>>2)] = 1; // Report a single value outputted.\n      }\n    };\n  var _emscripten_glGetSynciv = _glGetSynciv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameterfv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAPF32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameterfv = _glGetTexParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glGetTexParameteriv = (target, pname, params) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if p == null,\n        // issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((params)>>2)] = GLctx.getTexParameter(target, pname);\n    };\n  var _emscripten_glGetTexParameteriv = _glGetTexParameteriv;\n\n  /** @suppress {duplicate } */\n  var _glGetTransformFeedbackVarying = (program, index, bufSize, length, size, type, name) => {\n      program = GL.programs[program];\n      var info = GLctx.getTransformFeedbackVarying(program, index);\n      if (!info) return; // If an error occurred, the return parameters length, size, type and name will be unmodified.\n  \n      if (name && bufSize > 0) {\n        var numBytesWrittenExclNull = stringToUTF8(info.name, name, bufSize);\n        if (length) HEAP32[((length)>>2)] = numBytesWrittenExclNull;\n      } else {\n        if (length) HEAP32[((length)>>2)] = 0;\n      }\n  \n      if (size) HEAP32[((size)>>2)] = info.size;\n      if (type) HEAP32[((type)>>2)] = info.type;\n    };\n  var _emscripten_glGetTransformFeedbackVarying = _glGetTransformFeedbackVarying;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformBlockIndex = (program, uniformBlockName) => {\n      return GLctx.getUniformBlockIndex(GL.programs[program], UTF8ToString(uniformBlockName));\n    };\n  var _emscripten_glGetUniformBlockIndex = _glGetUniformBlockIndex;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformIndices = (program, uniformCount, uniformNames, uniformIndices) => {\n      if (!uniformIndices) {\n        // GLES2 specification does not specify how to behave if uniformIndices is a null pointer. Since calling this function does not make sense\n        // if uniformIndices == null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      if (uniformCount > 0 && (uniformNames == 0 || uniformIndices == 0)) {\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      var names = [];\n      for (var i = 0; i < uniformCount; i++)\n        names.push(UTF8ToString(HEAP32[(((uniformNames)+(i*4))>>2)]));\n  \n      var result = GLctx.getUniformIndices(program, names);\n      if (!result) return; // GL spec: If an error is generated, nothing is written out to uniformIndices.\n  \n      var len = result.length;\n      for (var i = 0; i < len; i++) {\n        HEAP32[(((uniformIndices)+(i*4))>>2)] = result[i];\n      }\n    };\n  var _emscripten_glGetUniformIndices = _glGetUniformIndices;\n\n  /** @suppress {checkTypes} */\n  var jstoi_q = (str) => parseInt(str);\n  \n  /** @noinline */\n  var webglGetLeftBracePos = (name) => name.slice(-1) == ']' && name.lastIndexOf('[');\n  \n  var webglPrepareUniformLocationsBeforeFirstUse = (program) => {\n      var uniformLocsById = program.uniformLocsById, // Maps GLuint -> WebGLUniformLocation\n        uniformSizeAndIdsByName = program.uniformSizeAndIdsByName, // Maps name -> [uniform array length, GLuint]\n        i, j;\n  \n      // On the first time invocation of glGetUniformLocation on this shader program:\n      // initialize cache data structures and discover which uniforms are arrays.\n      if (!uniformLocsById) {\n        // maps GLint integer locations to WebGLUniformLocations\n        program.uniformLocsById = uniformLocsById = {};\n        // maps integer locations back to uniform name strings, so that we can lazily fetch uniform array locations\n        program.uniformArrayNamesById = {};\n  \n        for (i = 0; i < GLctx.getProgramParameter(program, 0x8B86/*GL_ACTIVE_UNIFORMS*/); ++i) {\n          var u = GLctx.getActiveUniform(program, i);\n          var nm = u.name;\n          var sz = u.size;\n          var lb = webglGetLeftBracePos(nm);\n          var arrayName = lb > 0 ? nm.slice(0, lb) : nm;\n  \n          // Assign a new location.\n          var id = program.uniformIdCounter;\n          program.uniformIdCounter += sz;\n          // Eagerly get the location of the uniformArray[0] base element.\n          // The remaining indices >0 will be left for lazy evaluation to\n          // improve performance. Those may never be needed to fetch, if the\n          // application fills arrays always in full starting from the first\n          // element of the array.\n          uniformSizeAndIdsByName[arrayName] = [sz, id];\n  \n          // Store placeholder integers in place that highlight that these\n          // >0 index locations are array indices pending population.\n          for (j = 0; j < sz; ++j) {\n            uniformLocsById[id] = j;\n            program.uniformArrayNamesById[id++] = arrayName;\n          }\n        }\n      }\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glGetUniformLocation = (program, name) => {\n  \n      name = UTF8ToString(name);\n  \n      if (program = GL.programs[program]) {\n        webglPrepareUniformLocationsBeforeFirstUse(program);\n        var uniformLocsById = program.uniformLocsById; // Maps GLuint -> WebGLUniformLocation\n        var arrayIndex = 0;\n        var uniformBaseName = name;\n  \n        // Invariant: when populating integer IDs for uniform locations, we must\n        // maintain the precondition that arrays reside in contiguous addresses,\n        // i.e. for a 'vec4 colors[10];', colors[4] must be at location\n        // colors[0]+4.  However, user might call glGetUniformLocation(program,\n        // \"colors\") for an array, so we cannot discover based on the user input\n        // arguments whether the uniform we are dealing with is an array. The only\n        // way to discover which uniforms are arrays is to enumerate over all the\n        // active uniforms in the program.\n        var leftBrace = webglGetLeftBracePos(name);\n  \n        // If user passed an array accessor \"[index]\", parse the array index off the accessor.\n        if (leftBrace > 0) {\n          arrayIndex = jstoi_q(name.slice(leftBrace + 1)) >>> 0; // \"index]\", coerce parseInt(']') with >>>0 to treat \"foo[]\" as \"foo[0]\" and foo[-1] as unsigned out-of-bounds.\n          uniformBaseName = name.slice(0, leftBrace);\n        }\n  \n        // Have we cached the location of this uniform before?\n        // A pair [array length, GLint of the uniform location]\n        var sizeAndId = program.uniformSizeAndIdsByName[uniformBaseName];\n  \n        // If an uniform with this name exists, and if its index is within the\n        // array limits (if it's even an array), query the WebGLlocation, or\n        // return an existing cached location.\n        if (sizeAndId && arrayIndex < sizeAndId[0]) {\n          arrayIndex += sizeAndId[1]; // Add the base location of the uniform to the array index offset.\n          if ((uniformLocsById[arrayIndex] = uniformLocsById[arrayIndex] || GLctx.getUniformLocation(program, name))) {\n            return arrayIndex;\n          }\n        }\n      }\n      else {\n        // N.b. we are currently unable to distinguish between GL program IDs that\n        // never existed vs GL program IDs that have been deleted, so report\n        // GL_INVALID_VALUE in both cases.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n      }\n      return -1;\n    };\n  var _emscripten_glGetUniformLocation = _glGetUniformLocation;\n\n  var webglGetUniformLocation = (location) => {\n      var p = GLctx.currentProgram;\n  \n      if (p) {\n        var webglLoc = p.uniformLocsById[location];\n        // p.uniformLocsById[location] stores either an integer, or a\n        // WebGLUniformLocation.\n        // If an integer, we have not yet bound the location, so do it now. The\n        // integer value specifies the array index we should bind to.\n        if (typeof webglLoc == 'number') {\n          p.uniformLocsById[location] = webglLoc = GLctx.getUniformLocation(p, p.uniformArrayNamesById[location] + (webglLoc > 0 ? `[${webglLoc}]` : ''));\n        }\n        // Else an already cached WebGLUniformLocation, return it.\n        return webglLoc;\n      } else {\n        GL.recordError(0x502/*GL_INVALID_OPERATION*/);\n      }\n    };\n  \n  \n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetUniform = (program, location, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      program = GL.programs[program];\n      webglPrepareUniformLocationsBeforeFirstUse(program);\n      var data = GLctx.getUniform(program, webglGetUniformLocation(location));\n      if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n          }\n        }\n      }\n    };\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformfv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 2);\n    };\n  var _emscripten_glGetUniformfv = _glGetUniformfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetUniformiv = (program, location, params) => {\n      emscriptenWebGLGetUniform(program, location, params, 0);\n    };\n  var _emscripten_glGetUniformiv = _glGetUniformiv;\n\n  /** @suppress {duplicate } */\n  var _glGetUniformuiv = (program, location, params) =>\n      emscriptenWebGLGetUniform(program, location, params, 0);\n  var _emscripten_glGetUniformuiv = _glGetUniformuiv;\n\n  /** @suppress{checkTypes} */\n  var emscriptenWebGLGetVertexAttrib = (index, pname, params, type) => {\n      if (!params) {\n        // GLES2 specification does not specify how to behave if params is a null\n        // pointer. Since calling this function does not make sense if params ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      var data = GLctx.getVertexAttrib(index, pname);\n      if (pname == 0x889F/*VERTEX_ATTRIB_ARRAY_BUFFER_BINDING*/) {\n        HEAP32[((params)>>2)] = data && data[\"name\"];\n      } else if (typeof data == 'number' || typeof data == 'boolean') {\n        switch (type) {\n          case 0: HEAP32[((params)>>2)] = data; break;\n          case 2: HEAPF32[((params)>>2)] = data; break;\n          case 5: HEAP32[((params)>>2)] = Math.fround(data); break;\n        }\n      } else {\n        for (var i = 0; i < data.length; i++) {\n          switch (type) {\n            case 0: HEAP32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 2: HEAPF32[(((params)+(i*4))>>2)] = data[i]; break;\n            case 5: HEAP32[(((params)+(i*4))>>2)] = Math.fround(data[i]); break;\n          }\n        }\n      }\n    };\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was specified using the function glVertexAttribI4iv(),\n      // otherwise the results are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 0);\n    };\n  var _emscripten_glGetVertexAttribIiv = _glGetVertexAttribIiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribIuiv = _glGetVertexAttribIiv;\n  var _emscripten_glGetVertexAttribIuiv = _glGetVertexAttribIuiv;\n\n  /** @suppress {duplicate } */\n  var _glGetVertexAttribPointerv = (index, pname, pointer) => {\n      if (!pointer) {\n        // GLES2 specification does not specify how to behave if pointer is a null\n        // pointer. Since calling this function does not make sense if pointer ==\n        // null, issue a GL error to notify user about it.\n        GL.recordError(0x501 /* GL_INVALID_VALUE */);\n        return;\n      }\n      HEAP32[((pointer)>>2)] = GLctx.getVertexAttribOffset(index, pname);\n    };\n  var _emscripten_glGetVertexAttribPointerv = _glGetVertexAttribPointerv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribfv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 2);\n    };\n  var _emscripten_glGetVertexAttribfv = _glGetVertexAttribfv;\n\n  \n  /** @suppress {duplicate } */\n  var _glGetVertexAttribiv = (index, pname, params) => {\n      // N.B. This function may only be called if the vertex attribute was\n      // specified using the function glVertexAttrib*f(), otherwise the results\n      // are undefined. (GLES3 spec 6.1.12)\n      emscriptenWebGLGetVertexAttrib(index, pname, params, 5);\n    };\n  var _emscripten_glGetVertexAttribiv = _glGetVertexAttribiv;\n\n  /** @suppress {duplicate } */\n  function _glHint(x0, x1) { GLctx.hint(x0, x1) }\n  var _emscripten_glHint = _glHint;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateFramebuffer = (target, numAttachments, attachments) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateFramebuffer(target, list);\n    };\n  var _emscripten_glInvalidateFramebuffer = _glInvalidateFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glInvalidateSubFramebuffer = (target, numAttachments, attachments, x, y, width, height) => {\n      var list = tempFixedLengthArray[numAttachments];\n      for (var i = 0; i < numAttachments; i++) {\n        list[i] = HEAP32[(((attachments)+(i*4))>>2)];\n      }\n  \n      GLctx.invalidateSubFramebuffer(target, list, x, y, width, height);\n    };\n  var _emscripten_glInvalidateSubFramebuffer = _glInvalidateSubFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsBuffer = (buffer) => {\n      var b = GL.buffers[buffer];\n      if (!b) return 0;\n      return GLctx.isBuffer(b);\n    };\n  var _emscripten_glIsBuffer = _glIsBuffer;\n\n  /** @suppress {duplicate } */\n  function _glIsEnabled(x0) { return GLctx.isEnabled(x0) }\n  var _emscripten_glIsEnabled = _glIsEnabled;\n\n  /** @suppress {duplicate } */\n  var _glIsFramebuffer = (framebuffer) => {\n      var fb = GL.framebuffers[framebuffer];\n      if (!fb) return 0;\n      return GLctx.isFramebuffer(fb);\n    };\n  var _emscripten_glIsFramebuffer = _glIsFramebuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsProgram = (program) => {\n      program = GL.programs[program];\n      if (!program) return 0;\n      return GLctx.isProgram(program);\n    };\n  var _emscripten_glIsProgram = _glIsProgram;\n\n  /** @suppress {duplicate } */\n  var _glIsQuery = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.isQuery(query);\n    };\n  var _emscripten_glIsQuery = _glIsQuery;\n\n  /** @suppress {duplicate } */\n  var _glIsQueryEXT = (id) => {\n      var query = GL.queries[id];\n      if (!query) return 0;\n      return GLctx.disjointTimerQueryExt['isQueryEXT'](query);\n    };\n  var _emscripten_glIsQueryEXT = _glIsQueryEXT;\n\n  /** @suppress {duplicate } */\n  var _glIsRenderbuffer = (renderbuffer) => {\n      var rb = GL.renderbuffers[renderbuffer];\n      if (!rb) return 0;\n      return GLctx.isRenderbuffer(rb);\n    };\n  var _emscripten_glIsRenderbuffer = _glIsRenderbuffer;\n\n  /** @suppress {duplicate } */\n  var _glIsSampler = (id) => {\n      var sampler = GL.samplers[id];\n      if (!sampler) return 0;\n      return GLctx.isSampler(sampler);\n    };\n  var _emscripten_glIsSampler = _glIsSampler;\n\n  /** @suppress {duplicate } */\n  var _glIsShader = (shader) => {\n      var s = GL.shaders[shader];\n      if (!s) return 0;\n      return GLctx.isShader(s);\n    };\n  var _emscripten_glIsShader = _glIsShader;\n\n  /** @suppress {duplicate } */\n  var _glIsSync = (sync) => GLctx.isSync(GL.syncs[sync]);\n  var _emscripten_glIsSync = _glIsSync;\n\n  /** @suppress {duplicate } */\n  var _glIsTexture = (id) => {\n      var texture = GL.textures[id];\n      if (!texture) return 0;\n      return GLctx.isTexture(texture);\n    };\n  var _emscripten_glIsTexture = _glIsTexture;\n\n  /** @suppress {duplicate } */\n  var _glIsTransformFeedback = (id) => GLctx.isTransformFeedback(GL.transformFeedbacks[id]);\n  var _emscripten_glIsTransformFeedback = _glIsTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glIsVertexArray = (array) => {\n  \n      var vao = GL.vaos[array];\n      if (!vao) return 0;\n      return GLctx.isVertexArray(vao);\n    };\n  var _emscripten_glIsVertexArray = _glIsVertexArray;\n\n  \n  /** @suppress {duplicate } */\n  var _glIsVertexArrayOES = _glIsVertexArray;\n  var _emscripten_glIsVertexArrayOES = _glIsVertexArrayOES;\n\n  /** @suppress {duplicate } */\n  function _glLineWidth(x0) { GLctx.lineWidth(x0) }\n  var _emscripten_glLineWidth = _glLineWidth;\n\n  /** @suppress {duplicate } */\n  var _glLinkProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.linkProgram(program);\n      // Invalidate earlier computed uniform->ID mappings, those have now become stale\n      program.uniformLocsById = 0; // Mark as null-like so that glGetUniformLocation() knows to populate this again.\n      program.uniformSizeAndIdsByName = {};\n  \n    };\n  var _emscripten_glLinkProgram = _glLinkProgram;\n\n  /** @suppress {duplicate } */\n  var _glMultiDrawArraysInstancedBaseInstanceWEBGL = (mode, firsts, counts, instanceCounts, baseInstances, drawCount) => {\n      GLctx.mdibvbi['multiDrawArraysInstancedBaseInstanceWEBGL'](\n        mode,\n        HEAP32,\n        firsts >> 2,\n        HEAP32,\n        counts >> 2,\n        HEAP32,\n        instanceCounts >> 2,\n        HEAPU32,\n        baseInstances >> 2,\n        drawCount);\n    };\n  var _emscripten_glMultiDrawArraysInstancedBaseInstanceWEBGL = _glMultiDrawArraysInstancedBaseInstanceWEBGL;\n\n  /** @suppress {duplicate } */\n  var _glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL = (mode, counts, type, offsets, instanceCounts, baseVertices, baseInstances, drawCount) => {\n      GLctx.mdibvbi['multiDrawElementsInstancedBaseVertexBaseInstanceWEBGL'](\n        mode,\n        HEAP32,\n        counts >> 2,\n        type,\n        HEAP32,\n        offsets >> 2,\n        HEAP32,\n        instanceCounts >> 2,\n        HEAP32,\n        baseVertices >> 2,\n        HEAPU32,\n        baseInstances >> 2,\n        drawCount);\n    };\n  var _emscripten_glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL = _glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL;\n\n  /** @suppress {duplicate } */\n  function _glPauseTransformFeedback() { GLctx.pauseTransformFeedback() }\n  var _emscripten_glPauseTransformFeedback = _glPauseTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glPixelStorei = (pname, param) => {\n      if (pname == 0xCF5 /* GL_UNPACK_ALIGNMENT */) {\n        GL.unpackAlignment = param;\n      }\n      GLctx.pixelStorei(pname, param);\n    };\n  var _emscripten_glPixelStorei = _glPixelStorei;\n\n  /** @suppress {duplicate } */\n  function _glPolygonOffset(x0, x1) { GLctx.polygonOffset(x0, x1) }\n  var _emscripten_glPolygonOffset = _glPolygonOffset;\n\n  /** @suppress {duplicate } */\n  var _glProgramBinary = (program, binaryFormat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramBinary = _glProgramBinary;\n\n  /** @suppress {duplicate } */\n  var _glProgramParameteri = (program, pname, value) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glProgramParameteri = _glProgramParameteri;\n\n  /** @suppress {duplicate } */\n  var _glQueryCounterEXT = (id, target) => {\n      GLctx.disjointTimerQueryExt['queryCounterEXT'](GL.queries[id], target);\n    };\n  var _emscripten_glQueryCounterEXT = _glQueryCounterEXT;\n\n  /** @suppress {duplicate } */\n  function _glReadBuffer(x0) { GLctx.readBuffer(x0) }\n  var _emscripten_glReadBuffer = _glReadBuffer;\n\n  var computeUnpackAlignedImageSize = (width, height, sizePerPixel, alignment) => {\n      function roundedToNextMultipleOf(x, y) {\n        return (x + y - 1) & -y;\n      }\n      var plainRowSize = width * sizePerPixel;\n      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);\n      return height * alignedRowSize;\n    };\n  \n  var colorChannelsInGlTextureFormat = (format) => {\n      // Micro-optimizations for size: map format to size by subtracting smallest\n      // enum value (0x1902) from all values first.  Also omit the most common\n      // size value (1) from the list, which is assumed by formats not on the\n      // list.\n      var colorChannels = {\n        // 0x1902 /* GL_DEPTH_COMPONENT */ - 0x1902: 1,\n        // 0x1906 /* GL_ALPHA */ - 0x1902: 1,\n        5: 3,\n        6: 4,\n        // 0x1909 /* GL_LUMINANCE */ - 0x1902: 1,\n        8: 2,\n        29502: 3,\n        29504: 4,\n        // 0x1903 /* GL_RED */ - 0x1902: 1,\n        26917: 2,\n        26918: 2,\n        // 0x8D94 /* GL_RED_INTEGER */ - 0x1902: 1,\n        29846: 3,\n        29847: 4\n      };\n      return colorChannels[format - 0x1902]||1;\n    };\n  \n  var heapObjectForWebGLType = (type) => {\n      // Micro-optimization for size: Subtract lowest GL enum number (0x1400/* GL_BYTE */) from type to compare\n      // smaller values for the heap, for shorter generated code size.\n      // Also the type HEAPU16 is not tested for explicitly, but any unrecognized type will return out HEAPU16.\n      // (since most types are HEAPU16)\n      type -= 0x1400;\n      if (type == 0) return HEAP8;\n  \n      if (type == 1) return HEAPU8;\n  \n      if (type == 2) return HEAP16;\n  \n      if (type == 4) return HEAP32;\n  \n      if (type == 6) return HEAPF32;\n  \n      if (type == 5\n        || type == 28922\n        || type == 28520\n        || type == 30779\n        || type == 30782\n        )\n        return HEAPU32;\n  \n      return HEAPU16;\n    };\n  \n  var heapAccessShiftForWebGLHeap = (heap) => 31 - Math.clz32(heap.BYTES_PER_ELEMENT);\n  \n  var emscriptenWebGLGetTexPixelData = (type, format, width, height, pixels, internalFormat) => {\n      var heap = heapObjectForWebGLType(type);\n      var shift = heapAccessShiftForWebGLHeap(heap);\n      var byteSize = 1<<shift;\n      var sizePerPixel = colorChannelsInGlTextureFormat(format) * byteSize;\n      var bytes = computeUnpackAlignedImageSize(width, height, sizePerPixel, GL.unpackAlignment);\n      return heap.subarray(pixels >> shift, pixels + bytes >> shift);\n    };\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glReadPixels = (x, y, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelPackBufferBinding) {\n          GLctx.readPixels(x, y, width, height, format, type, pixels);\n        } else {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.readPixels(x, y, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        }\n        return;\n      }\n      var pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, format);\n      if (!pixelData) {\n        GL.recordError(0x500/*GL_INVALID_ENUM*/);\n        return;\n      }\n      GLctx.readPixels(x, y, width, height, format, type, pixelData);\n    };\n  var _emscripten_glReadPixels = _glReadPixels;\n\n  /** @suppress {duplicate } */\n  var _glReleaseShaderCompiler = () => {\n      // NOP (as allowed by GLES 2.0 spec)\n    };\n  var _emscripten_glReleaseShaderCompiler = _glReleaseShaderCompiler;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }\n  var _emscripten_glRenderbufferStorage = _glRenderbufferStorage;\n\n  /** @suppress {duplicate } */\n  function _glRenderbufferStorageMultisample(x0, x1, x2, x3, x4) { GLctx.renderbufferStorageMultisample(x0, x1, x2, x3, x4) }\n  var _emscripten_glRenderbufferStorageMultisample = _glRenderbufferStorageMultisample;\n\n  /** @suppress {duplicate } */\n  function _glResumeTransformFeedback() { GLctx.resumeTransformFeedback() }\n  var _emscripten_glResumeTransformFeedback = _glResumeTransformFeedback;\n\n  /** @suppress {duplicate } */\n  var _glSampleCoverage = (value, invert) => {\n      GLctx.sampleCoverage(value, !!invert);\n    };\n  var _emscripten_glSampleCoverage = _glSampleCoverage;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterf = (sampler, pname, param) => {\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterf = _glSamplerParameterf;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameterfv = (sampler, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.samplerParameterf(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameterfv = _glSamplerParameterfv;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteri = (sampler, pname, param) => {\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteri = _glSamplerParameteri;\n\n  /** @suppress {duplicate } */\n  var _glSamplerParameteriv = (sampler, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.samplerParameteri(GL.samplers[sampler], pname, param);\n    };\n  var _emscripten_glSamplerParameteriv = _glSamplerParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }\n  var _emscripten_glScissor = _glScissor;\n\n  /** @suppress {duplicate } */\n  var _glShaderBinary = (count, shaders, binaryformat, binary, length) => {\n      GL.recordError(0x500/*GL_INVALID_ENUM*/);\n    };\n  var _emscripten_glShaderBinary = _glShaderBinary;\n\n  /** @suppress {duplicate } */\n  var _glShaderSource = (shader, count, string, length) => {\n      var source = GL.getSource(shader, count, string, length);\n  \n      if (GL.currentContext.version >= 2) {\n        // If a WebGL 1 shader happens to use GL_EXT_shader_texture_lod extension,\n        // it will not compile on WebGL 2, because WebGL 2 no longer supports that\n        // extension for WebGL 1 shaders. Therefore upgrade shaders to WebGL 2\n        // by doing a bunch of dirty hacks. Not guaranteed to work on all shaders.\n        // One might consider doing this for only the shaders that actually use\n        // the GL_EXT_shader_texture_lod extension, but the problem is that\n        // vertex and fragment shader versions need to match, and when compiling\n        // the corresponding vertex shader, we would not know if that needed to\n        // be compiled with or without the patch, so we must patch all shaders.\n        if (source.includes('#version 100')) {\n          source = source.replace(/#extension GL_OES_standard_derivatives : enable/g, \"\");\n          source = source.replace(/#extension GL_EXT_shader_texture_lod : enable/g, '');\n          var prelude = '';\n          if (source.includes('gl_FragColor')) {\n            prelude += 'out mediump vec4 GL_FragColor;\\n';\n            source = source.replace(/gl_FragColor/g, 'GL_FragColor');\n          }\n          if (source.includes('attribute')) {\n            source = source.replace(/attribute/g, 'in');\n            source = source.replace(/varying/g, 'out');\n          } else {\n            source = source.replace(/varying/g, 'in');\n          }\n  \n          source = source.replace(/textureCubeLodEXT/g, 'textureCubeLod');\n          source = source.replace(/texture2DLodEXT/g, 'texture2DLod');\n          source = source.replace(/texture2DProjLodEXT/g, 'texture2DProjLod');\n          source = source.replace(/texture2DGradEXT/g, 'texture2DGrad');\n          source = source.replace(/texture2DProjGradEXT/g, 'texture2DProjGrad');\n          source = source.replace(/textureCubeGradEXT/g, 'textureCubeGrad');\n  \n          source = source.replace(/textureCube/g, 'texture');\n          source = source.replace(/texture1D/g, 'texture');\n          source = source.replace(/texture2D/g, 'texture');\n          source = source.replace(/texture3D/g, 'texture');\n          source = source.replace(/#version 100/g, '#version 300 es\\n' + prelude);\n        }\n      }\n  \n      GLctx.shaderSource(GL.shaders[shader], source);\n    };\n  var _emscripten_glShaderSource = _glShaderSource;\n\n  /** @suppress {duplicate } */\n  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }\n  var _emscripten_glStencilFunc = _glStencilFunc;\n\n  /** @suppress {duplicate } */\n  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilFuncSeparate = _glStencilFuncSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilMask(x0) { GLctx.stencilMask(x0) }\n  var _emscripten_glStencilMask = _glStencilMask;\n\n  /** @suppress {duplicate } */\n  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }\n  var _emscripten_glStencilMaskSeparate = _glStencilMaskSeparate;\n\n  /** @suppress {duplicate } */\n  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }\n  var _emscripten_glStencilOp = _glStencilOp;\n\n  /** @suppress {duplicate } */\n  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }\n  var _emscripten_glStencilOpSeparate = _glStencilOpSeparate;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexImage2D = (target, level, internalFormat, width, height, border, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // WebGL 1 unsized texture internalFormats are no longer supported in\n        // WebGL 2, so patch those format enums to the ones that are present in\n        // WebGL 2.\n        if (format == 0x1902/*GL_DEPTH_COMPONENT*/ && internalFormat == 0x1902/*GL_DEPTH_COMPONENT*/ && type == 0x1405/*GL_UNSIGNED_INT*/) {\n          internalFormat = 0x81A6 /*GL_DEPTH_COMPONENT24*/;\n        }\n        if (type == 0x8d61/*GL_HALF_FLOAT_OES*/) {\n          type = 0x140B /*GL_HALF_FLOAT*/;\n          if (format == 0x1908/*GL_RGBA*/ && internalFormat == 0x1908/*GL_RGBA*/) {\n            internalFormat = 0x881A/*GL_RGBA16F*/;\n          }\n        }\n        if (internalFormat == 0x84f9 /*GL_DEPTH_STENCIL*/) {\n          internalFormat = 0x88F0 /*GL_DEPTH24_STENCIL8*/;\n        }\n      }\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, null);\n        }\n        return;\n      }\n      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixels ? emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) : null);\n    };\n  var _emscripten_glTexImage2D = _glTexImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexImage3D = (target, level, internalFormat, width, height, depth, border, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texImage3D(target, level, internalFormat, width, height, depth, border, format, type, null);\n      }\n    };\n  var _emscripten_glTexImage3D = _glTexImage3D;\n\n  /** @suppress {duplicate } */\n  function _glTexParameterf(x0, x1, x2) { GLctx.texParameterf(x0, x1, x2) }\n  var _emscripten_glTexParameterf = _glTexParameterf;\n\n  /** @suppress {duplicate } */\n  var _glTexParameterfv = (target, pname, params) => {\n      var param = HEAPF32[((params)>>2)];\n      GLctx.texParameterf(target, pname, param);\n    };\n  var _emscripten_glTexParameterfv = _glTexParameterfv;\n\n  /** @suppress {duplicate } */\n  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }\n  var _emscripten_glTexParameteri = _glTexParameteri;\n\n  /** @suppress {duplicate } */\n  var _glTexParameteriv = (target, pname, params) => {\n      var param = HEAP32[((params)>>2)];\n      GLctx.texParameteri(target, pname, param);\n    };\n  var _emscripten_glTexParameteriv = _glTexParameteriv;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage2D(x0, x1, x2, x3, x4) { GLctx.texStorage2D(x0, x1, x2, x3, x4) }\n  var _emscripten_glTexStorage2D = _glTexStorage2D;\n\n  /** @suppress {duplicate } */\n  function _glTexStorage3D(x0, x1, x2, x3, x4, x5) { GLctx.texStorage3D(x0, x1, x2, x3, x4, x5) }\n  var _emscripten_glTexStorage3D = _glTexStorage3D;\n\n  \n  \n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage2D = (target, level, xoffset, yoffset, width, height, format, type, pixels) => {\n      if (GL.currentContext.version >= 2) {\n        // In WebGL 1 to do half float textures, one uses the type enum\n        // GL_HALF_FLOAT_OES, but in WebGL 2 when half float textures were adopted\n        // to the core spec, the enum changed value which breaks backwards\n        // compatibility. Route old enum number to the new one.\n        if (type == 0x8d61/*GL_HALF_FLOAT_OES*/) type = 0x140B /*GL_HALF_FLOAT*/;\n      }\n      if (GL.currentContext.version >= 2) {\n        // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n        // those always when possible.\n        if (GLctx.currentPixelUnpackBufferBinding) {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\n        } else if (pixels) {\n          var heap = heapObjectForWebGLType(type);\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n        } else {\n          GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, null);\n        }\n        return;\n      }\n      var pixelData = null;\n      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);\n      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);\n    };\n  var _emscripten_glTexSubImage2D = _glTexSubImage2D;\n\n  \n  /** @suppress {duplicate } */\n  var _glTexSubImage3D = (target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels) => {\n      if (GLctx.currentPixelUnpackBufferBinding) {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);\n      } else if (pixels) {\n        var heap = heapObjectForWebGLType(type);\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, heap, pixels >> heapAccessShiftForWebGLHeap(heap));\n      } else {\n        GLctx.texSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, null);\n      }\n    };\n  var _emscripten_glTexSubImage3D = _glTexSubImage3D;\n\n  /** @suppress {duplicate } */\n  var _glTransformFeedbackVaryings = (program, count, varyings, bufferMode) => {\n      program = GL.programs[program];\n      var vars = [];\n      for (var i = 0; i < count; i++)\n        vars.push(UTF8ToString(HEAP32[(((varyings)+(i*4))>>2)]));\n  \n      GLctx.transformFeedbackVaryings(program, vars, bufferMode);\n    };\n  var _emscripten_glTransformFeedbackVaryings = _glTransformFeedbackVaryings;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1f = (location, v0) => {\n      GLctx.uniform1f(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1f = _glUniform1f;\n\n  \n  var miniTempWebGLFloatBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1fv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1fv(webglGetUniformLocation(location), HEAPF32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1fv = _glUniform1fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform1i = (location, v0) => {\n      GLctx.uniform1i(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1i = _glUniform1i;\n\n  \n  var miniTempWebGLIntBuffers = [];\n  \n  /** @suppress {duplicate } */\n  var _glUniform1iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform1iv(webglGetUniformLocation(location), HEAP32, value>>2, count);\n        return;\n      }\n  \n      if (count <= 288) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[count-1];\n        for (var i = 0; i < count; ++i) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*4)>>2);\n      }\n      GLctx.uniform1iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform1iv = _glUniform1iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform1ui = (location, v0) => {\n      GLctx.uniform1ui(webglGetUniformLocation(location), v0);\n    };\n  var _emscripten_glUniform1ui = _glUniform1ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform1uiv = (location, count, value) => {\n      count && GLctx.uniform1uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count);\n    };\n  var _emscripten_glUniform1uiv = _glUniform1uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2f = (location, v0, v1) => {\n      GLctx.uniform2f(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2f = _glUniform2f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform2fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2fv = _glUniform2fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform2i = (location, v0, v1) => {\n      GLctx.uniform2i(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2i = _glUniform2i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform2iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform2iv(webglGetUniformLocation(location), HEAP32, value>>2, count*2);\n        return;\n      }\n  \n      if (count <= 144) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[2*count-1];\n        for (var i = 0; i < 2*count; i += 2) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*8)>>2);\n      }\n      GLctx.uniform2iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform2iv = _glUniform2iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform2ui = (location, v0, v1) => {\n      GLctx.uniform2ui(webglGetUniformLocation(location), v0, v1);\n    };\n  var _emscripten_glUniform2ui = _glUniform2ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform2uiv = (location, count, value) => {\n      count && GLctx.uniform2uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*2);\n    };\n  var _emscripten_glUniform2uiv = _glUniform2uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3f = (location, v0, v1, v2) => {\n      GLctx.uniform3f(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3f = _glUniform3f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform3fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3fv = _glUniform3fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform3i = (location, v0, v1, v2) => {\n      GLctx.uniform3i(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3i = _glUniform3i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform3iv = (location, count, value) => {\n  \n      if (GL.currentContext.version >= 2) { // WebGL 2 provides new garbage-free entry points to call to WebGL. Use those always when possible.\n        count && GLctx.uniform3iv(webglGetUniformLocation(location), HEAP32, value>>2, count*3);\n        return;\n      }\n  \n      if (count <= 96) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[3*count-1];\n        for (var i = 0; i < 3*count; i += 3) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*12)>>2);\n      }\n      GLctx.uniform3iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform3iv = _glUniform3iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform3ui = (location, v0, v1, v2) => {\n      GLctx.uniform3ui(webglGetUniformLocation(location), v0, v1, v2);\n    };\n  var _emscripten_glUniform3ui = _glUniform3ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform3uiv = (location, count, value) => {\n      count && GLctx.uniform3uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*3);\n    };\n  var _emscripten_glUniform3uiv = _glUniform3uiv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4f = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4f(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4f = _glUniform4f;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4fv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4fv(webglGetUniformLocation(location), HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 4 * count; i += 4) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4fv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4fv = _glUniform4fv;\n\n  \n  /** @suppress {duplicate } */\n  var _glUniform4i = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4i(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4i = _glUniform4i;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniform4iv = (location, count, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniform4iv(webglGetUniformLocation(location), HEAP32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLIntBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAP32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAP32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAP32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAP32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAP32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniform4iv(webglGetUniformLocation(location), view);\n    };\n  var _emscripten_glUniform4iv = _glUniform4iv;\n\n  /** @suppress {duplicate } */\n  var _glUniform4ui = (location, v0, v1, v2, v3) => {\n      GLctx.uniform4ui(webglGetUniformLocation(location), v0, v1, v2, v3);\n    };\n  var _emscripten_glUniform4ui = _glUniform4ui;\n\n  /** @suppress {duplicate } */\n  var _glUniform4uiv = (location, count, value) => {\n      count && GLctx.uniform4uiv(webglGetUniformLocation(location), HEAPU32, value>>2, count*4);\n    };\n  var _emscripten_glUniform4uiv = _glUniform4uiv;\n\n  /** @suppress {duplicate } */\n  var _glUniformBlockBinding = (program, uniformBlockIndex, uniformBlockBinding) => {\n      program = GL.programs[program];\n  \n      GLctx.uniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);\n    };\n  var _emscripten_glUniformBlockBinding = _glUniformBlockBinding;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix2fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*4);\n        return;\n      }\n  \n      if (count <= 72) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[4*count-1];\n        for (var i = 0; i < 4*count; i += 4) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*16)>>2);\n      }\n      GLctx.uniformMatrix2fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix2fv = _glUniformMatrix2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix2x3fv = _glUniformMatrix2x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix2x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix2x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix2x4fv = _glUniformMatrix2x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix3fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*9);\n        return;\n      }\n  \n      if (count <= 32) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[9*count-1];\n        for (var i = 0; i < 9*count; i += 9) {\n          view[i] = HEAPF32[(((value)+(4*i))>>2)];\n          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];\n          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];\n          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];\n          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];\n          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];\n          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];\n          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];\n          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*36)>>2);\n      }\n      GLctx.uniformMatrix3fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix3fv = _glUniformMatrix3fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*6);\n    };\n  var _emscripten_glUniformMatrix3x2fv = _glUniformMatrix3x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix3x4fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix3x4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix3x4fv = _glUniformMatrix3x4fv;\n\n  \n  \n  /** @suppress {duplicate } */\n  var _glUniformMatrix4fv = (location, count, transpose, value) => {\n  \n      // WebGL 2 provides new garbage-free entry points to call to WebGL. Use\n      // those always when possible.\n      if (GL.currentContext.version >= 2) {\n        count && GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*16);\n        return;\n      }\n  \n      if (count <= 18) {\n        // avoid allocation when uploading few enough uniforms\n        var view = miniTempWebGLFloatBuffers[16*count-1];\n        // hoist the heap out of the loop for size and for pthreads+growth.\n        var heap = HEAPF32;\n        value >>= 2;\n        for (var i = 0; i < 16 * count; i += 16) {\n          var dst = value + i;\n          view[i] = heap[dst];\n          view[i + 1] = heap[dst + 1];\n          view[i + 2] = heap[dst + 2];\n          view[i + 3] = heap[dst + 3];\n          view[i + 4] = heap[dst + 4];\n          view[i + 5] = heap[dst + 5];\n          view[i + 6] = heap[dst + 6];\n          view[i + 7] = heap[dst + 7];\n          view[i + 8] = heap[dst + 8];\n          view[i + 9] = heap[dst + 9];\n          view[i + 10] = heap[dst + 10];\n          view[i + 11] = heap[dst + 11];\n          view[i + 12] = heap[dst + 12];\n          view[i + 13] = heap[dst + 13];\n          view[i + 14] = heap[dst + 14];\n          view[i + 15] = heap[dst + 15];\n        }\n      } else\n      {\n        var view = HEAPF32.subarray((value)>>2, (value+count*64)>>2);\n      }\n      GLctx.uniformMatrix4fv(webglGetUniformLocation(location), !!transpose, view);\n    };\n  var _emscripten_glUniformMatrix4fv = _glUniformMatrix4fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x2fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x2fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*8);\n    };\n  var _emscripten_glUniformMatrix4x2fv = _glUniformMatrix4x2fv;\n\n  /** @suppress {duplicate } */\n  var _glUniformMatrix4x3fv = (location, count, transpose, value) => {\n      count && GLctx.uniformMatrix4x3fv(webglGetUniformLocation(location), !!transpose, HEAPF32, value>>2, count*12);\n    };\n  var _emscripten_glUniformMatrix4x3fv = _glUniformMatrix4x3fv;\n\n  /** @suppress {duplicate } */\n  var _glUseProgram = (program) => {\n      program = GL.programs[program];\n      GLctx.useProgram(program);\n      // Record the currently active program so that we can access the uniform\n      // mapping table of that program.\n      GLctx.currentProgram = program;\n    };\n  var _emscripten_glUseProgram = _glUseProgram;\n\n  /** @suppress {duplicate } */\n  var _glValidateProgram = (program) => {\n      GLctx.validateProgram(GL.programs[program]);\n    };\n  var _emscripten_glValidateProgram = _glValidateProgram;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib1f(x0, x1) { GLctx.vertexAttrib1f(x0, x1) }\n  var _emscripten_glVertexAttrib1f = _glVertexAttrib1f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib1fv = (index, v) => {\n  \n      GLctx.vertexAttrib1f(index, HEAPF32[v>>2]);\n    };\n  var _emscripten_glVertexAttrib1fv = _glVertexAttrib1fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib2f(x0, x1, x2) { GLctx.vertexAttrib2f(x0, x1, x2) }\n  var _emscripten_glVertexAttrib2f = _glVertexAttrib2f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib2fv = (index, v) => {\n  \n      GLctx.vertexAttrib2f(index, HEAPF32[v>>2], HEAPF32[v+4>>2]);\n    };\n  var _emscripten_glVertexAttrib2fv = _glVertexAttrib2fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib3f(x0, x1, x2, x3) { GLctx.vertexAttrib3f(x0, x1, x2, x3) }\n  var _emscripten_glVertexAttrib3f = _glVertexAttrib3f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib3fv = (index, v) => {\n  \n      GLctx.vertexAttrib3f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2]);\n    };\n  var _emscripten_glVertexAttrib3fv = _glVertexAttrib3fv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttrib4f(x0, x1, x2, x3, x4) { GLctx.vertexAttrib4f(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttrib4f = _glVertexAttrib4f;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttrib4fv = (index, v) => {\n  \n      GLctx.vertexAttrib4f(index, HEAPF32[v>>2], HEAPF32[v+4>>2], HEAPF32[v+8>>2], HEAPF32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttrib4fv = _glVertexAttrib4fv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisor = (index, divisor) => {\n      GLctx.vertexAttribDivisor(index, divisor);\n    };\n  var _emscripten_glVertexAttribDivisor = _glVertexAttribDivisor;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorANGLE = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorANGLE = _glVertexAttribDivisorANGLE;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorARB = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorARB = _glVertexAttribDivisorARB;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorEXT = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorEXT = _glVertexAttribDivisorEXT;\n\n  \n  /** @suppress {duplicate } */\n  var _glVertexAttribDivisorNV = _glVertexAttribDivisor;\n  var _emscripten_glVertexAttribDivisorNV = _glVertexAttribDivisorNV;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4i(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4i(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4i = _glVertexAttribI4i;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4iv = (index, v) => {\n      GLctx.vertexAttribI4i(index, HEAP32[v>>2], HEAP32[v+4>>2], HEAP32[v+8>>2], HEAP32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4iv = _glVertexAttribI4iv;\n\n  /** @suppress {duplicate } */\n  function _glVertexAttribI4ui(x0, x1, x2, x3, x4) { GLctx.vertexAttribI4ui(x0, x1, x2, x3, x4) }\n  var _emscripten_glVertexAttribI4ui = _glVertexAttribI4ui;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribI4uiv = (index, v) => {\n      GLctx.vertexAttribI4ui(index, HEAPU32[v>>2], HEAPU32[v+4>>2], HEAPU32[v+8>>2], HEAPU32[v+12>>2]);\n    };\n  var _emscripten_glVertexAttribI4uiv = _glVertexAttribI4uiv;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribIPointer = (index, size, type, stride, ptr) => {\n      GLctx.vertexAttribIPointer(index, size, type, stride, ptr);\n    };\n  var _emscripten_glVertexAttribIPointer = _glVertexAttribIPointer;\n\n  /** @suppress {duplicate } */\n  var _glVertexAttribPointer = (index, size, type, normalized, stride, ptr) => {\n      GLctx.vertexAttribPointer(index, size, type, !!normalized, stride, ptr);\n    };\n  var _emscripten_glVertexAttribPointer = _glVertexAttribPointer;\n\n  /** @suppress {duplicate } */\n  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }\n  var _emscripten_glViewport = _glViewport;\n\n  /** @suppress {duplicate } */\n  var _glWaitSync = (sync, flags, timeout) => {\n      // See WebGL2 vs GLES3 difference on GL_TIMEOUT_IGNORED above (https://www.khronos.org/registry/webgl/specs/latest/2.0/#5.15)\n      timeout = Number(timeout);\n      GLctx.waitSync(GL.syncs[sync], flags, timeout);\n    };\n  var _emscripten_glWaitSync = _glWaitSync;\n\n  \n  var growMemory = (size) => {\n      var b = wasmMemory.buffer;\n      var pages = (size - b.byteLength + 65535) / 65536;\n      try {\n        // round size grow request up to wasm page size (fixed 64KB per spec)\n        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size\n        updateMemoryViews();\n        return 1 /*success*/;\n      } catch(e) {\n        err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);\n      }\n      // implicit 0 return to save code size (caller will cast \"undefined\" into 0\n      // anyhow)\n    };\n  var _emscripten_resize_heap = (requestedSize) => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      // With multithreaded builds, races can happen (another thread might increase the size\n      // in between), so return a failure, and let the caller retry.\n      assert(requestedSize > oldSize);\n  \n      // Memory resize rules:\n      // 1.  Always increase heap size to at least the requested size, rounded up\n      //     to next page multiple.\n      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap\n      //     geometrically: increase the heap size according to\n      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most\n      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).\n      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap\n      //     linearly: increase the heap size by at least\n      //     MEMORY_GROWTH_LINEAR_STEP bytes.\n      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by\n      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest\n      // 4.  If we were unable to allocate as much memory, it may be due to\n      //     over-eager decision to excessively reserve due to (3) above.\n      //     Hence if an allocation fails, cut down on the amount of excess\n      //     growth, in an attempt to succeed to perform a smaller allocation.\n  \n      // A limit is set for how much we can grow. We should not exceed that\n      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);\n        return false;\n      }\n  \n      var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n  \n      // Loop through potential heap size increases. If we attempt a too eager\n      // reservation that fails, cut down on the attempted size and reserve a\n      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth\n        // but limit overreserving (default to capping at +96MB overgrowth at most)\n        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );\n  \n        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  \n        var replacement = growMemory(newSize);\n        if (replacement) {\n  \n          return true;\n        }\n      }\n      err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);\n      return false;\n    };\n\n  function _emscripten_ubq_codec_createAudioDecoder(\n      codecPtr,\n      codecLength,\n      sampleRate,\n      numberOfChannels,\n      extraDataPtr,\n      extraDataLength,\n      leftBufferPtr,\n      rightBufferPtr,\n      bufferLength\n    ) {\n      const codec = Module.UTF8ToString(codecPtr, codecPtr + codecLength);\n      const extraData = Module.HEAPU8.subarray(\n        extraDataPtr,\n        extraDataPtr + extraDataLength\n      );\n  \n      const handle = Module.emscripten_ubq_codec_audioDecoderNextHandle++;\n  \n      const decoderConfig = {\n        codec,\n        sampleRate,\n        numberOfChannels,\n        description: extraData\n      };\n      try {\n        const audioDecoder = Module.emscripten_ubq_codec_createAudioDecoder(\n          leftBufferPtr,\n          rightBufferPtr,\n          bufferLength\n        );\n  \n        // This is annoyingly async. We have to set a flag and deal with it in the future.\n        AudioDecoder.isConfigSupported(decoderConfig).then(\n          (supported) => {\n            audioDecoder.configUnsupported = !supported;\n          },\n          () => {\n            audioDecoder.configUnsupported = true;\n          }\n        );\n        audioDecoder.configure(decoderConfig);\n  \n        Module.emscripten_ubq_codec_audioDecoders.set(handle, {\n          audioDecoder,\n          decoderConfig,\n          leftBufferPtr,\n          rightBufferPtr,\n          bufferLength\n        });\n      } catch (error) {\n        return Module.emscripten_ubq_codec_createNativeResult({ error });\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ handle });\n    }\n\n  function _emscripten_ubq_codec_createAudioEncoder(\n      codec,\n      codecLength,\n      sampleRate,\n      numberOfChannels,\n      bitRate,\n      codecServicePtr\n    ) {\n      const codecString = Module.UTF8ToString(codec, codec + codecLength);\n  \n      const handle = Module.emscripten_ubq_codec_audioEncoderNextHandle++;\n  \n      const audioEncoderConfig = {\n        codec: codecString,\n        sampleRate,\n        numberOfChannels,\n        bitrate: bitRate\n      };\n      try {\n        const audioEncoder = new AudioEncoder({\n          output: (chunk) => {\n            const buf = Module._malloc(chunk.byteLength);\n            const data = Module.HEAPU8.subarray(buf, buf + chunk.byteLength);\n            chunk.copyTo(data);\n            Module.emscripten_ubq_codec_onOutputEncodedAudioChunk(\n              handle,\n              buf,\n              chunk.byteLength,\n              codecServicePtr\n            );\n            Module._free(buf);\n          },\n          error: (e) => {\n            const frameIndex = Module.emscripten_ubq_codec_audioEncoders.get(handle).frameIndex;\n            if(frameIndex > 1) {\n              console.error(e);\n            }\n          }\n        });\n        audioEncoder.configure(audioEncoderConfig);\n  \n        Module.emscripten_ubq_codec_audioEncoders.set(handle, {\n          audioEncoder,\n          audioEncoderConfig,\n          frameIndex: 0\n        });\n      } catch (error) {\n        error += ' Requested codec: \"' + codecString + '\"';\n        error += '; sample rate: ' + sampleRate;\n        error += '; channels: ' + numberOfChannels;\n        error += '; bit rate: ' + bitRate;\n        return Module.emscripten_ubq_codec_createNativeResult({ error });\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ handle });\n    }\n\n  function _emscripten_ubq_codec_createVideoDecoder(\n      codec,\n      codecLength,\n      width,\n      height,\n      extraData,\n      extraDataLength,\n      codecServicePtr\n    ) {\n      const codecString = Module.UTF8ToString(codec, codec + codecLength);\n      const extraDataArray = Module.HEAPU8.subarray(\n        extraData,\n        extraData + extraDataLength\n      );\n      const handle = Module.emscripten_ubq_codec_videoDecoderNextHandle++;\n  \n      const decoderConfig = {\n        codec: codecString,\n        codedWidth: width,\n        codedHeight: height,\n        description: extraDataArray,\n        optimizeForLatency: true\n      };\n      try {\n        const videoDecoder = Module.emscripten_ubq_codec_createVideoDecoder(\n          handle,\n          codecServicePtr\n        );\n  \n        // This is annoyingly async. We have to set a flag and deal with it in the future.\n        VideoDecoder.isConfigSupported(decoderConfig).then(\n          (supported) => {\n            videoDecoder.configUnsupported = !supported;\n          },\n          () => {\n            videoDecoder.configUnsupported = true;\n          }\n        );\n        videoDecoder.configure(decoderConfig);\n  \n        Module.emscripten_ubq_codec_videoDecoders.set(handle, {\n          videoDecoder,\n          decoderConfig,\n          codecServicePtr\n        });\n      } catch (error) {\n        return Module.emscripten_ubq_codec_createNativeResult({ error });\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ handle });\n    }\n\n  function _emscripten_ubq_codec_createVideoEncoder(\n      codec,\n      codecLength,\n      width,\n      height,\n      framerate,\n      bitrate,\n      codecServicePtr\n    ) {\n      const codecString = Module.UTF8ToString(codec, codec + codecLength);\n  \n      const handle = Module.emscripten_ubq_codec_videoEncoderNextHandle++;\n  \n      // Resize the OffscreenCanvas to the target resolution\n      const canvas = Module.specialHTMLTargets['!canvas'];\n      canvas.width = width;\n      canvas.height = height;\n  \n      const encoderConfig = {\n        codec: codecString,\n        width,\n        height,\n        avc: {\n          format: 'annexb'\n        },\n        framerate\n      };\n  \n      if (bitrate > 0) {\n        encoderConfig.bitrate = bitrate;\n      }\n  \n      try {\n        const videoEncoder = new VideoEncoder({\n          output: (chunk) => {\n            const buf = Module._malloc(chunk.byteLength);\n            const data = Module.HEAPU8.subarray(buf, buf + chunk.byteLength);\n            chunk.copyTo(data);\n            Module.emscripten_ubq_codec_onOutputEncodedVideoChunk(\n              handle,\n              buf,\n              chunk.byteLength,\n              codecServicePtr\n            );\n            Module._free(buf);\n          },\n          error: (e) => console.error(e)\n        });\n        // This is annoyingly async. We have to set a flag and deal with it in the future.\n        VideoEncoder.isConfigSupported(encoderConfig).then(\n          (supported) => {\n            videoEncoder.configUnsupported = !supported;\n          },\n          () => {\n            videoEncoder.configUnsupported = true;\n          }\n        );\n        videoEncoder.configure(encoderConfig);\n  \n        Module.emscripten_ubq_codec_videoEncoders.set(handle, {\n          videoEncoder,\n          encoderConfig,\n          groupOfPictures: 150,\n          frameIndex: 0\n        });\n      } catch (error) {\n        error += ' Requested codec: \"' + codecString + '\"';\n        error += '; resolution: ' + width + 'x' + height;\n        return Module.emscripten_ubq_codec_createNativeResult({ error });\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ handle });\n    }\n\n  function _emscripten_ubq_codec_decodeAudioChunk(\n      handle,\n      isSync,\n      cts,\n      duration,\n      data,\n      dataLength\n    ) {\n      const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n  \n      if (decoder.audioDecoder.unexpectedError) {\n        return Module.emscripten_ubq_codec_createNativeResult({\n          code: 2,\n          error: decoder.audioDecoder.unexpectedError\n        }); // Cannot recover from this.\n      }\n  \n      if (decoder.audioDecoder.state === 'closed') {\n        decoder.audioDecoder = Module.emscripten_ubq_codec_createAudioDecoder(\n          decoder.leftBufferPtr,\n          decoder.rightBufferPtr,\n          decoder.bufferLength\n        );\n        decoder.audioDecoder.configure(decoder.decoderConfig);\n      }\n      const audioDecoder = decoder.audioDecoder;\n  \n      const dataArray = Module.HEAPU8.subarray(data, data + dataLength);\n      const chunk = new EncodedAudioChunk({\n        type: isSync ? 'key' : 'delta',\n        timestamp: cts,\n        duration: duration,\n        data: dataArray\n      });\n  \n      try {\n        audioDecoder.decode(chunk);\n      } catch (error) {\n        if (audioDecoder.configUnsupported) {\n          return Module.emscripten_ubq_codec_createNativeResult({\n            code: 2,\n            error\n          }); // Cannot recover from this.\n        }\n        return Module.emscripten_ubq_codec_createNativeResult({ code: 1, error }); // Maybe the decoder expected a key frame, the caller should try again.\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ code: 0 }); // success\n    }\n\n  function _emscripten_ubq_codec_decodeVideoChunk(\n      handle,\n      isSync,\n      cts,\n      duration,\n      dataPtr,\n      dataLength\n    ) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n  \n      if (decoder.videoDecoder.unexpectedError) {\n        return Module.emscripten_ubq_codec_createNativeResult({\n          code: 2,\n          error: decoder.videoDecoder.unexpectedError\n        }); // Cannot recover from this.\n      }\n  \n      if (decoder.videoDecoder.state === 'closed') {\n        const textures = decoder.videoDecoder.textures;\n        decoder.videoDecoder = Module.emscripten_ubq_codec_createVideoDecoder(\n          handle,\n          decoder.codecServicePtr\n        );\n        decoder.videoDecoder.textures = textures;\n        decoder.videoDecoder.configure(decoder.decoderConfig);\n        return Module.emscripten_ubq_codec_createNativeResult({\n          code: 1,\n          error: 'VideoDecoder was closed'\n        });\n      }\n      const videoDecoder = decoder.videoDecoder;\n  \n      const dataArray = Module.HEAPU8.subarray(dataPtr, dataPtr + dataLength);\n      const chunk = new EncodedVideoChunk({\n        type: isSync ? 'key' : 'delta',\n        timestamp: cts,\n        duration: duration,\n        data: dataArray\n      });\n  \n      try {\n        videoDecoder.decode(chunk);\n      } catch (error) {\n        if (videoDecoder.configUnsupported) {\n          return Module.emscripten_ubq_codec_createNativeResult({\n            code: 2,\n            error\n          }); // Cannot recover from this.\n        }\n        return Module.emscripten_ubq_codec_createNativeResult({ code: 1, error }); // Maybe the decoder expected a key frame, the caller should try again.\n      }\n  \n      return Module.emscripten_ubq_codec_createNativeResult({ code: 0 }); // success\n    }\n\n  function _emscripten_ubq_codec_destroyAudioDecoder(handle) {\n      if (Module.emscripten_ubq_codec_audioDecoders.has(handle)) {\n        const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n        if (decoder.audioDecoder.state !== 'closed') {\n          decoder.audioDecoder.close();\n        }\n        Module.emscripten_ubq_codec_audioDecoders.delete(handle);\n      }\n    }\n\n  function _emscripten_ubq_codec_destroyAudioEncoder(handle) {\n      const encoder = Module.emscripten_ubq_codec_audioEncoders.get(handle);\n      if (encoder.audioEncoder.state !== 'closed') {\n        encoder.audioEncoder.close();\n      }\n      Module.emscripten_ubq_codec_audioEncoders.delete(handle);\n    }\n\n  function _emscripten_ubq_codec_destroyVideoDecoder(handle) {\n      if (Module.emscripten_ubq_codec_videoDecoders.has(handle)) {\n        const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n        if (decoder.videoDecoder.state !== 'closed') {\n          decoder.videoDecoder.close();\n        }\n        Module.emscripten_ubq_codec_videoDecoders.delete(handle);\n      }\n    }\n\n  function _emscripten_ubq_codec_destroyVideoEncoder(handle) {\n      const encoder = Module.emscripten_ubq_codec_videoEncoders.get(handle);\n      if (encoder.videoEncoder.state !== 'closed') {\n        encoder.videoEncoder.close();\n      }\n      Module.emscripten_ubq_codec_videoEncoders.delete(handle);\n    }\n\n  function _emscripten_ubq_codec_encodeAudioData(handle, dataPtr, dataLength) {\n      const MICROSECONDS = 1000000;\n      const encoder = Module.emscripten_ubq_codec_audioEncoders.get(handle);\n      const sampleRate = encoder.audioEncoderConfig.sampleRate;\n      const numberOfChannels = encoder.audioEncoderConfig.numberOfChannels;\n      const numberOfFrames = dataLength / numberOfChannels;\n      const timestamp = Math.round(\n        MICROSECONDS * ((encoder.frameIndex * numberOfFrames) / sampleRate)\n      );\n      const duration = Math.round(MICROSECONDS * (numberOfFrames / sampleRate));\n  \n      const data = Module.HEAPF32.subarray(dataPtr / 4, dataPtr / 4 + dataLength);\n      const audioData = new AudioData({\n        format: 'f32',\n        sampleRate,\n        numberOfFrames,\n        numberOfChannels,\n        duration,\n        timestamp,\n        data\n      });\n  \n      encoder.audioEncoder.encode(audioData);\n      encoder.frameIndex++;\n      audioData.close();\n    }\n\n  function _emscripten_ubq_codec_encodeVideoFrame(\n      handle,\n      dataPtr,\n      dataLength\n    ) {\n      const MICROSECONDS = 1000000;\n      const encoder = Module.emscripten_ubq_codec_videoEncoders.get(handle);\n      const timestamp = Math.round(\n        MICROSECONDS * (encoder.frameIndex / encoder.encoderConfig.framerate)\n      );\n      const keyFrame = encoder.frameIndex % encoder.groupOfPictures === 0;\n      const duration = Math.round(MICROSECONDS / encoder.encoderConfig.framerate);\n  \n      // We use the canvas directly to encode as a VideoFrame.\n      // This relies on the canvas being set as specialHTMLTarget.\n      const canvas = Module.specialHTMLTargets['!canvas'];\n      const frame = new VideoFrame(canvas, { timestamp, duration });\n  \n      encoder.videoEncoder.encode(frame, { keyFrame });\n      frame.close();\n      encoder.frameIndex++;\n    }\n\n  async function _emscripten_ubq_codec_finalizeAudioEncoding(\n      handle,\n      codecServicePtr\n    ) {\n      const encoder = Module.emscripten_ubq_codec_audioEncoders.get(handle);\n  \n      // On Windows 11, if only 1 (video) frame is being encoded, AudioEncoder\n      // throws flushing error. In that case we don't do anything.\n      try {\n        await encoder.audioEncoder.flush();\n      } catch {\n        if (encoder.frameIndex > 1) {\n          throw new Error('AudioEncoder.flush() failed');\n        }\n      }\n  \n      Module.emscripten_ubq_codec_onFinalizedAudioEncoding(\n        handle,\n        codecServicePtr\n      );\n    }\n\n  async function _emscripten_ubq_codec_finalizeVideoEncoding(\n      handle,\n      codecServicePtr\n    ) {\n      const encoder = Module.emscripten_ubq_codec_videoEncoders.get(handle);\n      await encoder.videoEncoder.flush();\n      Module.emscripten_ubq_codec_onFinalizedVideoEncoding(\n        handle,\n        codecServicePtr\n      );\n    }\n\n  async function _emscripten_ubq_codec_flushAudioDecoder(\n      handle,\n      initialWrittenFrames\n    ) {\n      const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n      const audioDecoder = decoder.audioDecoder;\n      audioDecoder.flushing = true;\n      // The audio decoder can be closed while a flushing operation is still in progress.\n      // \"DOMException: Aborted due to close()\"\n      // We catch this exception and don't do anything with it.\n      try {\n        await audioDecoder.flush();\n      } catch {}\n      audioDecoder.flushing = false;\n      audioDecoder.writtenFrames = initialWrittenFrames;\n    }\n\n  async function _emscripten_ubq_codec_flushVideoDecoder(\n      handle,\n      initialDecodedFrames,\n      shouldDropFrames\n    ) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n      const videoDecoder = decoder.videoDecoder;\n      videoDecoder.shouldDropFrames = shouldDropFrames;\n      videoDecoder.flushing = true;\n      // The video decoder can be closed while a flushing operation is still in progress.\n      // \"DOMException: Aborted due to close()\"\n      // We catch this exception and don't do anything with it.\n      try {\n        await videoDecoder.flush();\n      } catch {}\n      videoDecoder.flushing = false;\n      videoDecoder.shouldDropFrames = false;\n      videoDecoder.decodedFrames = initialDecodedFrames;\n    }\n\n  function _emscripten_ubq_codec_getAudioDecoderQueueSize(handle) {\n      const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n      return decoder.audioDecoder.decodeQueueSize;\n    }\n\n  function _emscripten_ubq_codec_getNumberOfDecodedVideoFrames(handle) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n      const videoDecoder = decoder.videoDecoder;\n      return videoDecoder.decodedFrames;\n    }\n\n  function _emscripten_ubq_codec_getWrittenAudioFrames(handle) {\n      const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n      return decoder.audioDecoder.writtenFrames;\n    }\n\n  function _emscripten_ubq_codec_isFlushingAudioDecoder(handle) {\n      const decoder = Module.emscripten_ubq_codec_audioDecoders.get(handle);\n      return decoder.audioDecoder.flushing;\n    }\n\n  function _emscripten_ubq_codec_isFlushingVideoDecoder(handle) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n      return decoder.videoDecoder.flushing;\n    }\n\n  function _emscripten_ubq_codec_isSupported() {\n      return (\n        typeof VideoFrame !== 'undefined' &&\n        typeof VideoDecoder !== 'undefined' &&\n        typeof VideoEncoder !== 'undefined' &&\n        typeof AudioDecoder !== 'undefined' &&\n        typeof AudioEncoder !== 'undefined'\n      );\n    }\n\n  function _emscripten_ubq_codec_setRequestedVideoFrame(\n      handle,\n      requestedFrame\n    ) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n      decoder.videoDecoder.requestedFrame = requestedFrame;\n    }\n\n  function _emscripten_ubq_codec_setVideoTextures(\n      handle,\n      nativeTexturesPtr,\n      length\n    ) {\n      const decoder = Module.emscripten_ubq_codec_videoDecoders.get(handle);\n      const nativeTexturesArray = Module.HEAPU32.subarray(\n        nativeTexturesPtr / 4,\n        nativeTexturesPtr / 4 + length\n      );\n      decoder.videoDecoder.textures = [];\n      for (let i = 0; i < length; i++) {\n        decoder.videoDecoder.textures[i] = GL.textures[nativeTexturesArray[i]];\n      }\n    }\n\n  function _emscripten_ubq_fetch_allocateFetchResult(identifier) {\n          const process = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier);\n          if (process === null || process === void 0 ? void 0 : process.allocate()) {\n              return true;\n          }\n          else {\n              return false;\n          }\n      }\n\n  function _emscripten_ubq_fetch_clear() {\n          Module.emscripten_ubq_asyncFetchManager.clear();\n      }\n\n  function _emscripten_ubq_fetch_createHeader(key, keyLength, value, valueLength) {\n          return Module.emscripten_ubq_asyncFetchManager.createHeader(key, keyLength, value, valueLength);\n      }\n\n  function _emscripten_ubq_fetch_deleteHeader(identifier) {\n          Module.emscripten_ubq_asyncFetchManager.deleteHeader(identifier);\n      }\n\n  function _emscripten_ubq_fetch_dispatchAsyncFetch(methodIndex, uri, uriLength, headerHandles, headerHandleCount, requestBody, bodyLength, credentials, credentialsLength) {\n          const process = Module.emscripten_ubq_asyncFetchManager.fetch(methodIndex, uri, uriLength, headerHandles, headerHandleCount, requestBody, bodyLength, credentials, credentialsLength);\n          return process.handle;\n      }\n\n  function _emscripten_ubq_fetch_freeFetchResult(identifier) {\n          return Module.emscripten_ubq_asyncFetchManager.deleteProcess(identifier);\n      }\n\n  function _emscripten_ubq_fetch_getFetchCompletedBytes(identifier) {\n          var _a, _b;\n          return ((_b = (_a = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier)) === null || _a === void 0 ? void 0 : _a.receivedLength) !== null && _b !== void 0 ? _b : 0);\n      }\n\n  function _emscripten_ubq_fetch_getFetchResultAddress(identifier) {\n          const process = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier);\n          if (process === null || process === void 0 ? void 0 : process.isAllocated()) {\n              return process.resultAddress;\n          }\n          else {\n              return -1;\n          }\n      }\n\n  function _emscripten_ubq_fetch_getFetchResultLength(identifier) {\n          const process = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier);\n          if (process === null || process === void 0 ? void 0 : process.isAllocated()) {\n              return process.resultLength;\n          }\n          else {\n              return -1;\n          }\n      }\n\n  function _emscripten_ubq_fetch_getFetchState(identifier) {\n          var _a, _b;\n          return ((_b = (_a = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier)) === null || _a === void 0 ? void 0 : _a.state) !== null && _b !== void 0 ? _b : -1);\n      }\n\n  function _emscripten_ubq_fetch_getFetchTotalBytes(identifier) {\n          var _a, _b;\n          return ((_b = (_a = Module.emscripten_ubq_asyncFetchManager.getProcess(identifier)) === null || _a === void 0 ? void 0 : _a.totalBytes) !== null && _b !== void 0 ? _b : 0);\n      }\n\n  function _emscripten_ubq_settings_getForceWebGL1() {\n      return !!Module.emscripten_ubq_settings_forceWebGL1;\n    }\n\n  \n  \n  var withStackSave = (f) => {\n      var stack = stackSave();\n      var ret = f();\n      stackRestore(stack);\n      return ret;\n    };\n  var JSEvents = {\n  removeAllEventListeners() {\n        while (JSEvents.eventHandlers.length) {\n          JSEvents._removeHandler(JSEvents.eventHandlers.length - 1);\n        }\n        JSEvents.deferredCalls = [];\n      },\n  inEventHandler:0,\n  deferredCalls:[],\n  deferCall(targetFunction, precedence, argsList) {\n        function arraysHaveEqualContent(arrA, arrB) {\n          if (arrA.length != arrB.length) return false;\n  \n          for (var i in arrA) {\n            if (arrA[i] != arrB[i]) return false;\n          }\n          return true;\n        }\n        // Test if the given call was already queued, and if so, don't add it again.\n        for (var i in JSEvents.deferredCalls) {\n          var call = JSEvents.deferredCalls[i];\n          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n            return;\n          }\n        }\n        JSEvents.deferredCalls.push({\n          targetFunction,\n          precedence,\n          argsList\n        });\n  \n        JSEvents.deferredCalls.sort((x,y) => x.precedence < y.precedence);\n      },\n  removeDeferredCalls(targetFunction) {\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n          }\n        }\n      },\n  canPerformEventHandlerRequests() {\n        if (navigator.userActivation) {\n          // Verify against transient activation status from UserActivation API\n          // whether it is possible to perform a request here without needing to defer. See\n          // https://developer.mozilla.org/en-US/docs/Web/Security/User_activation#transient_activation\n          // and https://caniuse.com/mdn-api_useractivation\n          // At the time of writing, Firefox does not support this API: https://bugzilla.mozilla.org/show_bug.cgi?id=1791079\n          return navigator.userActivation.isActive;\n        }\n  \n        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n      },\n  runDeferredCalls() {\n        if (!JSEvents.canPerformEventHandlerRequests()) {\n          return;\n        }\n        for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n          var call = JSEvents.deferredCalls[i];\n          JSEvents.deferredCalls.splice(i, 1);\n          --i;\n          call.targetFunction.apply(null, call.argsList);\n        }\n      },\n  eventHandlers:[],\n  removeAllHandlersOnTarget:(target, eventTypeString) => {\n        for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n          if (JSEvents.eventHandlers[i].target == target &&\n            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n             JSEvents._removeHandler(i--);\n           }\n        }\n      },\n  _removeHandler(i) {\n        var h = JSEvents.eventHandlers[i];\n        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n        JSEvents.eventHandlers.splice(i, 1);\n      },\n  registerOrRemoveHandler(eventHandler) {\n        if (!eventHandler.target) {\n          err('registerOrRemoveHandler: the target element for event handler registration does not exist, when processing the following event handler registration:');\n          console.dir(eventHandler);\n          return -4;\n        }\n        if (eventHandler.callbackfunc) {\n          eventHandler.eventListenerFunc = function(event) {\n            // Increment nesting count for the event handler.\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            // Process any old deferred calls the user has placed.\n            JSEvents.runDeferredCalls();\n            // Process the actual event, calls back to user C code handler.\n            eventHandler.handlerFunc(event);\n            // Process any new deferred calls that were placed right now from this event handler.\n            JSEvents.runDeferredCalls();\n            // Out of event handler - restore nesting count.\n            --JSEvents.inEventHandler;\n          };\n  \n          eventHandler.target.addEventListener(eventHandler.eventTypeString,\n                                               eventHandler.eventListenerFunc,\n                                               eventHandler.useCapture);\n          JSEvents.eventHandlers.push(eventHandler);\n        } else {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == eventHandler.target\n             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n               JSEvents._removeHandler(i--);\n             }\n          }\n        }\n        return 0;\n      },\n  getNodeNameForTarget(target) {\n        if (!target) return '';\n        if (target == window) return '#window';\n        if (target == screen) return '#screen';\n        return target?.nodeName || '';\n      },\n  fullscreenEnabled() {\n        return document.fullscreenEnabled\n        // Safari 13.0.3 on macOS Catalina 10.15.1 still ships with prefixed webkitFullscreenEnabled.\n        // TODO: If Safari at some point ships with unprefixed version, update the version check above.\n        || document.webkitFullscreenEnabled\n         ;\n      },\n  };\n  \n  var emscripten_webgl_power_preferences = ['default', 'low-power', 'high-performance'];\n  \n  var maybeCStringToJsString = (cString) => {\n      // \"cString > 2\" checks if the input is a number, and isn't of the special\n      // values we accept here, EMSCRIPTEN_EVENT_TARGET_* (which map to 0, 1, 2).\n      // In other words, if cString > 2 then it's a pointer to a valid place in\n      // memory, and points to a C string.\n      return cString > 2 ? UTF8ToString(cString) : cString;\n    };\n  \n  var specialHTMLTargets = [0, typeof document != 'undefined' ? document : 0, typeof window != 'undefined' ? window : 0];\n  var findEventTarget = (target) => {\n      target = maybeCStringToJsString(target);\n      var domElement = specialHTMLTargets[target] || (typeof document != 'undefined' ? document.querySelector(target) : undefined);\n      return domElement;\n    };\n  \n  var findCanvasEventTarget = findEventTarget;\n  \n  /** @suppress {duplicate } */\n  var _emscripten_webgl_do_create_context = (target, attributes) => {\n      assert(attributes);\n      var a = attributes >> 2;\n      var powerPreference = HEAP32[a + (24>>2)];\n      var contextAttributes = {\n        'alpha': !!HEAP32[a + (0>>2)],\n        'depth': !!HEAP32[a + (4>>2)],\n        'stencil': !!HEAP32[a + (8>>2)],\n        'antialias': !!HEAP32[a + (12>>2)],\n        'premultipliedAlpha': !!HEAP32[a + (16>>2)],\n        'preserveDrawingBuffer': !!HEAP32[a + (20>>2)],\n        'powerPreference': emscripten_webgl_power_preferences[powerPreference],\n        'failIfMajorPerformanceCaveat': !!HEAP32[a + (28>>2)],\n        // The following are not predefined WebGL context attributes in the WebGL specification, so the property names can be minified by Closure.\n        majorVersion: HEAP32[a + (32>>2)],\n        minorVersion: HEAP32[a + (36>>2)],\n        enableExtensionsByDefault: HEAP32[a + (40>>2)],\n        explicitSwapControl: HEAP32[a + (44>>2)],\n        proxyContextToMainThread: HEAP32[a + (48>>2)],\n        renderViaOffscreenBackBuffer: HEAP32[a + (52>>2)]\n      };\n  \n      var canvas = findCanvasEventTarget(target);\n  \n      if (!canvas) {\n        return 0;\n      }\n  \n      if (contextAttributes.explicitSwapControl) {\n        return 0;\n      }\n  \n      var contextHandle = GL.createContext(canvas, contextAttributes);\n      return contextHandle;\n    };\n  var _emscripten_webgl_create_context = _emscripten_webgl_do_create_context;\n\n  \n  var _emscripten_webgl_destroy_context = (contextHandle) => {\n      if (GL.currentContext == contextHandle) GL.currentContext = 0;\n      GL.deleteContext(contextHandle);\n    };\n\n  var webgl_enable_OES_vertex_array_object = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 25 and WebKit 536.28/desktop Safari 6.0.3 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('OES_vertex_array_object');\n      if (ext) {\n        ctx['createVertexArray'] = () => ext['createVertexArrayOES']();\n        ctx['deleteVertexArray'] = (vao) => ext['deleteVertexArrayOES'](vao);\n        ctx['bindVertexArray'] = (vao) => ext['bindVertexArrayOES'](vao);\n        ctx['isVertexArray'] = (vao) => ext['isVertexArrayOES'](vao);\n        return 1;\n      }\n    };\n  \n  var _emscripten_webgl_enable_OES_vertex_array_object = (ctx) => webgl_enable_OES_vertex_array_object(GL.contexts[ctx].GLctx);\n\n  var webgl_enable_WEBGL_draw_buffers = (ctx) => {\n      // Extension available in WebGL 1 from Firefox 28 onwards. Core feature in WebGL 2.\n      var ext = ctx.getExtension('WEBGL_draw_buffers');\n      if (ext) {\n        ctx['drawBuffers'] = (n, bufs) => ext['drawBuffersWEBGL'](n, bufs);\n        return 1;\n      }\n    };\n  \n  var _emscripten_webgl_enable_WEBGL_draw_buffers = (ctx) => webgl_enable_WEBGL_draw_buffers(GL.contexts[ctx].GLctx);\n\n  var webgl_enable_WEBGL_multi_draw = (ctx) => {\n      // Closure is expected to be allowed to minify the '.multiDrawWebgl' property, so not accessing it quoted.\n      return !!(ctx.multiDrawWebgl = ctx.getExtension('WEBGL_multi_draw'));\n    };\n  \n  var _emscripten_webgl_enable_WEBGL_multi_draw = (ctx) => webgl_enable_WEBGL_multi_draw(GL.contexts[ctx].GLctx);\n\n  \n  var _emscripten_webgl_enable_extension = (contextHandle, extension) => {\n      var context = GL.getContext(contextHandle);\n      var extString = UTF8ToString(extension);\n      if (extString.startsWith('GL_')) extString = extString.substr(3); // Allow enabling extensions both with \"GL_\" prefix and without.\n  \n      if (['ANGLE_instanced_arrays',\n           'OES_vertex_array_object',\n           'WEBGL_draw_buffers',\n           'WEBGL_multi_draw',\n           'WEBGL_draw_instanced_base_vertex_base_instance',\n           'WEBGL_multi_draw_instanced_base_vertex_base_instance'].includes(extString)) {\n        err('When building with -sGL_SUPPORT_SIMPLE_ENABLE_EXTENSIONS=0, function emscripten_webgl_enable_extension() cannot be used to enable extension '\n                      + extString + '! Use one of the functions emscripten_webgl_enable_*() to enable it!');\n      }\n  \n      var ext = context.GLctx.getExtension(extString);\n      return !!ext;\n    };\n\n  \n  var _emscripten_webgl_get_context_attributes = (c, a) => {\n      if (!a) return -5;\n      c = GL.contexts[c];\n      if (!c) return -3;\n      var t = c.GLctx;\n      if (!t) return -3;\n      t = t.getContextAttributes();\n  \n      HEAP32[((a)>>2)] = t.alpha;\n      HEAP32[(((a)+(4))>>2)] = t.depth;\n      HEAP32[(((a)+(8))>>2)] = t.stencil;\n      HEAP32[(((a)+(12))>>2)] = t.antialias;\n      HEAP32[(((a)+(16))>>2)] = t.premultipliedAlpha;\n      HEAP32[(((a)+(20))>>2)] = t.preserveDrawingBuffer;\n      var power = t['powerPreference'] && emscripten_webgl_power_preferences.indexOf(t['powerPreference']);\n      HEAP32[(((a)+(24))>>2)] = power;\n      HEAP32[(((a)+(28))>>2)] = t.failIfMajorPerformanceCaveat;\n      HEAP32[(((a)+(32))>>2)] = c.version;\n      HEAP32[(((a)+(36))>>2)] = 0;\n      return 0;\n    };\n\n  var _emscripten_webgl_make_context_current = (contextHandle) => {\n      var success = GL.makeContextCurrent(contextHandle);\n      return success ? 0 : -5;\n    };\n\n  var ENV = {\n  };\n  \n  var getExecutableName = () => {\n      return thisProgram || './this.program';\n    };\n  var getEnvStrings = () => {\n      if (!getEnvStrings.strings) {\n        // Default values.\n        // Browser language detection #8751\n        var lang = ((typeof navigator == 'object' && navigator.languages && navigator.languages[0]) || 'C').replace('-', '_') + '.UTF-8';\n        var env = {\n          'USER': 'web_user',\n          'LOGNAME': 'web_user',\n          'PATH': '/',\n          'PWD': '/',\n          'HOME': '/home/web_user',\n          'LANG': lang,\n          '_': getExecutableName()\n        };\n        // Apply the user-provided values, if any.\n        for (var x in ENV) {\n          // x is a key in ENV; if ENV[x] is undefined, that means it was\n          // explicitly set to be so. We allow user code to do that to\n          // force variables with default values to remain unset.\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(`${x}=${env[x]}`);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    };\n  \n  var stringToAscii = (str, buffer) => {\n      for (var i = 0; i < str.length; ++i) {\n        assert(str.charCodeAt(i) === (str.charCodeAt(i) & 0xff));\n        HEAP8[((buffer++)>>0)] = str.charCodeAt(i);\n      }\n      // Null-terminate the string\n      HEAP8[((buffer)>>0)] = 0;\n    };\n  var _environ_get = (__environ, environ_buf) => {\n      var bufSize = 0;\n      getEnvStrings().forEach((string, i) => {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(((__environ)+(i*4))>>2)] = ptr;\n        stringToAscii(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    };\n\n  var _environ_sizes_get = (penviron_count, penviron_buf_size) => {\n      var strings = getEnvStrings();\n      HEAPU32[((penviron_count)>>2)] = strings.length;\n      var bufSize = 0;\n      strings.forEach((string) => bufSize += string.length + 1);\n      HEAPU32[((penviron_buf_size)>>2)] = bufSize;\n      return 0;\n    };\n\n\n  function _fd_close(fd) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.close(stream);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  function _fd_fdstat_get(fd, pbuf) {\n  try {\n  \n      var rightsBase = 0;\n      var rightsInheriting = 0;\n      var flags = 0;\n      {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        // All character devices are terminals (other things a Linux system would\n        // assume is a character device, like the mouse, we have special APIs for).\n        var type = stream.tty ? 2 :\n                   FS.isDir(stream.mode) ? 3 :\n                   FS.isLink(stream.mode) ? 7 :\n                   4;\n      }\n      HEAP8[((pbuf)>>0)] = type;\n      HEAP16[(((pbuf)+(2))>>1)] = flags;\n      HEAP64[(((pbuf)+(8))>>3)] = BigInt(rightsBase);\n      HEAP64[(((pbuf)+(16))>>3)] = BigInt(rightsInheriting);\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  /** @param {number=} offset */\n  var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  \n  function _fd_pread(fd, iov, iovcnt, offset, pnum) {\n    offset = bigintToI53Checked(offset);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd)\n      var num = doReadv(stream, iov, iovcnt, offset);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  \n  function _fd_read(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doReadv(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  \n  function _fd_seek(fd, offset, whence, newOffset) {\n    offset = bigintToI53Checked(offset);;\n  \n    \n  try {\n  \n      if (isNaN(offset)) return 61;\n      var stream = SYSCALLS.getStreamFromFD(fd);\n      FS.llseek(stream, offset, whence);\n      HEAP64[((newOffset)>>3)] = BigInt(stream.position);\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  ;\n  }\n\n  /** @param {number=} offset */\n  var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n  \n  function _fd_write(fd, iov, iovcnt, pnum) {\n  try {\n  \n      var stream = SYSCALLS.getStreamFromFD(fd);\n      var num = doWritev(stream, iov, iovcnt);\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    } catch (e) {\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n    return e.errno;\n  }\n  }\n\n  var _getentropy = (buffer, size) => {\n      randomFill(HEAPU8.subarray(buffer, buffer + size));\n      return 0;\n    };\n\n  \n  var arraySum = (array, index) => {\n      var sum = 0;\n      for (var i = 0; i <= index; sum += array[i++]) {\n        // no-op\n      }\n      return sum;\n    };\n  \n  \n  var MONTH_DAYS_LEAP = [31,29,31,30,31,30,31,31,30,31,30,31];\n  \n  var MONTH_DAYS_REGULAR = [31,28,31,30,31,30,31,31,30,31,30,31];\n  var addDays = (date, days) => {\n      var newDate = new Date(date.getTime());\n      while (days > 0) {\n        var leap = isLeapYear(newDate.getFullYear());\n        var currentMonth = newDate.getMonth();\n        var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  \n        if (days > daysInCurrentMonth-newDate.getDate()) {\n          // we spill over to next month\n          days -= (daysInCurrentMonth-newDate.getDate()+1);\n          newDate.setDate(1);\n          if (currentMonth < 11) {\n            newDate.setMonth(currentMonth+1)\n          } else {\n            newDate.setMonth(0);\n            newDate.setFullYear(newDate.getFullYear()+1);\n          }\n        } else {\n          // we stay in current month\n          newDate.setDate(newDate.getDate()+days);\n          return newDate;\n        }\n      }\n  \n      return newDate;\n    };\n  \n  \n  \n  \n  var writeArrayToMemory = (array, buffer) => {\n      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n      HEAP8.set(array, buffer);\n    };\n  \n  var _strftime = (s, maxsize, format, tm) => {\n      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);\n      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html\n  \n      var tm_zone = HEAPU32[(((tm)+(40))>>2)];\n  \n      var date = {\n        tm_sec: HEAP32[((tm)>>2)],\n        tm_min: HEAP32[(((tm)+(4))>>2)],\n        tm_hour: HEAP32[(((tm)+(8))>>2)],\n        tm_mday: HEAP32[(((tm)+(12))>>2)],\n        tm_mon: HEAP32[(((tm)+(16))>>2)],\n        tm_year: HEAP32[(((tm)+(20))>>2)],\n        tm_wday: HEAP32[(((tm)+(24))>>2)],\n        tm_yday: HEAP32[(((tm)+(28))>>2)],\n        tm_isdst: HEAP32[(((tm)+(32))>>2)],\n        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],\n        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''\n      };\n      \n  \n      var pattern = UTF8ToString(format);\n  \n      // expand format\n      var EXPANSION_RULES_1 = {\n        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013\n        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y\n        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d\n        '%h': '%b',                       // Equivalent to %b\n        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation\n        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation\n        '%T': '%H:%M:%S',                 // Replaced by the time\n        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation\n        '%X': '%H:%M:%S',                 // Replaced by the locale's appropriate time representation\n        // Modified Conversion Specifiers\n        '%Ec': '%c',                      // Replaced by the locale's alternative appropriate date and time representation.\n        '%EC': '%C',                      // Replaced by the name of the base year (period) in the locale's alternative representation.\n        '%Ex': '%m/%d/%y',                // Replaced by the locale's alternative date representation.\n        '%EX': '%H:%M:%S',                // Replaced by the locale's alternative time representation.\n        '%Ey': '%y',                      // Replaced by the offset from %EC (year only) in the locale's alternative representation.\n        '%EY': '%Y',                      // Replaced by the full alternative year representation.\n        '%Od': '%d',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading zeros if there is any alternative symbol for zero; otherwise, with leading <space> characters.\n        '%Oe': '%e',                      // Replaced by the day of the month, using the locale's alternative numeric symbols, filled as needed with leading <space> characters.\n        '%OH': '%H',                      // Replaced by the hour (24-hour clock) using the locale's alternative numeric symbols.\n        '%OI': '%I',                      // Replaced by the hour (12-hour clock) using the locale's alternative numeric symbols.\n        '%Om': '%m',                      // Replaced by the month using the locale's alternative numeric symbols.\n        '%OM': '%M',                      // Replaced by the minutes using the locale's alternative numeric symbols.\n        '%OS': '%S',                      // Replaced by the seconds using the locale's alternative numeric symbols.\n        '%Ou': '%u',                      // Replaced by the weekday as a number in the locale's alternative representation (Monday=1).\n        '%OU': '%U',                      // Replaced by the week number of the year (Sunday as the first day of the week, rules corresponding to %U ) using the locale's alternative numeric symbols.\n        '%OV': '%V',                      // Replaced by the week number of the year (Monday as the first day of the week, rules corresponding to %V ) using the locale's alternative numeric symbols.\n        '%Ow': '%w',                      // Replaced by the number of the weekday (Sunday=0) using the locale's alternative numeric symbols.\n        '%OW': '%W',                      // Replaced by the week number of the year (Monday as the first day of the week) using the locale's alternative numeric symbols.\n        '%Oy': '%y',                      // Replaced by the year (offset from %C ) using the locale's alternative numeric symbols.\n      };\n      for (var rule in EXPANSION_RULES_1) {\n        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);\n      }\n  \n      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n      function leadingSomething(value, digits, character) {\n        var str = typeof value == 'number' ? value.toString() : (value || '');\n        while (str.length < digits) {\n          str = character[0]+str;\n        }\n        return str;\n      }\n  \n      function leadingNulls(value, digits) {\n        return leadingSomething(value, digits, '0');\n      }\n  \n      function compareByDay(date1, date2) {\n        function sgn(value) {\n          return value < 0 ? -1 : (value > 0 ? 1 : 0);\n        }\n  \n        var compare;\n        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {\n          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {\n            compare = sgn(date1.getDate()-date2.getDate());\n          }\n        }\n        return compare;\n      }\n  \n      function getFirstWeekStartDate(janFourth) {\n          switch (janFourth.getDay()) {\n            case 0: // Sunday\n              return new Date(janFourth.getFullYear()-1, 11, 29);\n            case 1: // Monday\n              return janFourth;\n            case 2: // Tuesday\n              return new Date(janFourth.getFullYear(), 0, 3);\n            case 3: // Wednesday\n              return new Date(janFourth.getFullYear(), 0, 2);\n            case 4: // Thursday\n              return new Date(janFourth.getFullYear(), 0, 1);\n            case 5: // Friday\n              return new Date(janFourth.getFullYear()-1, 11, 31);\n            case 6: // Saturday\n              return new Date(janFourth.getFullYear()-1, 11, 30);\n          }\n      }\n  \n      function getWeekBasedYear(date) {\n          var thisDate = addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);\n  \n          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);\n  \n          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  \n          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n            // this date is after the start of the first week of this year\n            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n              return thisDate.getFullYear()+1;\n            }\n            return thisDate.getFullYear();\n          }\n          return thisDate.getFullYear()-1;\n      }\n  \n      var EXPANSION_RULES_2 = {\n        '%a': (date) => WEEKDAYS[date.tm_wday].substring(0,3) ,\n        '%A': (date) => WEEKDAYS[date.tm_wday],\n        '%b': (date) => MONTHS[date.tm_mon].substring(0,3),\n        '%B': (date) => MONTHS[date.tm_mon],\n        '%C': (date) => {\n          var year = date.tm_year+1900;\n          return leadingNulls((year/100)|0,2);\n        },\n        '%d': (date) => leadingNulls(date.tm_mday, 2),\n        '%e': (date) => leadingSomething(date.tm_mday, 2, ' '),\n        '%g': (date) => {\n          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.\n          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes\n          // January 4th, which is also the week that includes the first Thursday of the year, and\n          // is also the first week that contains at least four days in the year.\n          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of\n          // the last week of the preceding year; thus, for Saturday 2nd January 1999,\n          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,\n          // or 31st is a Monday, it and any following days are part of week 1 of the following year.\n          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.\n  \n          return getWeekBasedYear(date).toString().substring(2);\n        },\n        '%G': getWeekBasedYear,\n        '%H': (date) => leadingNulls(date.tm_hour, 2),\n        '%I': (date) => {\n          var twelveHour = date.tm_hour;\n          if (twelveHour == 0) twelveHour = 12;\n          else if (twelveHour > 12) twelveHour -= 12;\n          return leadingNulls(twelveHour, 2);\n        },\n        '%j': (date) => {\n          // Day of the year (001-366)\n          return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year+1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon-1), 3);\n        },\n        '%m': (date) => leadingNulls(date.tm_mon+1, 2),\n        '%M': (date) => leadingNulls(date.tm_min, 2),\n        '%n': () => '\\n',\n        '%p': (date) => {\n          if (date.tm_hour >= 0 && date.tm_hour < 12) {\n            return 'AM';\n          }\n          return 'PM';\n        },\n        '%S': (date) => leadingNulls(date.tm_sec, 2),\n        '%t': () => '\\t',\n        '%u': (date) => date.tm_wday || 7,\n        '%U': (date) => {\n          var days = date.tm_yday + 7 - date.tm_wday;\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%V': (date) => {\n          // Replaced by the week number of the year (Monday as the first day of the week)\n          // as a decimal number [01,53]. If the week containing 1 January has four\n          // or more days in the new year, then it is considered week 1.\n          // Otherwise, it is the last week of the previous year, and the next week is week 1.\n          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]\n          var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7 ) / 7);\n          // If 1 Jan is just 1-3 days past Monday, the previous week\n          // is also in this year.\n          if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n            val++;\n          }\n          if (!val) {\n            val = 52;\n            // If 31 December of prev year a Thursday, or Friday of a\n            // leap year, then the prev year has 53 weeks.\n            var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n            if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year%400-1))) {\n              val++;\n            }\n          } else if (val == 53) {\n            // If 1 January is not a Thursday, and not a Wednesday of a\n            // leap year, then this year has only 52 weeks.\n            var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n            if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year)))\n              val = 1;\n          }\n          return leadingNulls(val, 2);\n        },\n        '%w': (date) => date.tm_wday,\n        '%W': (date) => {\n          var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n          return leadingNulls(Math.floor(days / 7), 2);\n        },\n        '%y': (date) => {\n          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]\n          return (date.tm_year+1900).toString().substring(2);\n        },\n        // Replaced by the year as a decimal number (for example, 1997). [ tm_year]\n        '%Y': (date) => date.tm_year+1900,\n        '%z': (date) => {\n          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).\n          // For example, \"-0430\" means 4 hours 30 minutes behind UTC (west of Greenwich).\n          var off = date.tm_gmtoff;\n          var ahead = off >= 0;\n          off = Math.abs(off) / 60;\n          // convert from minutes into hhmm format (which means 60 minutes = 100 units)\n          off = (off / 60)*100 + (off % 60);\n          return (ahead ? '+' : '-') + String(\"0000\" + off).slice(-4);\n        },\n        '%Z': (date) => date.tm_zone,\n        '%%': () => '%'\n      };\n  \n      // Replace %% with a pair of NULLs (which cannot occur in a C string), then\n      // re-inject them after processing.\n      pattern = pattern.replace(/%%/g, '\\0\\0')\n      for (var rule in EXPANSION_RULES_2) {\n        if (pattern.includes(rule)) {\n          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));\n        }\n      }\n      pattern = pattern.replace(/\\0\\0/g, '%')\n  \n      var bytes = intArrayFromString(pattern, false);\n      if (bytes.length > maxsize) {\n        return 0;\n      }\n  \n      writeArrayToMemory(bytes, s);\n      return bytes.length-1;\n    };\n  var _strftime_l = (s, maxsize, format, tm, loc) => {\n      return _strftime(s, maxsize, format, tm); // no locale support yet\n    };\n\n\n\n  \n  var stringToUTF8OnStack = (str) => {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = stackAlloc(size);\n      stringToUTF8(str, ret, size);\n      return ret;\n    };\n\n\n\n\n\n  var getCFunc = (ident) => {\n      var func = Module['_' + ident]; // closure exported function\n      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n      return func;\n    };\n  \n  \n  \n  \n  \n  \n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  var ccall = (ident, returnType, argTypes, args, opts) => {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            ret = stringToUTF8OnStack(str);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      assert(returnType !== 'array', 'Return type should not be \"array\".');\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    };\n\n\n\n\n  var FS_unlink = (path) => FS.unlink(path);\n\n  var FSNode = /** @constructor */ function(parent, name, mode, rdev) {\n    if (!parent) {\n      parent = this;  // root node sets parent to itself\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n  };\n  var readMode = 292/*292*/ | 73/*73*/;\n  var writeMode = 146/*146*/;\n  Object.defineProperties(FSNode.prototype, {\n   read: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & readMode) === readMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= readMode : this.mode &= ~readMode;\n    }\n   },\n   write: {\n    get: /** @this{FSNode} */function() {\n     return (this.mode & writeMode) === writeMode;\n    },\n    set: /** @this{FSNode} */function(val) {\n     val ? this.mode |= writeMode : this.mode &= ~writeMode;\n    }\n   },\n   isFolder: {\n    get: /** @this{FSNode} */function() {\n     return FS.isDir(this.mode);\n    }\n   },\n   isDevice: {\n    get: /** @this{FSNode} */function() {\n     return FS.isChrdev(this.mode);\n    }\n   }\n  });\n  FS.FSNode = FSNode;\n  FS.createPreloadedFile = FS_createPreloadedFile;\n  FS.staticInit();Module[\"FS_createPath\"] = FS.createPath;Module[\"FS_createDataFile\"] = FS.createDataFile;Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;Module[\"FS_unlink\"] = FS.unlink;Module[\"FS_createLazyFile\"] = FS.createLazyFile;Module[\"FS_createDevice\"] = FS.createDevice;;\nInternalError = Module['InternalError'] = class InternalError extends Error { constructor(message) { super(message); this.name = 'InternalError'; }};\nembind_init_charCodes();\nBindingError = Module['BindingError'] = class BindingError extends Error { constructor(message) { super(message); this.name = 'BindingError'; }};\ninit_ClassHandle();\ninit_embind();;\ninit_RegisteredPointer();\nUnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;\ninit_emval();;\n\n      // exports\n      Module[\"requestFullscreen\"] = Browser.requestFullscreen;\n      Module[\"requestFullScreen\"] = Browser.requestFullScreen;\n      Module[\"requestAnimationFrame\"] = Browser.requestAnimationFrame;\n      Module[\"setCanvasSize\"] = Browser.setCanvasSize;\n      Module[\"pauseMainLoop\"] = Browser.mainLoop.pause;\n      Module[\"resumeMainLoop\"] = Browser.mainLoop.resume;\n      Module[\"getUserMedia\"] = Browser.getUserMedia;\n      Module[\"createContext\"] = Browser.createContext;\n      var preloadedImages = {};\n      var preloadedAudios = {};;\nvar GLctx;;\nfor (var i = 0; i < 32; ++i) tempFixedLengthArray.push(new Array(i));;\nvar miniTempWebGLFloatBuffersStorage = new Float32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLFloatBuffers[i] = miniTempWebGLFloatBuffersStorage.subarray(0, i+1);\n  };\nvar miniTempWebGLIntBuffersStorage = new Int32Array(288);\n  for (/**@suppress{duplicate}*/var i = 0; i < 288; ++i) {\n    miniTempWebGLIntBuffers[i] = miniTempWebGLIntBuffersStorage.subarray(0, i+1);\n  };\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar wasmImports = {\n  /** @export */\n  __assert_fail: ___assert_fail,\n  /** @export */\n  __cxa_begin_catch: ___cxa_begin_catch,\n  /** @export */\n  __cxa_end_catch: ___cxa_end_catch,\n  /** @export */\n  __cxa_find_matching_catch_2: ___cxa_find_matching_catch_2,\n  /** @export */\n  __cxa_find_matching_catch_3: ___cxa_find_matching_catch_3,\n  /** @export */\n  __cxa_throw: ___cxa_throw,\n  /** @export */\n  __resumeException: ___resumeException,\n  /** @export */\n  __syscall_chmod: ___syscall_chmod,\n  /** @export */\n  __syscall_fchmod: ___syscall_fchmod,\n  /** @export */\n  __syscall_fcntl64: ___syscall_fcntl64,\n  /** @export */\n  __syscall_fstat64: ___syscall_fstat64,\n  /** @export */\n  __syscall_ioctl: ___syscall_ioctl,\n  /** @export */\n  __syscall_lstat64: ___syscall_lstat64,\n  /** @export */\n  __syscall_newfstatat: ___syscall_newfstatat,\n  /** @export */\n  __syscall_openat: ___syscall_openat,\n  /** @export */\n  __syscall_renameat: ___syscall_renameat,\n  /** @export */\n  __syscall_rmdir: ___syscall_rmdir,\n  /** @export */\n  __syscall_stat64: ___syscall_stat64,\n  /** @export */\n  __syscall_unlinkat: ___syscall_unlinkat,\n  /** @export */\n  _embind_finalize_value_array: __embind_finalize_value_array,\n  /** @export */\n  _embind_finalize_value_object: __embind_finalize_value_object,\n  /** @export */\n  _embind_register_bigint: __embind_register_bigint,\n  /** @export */\n  _embind_register_bool: __embind_register_bool,\n  /** @export */\n  _embind_register_class: __embind_register_class,\n  /** @export */\n  _embind_register_class_constructor: __embind_register_class_constructor,\n  /** @export */\n  _embind_register_class_function: __embind_register_class_function,\n  /** @export */\n  _embind_register_emval: __embind_register_emval,\n  /** @export */\n  _embind_register_enum: __embind_register_enum,\n  /** @export */\n  _embind_register_enum_value: __embind_register_enum_value,\n  /** @export */\n  _embind_register_float: __embind_register_float,\n  /** @export */\n  _embind_register_function: __embind_register_function,\n  /** @export */\n  _embind_register_integer: __embind_register_integer,\n  /** @export */\n  _embind_register_memory_view: __embind_register_memory_view,\n  /** @export */\n  _embind_register_smart_ptr: __embind_register_smart_ptr,\n  /** @export */\n  _embind_register_std_string: __embind_register_std_string,\n  /** @export */\n  _embind_register_std_wstring: __embind_register_std_wstring,\n  /** @export */\n  _embind_register_value_array: __embind_register_value_array,\n  /** @export */\n  _embind_register_value_array_element: __embind_register_value_array_element,\n  /** @export */\n  _embind_register_value_object: __embind_register_value_object,\n  /** @export */\n  _embind_register_value_object_field: __embind_register_value_object_field,\n  /** @export */\n  _embind_register_void: __embind_register_void,\n  /** @export */\n  _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n  /** @export */\n  _emscripten_throw_longjmp: __emscripten_throw_longjmp,\n  /** @export */\n  _emval_as: __emval_as,\n  /** @export */\n  _emval_call: __emval_call,\n  /** @export */\n  _emval_call_method: __emval_call_method,\n  /** @export */\n  _emval_decref: __emval_decref,\n  /** @export */\n  _emval_equals: __emval_equals,\n  /** @export */\n  _emval_get_global: __emval_get_global,\n  /** @export */\n  _emval_get_method_caller: __emval_get_method_caller,\n  /** @export */\n  _emval_get_property: __emval_get_property,\n  /** @export */\n  _emval_incref: __emval_incref,\n  /** @export */\n  _emval_instanceof: __emval_instanceof,\n  /** @export */\n  _emval_is_number: __emval_is_number,\n  /** @export */\n  _emval_is_string: __emval_is_string,\n  /** @export */\n  _emval_new_array: __emval_new_array,\n  /** @export */\n  _emval_new_cstring: __emval_new_cstring,\n  /** @export */\n  _emval_new_object: __emval_new_object,\n  /** @export */\n  _emval_run_destructors: __emval_run_destructors,\n  /** @export */\n  _emval_set_property: __emval_set_property,\n  /** @export */\n  _emval_take_value: __emval_take_value,\n  /** @export */\n  _emval_throw: __emval_throw,\n  /** @export */\n  _emval_typeof: __emval_typeof,\n  /** @export */\n  _gmtime_js: __gmtime_js,\n  /** @export */\n  _localtime_js: __localtime_js,\n  /** @export */\n  _mktime_js: __mktime_js,\n  /** @export */\n  _mmap_js: __mmap_js,\n  /** @export */\n  _munmap_js: __munmap_js,\n  /** @export */\n  _tzset_js: __tzset_js,\n  /** @export */\n  abort: _abort,\n  /** @export */\n  clearItem: clearItem,\n  /** @export */\n  eglChooseConfig: _eglChooseConfig,\n  /** @export */\n  eglCreateContext: _eglCreateContext,\n  /** @export */\n  eglCreateWindowSurface: _eglCreateWindowSurface,\n  /** @export */\n  eglDestroyContext: _eglDestroyContext,\n  /** @export */\n  eglDestroySurface: _eglDestroySurface,\n  /** @export */\n  eglGetConfigAttrib: _eglGetConfigAttrib,\n  /** @export */\n  eglGetDisplay: _eglGetDisplay,\n  /** @export */\n  eglGetError: _eglGetError,\n  /** @export */\n  eglInitialize: _eglInitialize,\n  /** @export */\n  eglMakeCurrent: _eglMakeCurrent,\n  /** @export */\n  eglSwapBuffers: _eglSwapBuffers,\n  /** @export */\n  eglTerminate: _eglTerminate,\n  /** @export */\n  emscripten_asm_const_int: _emscripten_asm_const_int,\n  /** @export */\n  emscripten_console_error: _emscripten_console_error,\n  /** @export */\n  emscripten_console_log: _emscripten_console_log,\n  /** @export */\n  emscripten_console_warn: _emscripten_console_warn,\n  /** @export */\n  emscripten_date_now: _emscripten_date_now,\n  /** @export */\n  emscripten_debugger: _emscripten_debugger,\n  /** @export */\n  emscripten_err: _emscripten_err,\n  /** @export */\n  emscripten_get_heap_max: _emscripten_get_heap_max,\n  /** @export */\n  emscripten_get_now: _emscripten_get_now,\n  /** @export */\n  emscripten_glActiveTexture: _emscripten_glActiveTexture,\n  /** @export */\n  emscripten_glAttachShader: _emscripten_glAttachShader,\n  /** @export */\n  emscripten_glBeginQuery: _emscripten_glBeginQuery,\n  /** @export */\n  emscripten_glBeginQueryEXT: _emscripten_glBeginQueryEXT,\n  /** @export */\n  emscripten_glBeginTransformFeedback: _emscripten_glBeginTransformFeedback,\n  /** @export */\n  emscripten_glBindAttribLocation: _emscripten_glBindAttribLocation,\n  /** @export */\n  emscripten_glBindBuffer: _emscripten_glBindBuffer,\n  /** @export */\n  emscripten_glBindBufferBase: _emscripten_glBindBufferBase,\n  /** @export */\n  emscripten_glBindBufferRange: _emscripten_glBindBufferRange,\n  /** @export */\n  emscripten_glBindFramebuffer: _emscripten_glBindFramebuffer,\n  /** @export */\n  emscripten_glBindRenderbuffer: _emscripten_glBindRenderbuffer,\n  /** @export */\n  emscripten_glBindSampler: _emscripten_glBindSampler,\n  /** @export */\n  emscripten_glBindTexture: _emscripten_glBindTexture,\n  /** @export */\n  emscripten_glBindTransformFeedback: _emscripten_glBindTransformFeedback,\n  /** @export */\n  emscripten_glBindVertexArray: _emscripten_glBindVertexArray,\n  /** @export */\n  emscripten_glBindVertexArrayOES: _emscripten_glBindVertexArrayOES,\n  /** @export */\n  emscripten_glBlendColor: _emscripten_glBlendColor,\n  /** @export */\n  emscripten_glBlendEquation: _emscripten_glBlendEquation,\n  /** @export */\n  emscripten_glBlendEquationSeparate: _emscripten_glBlendEquationSeparate,\n  /** @export */\n  emscripten_glBlendFunc: _emscripten_glBlendFunc,\n  /** @export */\n  emscripten_glBlendFuncSeparate: _emscripten_glBlendFuncSeparate,\n  /** @export */\n  emscripten_glBlitFramebuffer: _emscripten_glBlitFramebuffer,\n  /** @export */\n  emscripten_glBufferData: _emscripten_glBufferData,\n  /** @export */\n  emscripten_glBufferSubData: _emscripten_glBufferSubData,\n  /** @export */\n  emscripten_glCheckFramebufferStatus: _emscripten_glCheckFramebufferStatus,\n  /** @export */\n  emscripten_glClear: _emscripten_glClear,\n  /** @export */\n  emscripten_glClearBufferfi: _emscripten_glClearBufferfi,\n  /** @export */\n  emscripten_glClearBufferfv: _emscripten_glClearBufferfv,\n  /** @export */\n  emscripten_glClearBufferiv: _emscripten_glClearBufferiv,\n  /** @export */\n  emscripten_glClearBufferuiv: _emscripten_glClearBufferuiv,\n  /** @export */\n  emscripten_glClearColor: _emscripten_glClearColor,\n  /** @export */\n  emscripten_glClearDepthf: _emscripten_glClearDepthf,\n  /** @export */\n  emscripten_glClearStencil: _emscripten_glClearStencil,\n  /** @export */\n  emscripten_glClientWaitSync: _emscripten_glClientWaitSync,\n  /** @export */\n  emscripten_glColorMask: _emscripten_glColorMask,\n  /** @export */\n  emscripten_glCompileShader: _emscripten_glCompileShader,\n  /** @export */\n  emscripten_glCompressedTexImage2D: _emscripten_glCompressedTexImage2D,\n  /** @export */\n  emscripten_glCompressedTexImage3D: _emscripten_glCompressedTexImage3D,\n  /** @export */\n  emscripten_glCompressedTexSubImage2D: _emscripten_glCompressedTexSubImage2D,\n  /** @export */\n  emscripten_glCompressedTexSubImage3D: _emscripten_glCompressedTexSubImage3D,\n  /** @export */\n  emscripten_glCopyBufferSubData: _emscripten_glCopyBufferSubData,\n  /** @export */\n  emscripten_glCopyTexImage2D: _emscripten_glCopyTexImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage2D: _emscripten_glCopyTexSubImage2D,\n  /** @export */\n  emscripten_glCopyTexSubImage3D: _emscripten_glCopyTexSubImage3D,\n  /** @export */\n  emscripten_glCreateProgram: _emscripten_glCreateProgram,\n  /** @export */\n  emscripten_glCreateShader: _emscripten_glCreateShader,\n  /** @export */\n  emscripten_glCullFace: _emscripten_glCullFace,\n  /** @export */\n  emscripten_glDeleteBuffers: _emscripten_glDeleteBuffers,\n  /** @export */\n  emscripten_glDeleteFramebuffers: _emscripten_glDeleteFramebuffers,\n  /** @export */\n  emscripten_glDeleteProgram: _emscripten_glDeleteProgram,\n  /** @export */\n  emscripten_glDeleteQueries: _emscripten_glDeleteQueries,\n  /** @export */\n  emscripten_glDeleteQueriesEXT: _emscripten_glDeleteQueriesEXT,\n  /** @export */\n  emscripten_glDeleteRenderbuffers: _emscripten_glDeleteRenderbuffers,\n  /** @export */\n  emscripten_glDeleteSamplers: _emscripten_glDeleteSamplers,\n  /** @export */\n  emscripten_glDeleteShader: _emscripten_glDeleteShader,\n  /** @export */\n  emscripten_glDeleteSync: _emscripten_glDeleteSync,\n  /** @export */\n  emscripten_glDeleteTextures: _emscripten_glDeleteTextures,\n  /** @export */\n  emscripten_glDeleteTransformFeedbacks: _emscripten_glDeleteTransformFeedbacks,\n  /** @export */\n  emscripten_glDeleteVertexArrays: _emscripten_glDeleteVertexArrays,\n  /** @export */\n  emscripten_glDeleteVertexArraysOES: _emscripten_glDeleteVertexArraysOES,\n  /** @export */\n  emscripten_glDepthFunc: _emscripten_glDepthFunc,\n  /** @export */\n  emscripten_glDepthMask: _emscripten_glDepthMask,\n  /** @export */\n  emscripten_glDepthRangef: _emscripten_glDepthRangef,\n  /** @export */\n  emscripten_glDetachShader: _emscripten_glDetachShader,\n  /** @export */\n  emscripten_glDisable: _emscripten_glDisable,\n  /** @export */\n  emscripten_glDisableVertexAttribArray: _emscripten_glDisableVertexAttribArray,\n  /** @export */\n  emscripten_glDrawArrays: _emscripten_glDrawArrays,\n  /** @export */\n  emscripten_glDrawArraysInstanced: _emscripten_glDrawArraysInstanced,\n  /** @export */\n  emscripten_glDrawArraysInstancedANGLE: _emscripten_glDrawArraysInstancedANGLE,\n  /** @export */\n  emscripten_glDrawArraysInstancedARB: _emscripten_glDrawArraysInstancedARB,\n  /** @export */\n  emscripten_glDrawArraysInstancedBaseInstanceWEBGL: _emscripten_glDrawArraysInstancedBaseInstanceWEBGL,\n  /** @export */\n  emscripten_glDrawArraysInstancedEXT: _emscripten_glDrawArraysInstancedEXT,\n  /** @export */\n  emscripten_glDrawArraysInstancedNV: _emscripten_glDrawArraysInstancedNV,\n  /** @export */\n  emscripten_glDrawBuffers: _emscripten_glDrawBuffers,\n  /** @export */\n  emscripten_glDrawBuffersEXT: _emscripten_glDrawBuffersEXT,\n  /** @export */\n  emscripten_glDrawBuffersWEBGL: _emscripten_glDrawBuffersWEBGL,\n  /** @export */\n  emscripten_glDrawElements: _emscripten_glDrawElements,\n  /** @export */\n  emscripten_glDrawElementsInstanced: _emscripten_glDrawElementsInstanced,\n  /** @export */\n  emscripten_glDrawElementsInstancedANGLE: _emscripten_glDrawElementsInstancedANGLE,\n  /** @export */\n  emscripten_glDrawElementsInstancedARB: _emscripten_glDrawElementsInstancedARB,\n  /** @export */\n  emscripten_glDrawElementsInstancedBaseVertexBaseInstanceWEBGL: _emscripten_glDrawElementsInstancedBaseVertexBaseInstanceWEBGL,\n  /** @export */\n  emscripten_glDrawElementsInstancedEXT: _emscripten_glDrawElementsInstancedEXT,\n  /** @export */\n  emscripten_glDrawElementsInstancedNV: _emscripten_glDrawElementsInstancedNV,\n  /** @export */\n  emscripten_glDrawRangeElements: _emscripten_glDrawRangeElements,\n  /** @export */\n  emscripten_glEnable: _emscripten_glEnable,\n  /** @export */\n  emscripten_glEnableVertexAttribArray: _emscripten_glEnableVertexAttribArray,\n  /** @export */\n  emscripten_glEndQuery: _emscripten_glEndQuery,\n  /** @export */\n  emscripten_glEndQueryEXT: _emscripten_glEndQueryEXT,\n  /** @export */\n  emscripten_glEndTransformFeedback: _emscripten_glEndTransformFeedback,\n  /** @export */\n  emscripten_glFenceSync: _emscripten_glFenceSync,\n  /** @export */\n  emscripten_glFinish: _emscripten_glFinish,\n  /** @export */\n  emscripten_glFlush: _emscripten_glFlush,\n  /** @export */\n  emscripten_glFramebufferRenderbuffer: _emscripten_glFramebufferRenderbuffer,\n  /** @export */\n  emscripten_glFramebufferTexture2D: _emscripten_glFramebufferTexture2D,\n  /** @export */\n  emscripten_glFramebufferTextureLayer: _emscripten_glFramebufferTextureLayer,\n  /** @export */\n  emscripten_glFrontFace: _emscripten_glFrontFace,\n  /** @export */\n  emscripten_glGenBuffers: _emscripten_glGenBuffers,\n  /** @export */\n  emscripten_glGenFramebuffers: _emscripten_glGenFramebuffers,\n  /** @export */\n  emscripten_glGenQueries: _emscripten_glGenQueries,\n  /** @export */\n  emscripten_glGenQueriesEXT: _emscripten_glGenQueriesEXT,\n  /** @export */\n  emscripten_glGenRenderbuffers: _emscripten_glGenRenderbuffers,\n  /** @export */\n  emscripten_glGenSamplers: _emscripten_glGenSamplers,\n  /** @export */\n  emscripten_glGenTextures: _emscripten_glGenTextures,\n  /** @export */\n  emscripten_glGenTransformFeedbacks: _emscripten_glGenTransformFeedbacks,\n  /** @export */\n  emscripten_glGenVertexArrays: _emscripten_glGenVertexArrays,\n  /** @export */\n  emscripten_glGenVertexArraysOES: _emscripten_glGenVertexArraysOES,\n  /** @export */\n  emscripten_glGenerateMipmap: _emscripten_glGenerateMipmap,\n  /** @export */\n  emscripten_glGetActiveAttrib: _emscripten_glGetActiveAttrib,\n  /** @export */\n  emscripten_glGetActiveUniform: _emscripten_glGetActiveUniform,\n  /** @export */\n  emscripten_glGetActiveUniformBlockName: _emscripten_glGetActiveUniformBlockName,\n  /** @export */\n  emscripten_glGetActiveUniformBlockiv: _emscripten_glGetActiveUniformBlockiv,\n  /** @export */\n  emscripten_glGetActiveUniformsiv: _emscripten_glGetActiveUniformsiv,\n  /** @export */\n  emscripten_glGetAttachedShaders: _emscripten_glGetAttachedShaders,\n  /** @export */\n  emscripten_glGetAttribLocation: _emscripten_glGetAttribLocation,\n  /** @export */\n  emscripten_glGetBooleanv: _emscripten_glGetBooleanv,\n  /** @export */\n  emscripten_glGetBufferParameteri64v: _emscripten_glGetBufferParameteri64v,\n  /** @export */\n  emscripten_glGetBufferParameteriv: _emscripten_glGetBufferParameteriv,\n  /** @export */\n  emscripten_glGetError: _emscripten_glGetError,\n  /** @export */\n  emscripten_glGetFloatv: _emscripten_glGetFloatv,\n  /** @export */\n  emscripten_glGetFragDataLocation: _emscripten_glGetFragDataLocation,\n  /** @export */\n  emscripten_glGetFramebufferAttachmentParameteriv: _emscripten_glGetFramebufferAttachmentParameteriv,\n  /** @export */\n  emscripten_glGetInteger64i_v: _emscripten_glGetInteger64i_v,\n  /** @export */\n  emscripten_glGetInteger64v: _emscripten_glGetInteger64v,\n  /** @export */\n  emscripten_glGetIntegeri_v: _emscripten_glGetIntegeri_v,\n  /** @export */\n  emscripten_glGetIntegerv: _emscripten_glGetIntegerv,\n  /** @export */\n  emscripten_glGetInternalformativ: _emscripten_glGetInternalformativ,\n  /** @export */\n  emscripten_glGetProgramBinary: _emscripten_glGetProgramBinary,\n  /** @export */\n  emscripten_glGetProgramInfoLog: _emscripten_glGetProgramInfoLog,\n  /** @export */\n  emscripten_glGetProgramiv: _emscripten_glGetProgramiv,\n  /** @export */\n  emscripten_glGetQueryObjecti64vEXT: _emscripten_glGetQueryObjecti64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectivEXT: _emscripten_glGetQueryObjectivEXT,\n  /** @export */\n  emscripten_glGetQueryObjectui64vEXT: _emscripten_glGetQueryObjectui64vEXT,\n  /** @export */\n  emscripten_glGetQueryObjectuiv: _emscripten_glGetQueryObjectuiv,\n  /** @export */\n  emscripten_glGetQueryObjectuivEXT: _emscripten_glGetQueryObjectuivEXT,\n  /** @export */\n  emscripten_glGetQueryiv: _emscripten_glGetQueryiv,\n  /** @export */\n  emscripten_glGetQueryivEXT: _emscripten_glGetQueryivEXT,\n  /** @export */\n  emscripten_glGetRenderbufferParameteriv: _emscripten_glGetRenderbufferParameteriv,\n  /** @export */\n  emscripten_glGetSamplerParameterfv: _emscripten_glGetSamplerParameterfv,\n  /** @export */\n  emscripten_glGetSamplerParameteriv: _emscripten_glGetSamplerParameteriv,\n  /** @export */\n  emscripten_glGetShaderInfoLog: _emscripten_glGetShaderInfoLog,\n  /** @export */\n  emscripten_glGetShaderPrecisionFormat: _emscripten_glGetShaderPrecisionFormat,\n  /** @export */\n  emscripten_glGetShaderSource: _emscripten_glGetShaderSource,\n  /** @export */\n  emscripten_glGetShaderiv: _emscripten_glGetShaderiv,\n  /** @export */\n  emscripten_glGetString: _emscripten_glGetString,\n  /** @export */\n  emscripten_glGetStringi: _emscripten_glGetStringi,\n  /** @export */\n  emscripten_glGetSynciv: _emscripten_glGetSynciv,\n  /** @export */\n  emscripten_glGetTexParameterfv: _emscripten_glGetTexParameterfv,\n  /** @export */\n  emscripten_glGetTexParameteriv: _emscripten_glGetTexParameteriv,\n  /** @export */\n  emscripten_glGetTransformFeedbackVarying: _emscripten_glGetTransformFeedbackVarying,\n  /** @export */\n  emscripten_glGetUniformBlockIndex: _emscripten_glGetUniformBlockIndex,\n  /** @export */\n  emscripten_glGetUniformIndices: _emscripten_glGetUniformIndices,\n  /** @export */\n  emscripten_glGetUniformLocation: _emscripten_glGetUniformLocation,\n  /** @export */\n  emscripten_glGetUniformfv: _emscripten_glGetUniformfv,\n  /** @export */\n  emscripten_glGetUniformiv: _emscripten_glGetUniformiv,\n  /** @export */\n  emscripten_glGetUniformuiv: _emscripten_glGetUniformuiv,\n  /** @export */\n  emscripten_glGetVertexAttribIiv: _emscripten_glGetVertexAttribIiv,\n  /** @export */\n  emscripten_glGetVertexAttribIuiv: _emscripten_glGetVertexAttribIuiv,\n  /** @export */\n  emscripten_glGetVertexAttribPointerv: _emscripten_glGetVertexAttribPointerv,\n  /** @export */\n  emscripten_glGetVertexAttribfv: _emscripten_glGetVertexAttribfv,\n  /** @export */\n  emscripten_glGetVertexAttribiv: _emscripten_glGetVertexAttribiv,\n  /** @export */\n  emscripten_glHint: _emscripten_glHint,\n  /** @export */\n  emscripten_glInvalidateFramebuffer: _emscripten_glInvalidateFramebuffer,\n  /** @export */\n  emscripten_glInvalidateSubFramebuffer: _emscripten_glInvalidateSubFramebuffer,\n  /** @export */\n  emscripten_glIsBuffer: _emscripten_glIsBuffer,\n  /** @export */\n  emscripten_glIsEnabled: _emscripten_glIsEnabled,\n  /** @export */\n  emscripten_glIsFramebuffer: _emscripten_glIsFramebuffer,\n  /** @export */\n  emscripten_glIsProgram: _emscripten_glIsProgram,\n  /** @export */\n  emscripten_glIsQuery: _emscripten_glIsQuery,\n  /** @export */\n  emscripten_glIsQueryEXT: _emscripten_glIsQueryEXT,\n  /** @export */\n  emscripten_glIsRenderbuffer: _emscripten_glIsRenderbuffer,\n  /** @export */\n  emscripten_glIsSampler: _emscripten_glIsSampler,\n  /** @export */\n  emscripten_glIsShader: _emscripten_glIsShader,\n  /** @export */\n  emscripten_glIsSync: _emscripten_glIsSync,\n  /** @export */\n  emscripten_glIsTexture: _emscripten_glIsTexture,\n  /** @export */\n  emscripten_glIsTransformFeedback: _emscripten_glIsTransformFeedback,\n  /** @export */\n  emscripten_glIsVertexArray: _emscripten_glIsVertexArray,\n  /** @export */\n  emscripten_glIsVertexArrayOES: _emscripten_glIsVertexArrayOES,\n  /** @export */\n  emscripten_glLineWidth: _emscripten_glLineWidth,\n  /** @export */\n  emscripten_glLinkProgram: _emscripten_glLinkProgram,\n  /** @export */\n  emscripten_glMultiDrawArraysInstancedBaseInstanceWEBGL: _emscripten_glMultiDrawArraysInstancedBaseInstanceWEBGL,\n  /** @export */\n  emscripten_glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL: _emscripten_glMultiDrawElementsInstancedBaseVertexBaseInstanceWEBGL,\n  /** @export */\n  emscripten_glPauseTransformFeedback: _emscripten_glPauseTransformFeedback,\n  /** @export */\n  emscripten_glPixelStorei: _emscripten_glPixelStorei,\n  /** @export */\n  emscripten_glPolygonOffset: _emscripten_glPolygonOffset,\n  /** @export */\n  emscripten_glProgramBinary: _emscripten_glProgramBinary,\n  /** @export */\n  emscripten_glProgramParameteri: _emscripten_glProgramParameteri,\n  /** @export */\n  emscripten_glQueryCounterEXT: _emscripten_glQueryCounterEXT,\n  /** @export */\n  emscripten_glReadBuffer: _emscripten_glReadBuffer,\n  /** @export */\n  emscripten_glReadPixels: _emscripten_glReadPixels,\n  /** @export */\n  emscripten_glReleaseShaderCompiler: _emscripten_glReleaseShaderCompiler,\n  /** @export */\n  emscripten_glRenderbufferStorage: _emscripten_glRenderbufferStorage,\n  /** @export */\n  emscripten_glRenderbufferStorageMultisample: _emscripten_glRenderbufferStorageMultisample,\n  /** @export */\n  emscripten_glResumeTransformFeedback: _emscripten_glResumeTransformFeedback,\n  /** @export */\n  emscripten_glSampleCoverage: _emscripten_glSampleCoverage,\n  /** @export */\n  emscripten_glSamplerParameterf: _emscripten_glSamplerParameterf,\n  /** @export */\n  emscripten_glSamplerParameterfv: _emscripten_glSamplerParameterfv,\n  /** @export */\n  emscripten_glSamplerParameteri: _emscripten_glSamplerParameteri,\n  /** @export */\n  emscripten_glSamplerParameteriv: _emscripten_glSamplerParameteriv,\n  /** @export */\n  emscripten_glScissor: _emscripten_glScissor,\n  /** @export */\n  emscripten_glShaderBinary: _emscripten_glShaderBinary,\n  /** @export */\n  emscripten_glShaderSource: _emscripten_glShaderSource,\n  /** @export */\n  emscripten_glStencilFunc: _emscripten_glStencilFunc,\n  /** @export */\n  emscripten_glStencilFuncSeparate: _emscripten_glStencilFuncSeparate,\n  /** @export */\n  emscripten_glStencilMask: _emscripten_glStencilMask,\n  /** @export */\n  emscripten_glStencilMaskSeparate: _emscripten_glStencilMaskSeparate,\n  /** @export */\n  emscripten_glStencilOp: _emscripten_glStencilOp,\n  /** @export */\n  emscripten_glStencilOpSeparate: _emscripten_glStencilOpSeparate,\n  /** @export */\n  emscripten_glTexImage2D: _emscripten_glTexImage2D,\n  /** @export */\n  emscripten_glTexImage3D: _emscripten_glTexImage3D,\n  /** @export */\n  emscripten_glTexParameterf: _emscripten_glTexParameterf,\n  /** @export */\n  emscripten_glTexParameterfv: _emscripten_glTexParameterfv,\n  /** @export */\n  emscripten_glTexParameteri: _emscripten_glTexParameteri,\n  /** @export */\n  emscripten_glTexParameteriv: _emscripten_glTexParameteriv,\n  /** @export */\n  emscripten_glTexStorage2D: _emscripten_glTexStorage2D,\n  /** @export */\n  emscripten_glTexStorage3D: _emscripten_glTexStorage3D,\n  /** @export */\n  emscripten_glTexSubImage2D: _emscripten_glTexSubImage2D,\n  /** @export */\n  emscripten_glTexSubImage3D: _emscripten_glTexSubImage3D,\n  /** @export */\n  emscripten_glTransformFeedbackVaryings: _emscripten_glTransformFeedbackVaryings,\n  /** @export */\n  emscripten_glUniform1f: _emscripten_glUniform1f,\n  /** @export */\n  emscripten_glUniform1fv: _emscripten_glUniform1fv,\n  /** @export */\n  emscripten_glUniform1i: _emscripten_glUniform1i,\n  /** @export */\n  emscripten_glUniform1iv: _emscripten_glUniform1iv,\n  /** @export */\n  emscripten_glUniform1ui: _emscripten_glUniform1ui,\n  /** @export */\n  emscripten_glUniform1uiv: _emscripten_glUniform1uiv,\n  /** @export */\n  emscripten_glUniform2f: _emscripten_glUniform2f,\n  /** @export */\n  emscripten_glUniform2fv: _emscripten_glUniform2fv,\n  /** @export */\n  emscripten_glUniform2i: _emscripten_glUniform2i,\n  /** @export */\n  emscripten_glUniform2iv: _emscripten_glUniform2iv,\n  /** @export */\n  emscripten_glUniform2ui: _emscripten_glUniform2ui,\n  /** @export */\n  emscripten_glUniform2uiv: _emscripten_glUniform2uiv,\n  /** @export */\n  emscripten_glUniform3f: _emscripten_glUniform3f,\n  /** @export */\n  emscripten_glUniform3fv: _emscripten_glUniform3fv,\n  /** @export */\n  emscripten_glUniform3i: _emscripten_glUniform3i,\n  /** @export */\n  emscripten_glUniform3iv: _emscripten_glUniform3iv,\n  /** @export */\n  emscripten_glUniform3ui: _emscripten_glUniform3ui,\n  /** @export */\n  emscripten_glUniform3uiv: _emscripten_glUniform3uiv,\n  /** @export */\n  emscripten_glUniform4f: _emscripten_glUniform4f,\n  /** @export */\n  emscripten_glUniform4fv: _emscripten_glUniform4fv,\n  /** @export */\n  emscripten_glUniform4i: _emscripten_glUniform4i,\n  /** @export */\n  emscripten_glUniform4iv: _emscripten_glUniform4iv,\n  /** @export */\n  emscripten_glUniform4ui: _emscripten_glUniform4ui,\n  /** @export */\n  emscripten_glUniform4uiv: _emscripten_glUniform4uiv,\n  /** @export */\n  emscripten_glUniformBlockBinding: _emscripten_glUniformBlockBinding,\n  /** @export */\n  emscripten_glUniformMatrix2fv: _emscripten_glUniformMatrix2fv,\n  /** @export */\n  emscripten_glUniformMatrix2x3fv: _emscripten_glUniformMatrix2x3fv,\n  /** @export */\n  emscripten_glUniformMatrix2x4fv: _emscripten_glUniformMatrix2x4fv,\n  /** @export */\n  emscripten_glUniformMatrix3fv: _emscripten_glUniformMatrix3fv,\n  /** @export */\n  emscripten_glUniformMatrix3x2fv: _emscripten_glUniformMatrix3x2fv,\n  /** @export */\n  emscripten_glUniformMatrix3x4fv: _emscripten_glUniformMatrix3x4fv,\n  /** @export */\n  emscripten_glUniformMatrix4fv: _emscripten_glUniformMatrix4fv,\n  /** @export */\n  emscripten_glUniformMatrix4x2fv: _emscripten_glUniformMatrix4x2fv,\n  /** @export */\n  emscripten_glUniformMatrix4x3fv: _emscripten_glUniformMatrix4x3fv,\n  /** @export */\n  emscripten_glUseProgram: _emscripten_glUseProgram,\n  /** @export */\n  emscripten_glValidateProgram: _emscripten_glValidateProgram,\n  /** @export */\n  emscripten_glVertexAttrib1f: _emscripten_glVertexAttrib1f,\n  /** @export */\n  emscripten_glVertexAttrib1fv: _emscripten_glVertexAttrib1fv,\n  /** @export */\n  emscripten_glVertexAttrib2f: _emscripten_glVertexAttrib2f,\n  /** @export */\n  emscripten_glVertexAttrib2fv: _emscripten_glVertexAttrib2fv,\n  /** @export */\n  emscripten_glVertexAttrib3f: _emscripten_glVertexAttrib3f,\n  /** @export */\n  emscripten_glVertexAttrib3fv: _emscripten_glVertexAttrib3fv,\n  /** @export */\n  emscripten_glVertexAttrib4f: _emscripten_glVertexAttrib4f,\n  /** @export */\n  emscripten_glVertexAttrib4fv: _emscripten_glVertexAttrib4fv,\n  /** @export */\n  emscripten_glVertexAttribDivisor: _emscripten_glVertexAttribDivisor,\n  /** @export */\n  emscripten_glVertexAttribDivisorANGLE: _emscripten_glVertexAttribDivisorANGLE,\n  /** @export */\n  emscripten_glVertexAttribDivisorARB: _emscripten_glVertexAttribDivisorARB,\n  /** @export */\n  emscripten_glVertexAttribDivisorEXT: _emscripten_glVertexAttribDivisorEXT,\n  /** @export */\n  emscripten_glVertexAttribDivisorNV: _emscripten_glVertexAttribDivisorNV,\n  /** @export */\n  emscripten_glVertexAttribI4i: _emscripten_glVertexAttribI4i,\n  /** @export */\n  emscripten_glVertexAttribI4iv: _emscripten_glVertexAttribI4iv,\n  /** @export */\n  emscripten_glVertexAttribI4ui: _emscripten_glVertexAttribI4ui,\n  /** @export */\n  emscripten_glVertexAttribI4uiv: _emscripten_glVertexAttribI4uiv,\n  /** @export */\n  emscripten_glVertexAttribIPointer: _emscripten_glVertexAttribIPointer,\n  /** @export */\n  emscripten_glVertexAttribPointer: _emscripten_glVertexAttribPointer,\n  /** @export */\n  emscripten_glViewport: _emscripten_glViewport,\n  /** @export */\n  emscripten_glWaitSync: _emscripten_glWaitSync,\n  /** @export */\n  emscripten_resize_heap: _emscripten_resize_heap,\n  /** @export */\n  emscripten_ubq_codec_createAudioDecoder: _emscripten_ubq_codec_createAudioDecoder,\n  /** @export */\n  emscripten_ubq_codec_createAudioEncoder: _emscripten_ubq_codec_createAudioEncoder,\n  /** @export */\n  emscripten_ubq_codec_createVideoDecoder: _emscripten_ubq_codec_createVideoDecoder,\n  /** @export */\n  emscripten_ubq_codec_createVideoEncoder: _emscripten_ubq_codec_createVideoEncoder,\n  /** @export */\n  emscripten_ubq_codec_decodeAudioChunk: _emscripten_ubq_codec_decodeAudioChunk,\n  /** @export */\n  emscripten_ubq_codec_decodeVideoChunk: _emscripten_ubq_codec_decodeVideoChunk,\n  /** @export */\n  emscripten_ubq_codec_destroyAudioDecoder: _emscripten_ubq_codec_destroyAudioDecoder,\n  /** @export */\n  emscripten_ubq_codec_destroyAudioEncoder: _emscripten_ubq_codec_destroyAudioEncoder,\n  /** @export */\n  emscripten_ubq_codec_destroyVideoDecoder: _emscripten_ubq_codec_destroyVideoDecoder,\n  /** @export */\n  emscripten_ubq_codec_destroyVideoEncoder: _emscripten_ubq_codec_destroyVideoEncoder,\n  /** @export */\n  emscripten_ubq_codec_encodeAudioData: _emscripten_ubq_codec_encodeAudioData,\n  /** @export */\n  emscripten_ubq_codec_encodeVideoFrame: _emscripten_ubq_codec_encodeVideoFrame,\n  /** @export */\n  emscripten_ubq_codec_finalizeAudioEncoding: _emscripten_ubq_codec_finalizeAudioEncoding,\n  /** @export */\n  emscripten_ubq_codec_finalizeVideoEncoding: _emscripten_ubq_codec_finalizeVideoEncoding,\n  /** @export */\n  emscripten_ubq_codec_flushAudioDecoder: _emscripten_ubq_codec_flushAudioDecoder,\n  /** @export */\n  emscripten_ubq_codec_flushVideoDecoder: _emscripten_ubq_codec_flushVideoDecoder,\n  /** @export */\n  emscripten_ubq_codec_getAudioDecoderQueueSize: _emscripten_ubq_codec_getAudioDecoderQueueSize,\n  /** @export */\n  emscripten_ubq_codec_getNumberOfDecodedVideoFrames: _emscripten_ubq_codec_getNumberOfDecodedVideoFrames,\n  /** @export */\n  emscripten_ubq_codec_getWrittenAudioFrames: _emscripten_ubq_codec_getWrittenAudioFrames,\n  /** @export */\n  emscripten_ubq_codec_isFlushingAudioDecoder: _emscripten_ubq_codec_isFlushingAudioDecoder,\n  /** @export */\n  emscripten_ubq_codec_isFlushingVideoDecoder: _emscripten_ubq_codec_isFlushingVideoDecoder,\n  /** @export */\n  emscripten_ubq_codec_isSupported: _emscripten_ubq_codec_isSupported,\n  /** @export */\n  emscripten_ubq_codec_setRequestedVideoFrame: _emscripten_ubq_codec_setRequestedVideoFrame,\n  /** @export */\n  emscripten_ubq_codec_setVideoTextures: _emscripten_ubq_codec_setVideoTextures,\n  /** @export */\n  emscripten_ubq_fetch_allocateFetchResult: _emscripten_ubq_fetch_allocateFetchResult,\n  /** @export */\n  emscripten_ubq_fetch_clear: _emscripten_ubq_fetch_clear,\n  /** @export */\n  emscripten_ubq_fetch_createHeader: _emscripten_ubq_fetch_createHeader,\n  /** @export */\n  emscripten_ubq_fetch_deleteHeader: _emscripten_ubq_fetch_deleteHeader,\n  /** @export */\n  emscripten_ubq_fetch_dispatchAsyncFetch: _emscripten_ubq_fetch_dispatchAsyncFetch,\n  /** @export */\n  emscripten_ubq_fetch_freeFetchResult: _emscripten_ubq_fetch_freeFetchResult,\n  /** @export */\n  emscripten_ubq_fetch_getFetchCompletedBytes: _emscripten_ubq_fetch_getFetchCompletedBytes,\n  /** @export */\n  emscripten_ubq_fetch_getFetchResultAddress: _emscripten_ubq_fetch_getFetchResultAddress,\n  /** @export */\n  emscripten_ubq_fetch_getFetchResultLength: _emscripten_ubq_fetch_getFetchResultLength,\n  /** @export */\n  emscripten_ubq_fetch_getFetchState: _emscripten_ubq_fetch_getFetchState,\n  /** @export */\n  emscripten_ubq_fetch_getFetchTotalBytes: _emscripten_ubq_fetch_getFetchTotalBytes,\n  /** @export */\n  emscripten_ubq_settings_getForceWebGL1: _emscripten_ubq_settings_getForceWebGL1,\n  /** @export */\n  emscripten_webgl_create_context: _emscripten_webgl_create_context,\n  /** @export */\n  emscripten_webgl_destroy_context: _emscripten_webgl_destroy_context,\n  /** @export */\n  emscripten_webgl_enable_OES_vertex_array_object: _emscripten_webgl_enable_OES_vertex_array_object,\n  /** @export */\n  emscripten_webgl_enable_WEBGL_draw_buffers: _emscripten_webgl_enable_WEBGL_draw_buffers,\n  /** @export */\n  emscripten_webgl_enable_WEBGL_multi_draw: _emscripten_webgl_enable_WEBGL_multi_draw,\n  /** @export */\n  emscripten_webgl_enable_extension: _emscripten_webgl_enable_extension,\n  /** @export */\n  emscripten_webgl_get_context_attributes: _emscripten_webgl_get_context_attributes,\n  /** @export */\n  emscripten_webgl_make_context_current: _emscripten_webgl_make_context_current,\n  /** @export */\n  environ_get: _environ_get,\n  /** @export */\n  environ_sizes_get: _environ_sizes_get,\n  /** @export */\n  exit: _exit,\n  /** @export */\n  fd_close: _fd_close,\n  /** @export */\n  fd_fdstat_get: _fd_fdstat_get,\n  /** @export */\n  fd_pread: _fd_pread,\n  /** @export */\n  fd_read: _fd_read,\n  /** @export */\n  fd_seek: _fd_seek,\n  /** @export */\n  fd_write: _fd_write,\n  /** @export */\n  getItem: getItem,\n  /** @export */\n  getTrackingOverrideEndpoint: getTrackingOverrideEndpoint,\n  /** @export */\n  getWindowHostname: getWindowHostname,\n  /** @export */\n  getentropy: _getentropy,\n  /** @export */\n  invoke_fff: invoke_fff,\n  /** @export */\n  invoke_fi: invoke_fi,\n  /** @export */\n  invoke_fii: invoke_fii,\n  /** @export */\n  invoke_fiif: invoke_fiif,\n  /** @export */\n  invoke_i: invoke_i,\n  /** @export */\n  invoke_iff: invoke_iff,\n  /** @export */\n  invoke_ii: invoke_ii,\n  /** @export */\n  invoke_iiffiiiffiiiiiii: invoke_iiffiiiffiiiiiii,\n  /** @export */\n  invoke_iii: invoke_iii,\n  /** @export */\n  invoke_iiii: invoke_iiii,\n  /** @export */\n  invoke_iiiii: invoke_iiiii,\n  /** @export */\n  invoke_iiiiii: invoke_iiiiii,\n  /** @export */\n  invoke_iiiiiii: invoke_iiiiiii,\n  /** @export */\n  invoke_iiiiiiiiii: invoke_iiiiiiiiii,\n  /** @export */\n  invoke_v: invoke_v,\n  /** @export */\n  invoke_vi: invoke_vi,\n  /** @export */\n  invoke_vifi: invoke_vifi,\n  /** @export */\n  invoke_vii: invoke_vii,\n  /** @export */\n  invoke_viii: invoke_viii,\n  /** @export */\n  invoke_viiii: invoke_viiii,\n  /** @export */\n  invoke_viiiii: invoke_viiiii,\n  /** @export */\n  invoke_viiiiii: invoke_viiiiii,\n  /** @export */\n  invoke_viiiiiii: invoke_viiiiiii,\n  /** @export */\n  invoke_viiiiiiiii: invoke_viiiiiiiii,\n  /** @export */\n  isLocalStorageDefined: isLocalStorageDefined,\n  /** @export */\n  isLocalTrackingEnabled: isLocalTrackingEnabled,\n  /** @export */\n  jsUpdateTexture: jsUpdateTexture,\n  /** @export */\n  memory: wasmMemory,\n  /** @export */\n  setItem: setItem,\n  /** @export */\n  strftime_l: _strftime_l\n};\nvar wasmExports = createWasm();\nvar ___wasm_call_ctors = createExportWrapper('__wasm_call_ctors');\nvar _malloc = Module['_malloc'] = createExportWrapper('malloc');\nvar _main = Module['_main'] = createExportWrapper('__main_argc_argv');\nvar _free = Module['_free'] = createExportWrapper('free');\nvar _ma_malloc_emscripten = Module['_ma_malloc_emscripten'] = createExportWrapper('ma_malloc_emscripten');\nvar _ma_free_emscripten = Module['_ma_free_emscripten'] = createExportWrapper('ma_free_emscripten');\nvar _ma_device_process_pcm_frames_capture__webaudio = Module['_ma_device_process_pcm_frames_capture__webaudio'] = createExportWrapper('ma_device_process_pcm_frames_capture__webaudio');\nvar _ma_device_process_pcm_frames_playback__webaudio = Module['_ma_device_process_pcm_frames_playback__webaudio'] = createExportWrapper('ma_device_process_pcm_frames_playback__webaudio');\nvar _fflush = createExportWrapper('fflush');\nvar setTempRet0 = createExportWrapper('setTempRet0');\nvar ___getTypeName = createExportWrapper('__getTypeName');\nvar _emscripten_builtin_memalign = createExportWrapper('emscripten_builtin_memalign');\nvar _setThrew = createExportWrapper('setThrew');\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports['emscripten_stack_init'])();\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'])();\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'])();\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'])();\nvar stackSave = createExportWrapper('stackSave');\nvar stackRestore = createExportWrapper('stackRestore');\nvar stackAlloc = createExportWrapper('stackAlloc');\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'])();\nvar ___cxa_decrement_exception_refcount = createExportWrapper('__cxa_decrement_exception_refcount');\nvar ___cxa_increment_exception_refcount = createExportWrapper('__cxa_increment_exception_refcount');\nvar ___cxa_can_catch = createExportWrapper('__cxa_can_catch');\nvar ___cxa_is_pointer_type = createExportWrapper('__cxa_is_pointer_type');\nvar ___start_em_js = Module['___start_em_js'] = 2587791;\nvar ___stop_em_js = Module['___stop_em_js'] = 2588845;\nfunction invoke_iii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_ii(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_v(index) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)();\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vi(index,a1) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_fiif(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_fi(index,a1) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_fff(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiffiiiffiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_vifi(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_fii(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iff(index,a1,a2) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_i(index) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)();\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiii(index,a1,a2,a3) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4,a5);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {\n  var sp = stackSave();\n  try {\n    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\nfunction invoke_iiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {\n  var sp = stackSave();\n  try {\n    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);\n  } catch(e) {\n    stackRestore(sp);\n    if (e !== e+0) throw e;\n    _setThrew(1, 0);\n  }\n}\n\n\n// include: postamble.js\n// === Auto-generated postamble setup entry stuff ===\n\nModule['addRunDependency'] = addRunDependency;\nModule['removeRunDependency'] = removeRunDependency;\nModule['FS_createPath'] = FS.createPath;\nModule['FS_createLazyFile'] = FS.createLazyFile;\nModule['FS_createDevice'] = FS.createDevice;\nModule['ccall'] = ccall;\nModule['getValue'] = getValue;\nModule['UTF8ToString'] = UTF8ToString;\nModule['specialHTMLTargets'] = specialHTMLTargets;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_unlink'] = FS.unlink;\nvar missingLibrarySymbols = [\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'convertI32PairToI53',\n  'convertI32PairToI53Checked',\n  'convertU32PairToI53',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getCallstack',\n  'emscriptenLog',\n  'convertPCtoSourceLocation',\n  'runMainThreadEmAsm',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'getDynCaller',\n  'dynCall',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'asmjsMangle',\n  'getNativeTypeSize',\n  'STACK_SIZE',\n  'STACK_ALIGN',\n  'POINTER_SIZE',\n  'ASSERTIONS',\n  'cwrap',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'getFunctionAddress',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayToString',\n  'AsciiToString',\n  'registerKeyEventCallback',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'jsStackTrace',\n  'stackTrace',\n  'checkWasiClock',\n  'wasiRightsToMuslOFlags',\n  'wasiOFlagsToMuslOFlags',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'getPromise',\n  'makePromise',\n  'idsToPromises',\n  'makePromiseCallback',\n  'Browser_asyncPrepareDataCounter',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'FS_mkdirTree',\n  '_setNetworkCallback',\n  'webgl_enable_ANGLE_instanced_arrays',\n  'writeGLArray',\n  'registerWebGlEventCallback',\n  'runAndAbortIfError',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'webgl_enable_WEBGL_draw_instanced_base_vertex_base_instance',\n  'webgl_enable_WEBGL_multi_draw_instanced_base_vertex_base_instance',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'setErrNo',\n  'getFunctionArgsName',\n  'createJsInvokerSignature',\n  'createJsInvoker',\n  'registerInheritedInstance',\n  'unregisterInheritedInstance',\n  'validateThis',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\nvar unexportedSymbols = [\n  'run',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'FS_createFolder',\n  'FS_createLink',\n  'FS_readFile',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'wasmMemory',\n  'wasmExports',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'writeI53ToI64',\n  'readI53FromI64',\n  'readI53FromU64',\n  'MAX_INT53',\n  'MIN_INT53',\n  'bigintToI53Checked',\n  'ptrToString',\n  'zeroMemory',\n  'exitJS',\n  'getHeapMax',\n  'growMemory',\n  'ENV',\n  'MONTH_DAYS_REGULAR',\n  'MONTH_DAYS_LEAP',\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\n  'MONTH_DAYS_LEAP_CUMULATIVE',\n  'isLeapYear',\n  'ydayFromDate',\n  'arraySum',\n  'addDays',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'DNS',\n  'Protocols',\n  'Sockets',\n  'initRandomFill',\n  'randomFill',\n  'timers',\n  'warnOnce',\n  'UNWIND_CACHE',\n  'readEmAsmArgsArray',\n  'readEmAsmArgs',\n  'runEmAsmFunction',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'handleException',\n  'keepRuntimeAlive',\n  'callUserCallback',\n  'maybeExit',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'HandleAllocator',\n  'wasmTable',\n  'noExitRuntime',\n  'getCFunc',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'setValue',\n  'PATH',\n  'PATH_FS',\n  'UTF8Decoder',\n  'UTF8ArrayToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'intArrayFromString',\n  'stringToAscii',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'stringToNewUTF8',\n  'stringToUTF8OnStack',\n  'writeArrayToMemory',\n  'JSEvents',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'ExitStatus',\n  'getEnvStrings',\n  'doReadv',\n  'doWritev',\n  'safeSetTimeout',\n  'promiseMap',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'ExceptionInfo',\n  'findMatchingCatch',\n  'Browser',\n  'setMainLoop',\n  'wget',\n  'SYSCALLS',\n  'preloadPlugins',\n  'FS_modeStringToFlags',\n  'FS_getMode',\n  'FS_stdin_getChar_buffer',\n  'FS_stdin_getChar',\n  'FS',\n  'MEMFS',\n  'TTY',\n  'PIPEFS',\n  'SOCKFS',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'miniTempWebGLIntBuffers',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'webgl_enable_OES_vertex_array_object',\n  'webgl_enable_WEBGL_draw_buffers',\n  'webgl_enable_WEBGL_multi_draw',\n  'GL',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'colorChannelsInGlTextureFormat',\n  'emscriptenWebGLGetTexPixelData',\n  '__glGenObject',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  '__glGetActiveAttribOrUniform',\n  'emscripten_webgl_power_preferences',\n  'AL',\n  'GLUT',\n  'EGL',\n  'GLEW',\n  'IDBStore',\n  'SDL',\n  'SDL_gfx',\n  'emscriptenWebGLGetIndexed',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'InternalError',\n  'BindingError',\n  'throwInternalError',\n  'throwBindingError',\n  'registeredTypes',\n  'awaitingDependencies',\n  'typeDependencies',\n  'tupleRegistrations',\n  'structRegistrations',\n  'sharedRegisterType',\n  'whenDependentTypesAreResolved',\n  'embind_charCodes',\n  'embind_init_charCodes',\n  'readLatin1String',\n  'getTypeName',\n  'getFunctionName',\n  'heap32VectorToArray',\n  'requireRegisteredType',\n  'usesDestructorStack',\n  'UnboundTypeError',\n  'PureVirtualError',\n  'GenericWireTypeSize',\n  'EmValType',\n  'init_embind',\n  'throwUnboundTypeError',\n  'ensureOverloadTable',\n  'exposePublicSymbol',\n  'replacePublicSymbol',\n  'extendError',\n  'createNamedFunction',\n  'embindRepr',\n  'registeredInstances',\n  'getBasestPointer',\n  'getInheritedInstance',\n  'getInheritedInstanceCount',\n  'getLiveInheritedInstances',\n  'registeredPointers',\n  'registerType',\n  'integerReadValueFromPointer',\n  'enumReadValueFromPointer',\n  'floatReadValueFromPointer',\n  'simpleReadValueFromPointer',\n  'readPointer',\n  'runDestructors',\n  'craftInvokerFunction',\n  'embind__requireFunction',\n  'genericPointerToWireType',\n  'constNoSmartPtrRawPointerToWireType',\n  'nonConstNoSmartPtrRawPointerToWireType',\n  'init_RegisteredPointer',\n  'RegisteredPointer',\n  'RegisteredPointer_fromWireType',\n  'runDestructor',\n  'releaseClassHandle',\n  'finalizationRegistry',\n  'detachFinalizer_deps',\n  'detachFinalizer',\n  'attachFinalizer',\n  'makeClassHandle',\n  'init_ClassHandle',\n  'ClassHandle',\n  'throwInstanceAlreadyDeleted',\n  'deletionQueue',\n  'flushPendingDeletes',\n  'delayFunction',\n  'setDelayFunction',\n  'RegisteredClass',\n  'shallowCopyInternalPointer',\n  'downcastPointer',\n  'upcastPointer',\n  'char_0',\n  'char_9',\n  'makeLegalFunctionName',\n  'emval_handles',\n  'emval_symbols',\n  'init_emval',\n  'count_emval_handles',\n  'getStringOrSymbol',\n  'Emval',\n  'emval_get_global',\n  'emval_returnValue',\n  'emval_lookupTypes',\n  'emval_methodCallers',\n  'emval_addMethodCaller',\n  'reflectConstruct',\n];\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\n\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction callMain(args = []) {\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\n  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');\n\n  var entryFunction = _main;\n\n  args.unshift(thisProgram);\n\n  var argc = args.length;\n  var argv = stackAlloc((argc + 1) * 4);\n  var argv_ptr = argv;\n  args.forEach((arg) => {\n    HEAPU32[((argv_ptr)>>2)] = stringToUTF8OnStack(arg);\n    argv_ptr += 4;\n  });\n  HEAPU32[((argv_ptr)>>2)] = 0;\n\n  try {\n\n    var ret = entryFunction(argc, argv);\n\n    // if we're not running an evented main loop, it's time to exit\n    exitJS(ret, /* implicit = */ true);\n    return ret;\n  }\n  catch (e) {\n    return handleException(e);\n  }\n}\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\nfunction run(args = arguments_) {\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    preMain();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    if (shouldRunNow) callMain(args);\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    _fflush(0);\n    // also flush in the JS FS layer\n    ['stdout', 'stderr'].forEach(function(name) {\n      var info = FS.analyzePath('/dev/' + name);\n      if (!info) return;\n      var stream = info.object;\n      var rdev = stream.rdev;\n      var tty = TTY.ttys[rdev];\n      if (tty?.output?.length) {\n        has = true;\n      }\n    });\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\n// shouldRunNow refers to calling main(), not run().\nvar shouldRunNow = true;\n\nif (Module['noInitialRun']) shouldRunNow = false;\n\nrun();\n\n\n// end include: postamble.js\n\n\n  return moduleArg.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = CESDK;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => CESDK);\n", "/**\n * Invoke to unsubscribe from a stream.\n * @internal\n */\nexport type UnsubscribeFn = () => void;\n\n/**\n * Will be called by a stream whenever a new value is available.\n * @internal\n */\nexport type Handler<T> = (v: T) => void;\n\n/**\n * A stream source.\n *\n * This is an ordinary function. Pass a handler to have that handler called by\n * the source whenever a new value is available.\n *\n * Returns a function that unsubscribes the handler from the source\n * @internal\n */\nexport type Source<T> = (handler: Handler<T>) => UnsubscribeFn;\n\n/**\n * A stream operator, converting one source into another.\n *\n * A stream operator takes a source and returns a new source. This is used to\n * alter the values of a stream, to do things like mapping or filtering.\n * An operator can also alter the behavior of a stream by maintaining internal\n * state and making decisions on how to forward calls from a consumer to the\n * source or from the source to a handler.\n *\n * @internal\n */\nexport type Operator<I, O = I> = (source: Source<I>) => Source<O>;\n\n/**\n * Emit one or more values to a stream.\n *\n * @internal\n */\nexport type Emit<T> = (...values: [T, ...T[]]) => void;\n\n/** @internal */\nexport interface CustomSource<T> extends Source<T> {\n  readonly emit: Emit<T>;\n  readonly handlers: Set<Handler<T>>;\n}\n\n/**\n * Turn an event target into a stream source\n * @internal We don't have unit tests for this\n */\nexport function eventListenerSource(\n  target: EventTarget,\n  eventName: string\n): Source<Event> {\n  return function subscribeEventListener(handler: Handler<Event>) {\n    target.addEventListener(eventName, handler);\n    return function unsubscribeEventListener() {\n      target.removeEventListener(eventName, handler);\n    };\n  };\n}\n\n/**\n * Create a stream source from scratch.\n * @param onSubscribe - This callback is invoked after a new handler subscribes\n *                      to this source. The callback is given an emit method that\n *                      can be used to emit values to the new handler.\n * @param onUnsubscribe - This callback is invoked after a a handler unsubscribes.\n * @returns A stream source that has an attached `emit` method and an attach set\n *          of `handlers`.\n * @internal\n */\nexport function makeSource<T>(\n  onSubscribe?: (emitToSubscriber: Emit<T>) => void,\n  onUnsubscribe?: () => void\n): CustomSource<T> {\n  const handlers: Set<Handler<T>> = new Set();\n\n  function emit(value: T, ...values: T[]): void {\n    for (const handler of handlers) {\n      handler(value);\n      for (const v of values) {\n        handler(v);\n      }\n    }\n  }\n\n  function stream(handler: Handler<T>) {\n    handlers.add(handler);\n    const emitToSubscriber: Emit<T> = (value, ...values) => {\n      handler(value);\n      for (const v of values) {\n        handler(v);\n      }\n    };\n    onSubscribe?.(emitToSubscriber);\n    const unsubscribeMakeSource = () => {\n      handlers.delete(handler);\n      onUnsubscribe?.();\n    };\n    return unsubscribeMakeSource;\n  }\n\n  stream.emit = emit;\n  stream.handlers = handlers;\n\n  return stream;\n}\n\n/**\n * Filters values out of stream for which the filterFn returns false.\n * @internal\n */\nexport const filter =\n  <T extends any>(filterFn: (e: T) => boolean) =>\n  (source: Source<T>) =>\n    function subscribeFilter(handler: Handler<T>): UnsubscribeFn {\n      return source(function filterHandler(e: T) {\n        if (filterFn(e)) {\n          handler(e);\n        }\n      });\n    };\n\n/**\n * Map values of a stream using a provided map function.\n * @internal\n */\nexport const map =\n  <I, O>(mapFn: (i: I) => O) =>\n  (source: Source<I>) =>\n    function subscribeMap(listener: Handler<O>): UnsubscribeFn {\n      return source(function mapHandler(e) {\n        listener(mapFn(e));\n      });\n    };\n\n/**\n * Map and potentially unwrap an async value.\n *\n * This can be used with synchronous and asynchronous sources (i.e. plain values\n * or promises), and synchronous or asynchronous map functions.\n * The resulting stream will received unwrapped plain values, but will always\n * receive them asynchronously.\n * @internal\n */\nexport const mapAsync =\n  <I, O = I>(mapFn: (i: I) => O | Promise<O>) =>\n  (source: Source<I | Promise<I>>) =>\n    function subscribeMapAsync(listener: Handler<O>) {\n      let unsubscribed = false;\n      const unsubscribeFromSource = source(async function mapAsyncHandler(e) {\n        const i = await e;\n        if (unsubscribed) return;\n        const mapResult = await mapFn(i);\n        if (unsubscribed) return;\n        listener(mapResult);\n      });\n      return function unsubscribeMapAsync() {\n        unsubscribed = true;\n        unsubscribeFromSource();\n      };\n    };\n\n/**\n * Return a new stream.\n *\n * This stream guarantees that its handlers are invoked at least once.\n * * This invocation happens synchronously after subscribing to the `source`.\n * * If the `source` invokes its handler synchronously during subscription, that value is used during the initial invocation.\n * * If the `source` does _not_ invoke its handler during subscription, the `firstValue` function is used to generate a value to send to the handlers\n *\n * @internal\n */\nexport function startWith(firstValue?: void): Operator<unknown, void>;\n/** @internal */\nexport function startWith<T>(firstValue: T | (() => T)): Operator<T>;\nexport function startWith<T>(firstValue: T | (() => T)): Operator<T> {\n  return (source: Source<T>) =>\n    function subscribeStartWith(handler: Handler<T>): UnsubscribeFn {\n      let receivedData = false;\n\n      const unsubscribeStartWith = source(function startWithHandler(e) {\n        receivedData = true;\n        handler(e);\n      });\n\n      if (!receivedData) {\n        handler(firstValue instanceof Function ? firstValue() : firstValue);\n      }\n\n      return unsubscribeStartWith;\n    };\n}\n\n/**\n * An operator that returns a source unmodified\n * @internal\n */\nexport const id = <T>(source: Source<T>) => source;\n\n/**\n * @internal\n */\nexport function name<T>(handlerName?: string) {\n  if (!handlerName) return id;\n\n  return (source: Source<T>) => {\n    return (handler: Handler<T>) => {\n      // https://stackoverflow.com/a/50402530\n      const fullname = `emit(${handlerName})`;\n      const hack = { [fullname]: handler };\n      return source((v) => hack[fullname](v));\n    };\n  };\n}\n\n/**\n * Swallows updates and doesn't pass them on, when their value is the same as\n * the value that was passed before.\n *\n * The equals function does not actually have to implement an equivalence\n * relation. It can also be thought of as a \"reject\" function, that receives\n * the previous and current value.\n * @internal\n */\nexport const memo =\n  <T>(equals = (value: T, lastValue: T | undefined) => value === lastValue) =>\n  (source: Source<T>) => {\n    return function subscribeMemo(handler: Handler<T>) {\n      let lastValue: T;\n      return source(function memoHandler(e) {\n        if (equals(e, lastValue)) {\n          return;\n        }\n        lastValue = e;\n        handler(e);\n      });\n    };\n  };\n\n/**\n * Fans out a source to multiple handlers\n *\n * Normally, if you attach a handler to a source, the entire chain of operators\n * on that source is invoked for every event and every handler.\n *\n * The `fan` operator maintains its own list of handlers and subscribes upstream\n * only once!\n *\n * ```\n * Without Fan:\n *        \u250C\u2500\u25BA Filter \u2500\u25BA Map \u2500\u25BA Consumer\n * Source \u2502\n *        \u2514\u2500\u25BA Filter \u2500\u25BA Map \u2500\u25BA Consumer\n *\n * With Fan:\n *                                \u250C\u2500\u25BA Consumer\n * Source \u2500\u25BA Filter \u2500\u25BA Map \u2500\u25BA Fan \u2502\n *                                \u2514\u2500\u25BA Consumer\n * ```\n *\n * Use this only when needed, since it does bring some overhead with it.\n *\n * The stream returned by this operator will\n * * subscribe to its `source` when the first consumer subscribes to the stream\n * * unsubscribe from the `source` when the last consumer unsubscribes\n * @internal\n */\nexport const fan = <T>(source: Source<T>) => {\n  const handlers = new Set<Handler<T>>();\n  let unsubscribe: UnsubscribeFn | null = null;\n\n  return function subscribeFan(handler: Handler<T>) {\n    handlers.add(handler);\n    if (unsubscribe === null) {\n      unsubscribe = source(function fanHandler(e) {\n        handlers.forEach((h) => h(e));\n      });\n    }\n    return function unsubscribeFan() {\n      handlers.delete(handler);\n      if (handlers.size === 0) {\n        unsubscribe?.();\n        unsubscribe = null;\n      }\n    };\n  };\n};\n\n/**\n * Allows for easier expression of a series of operators.\n *\n * The first argument should always be a Source, subsequent arguments should be\n * Operators with matching types.\n *\n * `pipe(source, foo, bar)` is the same as `bar(foo(source))`.\n *\n * @returns a source that matches the output type of the last operator\n *\n * @internal\n */\nexport function pipe<T>(source: Source<T>): Source<T>;\n/** @internal */\nexport function pipe<A, B>(source: Source<A>, ab: Operator<A, B>): Source<B>;\n/** @internal */\nexport function pipe<A, B, C>(\n  source: Source<A>,\n  ab: Operator<A, B>,\n  bc: Operator<B, C>\n): Source<C>;\n/** @internal */\nexport function pipe<A, B, C, D>(\n  source: Source<A>,\n  ab: Operator<A, B>,\n  bc: Operator<B, C>,\n  cd: Operator<C, D>\n): Source<D>;\n/** @internal */\nexport function pipe<A, B, C, D, E>(\n  source: Source<A>,\n  ab: Operator<A, B>,\n  bc: Operator<B, C>,\n  cd: Operator<C, D>,\n  de: Operator<D, E>\n): Source<E>;\n/** @internal */\nexport function pipe<A, B, C, D, E, F>(\n  source: Source<A>,\n  ab: Operator<A, B>,\n  bc: Operator<B, C>,\n  cd: Operator<C, D>,\n  de: Operator<D, E>,\n  ef: Operator<E, F>\n): Source<F>;\n/** @internal */\nexport function pipe<A, B, C, D, E, F, G>(\n  source: Source<A>,\n  ab: Operator<A, B>,\n  bc: Operator<B, C>,\n  cd: Operator<C, D>,\n  de: Operator<D, E>,\n  ef: Operator<E, F>,\n  fg: Operator<F, G>\n): Source<G>;\nexport function pipe<T>(\n  source: Source<any>,\n  ...operators: Operator<any>[]\n): Source<T> {\n  return operators.reduce((res, operator) => operator(res), source);\n}\n\n/** @internal */\ntype SourceType<S> = S extends Source<infer T> ? T : never;\n\n/**\n * Merge multiple sources together. Values emitted from any source will\n * immediately be send to handlers.\n * @internal\n */\nexport const merge = <Sources extends Source<unknown>[]>(\n  ...sources: Sources\n): Source<SourceType<Sources[number]>> => {\n  type T = SourceType<Sources[number]>;\n  const savedSources = Array.from(sources) as Source<T>[];\n  return function subscribeMerge(handler: Handler<T>) {\n    const unsubscribers = savedSources.map(function mergeHandler(source) {\n      return source(handler);\n    });\n    return function unsubscribeMerge() {\n      for (const unsub of unsubscribers) {\n        unsub();\n      }\n    };\n  };\n};\n\n/**\n * Convert a stream of streams of values to a simple stream of values\n *\n * Given a stream source that emits other stream sources, returns a stream that\n * under the hood connects to new stream sources as they come in, without the\n * consumer noticing.\n *\n * ```\n * Input: ---+------+----------\n *           |      > - b - c -\n *           |\n *           > - 1 - 2 - 3 -\n *\n * Output: ----- 1 ---- b - c\n * ```\n *\n * - You might want to combine switchAll with `map` to extract a stream from a\n *   provider before passing it to switchAll.\n * - You might also want to apply the `startWith` operator before\n *   `switchAll`/`map`, so that handler gets a chance subscribe to the underlying\n *   stream, even if the stream provider never emits.\n * - You might also want to apply the `startWith` operator to the emitted\n *   stream inside `map`, so that handlers are guaranteed to be notified if the\n *    underlying stream changes, even if no new value is emitted on it.\n * - If the input stream emits `null` or `undefined` instead of a stream source,\n *   the output stream will suspend and not emit anything until the input stream\n *   emits another stream source.\n *\n * @example\n * ```ts\n * function streamTest<SceneMode>(sceneStream: Source<{mode: Source<SceneMode>}>) {\n *   const modeSource: Source<SceneMode> = pipe(\n *     sceneStream,\n *     // Ensure we have an initial scene to extract the mode channel from\n *     startWith(() => getScene()),\n *     map(scene => {\n *       // Extract the SceneMode stream from the current scene\n *       const modeStream:Source<SceneMode> = scene.mode;\n *       // Ensure that the current scene mode is emitted when switchAll subscribes to the new SceneMode stream\n *       const modeStreamWithStartWith:Source<SceneMode> =\n *         startWith(() => getCurrentMode())(modeStream)\n *       return modeStreamWithStartWith\n *     }),\n *     switchAll\n *   )\n * }\n * ```\n * Here, `modeSource` will be a stream of the latest sceneMode that works when\n * the stream of the latest scene emits a new value.\n *\n * Generally you want to follow this pattern:\n *\n * ```ts\n * pipe(\n *   streamProvider,\n *   startWith(() => currentProviderValue()),\n *   map(extractStreamFromProviderValue),\n *   switchAll\n * )\n * ```\n *\n * @internal\n */\nexport function switchAll<T, N extends null | undefined | never = never>(\n  sourceSource: Source<Source<T> | N>\n): Source<T> {\n  return function subscribeSwitchAll(handler: Handler<T>): UnsubscribeFn {\n    let unsubscribeFromSource: UnsubscribeFn | null | undefined = null;\n    const unsubscribeFromSourceSource = sourceSource(function switchAllHandler(\n      source\n    ) {\n      // Source has changed:\n      // 1. Unsubscribe from previous source\n      unsubscribeFromSource?.();\n      // 2. Subscribe to new Source\n      unsubscribeFromSource = source ? source(handler) : source;\n    });\n\n    return function unsubscribeSwitchAll() {\n      unsubscribeFromSourceSource();\n      unsubscribeFromSource?.();\n      unsubscribeFromSource = null;\n    };\n  };\n}\n\n/**\n * Takes two streams and combines their latest values into a new stream.\n *\n * Whenever one of the streams sends an update, a result is generated and\n * emitted from the last values (or `undefined`) received from all sources.  If\n * one source has not emitted a value yet when the other emits, its value will\n * be `undefined` instead.\n *\n * e.g.\n * ```\n * source-A: - 1 ------------- 2 ---------------\n * source-B: --------- b ------------- c -------\n * combined: - [1, ] - [1,b] - [2,b] - [2,c] ---\n * ```\n *\n * @internal\n */\nexport function combineLatest<Sources extends Source<unknown>[]>(\n  ...sources: Sources\n): Source<{ [i in keyof Sources]: SourceType<Sources[i]> | undefined }> {\n  const ss = Array.from(sources) as typeof sources;\n  type T = { [i in keyof Sources]: SourceType<Sources[i]> | undefined };\n\n  return function subscribeCombineLatest(handler: Handler<T>) {\n    const currentValues = new Array(ss.length) as T;\n    const unsubscribers = ss.map((source, i) =>\n      source(function combineLatestHandler(v) {\n        currentValues[i] = v;\n        handler(currentValues);\n      })\n    );\n    return function unsubscribeCombineLatest() {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n      currentValues.length = 0;\n    };\n  };\n}\n\n/**\n * Register callbacks to a stream that are called\n * - before an event is emitted\n * - before a handler subscribes\n * - before a handler unsubscribes\n * @internal\n */\nexport function tap<T>(\n  onValue?: (v: T) => void,\n  onSubscribe?: (handler: Handler<T>) => void,\n  onUnSubscribe?: (handler: Handler<T>) => void\n) {\n  return (source: Source<T>) =>\n    function subscribeTap(handler: Handler<T>) {\n      onSubscribe?.(handler);\n      const unsubscribe = source(function tapHandler(v) {\n        onValue?.(v);\n        handler(v);\n      });\n\n      return function unsubscribeTap() {\n        onUnSubscribe?.(handler);\n        unsubscribe();\n      };\n    };\n}\n\n/**\n * Installs a subscription effect on a stream.\n *\n * The `afterFirstSubscribe` handler is called after the first handler subscribes.\n * It can return a function that will be called after the last handler unsubscribes.\n *\n * This is useful for streams that need to turn on/off some resource when the first\n * handler subscribes and the last handler unsubscribes.\n * @internal\n * @deprecated This is still untested\n */\nexport function effect<T>(afterFirstSubscribe: () => void | (() => void)) {\n  return (source: Source<T>) => {\n    let subscribers = 0;\n    let unwind: (() => void) | void;\n    return function subscribeEffect(handler: Handler<T>) {\n      const unsubscribe = source(handler);\n      if (subscribers++ === 0) {\n        unwind = afterFirstSubscribe();\n      }\n      return function unsubscribeEffect() {\n        if (--subscribers === 0) {\n          unwind?.();\n          unwind = undefined;\n        }\n        unsubscribe();\n      };\n    };\n  };\n}\n", "import { makeSource, type Handler, type Source } from '.';\n\n/**\n * A Channel represents a reactive data source consisting of three elements:\n *\n * * A `subscribe` method to register a callback for values coming from the\n *   data source. Calling this method returns an `unsubscribe` method.\n * * An (optional) `update` method to update the data source\n * * An (optional) synchronous `value` method that can be used to retrieve\n *   the current value.\n * @internal\n */\nexport interface Channel<Out, In = Out> {\n  subscribe: Source<Out>;\n  update?: (v: In) => void;\n  value?: () => Out;\n}\n\n/**\n * A `Channel` that is guaranteed to have a `value` method\n * @internal\n */\nexport interface ChannelSync<Out, In = Out> extends Channel<Out, In> {\n  subscribe: Source<Out>;\n  update?: (v: In) => void;\n  value: () => Out;\n}\n\n/**\n * A Read only `Channel`\n * @internal\n */\nexport interface ReadOnlyChannel<Out> extends Omit<Channel<Out>, 'update'> {\n  subscribe: Source<Out>;\n  value?: () => Out;\n}\n\n/**\n * A `ReadOnlyChannel` that is guaranteed to have a `value`\n * @internal\n */\nexport interface ReadOnlyChannelSync<Out>\n  extends Omit<ChannelSync<Out>, 'update'>,\n    ReadOnlyChannel<Out> {\n  subscribe: Source<Out>;\n  value: () => Out;\n}\n\n/**\n * A `Channel` that is guaranteed to have an `update` method.\n * @internal\n */\nexport interface ReadWriteChannel<Out, In = Out> extends Channel<Out, In> {\n  subscribe: Source<Out>;\n  update: (v: In) => void;\n  value?: () => Out;\n}\n\n/**\n * A `ReadWriteChannel` that is guaranteed to have a `value` and an `update` method\n * @internal\n */\nexport interface ReadWriteChannelSync<Out, In = Out>\n  extends ChannelSync<Out, In>,\n    ReadWriteChannel<Out, In> {\n  subscribe: Source<Out>;\n  update: (v: In) => void;\n  value: () => Out;\n}\n\n/** @internal */\nconst NO_VALUE = Symbol('NO_VALUE');\n\n/**\n * Makes sure that a value sent to the Channel's `update` method is immediately\n * and synchronously sent to the Channel's stream, even if the actual channel\n * source is asynchronous.\n * The use case would be to update UI state immediately after sending the update\n * to the engine, without waiting for the value to make a complete round-trip.\n *\n * This way we can guarantee synchronous behavior of the channel, even if the\n * underlying source is asynchronous.\n *\n * The value type T being a function is undefined behavior\n *\n * @param isValueEqual - When provided, prevent subsequent updates that are equal\n *                       to the value in cache\n * @internal\n * @deprecated This was built at a time when a lot of our APIs were asynchronous\n * and it was supposed to handle cases where there was no way to synchronously\n * get a value for a certain channel. It is not needed anymore but left here for now\n * because we might be able to modify and repurpose it, maybe merge it with `makeChannel.ts`\n * TODO It's weird that the value of a syncBuffer channel does bypass the internal cache\n * TODO It's weird that the update function of a syncBuffer channel is immediately invoked\n */\nexport function syncBuffer<T>(\n  source: ReadWriteChannel<T>,\n  isValueEqual: (a: T, b: T) => boolean = () => false\n): ReadWriteChannelSync<T | undefined, T> {\n  let value: T | typeof NO_VALUE = NO_VALUE;\n\n  return {\n    subscribe: (handler: Handler<T>) =>\n      source.subscribe((e) => {\n        value = e;\n        handler(e);\n      }),\n    update: (newValue: T) => {\n      if (value !== NO_VALUE && isValueEqual(newValue, value)) return;\n      value = newValue;\n      source.update(newValue);\n    },\n    value: () => {\n      return value === NO_VALUE ? undefined : value;\n    }\n  };\n}\n\n/**\n * Create a channel around a single value\n * @param initialValue - A factory for an initial value\n * @internal\n */\nexport function makeValueChannel<T>(\n  initialValue: () => T\n): ReadWriteChannelSync<T> {\n  let currentValue: T | typeof NO_VALUE = NO_VALUE;\n\n  const value = (): T => {\n    if (currentValue === NO_VALUE) {\n      currentValue = initialValue();\n    }\n    return currentValue;\n  };\n\n  const subscribe = makeSource<T>();\n\n  return {\n    subscribe,\n    value,\n    update(newValue) {\n      currentValue = newValue;\n      subscribe.emit(currentValue as T);\n    }\n  };\n}\n", "/** @public */\nenum MimeType {\n  Png = 'image/png',\n  Jpeg = 'image/jpeg',\n  WebP = 'image/webp',\n  Tga = 'image/x-tga',\n  Wav = 'audio/wav',\n  Mp4 = 'video/mp4',\n  QuickTime = 'video/quicktime',\n  Binary = 'application/octet-stream',\n  Pdf = 'application/pdf',\n  Zip = 'application/zip'\n}\n\nexport default MimeType;\n", "/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n", "import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Convert a union of type to an intersection.\n */\n\nexport type UnionToIntersection<U> = (\n  U extends any ? (arg: U) => any : never\n) extends (arg: infer I) => void\n  ? I\n  : never\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number | undefined> = {\n  [K in NonNullable<T>]: K\n}\n\n/**\n * Check if a type is a match for another whilst treating overlapping\n * unions as a match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsExactMatch<T, U> = (<G>() => G extends T ? 1 : 2) extends <\n  G\n>() => G extends U ? 1 : 2\n  ? T\n  : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string | undefined]\n  ? [T] extends [IsMatch<T, string | undefined>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number | undefined]\n  ? [T] extends [IsMatch<T, number | undefined>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsExactMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n\n/**\n * Shorthand type for matching any `Struct`.\n */\n\nexport type AnyStruct = Struct<any, any>\n\n/**\n * Infer a tuple of types from a tuple of `Struct`s.\n *\n * This is used to recursively retrieve the type from `union` `intersection` and\n * `tuple` structs.\n */\n\nexport type InferStructTuple<\n  Tuple extends AnyStruct[],\n  Length extends number = Tuple['length']\n> = Length extends Length\n  ? number extends Length\n    ? Tuple\n    : _InferTuple<Tuple, Length, []>\n  : never\ntype _InferTuple<\n  Tuple extends AnyStruct[],\n  Length extends number,\n  Accumulated extends unknown[],\n  Index extends number = Accumulated['length']\n> = Index extends Length\n  ? Accumulated\n  : _InferTuple<Tuple, Length, [...Accumulated, Infer<Tuple[Index]>]>\n", "import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n", "import { Struct, Context, Validator } from '../struct'\nimport { object, optional, type } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object or type structs. Its return type will match the first parameter's type.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const isType = Structs[0].type === 'type'\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return isType ? type(schema) : object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n", "import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n  AnyStruct,\n  InferStructTuple,\n  UnionToIntersection,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a bigint.\n */\n\nexport function bigint(): Struct<bigint, null> {\n  return define('bigint', (value) => {\n    return typeof value === 'bigint'\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A extends AnyStruct, B extends AnyStruct[]>(\n  Structs: [A, ...B]\n): Struct<Infer<A> & UnionToIntersection<InferStructTuple<B>[number]>, null> {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A extends AnyStruct, B extends AnyStruct[]>(\n  Structs: [A, ...B]\n): Struct<[Infer<A>, ...InferStructTuple<B>], null> {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Structs.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Structs[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A extends AnyStruct, B extends AnyStruct[]>(\n  Structs: [A, ...B]\n): Struct<Infer<A> | InferStructTuple<B>[number], null> {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    coercer(value, ctx) {\n      const firstMatch =\n        Structs.find((s) => {\n          const [e] = s.validate(value, { coerce: true })\n          return !e\n        }) || unknown()\n      return firstMatch.coercer(value, ctx)\n    },\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n", "import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n", "import { Struct, Refiner } from '../struct'\nimport { toFailures } from '../utils'\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\n\nexport function empty<\n  T extends string | any[] | Map<any, any> | Set<any>,\n  S extends any\n>(struct: Struct<T, S>): Struct<T, S> {\n  return refine(struct, 'empty', (value) => {\n    const size = getSize(value)\n    return (\n      size === 0 ||\n      `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``\n    )\n  })\n}\n\nfunction getSize(value: string | any[] | Map<any, any> | Set<any>): number {\n  if (value instanceof Map || value instanceof Set) {\n    return value.size\n  } else {\n    return value.length\n  }\n}\n\n/**\n * Ensure that a number or date is below a threshold.\n */\n\nexport function max<T extends number | Date, S extends any>(\n  struct: Struct<T, S>,\n  threshold: T,\n  options: {\n    exclusive?: boolean\n  } = {}\n): Struct<T, S> {\n  const { exclusive } = options\n  return refine(struct, 'max', (value) => {\n    return exclusive\n      ? value < threshold\n      : value <= threshold ||\n          `Expected a ${struct.type} less than ${\n            exclusive ? '' : 'or equal to '\n          }${threshold} but received \\`${value}\\``\n  })\n}\n\n/**\n * Ensure that a number or date is above a threshold.\n */\n\nexport function min<T extends number | Date, S extends any>(\n  struct: Struct<T, S>,\n  threshold: T,\n  options: {\n    exclusive?: boolean\n  } = {}\n): Struct<T, S> {\n  const { exclusive } = options\n  return refine(struct, 'min', (value) => {\n    return exclusive\n      ? value > threshold\n      : value >= threshold ||\n          `Expected a ${struct.type} greater than ${\n            exclusive ? '' : 'or equal to '\n          }${threshold} but received \\`${value}\\``\n  })\n}\n\n/**\n * Ensure that a string, array, map or set is not empty.\n */\n\nexport function nonempty<\n  T extends string | any[] | Map<any, any> | Set<any>,\n  S extends any\n>(struct: Struct<T, S>): Struct<T, S> {\n  return refine(struct, 'nonempty', (value) => {\n    const size = getSize(value)\n    return (\n      size > 0 || `Expected a nonempty ${struct.type} but received an empty one`\n    )\n  })\n}\n\n/**\n * Ensure that a string matches a regular expression.\n */\n\nexport function pattern<T extends string, S extends any>(\n  struct: Struct<T, S>,\n  regexp: RegExp\n): Struct<T, S> {\n  return refine(struct, 'pattern', (value) => {\n    return (\n      regexp.test(value) ||\n      `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`\n    )\n  })\n}\n\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\n\nexport function size<\n  T extends string | number | Date | any[] | Map<any, any> | Set<any>,\n  S extends any\n>(struct: Struct<T, S>, min: number, max: number = min): Struct<T, S> {\n  const expected = `Expected a ${struct.type}`\n  const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``\n\n  return refine(struct, 'size', (value) => {\n    if (typeof value === 'number' || value instanceof Date) {\n      return (\n        (min <= value && value <= max) ||\n        `${expected} ${of} but received \\`${value}\\``\n      )\n    } else if (value instanceof Map || value instanceof Set) {\n      const { size } = value\n      return (\n        (min <= size && size <= max) ||\n        `${expected} with a size ${of} but received one with a size of \\`${size}\\``\n      )\n    } else {\n      const { length } = value as string | any[]\n      return (\n        (min <= length && length <= max) ||\n        `${expected} with a length ${of} but received one with a length of \\`${length}\\``\n      )\n    }\n  })\n}\n\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\n\nexport function refine<T, S>(\n  struct: Struct<T, S>,\n  name: string,\n  refiner: Refiner<T>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    *refiner(value, ctx) {\n      yield* struct.refiner(value, ctx)\n      const result = refiner(value, ctx)\n      const failures = toFailures(result, ctx, struct, value)\n\n      for (const failure of failures) {\n        yield { ...failure, refinement: name }\n      }\n    },\n  })\n}\n", "import {\n  array,\n  boolean,\n  define,\n  enums,\n  integer,\n  max,\n  min,\n  nonempty,\n  number,\n  object,\n  string,\n  Struct,\n  tuple,\n  type,\n  validate\n} from 'superstruct';\nimport { type CutoutOperation } from './types/cutout';\nimport type { DesignUnit, SceneLayout, ZoomAutoFitAxis } from './types/engine';\n\nexport {\n  array,\n  boolean,\n  enums,\n  integer,\n  max,\n  min,\n  nonempty,\n  number,\n  object,\n  string\n};\n\nexport default function assert<T = unknown, S = unknown>(\n  name: string,\n  value: T,\n  struct: Struct<T, S>\n): void {\n  const [err] = validate<T, S>(value, struct);\n  if (err) {\n    err.message = `Error in argument '${name}': ${err.message}`;\n    throw err;\n  }\n}\n\ntype MimeType =\n  | 'image/png'\n  | 'image/jpeg'\n  | 'image/webp'\n  | 'image/x-tga'\n  | 'audio/wav'\n  | 'video/mp4'\n  | 'video/quicktime'\n  | 'application/octet-stream'\n  | 'application/pdf'\n  | 'application/zip';\nexport function mimeType() {\n  const r =\n    /image\\/(png|jpeg|webp|x-tga)|audio\\/(wav)|video\\/(mp4|quicktime)|application\\/octet-stream|application\\/pdf/;\n\n  return define<MimeType>('MimeType', (value) => {\n    if (typeof value === 'string' && r.test(value)) {\n      return true;\n    } else {\n      return {\n        message: `expected one of \"image/png\", \"image/jpeg\", \"image/webp\", \"image/x-tga\", \"video/mp4\", \"video/quicktime\", \"application/pdf\" or \"application/octet-stream\", but got \"${value}\"`\n      };\n    }\n  });\n}\n\nexport function sceneLayoutShape() {\n  const options: SceneLayout[] = [\n    'Free',\n    'VerticalStack',\n    'HorizontalStack',\n    'DepthStack'\n  ];\n  return define<SceneLayout>('SceneLayout', (value) => {\n    if (typeof value === 'string' && (options as string[]).includes(value)) {\n      return true;\n    } else {\n      return {\n        message: `expected one of ${options\n          .map((o) => `\"${o}\"`)\n          .join(', ')}, but got \"${value}\"`\n      };\n    }\n  });\n}\n\nexport function zoomAutoFitAxisShape() {\n  const options: ZoomAutoFitAxis[] = ['Horizontal', 'Vertical', 'Both'];\n  return define<ZoomAutoFitAxis>('ZoomAutoFitAxis', (value) => {\n    if (typeof value === 'string' && (options as string[]).includes(value)) {\n      return true;\n    } else {\n      return {\n        message: `expected one of ${options\n          .map((o) => `\"${o}\"`)\n          .join(', ')}, but got \"${value}\"`\n      };\n    }\n  });\n}\n\nexport function vec2Type() {\n  return type({ x: number(), y: number() });\n}\n\nexport function size2Type() {\n  return type({ width: number(), height: number() });\n}\n\nexport function rgba() {\n  return tuple([number(), number(), number(), number()]);\n}\n\nexport function designUnitShape() {\n  const options: DesignUnit[] = ['Pixel', 'Millimeter', 'Inch'];\n  return define<DesignUnit>('DesignUnit', (value) => {\n    if (typeof value === 'string' && (options as string[]).includes(value)) {\n      return true;\n    } else {\n      return {\n        message: `expected one of ${options\n          .map((o) => `\"${o}\"`)\n          .join(', ')}, but got \"${value}\"`\n      };\n    }\n  });\n}\n\nexport function cutoutOperationShape() {\n  const options: CutoutOperation[] = [\n    'Difference',\n    'Intersection',\n    'Union',\n    'XOR'\n  ];\n  return define<CutoutOperation>('CutoutOperation', (value) => {\n    if (typeof value === 'string' && (options as string[]).includes(value)) {\n      return true;\n    } else {\n      return {\n        message: `expected one of ${options\n          .map((o) => `\"${o}\"`)\n          .join(', ')}, but got \"${value}\"`\n      };\n    }\n  });\n}\n", "/* eslint-disable @typescript-eslint/no-loop-func */\nimport type Reactor from './Reactor';\n\nconst PROXY = Symbol('PROXY');\n\ntype ProxyMeta = {\n  type: 'getter' | 'setter';\n};\n\nfunction isFnProxy(property: any): property is { [PROXY]: ProxyMeta } {\n  return typeof property === 'function' && PROXY in property;\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * Decorator to mark a function as a getter\n * @internal\n */\nexport function getter(\n  target: Function,\n  context?: ClassMethodDecoratorContext\n): void {\n  Object.defineProperty(target, PROXY, {\n    value: { type: 'getter' },\n    writable: false\n  });\n}\n\n/**\n * Decorator to mark a function as a setter\n * @internal\n */\nexport function setter(\n  target: Function,\n  context?: ClassMethodDecoratorContext\n): void {\n  Object.defineProperty(target, PROXY, {\n    value: { type: 'setter' },\n    writable: false\n  });\n}\n\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\n/**\n * Decorate a single function to be tracked by the reactor.\n * @param fnName - Name of the function to decorate. Used to generate the\n *                 callId, so make sure it's unique with regard to its context.\n * @param func - The function to decorate.\n * @returns The decorated function. Calling this function will track the call\n *          in the Reactor and provide caching in reactions.\n */\nexport function decorateFunction<A extends any[], R>(\n  reactor: Reactor,\n  func: (...args: A) => R,\n  fnName: string = func.name\n): (...args: A) => R {\n  readFunctionProxyCounter[fnName] ??= 0;\n  const index = readFunctionProxyCounter[fnName]++;\n\n  return function proxiedReadFunction(this: any, ...argArray: A): R {\n    const callReceiver = this;\n    const callId = `${fnName}${index}-${JSON.stringify(argArray, null, 0)}`;\n\n    function callTargetMethod(): R {\n      return Reflect.apply(func, callReceiver, argArray);\n    }\n\n    reactor._getterCalled(callId, callTargetMethod);\n    return reactor.read(callId, callTargetMethod);\n  };\n}\n\n/**\n * If multiple ReadFunctions are registered with the same name, we need to\n * make sure that the callId is unique. This counter keeps track of the\n * number of times a ReadFunction with a certain name has been registered.\n */\nconst readFunctionProxyCounter: { [fnName: string]: number } = {};\n\n/**\n * Wraps all marked `@getter` and `@setter` functions on an object with code\n * that registers their invocations with the Reactor\n *\n * @returns A function that can be called to stop tracking the object.\n *\n * @internal\n */\nexport default function decorateObject<T extends object>(\n  reactor: Reactor,\n  object: T\n): () => void {\n  const objectId = (object as any).constructor?.name ?? crypto.randomUUID();\n  const disposers: (() => void)[] = [];\n  let disposed = false;\n\n  // In a function that uses `this.#ubq`, or another private property,\n  // without an annotation we get the private property access error, because\n  // during invocation, `this` is the proxy, but we're not exchanging the\n  // callReceiver, like we do in the proxied methods (marked as gettters or setters)\n  const properties = Object.getOwnPropertyNames(\n    object.constructor.prototype\n  ).concat(Object.getOwnPropertyNames(object)) as (keyof T)[];\n\n  for (const fnName of properties) {\n    const func = object[fnName];\n    if (!isFnProxy(func)) {\n      // Enable this to find API calls that are not decorated with @getter or @setter\n      //\n      // if (IMGLY_NODE_ENV === 'development' && fnName !== 'constructor') {\n      //   const fn = object[fnName];\n      //   if (typeof fn === 'function') {\n      //     // eslint-disable-next-line no-console\n      //     console.warn(\n      //       'Function',\n      //       fnName,\n      //       'is not decorated with @getter or @setter in',\n      //       objectId\n      //     );\n      //   }\n      // }\n      continue;\n    }\n\n    if (func[PROXY].type === 'getter') {\n      function getterProxy<R>(this: any, ...argArray: any[]): R {\n        if (disposed) {\n          throw new Error('Disposed @getter proxy called');\n        }\n        const callReceiver = this;\n        const callId = `${objectId}-${fnName.toString()}-${JSON.stringify(\n          argArray,\n          null,\n          0\n        )}`;\n        function callTargetMethod(): R {\n          return Reflect.apply(func as Function, callReceiver, argArray);\n        }\n\n        reactor._getterCalled(callId, callTargetMethod);\n        return reactor.read(callId, callTargetMethod);\n      }\n      disposers.push(createRestoreFunction(object, fnName, func));\n      object[fnName] = getterProxy as any;\n    } else if (func[PROXY].type === 'setter') {\n      function setterProxy<R>(this: any, ...argArray: any[]): R {\n        if (disposed) {\n          throw new Error('Disposed @setter proxy called');\n        }\n        const callReceiver = this;\n        function callTargetMethod(): R {\n          return Reflect.apply(func as Function, callReceiver, argArray);\n        }\n\n        reactor._setterCalled();\n        return callTargetMethod();\n      }\n      disposers.push(createRestoreFunction(object, fnName, func));\n      object[fnName] = setterProxy as any;\n    }\n  }\n\n  return function disposeProxy() {\n    disposed = true;\n    for (const disposer of disposers) disposer();\n    disposers.length = 0;\n  };\n}\n\n/**\n * Create a function that restores the original value of a property\n * @param o - The target object\n * @param name - The name of the property\n * @param original - The original value of the property\n * @returns The restore function\n */\nfunction createRestoreFunction(\n  o: any,\n  name: string | number | symbol,\n  original: unknown\n): () => void {\n  if (Object.hasOwnProperty.call(o, name)) {\n    // property defined on the object itself, overwrite\n    return () => {\n      o[name] = original;\n    };\n  } else {\n    // property defined on a prototype, delete\n    return () => {\n      delete o[name];\n    };\n  }\n}\n", "/**\n * A hexadecimal color value (RGB or RGBA) that starts with a '#'\n * @example #6686FF or #6686FFFF\n * @public\n */\nexport type HexColorString = string;\n\n/**\n * A color definition for the custom color palette.\n * The RGB and CMYK components must all be specified in the range [0-1].\n * @public\n */\nexport type PaletteColor = HexColorString | RGBColor | RGBAColor | SpotColor;\n\n/**\n * A type alias for all color types supported by the engine.\n * @public\n */\nexport type Color = RGBAColor | CMYKColor | SpotColor;\n\n/**\n * @public\n */\nexport type ColorSpace = 'sRGB' | 'CMYK' | 'SpotColor';\n\n/**\n * All components between 0 and 1\n * @public\n */\nexport interface RGBColor {\n  /** Red */\n  r: number;\n  /** Green */\n  g: number;\n  /** Blue */\n  b: number;\n}\n\n/**\n * All components between 0 and 1\n * @public\n */\nexport interface HSLColor {\n  /** Hue */\n  h: number;\n  /** Saturation */\n  s: number;\n  /** Lightness */\n  l: number;\n}\n\n/**\n * All components between 0 and 1\n * @public\n */\nexport interface HSVColor {\n  /** Hue */\n  h: number;\n  /** Saturation */\n  s: number;\n  /** Value */\n  v: number;\n}\n\nexport interface ColorNameObject {\n  name: string;\n  hex: string;\n  rgba: RGBAColor;\n}\n\n/**\n * All components between 0 and 1\n * @public\n */\nexport interface RGBAColor {\n  /** Red */\n  r: number;\n  /** Green */\n  g: number;\n  /** Blue */\n  b: number;\n  /** Alpha */\n  a: number;\n}\n\n/**\n * All components between 0 and 1\n * @public\n */\nexport interface CMYKColor {\n  /** Cyan */\n  c: number;\n  /** Magenta */\n  m: number;\n  /** Yellow */\n  y: number;\n  /** Black */\n  k: number;\n  /** The tint factor */\n  tint: number;\n}\n\n/** @public */\nexport interface SpotColor {\n  name: string;\n  tint: number;\n  externalReference: string;\n}\n\n/**\n * Internal color representation\n * @internal\n */\nexport interface ColorInternal {\n  colorSpace: ColorInternal.ColorSpace;\n  components: {\n    x: number;\n    y: number;\n    z: number;\n    w: number;\n  };\n  spotColorName: string;\n  tint: number;\n  /** The external reference of a spot color, e.g. the name of formula guide it comes from. */\n  externalReference: string;\n}\n\n/** @public */\nexport interface GradientColorStop {\n  /** A color value within a gradient. */\n  color: Color;\n  /** The relative position of the color within the gradient in the range [0, 1]. */\n  stop: number;\n}\n\n/**\n * Type guard for {@link RGBAColor}\n * @public\n */\nexport function isRGBAColor(color: Color): color is RGBAColor {\n  return (\n    'r' in color &&\n    'a' in color &&\n    color.r !== undefined &&\n    color.a !== undefined\n  );\n}\n\n/**\n * Type guard for {@link SpotColor}\n * @public\n */\nexport function isSpotColor(color: Color): color is SpotColor {\n  return 'name' in color && color.name !== undefined;\n}\n\n/**\n * Type guard for {@link CMYKColor}\n * @public\n */\nexport function isCMYKColor(color: Color): color is CMYKColor {\n  return (\n    'c' in color &&\n    'm' in color &&\n    'y' in color &&\n    'k' in color &&\n    color.c !== undefined &&\n    color.m !== undefined &&\n    color.y !== undefined &&\n    color.k !== undefined\n  );\n}\n\n/** @internal */\nexport namespace ColorInternal {\n  export enum ColorSpace {\n    sRGB = 0,\n    CMYK = 1,\n    SpotColor = 2\n  }\n\n  export function toColor(color: ColorInternal): Color {\n    switch (color.colorSpace) {\n      case ColorSpace.sRGB:\n        return {\n          r: color.components.x,\n          g: color.components.y,\n          b: color.components.z,\n          a: color.components.w\n        };\n      case ColorSpace.SpotColor: {\n        return {\n          name: color.spotColorName,\n          tint: color.tint,\n          externalReference: color.externalReference\n        };\n      }\n      case ColorSpace.CMYK:\n        return {\n          c: color.components.x,\n          m: color.components.y,\n          y: color.components.z,\n          k: color.components.w,\n          tint: color.tint\n        };\n      default:\n        throw new Error('Unknown color space!');\n    }\n  }\n\n  export function fromColor(color: Color): ColorInternal {\n    if (isRGBAColor(color)) {\n      return {\n        colorSpace: ColorSpace.sRGB,\n        components: { x: color.r, y: color.g, z: color.b, w: color.a },\n        spotColorName: '',\n        tint: 1,\n        externalReference: ''\n      };\n    } else if (isCMYKColor(color)) {\n      return {\n        colorSpace: ColorSpace.CMYK,\n        components: { x: color.c, y: color.m, z: color.y, w: color.k },\n        spotColorName: '',\n        tint: color.tint,\n        externalReference: ''\n      };\n    } else if (isSpotColor(color)) {\n      return {\n        colorSpace: ColorSpace.SpotColor,\n        components: { x: 0, y: 0, z: 0, w: 0 },\n        spotColorName: color.name,\n        tint: color.tint,\n        externalReference: color.externalReference\n      };\n    }\n    throw new Error('Unknown color space!');\n  }\n}\n", "import type { UBQResult } from '../types/engine';\n\nexport function unpackResult<T>(result: UBQResult<T>): T {\n  if (result.isValid()) {\n    const value = result.value();\n    result.delete();\n    return value;\n  } else {\n    const error = result.error();\n    const errorMessage = IMGLY_INTERNAL_DEPLOY\n      ? error.message()\n      : error.publicMessage();\n    error.delete();\n    result.delete();\n    throw new Error(errorMessage);\n  }\n}\n/**\n * @example\n * ```ts\n * function loadFromString(s: string):Promise<DesignBlockId> {\n *   return unpackAsync((cb) => this.ubq.loadSceneFromString(s, cb))\n * }\n * ```\n */\nexport function unpackAsync<T>(\n  invoker: (callback: (result: UBQResult<T>) => void) => void\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    invoker((ubqResult) => {\n      try {\n        const result = unpackResult(ubqResult);\n        resolve(result);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  });\n}\n", "/**\n * This contraption is necessary because in Node 16, Blob is not available globally,\n * but needs to be imported from 'buffer. In the long term, this should not be necessary,\n * Node 18 and Browsers already support the global Blob constructor.\n */\nexport default typeof Blob !== 'undefined'\n  ? Blob\n  : ((() => {\n      try {\n        // @ts-ignore\n        return require('buffer').Blob;\n      } catch (e) {\n        return function Blob() {\n          throw new Error(\n            \"Could not find Blob constructor and failed to require('buffer').Blob\"\n          );\n        };\n      }\n    })() as typeof Blob);\n", "import type { Vector } from '../types/engine';\n\nexport default <T>(stdVector: Vector<T>, dispose: boolean = true): Array<T> => {\n  const ids = [];\n  for (let index = 0; index < stdVector.size(); index += 1) {\n    ids.push(stdVector.get(index));\n  }\n  if (dispose) stdVector.delete();\n\n  return ids;\n};\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport assert, {\n  array,\n  boolean,\n  cutoutOperationShape,\n  integer,\n  max,\n  mimeType as mimeTypeValue,\n  min,\n  nonempty,\n  number,\n  object,\n  string\n} from './assert';\nimport { getter, setter } from './reactor/decorate';\nimport MimeType from './types/MimeType';\nimport type { Source } from './types/asset';\nimport type {\n  AnimationType,\n  BlurType,\n  DesignBlockType,\n  EffectType,\n  FillType,\n  ObjectType,\n  ObjectTypeLonghand,\n  ShapeType\n} from './types/blockTypes';\nimport {\n  ColorInternal,\n  type Color,\n  type GradientColorStop\n} from './types/color';\nimport type { CutoutOperation } from './types/cutout';\nimport type { DesignBlockId, Range, Vector } from './types/engine';\nimport type { FontStyle, FontWeight, Typeface } from './types/fonts';\nimport type { Scope } from './types/scope';\nimport type { BlockState, RGBA, UBQ, XYWH } from './ubq/ubq_binding';\nimport { unpackAsync, unpackResult } from './ubq/ubq_result';\nimport Blob from './utils/Blob';\nimport cppVectorToArray from './utils/cppVectorToArray';\n\n/**\n * - Left: The blocks get left aligned.\n * - Right: The blocks get right aligned.\n * - Center: The blocks get center aligned.\n *\n * @public\n */\nexport type HorizontalBlockAlignment = 'Left' | 'Right' | 'Center';\n\n/**\n * - Top: The blocks get top aligned.\n * - Bottom: The blocks get bottom aligned.\n * - Center: The blocks get center aligned.\n *\n * @public\n */\nexport type VerticalBlockAlignment = 'Top' | 'Bottom' | 'Center';\n\n/**\n * - Absolute: Position in absolute design units.\n * - Percent: Position in relation to the block's parent's size in percent, where 1.0 means 100%.\n * - Auto: Position is automatically determined\n *\n * @public\n */\nexport type PositionMode = 'Absolute' | 'Percent' | 'Auto';\n\n/**\n * - Absolute: Size in absolute design units.\n * - Percent: Size in relation to the block's parent's size in percent, where 1.0 means 100%.\n * - Auto: Size is automatically determined\n *\n * @public\n */\nexport type SizeMode = 'Absolute' | 'Percent' | 'Auto';\n\n/**\n * - Crop: Manual crop.\n * - Cover: Automatically cover the entire frame.\n * - Contain: Automatically contain content inside frame.\n *\n * @public\n */\nexport type ContentFillMode = 'Crop' | 'Cover' | 'Contain';\n\n/** @public */\nexport type PropertyType =\n  | 'Bool'\n  | 'Int'\n  | 'Float'\n  | 'String'\n  | 'Color'\n  | 'Enum'\n  | 'Struct'\n  | 'Double'\n  | 'SourceSet';\n\n/**  @public */\nexport type StrokePosition = 'Center' | 'Inner' | 'Outer';\n\n/**  @public */\nexport type StrokeStyle =\n  | 'Dashed'\n  | 'DashedRound'\n  | 'Dotted'\n  | 'LongDashed'\n  | 'LongDashedRound'\n  | 'Solid';\n\n/** @public */\nexport type StrokeCornerGeometry = 'Bevel' | 'Miter' | 'Round';\n\n/**\n * @public\n */\nexport type BlendMode =\n  | 'PassThrough'\n  | 'Normal'\n  | 'Darken'\n  | 'Multiply'\n  | 'ColorBurn'\n  | 'Lighten'\n  | 'Screen'\n  | 'ColorDodge'\n  | 'Overlay'\n  | 'SoftLight'\n  | 'HardLight'\n  | 'Difference'\n  | 'Exclusion'\n  | 'Hue'\n  | 'Saturation'\n  | 'Color'\n  | 'Luminosity';\n\n/**\n * @public\n */\nexport type TextCase = 'Normal' | 'Uppercase' | 'Lowercase' | 'Titlecase';\n\n/**\n * Names of boolean operations.\n *\n * @public\n */\nexport type BooleanOperation = 'Difference' | 'Intersection' | 'Union' | 'XOR';\n\n/**\n * @public\n */\nexport type ExportOptions = {\n  /**\n   * The PNG compression level to use, when exporting to PNG.\n   *\n   * Valid values are 0 to 9, higher means smaller, but slower.\n   * Quality is not affected.\n   * Ignored for other encodings.\n   * @defaultValue 5.\n   */\n  pngCompressionLevel?: number;\n  /**\n   * The JPEG quality to use when encoding to JPEG.\n   *\n   * Valid values are (0-1], higher means better quality.\n   * Ignored for other encodings.\n   *\n   * @defaultValue 0.9\n   */\n  jpegQuality?: number;\n  /**\n   * The WebP quality to use when encoding to WebP. Valid values are (0-1], higher means better quality.\n   * WebP uses a special lossless encoding that usually produces smaller file sizes than PNG.\n   * Ignored for other encodings. Defaults to 1.0.\n   */\n  webpQuality?: number;\n  /**\n   * An optional target width used in conjunction with target height.\n   * If used, the block will be rendered large enough, that it fills the target\n   * size entirely while maintaining its aspect ratio.\n   */\n  targetWidth?: number;\n  /**\n   * An optional target height used in conjunction with target width.\n   * If used, the block will be rendered large enough, that it fills the target\n   * size entirely while maintaining its aspect ratio.\n   */\n  targetHeight?: number;\n  /**\n   * Export the PDF document with a higher compatibility to different PDF viewers.\n   * Bitmap images and some effects like gradients will be rasterized with the DPI\n   * setting instead of embedding them directly.\n   */\n  exportPdfWithHighCompatibility?: boolean;\n  /**\n   * Export the PDF document with an underlayer.\n   * An underlayer is generated by adding a graphics block behind the existing elements of the shape of the elements on\n   * the page.\n   */\n  exportPdfWithUnderlayer?: boolean;\n  /**\n   * The name of the spot color to be used for the underlayer's fill.\n   */\n  underlayerSpotColorName?: string;\n  /**\n   * The adjustment in size of the shape of the underlayer.\n   */\n  underlayerOffset?: number;\n};\n\n/**\n * @public\n */\nexport type VideoExportOptions = {\n  /**\n   * Determines the encoder feature set and in turn the quality, size and speed of the encoding process.\n   *\n   * @defaultValue 77 (Main)\n   */\n  h264Profile?: number;\n  /**\n   * Controls the H.264 encoding level. This relates to parameters used by the encoder such as bit rate,\n   * timings and motion vectors. Defined by the spec are levels 1.0 up to 6.2. To arrive at an integer value,\n   * the level is multiplied by ten. E.g. to get level 5.2, pass a value of 52.\n   *\n   * @defaultValue 52\n   */\n  h264Level?: number;\n  /**\n   * The video bitrate in bits per second. Maximum bitrate is determined by h264Profile and h264Level.\n   * If the value is 0, the bitrate is automatically determined by the engine.\n   */\n  videoBitrate?: number;\n  /**\n   * The audio bitrate in bits per second.\n   * If the value is 0, the bitrate is automatically determined by the engine (128kbps for stereo AAC stream).\n   */\n  audioBitrate?: number;\n  /**\n   * The time offset in seconds of the scene's timeline from which the video will start.\n   *\n   * @defaultValue 0\n   */\n  timeOffset?: number;\n  /**\n   * The duration in seconds of the final video.\n   *\n   * @defaultValue The duration of the scene.\n   */\n  duration?: number;\n  /**\n   * The target framerate of the exported video in Hz.\n   *\n   * @defaultValue 30\n   */\n  framerate?: number;\n  /**\n   * An optional target width used in conjunction with target height.\n   * If used, the block will be rendered large enough, that it fills the target\n   * size entirely while maintaining its aspect ratio.\n   */\n  targetWidth?: number;\n  /**\n   * An optional target height used in conjunction with target width.\n   * If used, the block will be rendered large enough, that it fills the target\n   * size entirely while maintaining its aspect ratio.\n   */\n  targetHeight?: number;\n  /**\n   * An abortsignal that can be used to cancel the export.\n   */\n  abortSignal?: AbortSignal;\n};\n\n/**\n * @public\n */\nexport type AudioExportOptions = {\n  /**\n   * The time offset in seconds relative to the target block.\n   *\n   * @defaultValue 0\n   */\n  timeOffset?: number;\n  /**\n   * The duration in seconds of the final audio.\n   *\n   * @defaultValue The duration of the block.\n   */\n  duration?: number;\n  /**\n   * The sample rate of the exported audio.\n   *\n   * @defaultValue 48000\n   */\n  sampleRate?: number;\n  /**\n   * The number of channels of the exported audio.\n   *\n   * @defaultValue 2\n   */\n  numberOfChannels?: number;\n};\n\n/**\n * @public\n */\nexport default class BlockAPI {\n  /** @internal */\n  #ubq: UBQ;\n\n  /** @internal */\n  constructor(ubq: UBQ) {\n    this.#ubq = ubq;\n  }\n\n  /**\n   * Exports a design block element as a file of the given mime type.\n   * Performs an internal update to resolve the final layout for the blocks.\n   * @param handle - The design block element to export.\n   * @param mimeType - The mime type of the output file.\n   * @param options - The options for exporting the block type\n   * @returns A promise that resolves with the exported image or is rejected with an error.\n   */\n  async export(\n    handle: DesignBlockId,\n    mimeType: MimeType = MimeType.Png,\n    options: ExportOptions = {}\n  ): Promise<Blob> {\n    assert('handle', handle, number());\n    assert('mimeType', mimeType, mimeTypeValue());\n    assert('options', options, object());\n\n    const useTargetSize =\n      options.targetWidth != null && options.targetHeight != null;\n    const jpegQuality = options.jpegQuality ?? 0.9;\n    const webpQuality = options.webpQuality ?? 1.0;\n    const pngCompressionLevel = options.pngCompressionLevel ?? 5;\n\n    // Assert range (0, 1]\n    assert(\n      'jpegQuality',\n      jpegQuality,\n      min(max(number(), 1), 0, { exclusive: true })\n    );\n    assert(\n      'webpQuality',\n      webpQuality,\n      min(max(number(), 1), 0, { exclusive: true })\n    );\n    assert(\n      'pngCompressionLevel',\n      pngCompressionLevel,\n      min(max(integer(), 9), 0)\n    );\n\n    // If either width or height are defined the other has to be as well.\n    if (options.targetWidth != null || options.targetHeight != null) {\n      assert('targetWidth', options.targetWidth as number, number());\n      assert('targetHeight', options.targetHeight as number, number());\n    }\n\n    return new Promise((resolve, reject) => {\n      this.#ubq.exportToBuffer(\n        handle,\n        mimeType,\n        (result) => {\n          if ('error' in result) {\n            reject(result.error);\n          } else {\n            resolve(new Blob([result], { type: mimeType }));\n          }\n        },\n        {\n          pngCompressionLevel,\n          jpegQuality,\n          webpQuality,\n          useTargetSize,\n          targetWidth: options.targetWidth ?? 0,\n          targetHeight: options.targetHeight ?? 0,\n          exportPdfWithHighCompatibility:\n            options.exportPdfWithHighCompatibility ?? true,\n          exportPdfWithUnderlayer: options.exportPdfWithUnderlayer ?? false,\n          underlayerSpotColorName: options.underlayerSpotColorName ?? '',\n          underlayerOffset: options.underlayerOffset ?? 0\n        }\n      );\n    });\n  }\n\n  /**\n   * Exports a design block element as a file of the given mime type.\n   * Performs an internal update to resolve the final layout for the blocks.\n   * @param handle - The design block element to export.\n   * @param mimeType - The mime type of the output file.\n   * @param maskColorR - The red component of the special color mask color.\n   * @param maskColorG - The green component of the special color mask color.\n   * @param maskColorB - The blue component of the special color mask color.\n   * @param options - The options for exporting the block type\n   * @returns A promise that resolves with an array of the exported image and mask or is rejected with an error.\n   */\n  async exportWithColorMask(\n    handle: DesignBlockId,\n    // eslint-disable-next-line @typescript-eslint/default-param-last\n    mimeType: MimeType = MimeType.Png,\n    maskColorR: number,\n    maskColorG: number,\n    maskColorB: number,\n    options: ExportOptions = {}\n  ): Promise<Blob[]> {\n    assert('handle', handle, number());\n    assert('mimeType', mimeType, mimeTypeValue());\n    assert('options', options, object());\n\n    const useTargetSize =\n      options.targetWidth != null && options.targetHeight != null;\n    const jpegQuality = options.jpegQuality ?? 0.9;\n    const webpQuality = options.webpQuality ?? 1.0;\n    const pngCompressionLevel = options.pngCompressionLevel ?? 5;\n\n    // Assert range (0, 1]\n    assert(\n      'jpegQuality',\n      jpegQuality,\n      min(max(number(), 1), 0, { exclusive: true })\n    );\n    assert(\n      'webpQuality',\n      webpQuality,\n      min(max(number(), 1), 0, { exclusive: true })\n    );\n    assert(\n      'pngCompressionLevel',\n      pngCompressionLevel,\n      min(max(integer(), 9), 0)\n    );\n\n    // If either width or height are defined the other has to be as well.\n    if (options.targetWidth != null || options.targetHeight != null) {\n      assert('targetWidth', options.targetWidth as number, number());\n      assert('targetHeight', options.targetHeight as number, number());\n    }\n\n    return new Promise((resolve, reject) => {\n      this.#ubq.exportWithColorMaskToBuffer(\n        handle,\n        mimeType,\n        maskColorR,\n        maskColorG,\n        maskColorB,\n        (imageResult, maskResult) => {\n          if ('error' in imageResult) {\n            reject(imageResult.error);\n          } else if ('error' in maskResult) {\n            reject(maskResult.error);\n          } else {\n            const imageData = new Blob([imageResult], {\n              type: mimeType\n            });\n            const maskData = new Blob([maskResult], {\n              type: mimeType\n            });\n            resolve([imageData, maskData]);\n          }\n        },\n        {\n          pngCompressionLevel,\n          jpegQuality,\n          webpQuality,\n          useTargetSize,\n          targetWidth: options.targetWidth ?? 0,\n          targetHeight: options.targetHeight ?? 0,\n          exportPdfWithHighCompatibility:\n            options.exportPdfWithHighCompatibility ?? true,\n          exportPdfWithUnderlayer: options.exportPdfWithUnderlayer ?? false,\n          underlayerSpotColorName: options.underlayerSpotColorName ?? '',\n          underlayerOffset: options.underlayerOffset ?? 0\n        }\n      );\n    });\n  }\n\n  /**\n   * Exports a design block as a video file of the given mime type.\n   * Note: The export will run across multiple iterations of the update loop. In each iteration a frame is scheduled for encoding.\n   * @param handle - The design block element to export. Currently, only page blocks are supported.\n   * @param mimeType - The mime type of the output video file.\n   * @param progressCallback - A callback which reports on the progress of the export. It informs the receiver of the current frame index, which currently gets exported and the total frame count.\n   * @param options - The options for exporting the video.\n   * @returns A promise that resolves with a video blob or is rejected with an error.\n   */\n  async exportVideo(\n    handle: DesignBlockId,\n    // eslint-disable-next-line @typescript-eslint/default-param-last\n    mimeType: MimeType | undefined = MimeType.Mp4,\n    progressCallback: (\n      numberOfRenderedFrames: number,\n      numberOfEncodedFrames: number,\n      totalNumberOfFrames: number\n    ) => void,\n    options: VideoExportOptions\n  ): Promise<Blob> {\n    throw new Error(\n      'Method not implemented. An implementation is available on the BlockAPI at engine.block or cesdk.engine.block'\n    );\n  }\n\n  /**\n   * Exports a design block as an audio file of the given mime type.\n   * @param handle - The design block element to export. Currently, only audio blocks are supported.\n   * @param mimeType - The mime type of the output audio file.\n   * @param progressCallback - A callback which reports on the progress of the export.\n   * @param options - The options for exporting the audio.\n   * @returns A promise that resolves with an audio blob or is rejected with an error.\n   */\n  async unstable_exportAudio(\n    handle: DesignBlockId,\n    // eslint-disable-next-line @typescript-eslint/default-param-last\n    mimeType: MimeType | undefined = MimeType.Wav,\n    progressCallback: (\n      numberOfRenderedFrames: number,\n      numberOfEncodedFrames: number,\n      totalNumberOfFrames: number\n    ) => void,\n    options: AudioExportOptions\n  ): Promise<Blob> {\n    assert('handle', handle, number());\n    assert('mimeType', mimeType, mimeTypeValue());\n    assert('options', options, object());\n\n    return new Promise((resolve, reject) => {\n      this.#ubq.unstable_exportAudioToBuffer(\n        handle,\n        options.timeOffset ?? 0,\n        options.duration ?? 0,\n        mimeType,\n        progressCallback,\n        (result) => {\n          if ('error' in result) {\n            reject(result.error);\n          } else {\n            resolve(new Blob([result], { type: mimeType }));\n          }\n        },\n        {\n          sampleRate: options.sampleRate ?? 48000,\n          numberOfChannels: options.numberOfChannels ?? 2\n        }\n      );\n    });\n  }\n\n  /**\n   * Loads existing blocks from the given string.\n   * The blocks are not attached by default and won't be visible until attached to a page or the scene.\n   * The UUID of the loaded blocks is replaced with a new one.\n   * @param content - A string representing the given blocks.\n   * @returns A promise that resolves with a list of handles representing the found blocks or an error.\n   */\n  @setter\n  async loadFromString(content: string): Promise<DesignBlockId[]> {\n    assert('content', content, string());\n    return unpackAsync<Vector<number>>((cb) =>\n      this.#ubq.loadBlocksFromString(content, cb)\n    ).then((vector) => cppVectorToArray(vector));\n  }\n\n  /**\n   * Loads existing blocks from the given URL.\n   * The blocks are not attached by default and won't be visible until attached to a page or the scene.\n   * The UUID of the loaded blocks is replaced with a new one.\n   * @param url - The URL to load the blocks from.\n   * @returns A promise that resolves with a list of handles representing the found blocks or an error.\n   */\n  @setter\n  loadFromArchiveURL(url: string): Promise<DesignBlockId[]> {\n    assert('url', url, string());\n    return unpackAsync<Vector<number>>((cb) =>\n      this.#ubq.loadBlocksFromArchiveURL(url, cb)\n    ).then((vector) => cppVectorToArray(vector));\n  }\n\n  /**\n   * Saves the given blocks into a string. If given the root of a block hierarchy, e.g. a\n   * page with multiple children, the entire hierarchy is saved.\n   * @param blocks - The blocks to save\n   * @returns A promise that resolves to a string representing the blocks or an error.\n   */\n  async saveToString(\n    blocks: DesignBlockId[],\n    allowedResourceSchemes: string[] = ['buffer', 'http', 'https']\n  ): Promise<string> {\n    assert('blocks', blocks, array(number()));\n    return unpackAsync((cb) =>\n      this.#ubq.saveBlocksToString(blocks, cb, allowedResourceSchemes)\n    );\n  }\n\n  /**\n   * Saves the given blocks and all of their referenced assets into an archive.\n   * The archive contains all assets that were accessible when this function was called.\n   * Blocks in the archived scene reference assets relative from to the location of the scene\n   * file. These references are resolved when loading such a scene via `loadSceneFromURL`.\n   * @param blocks - The blocks to save\n   * @returns A promise that resolves with a Blob on success or an error on failure.\n   */\n  async saveToArchive(blocks: DesignBlockId[]): Promise<Blob> {\n    assert('blocks', blocks, array(number()));\n    return new Promise((resolve, reject) => {\n      this.#ubq.saveBlocksToArchive(blocks, (result) => {\n        if ('error' in result) {\n          reject(result.error);\n        } else {\n          resolve(new Blob([result], { type: MimeType.Zip }));\n        }\n      });\n    });\n  }\n\n  /**\n   * Create a new block, fails if type is unknown.\n   * @param type - The type of the block that shall be created.\n   * @returns The created blocks handle.\n   */\n  @setter\n  create(type: DesignBlockType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.create(type));\n  }\n\n  /**\n   * Create a new fill, fails if type is unknown.\n   * @param type - The type of the fill object that shall be created.\n   * @returns The created fill's handle.\n   */\n  @setter\n  createFill(type: FillType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.createFill(type));\n  }\n\n  /**\n   * Get the type of the given block, fails if the block is invalid.\n   * @param id - The block to query.\n   * @returns The blocks type.\n   */\n  @getter\n  getType(id: DesignBlockId): ObjectTypeLonghand {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getType(id));\n  }\n\n  /**\n   * Get the kind of the given block, fails if the block is invalid.\n   * @param id - The block to query.\n   * @returns The block's kind.\n   */\n  @getter\n  getKind(id: DesignBlockId): string {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getKind(id));\n  }\n\n  /**\n   * Set the kind of the given block, fails if the block is invalid.\n   * @param id - The block whose kind should be changed.\n   * @param kind - The new kind.\n   * @returns The block's kind.\n   */\n  @setter\n  setKind(id: DesignBlockId, kind: string): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.setKind(id, kind));\n  }\n\n  /**\n   * Selects the given block and deselects all other blocks.\n   * @param id - The block to be selected.\n   */\n  @setter\n  select(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.select(id));\n  }\n\n  /**\n   * Update the selection state of a block.\n   * Fails for invalid blocks.\n   * Required scope: 'editor/select'\n   * @param id - The block to query.\n   * @param selected - Whether or not the block should be selected.\n   */\n  @setter\n  setSelected(id: DesignBlockId, selected: boolean): void {\n    assert('id', id, integer());\n    assert('selected', selected, boolean());\n    return unpackResult(this.#ubq.setSelected(id, selected));\n  }\n\n  /**\n   * Get the selected state of a block.\n   * @param id - The block to query.\n   * @returns True if the block is selected, false otherwise.\n   */\n  @getter\n  isSelected(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isSelected(id));\n  }\n\n  /**\n   * Get all currently selected blocks.\n   * @returns An array of block ids.\n   */\n  @getter\n  findAllSelected(): DesignBlockId[] {\n    return cppVectorToArray(this.#ubq.findAllSelected());\n  }\n\n  /**\n   * Subscribe to changes in the current set of selected blocks.\n   * @param callback - This function is called at the end of the engine update if the selection has changed.\n   * @returns A method to unsubscribe.\n   */\n  onSelectionChanged = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToSelectionChange(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Subscribe to block click events.\n   * @param callback - This function is called at the end of the engine update if a block has been clicked.\n   * @returns A method to unsubscribe.\n   */\n  onClicked = (callback: (id: DesignBlockId) => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToBlockClicked(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Confirms that a given set of blocks can be grouped together.\n   * @param ids - An array of block ids.\n   * @returns Whether the blocks can be grouped together.\n   */\n  @getter\n  isGroupable(ids: DesignBlockId[]): boolean {\n    assert('ids', ids, array(number()));\n    return unpackResult(this.#ubq.isGroupable(ids));\n  }\n\n  /**\n   * Group blocks together.\n   * @param ids - A non-empty array of block ids.\n   * @returns The block id of the created group.\n   */\n  @setter\n  group(ids: DesignBlockId[]): DesignBlockId {\n    assert('ids', ids, nonempty(array(number())));\n    return unpackResult(this.#ubq.group(ids));\n  }\n\n  /**\n   * Ungroups a group.\n   * @param id - The group id from a previous call to `group`.\n   */\n  @setter\n  ungroup(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.ungroup(id));\n  }\n\n  /**\n   * Changes selection from selected group to a block within that group.\n   * Nothing happens if `group` is not a group.\n   * Required scope: 'editor/select'\n   * @param id - The group id from a previous call to `group`.\n   */\n  @setter\n  enterGroup(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.enterGroup(id));\n  }\n\n  /**\n   * Changes selection from a group's selected block to that group.\n   * Nothing happens if the `id` is not part of a group.\n   * Required scope: 'editor/select'\n   * @param id - A block id.\n   */\n  @setter\n  exitGroup(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.exitGroup(id));\n  }\n\n  /**\n   * Checks whether blocks could be combined.\n   * Only graphics blocks and text blocks can be combined.\n   * All blocks must have the \"lifecycle/duplicate\" scope enabled.\n   * @param ids - An array of block ids.\n   * @returns Whether the blocks can be combined.\n   */\n  @getter\n  isCombinable(ids: DesignBlockId[]): boolean {\n    assert('ids', ids, array(number()));\n    return unpackResult(this.#ubq.isCombinable(ids));\n  }\n\n  /**\n   * Perform a boolean operation on the given blocks.\n   * All blocks must be combinable. See `isCombinable`.\n   * The parent, fill and  sort order of the new block is that of the prioritized block.\n   * When performing a `Union`, `Intersection` or `XOR`, the operation is performed pair-wise starting with the element with the highest sort order.\n   * When performing a `Difference`, the operation is performed pair-wise starting with the element with the lowest sort order.\n   * Required scopes: 'lifecycle/duplicate', 'lifecycle/destroy'\n   * @param ids - The blocks to combine. They will be destroyed if \"lifecycle/destroy\" scope is enabled.\n   * @param op - The boolean operation to perform.\n   * @returns The newly created block or an error.\n   */\n  @setter\n  combine(ids: DesignBlockId[], op: BooleanOperation): DesignBlockId {\n    assert('ids', ids, array(number()));\n    assert('op', op, string());\n    return unpackResult(this.#ubq.combine(ids, op));\n  }\n\n  /**\n   * Update a block's name.\n   * @param id - The block to update.\n   * @param name - The name to set.\n   */\n  @setter\n  setName(id: DesignBlockId, name: string) {\n    assert('id', id, integer());\n    assert('name', name, string());\n    return unpackResult(this.#ubq.setName(id, name));\n  }\n\n  /**\n   * Get a block's name.\n   * @param id - The block to query.\n   */\n  @getter\n  getName(id: DesignBlockId): string {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getName(id));\n  }\n\n  /**\n   * Get a block's UUID.\n   * @param id - The block to query.\n   */\n  @getter\n  getUUID(id: DesignBlockId): string {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getUUID(id));\n  }\n\n  /**\n   * Finds all blocks with the given name.\n   * @param name - The name to search for.\n   * @returns A list of block ids.\n   */\n  @getter\n  findByName(name: string): DesignBlockId[] {\n    assert('name', name, string());\n    const result = this.#ubq.findByName(name);\n    return cppVectorToArray(result);\n  }\n\n  /**\n   * Finds all blocks with the given type.\n   * @param type - The type to search for.\n   * @returns A list of block ids.\n   */\n  @getter\n  findByType(type: ObjectType): DesignBlockId[] {\n    assert('type', type, string());\n    const result = this.#ubq.findByType(type);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Finds all blocks with the given kind.\n   * @param kind - The kind to search for.\n   * @returns A list of block ids.\n   */\n  @getter\n  findByKind(kind: string): DesignBlockId[] {\n    assert('kind', kind, string());\n    const result = this.#ubq.findByKind(kind);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Return all blocks currently known to the engine.\n   * @returns A list of block ids.\n   */\n  @getter\n  findAll(/* filterSpec?: unknown */): DesignBlockId[] {\n    // TODO How do we filter?\n    return cppVectorToArray(this.#ubq.findAll());\n  }\n\n  /**\n   * Return all placeholder blocks in the current scene.\n   * @returns A list of block ids.\n   */\n  @getter\n  findAllPlaceholders(): DesignBlockId[] {\n    return cppVectorToArray(this.#ubq.findAllPlaceholders());\n  }\n\n  // Element\n\n  /**\n   * Create a new shape, fails if type is unknown.\n   * @param type - The type of the shape object that shall be created.\n   * @returns The created shape's handle.\n   */\n  @setter\n  createShape(type: ShapeType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.createShape(type));\n  }\n\n  /**\n   * Query if the given block has a shape property.\n   * @param id - The block to query.\n   * @returns true, if the block has a shape property, an error otherwise.\n   * @deprecated Use supportsShape instead.\n   */\n  @getter\n  hasShape(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasShape(id));\n  }\n\n  /**\n   * Query if the given block has a shape property.\n   * @param id - The block to query.\n   * @returns true, if the block has a shape property, an error otherwise.\n   */\n  @getter\n  supportsShape(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsShape(id));\n  }\n\n  /**\n   * Returns the block containing the shape properties of the given block.\n   * @param id - The block whose shape block should be returned.\n   * @returns The block that currently defines the given block's shape.\n   */\n  @getter\n  getShape(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getShape(id));\n  }\n\n  /**\n   * Sets the block containing the shape properties of the given block.\n   * Note that the previous shape block is not destroyed automatically.\n   * The new shape is disconnected from its previously attached block.\n   * Required scope: 'shape/change'\n   * @param id - The block whose shape should be changed.\n   * @param fill - The new shape.\n   */\n  @setter\n  setShape(id: DesignBlockId, shape: DesignBlockId): void {\n    assert('id', id, integer());\n    assert('shape', shape, integer());\n    return unpackResult(this.#ubq.setShape(id, shape));\n  }\n\n  /**\n   * Query a block's visibility.\n   * @param id - The block to query.\n   * @returns True if visible, false otherwise.\n   */\n  @getter\n  isVisible(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isVisible(id));\n  }\n\n  /**\n   * Update a block's visibility.\n   * Required scope: 'layer/visibility'\n   * @param id - The block to update.\n   * @param visible - Whether the block shall be visible.\n   */\n  @setter\n  setVisible(id: DesignBlockId, visible: boolean): void {\n    assert('id', id, integer());\n    assert('visible', visible, boolean());\n    return unpackResult(this.#ubq.setVisible(id, visible));\n  }\n\n  /**\n   * Query a block's clipped state. If true, the block should clip\n   * its contents to its frame.\n   * @param id - The block to query.\n   * @returns True if clipped, false otherwise.\n   */\n  @getter\n  isClipped(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isClipped(id));\n  }\n\n  /**\n   * Update a block's clipped state.\n   * Required scope: 'layer/clipping'\n   * @param id - The block to update.\n   * @param clipped - Whether the block should clips its contents to its frame.\n   */\n  @setter\n  setClipped(id: DesignBlockId, clipped: boolean): void {\n    assert('id', id, integer());\n    assert('clipped', clipped, boolean());\n    return unpackResult(this.#ubq.setClipped(id, clipped));\n  }\n\n  /**\n   * Query a block's transform locked state. If true, the block's transform can't be changed.\n   * @param id - The block to query.\n   * @returns True if transform locked, false otherwise.\n   */\n  @getter\n  isTransformLocked(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isTransformLocked(id));\n  }\n\n  /**\n   * Update a block's transform locked state.\n   * @param id - The block to update.\n   * @param locked - Whether the block's transform should be locked.\n   */\n  @setter\n  setTransformLocked(id: DesignBlockId, locked: boolean): void {\n    assert('id', id, integer());\n    assert('locked', locked, boolean());\n    return unpackResult(this.#ubq.setTransformLocked(id, locked));\n  }\n\n  /**\n   * Query a block's x position.\n   * @param id - The block to query.\n   * @returns The value of the x position.\n   */\n  @getter\n  getPositionX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getPositionX(id));\n  }\n\n  /**\n   * Query a block's mode for its x position.\n   * @param id - The block to query.\n   * @returns The current mode for the x position: absolute, percent or undefined.\n   */\n  @getter\n  getPositionXMode(id: DesignBlockId): PositionMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getPositionXMode(id)) as PositionMode;\n  }\n\n  /**\n   * Query a block's y position.\n   * @param id - The block to query.\n   * @returns The value of the y position.\n   */\n  @getter\n  getPositionY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getPositionY(id));\n  }\n\n  /**\n   * Query a block's mode for its y position.\n   * @param id - The block to query.\n   * @returns The current mode for the y position: absolute, percent or undefined.\n   */\n  @getter\n  getPositionYMode(id: DesignBlockId): PositionMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getPositionYMode(id)) as PositionMode;\n  }\n\n  /**\n   * Update a block's x position.\n   * The position refers to the block's local space, relative to its parent with the origin at the top left.\n   * Required scope: 'layer/move'\n   * @param id - The block to update.\n   * @param value - The value of the x position.\n   */\n  @setter\n  setPositionX(id: DesignBlockId, value: number): void {\n    assert('id', id, integer());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setPositionX(id, value));\n  }\n\n  /**\n   * Set a block's mode for its x position.\n   * Required scope: 'layer/move'\n   * @param id - The block to update.\n   * @param mode - The x position mode: absolute, percent or undefined.\n   */\n  @setter\n  setPositionXMode(id: DesignBlockId, mode: PositionMode): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setPositionXMode(id, mode));\n  }\n\n  /**\n   * Update a block's y position.\n   * The position refers to the block's local space, relative to its parent with the origin at the top left.\n   * Required scope: 'layer/move'\n   * @param id - The block to update.\n   * @param value - The value of the y position.\n   */\n  @setter\n  setPositionY(id: DesignBlockId, value: number): void {\n    assert('id', id, integer());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setPositionY(id, value));\n  }\n\n  /**\n   * Set a block's mode for its y position.\n   * Required scope: 'layer/move'\n   * @param id - The block to update.\n   * @param mode - The y position mode: absolute, percent or undefined.\n   */\n  @setter\n  setPositionYMode(id: DesignBlockId, mode: PositionMode): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setPositionYMode(id, mode));\n  }\n\n  /**\n   * Update the block's always-on-top property. If true, this blocks's global sorting order is automatically\n   * adjusted to be higher than all other siblings\n   * without this property. If more than one block is set to be always-on-top, the child order decides which is on top.\n   *\n   * @param id - the block to update.\n   * @param enabled - whether the block shall be always-on-top.\n   */\n  @setter\n  setAlwaysOnTop(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setAlwaysOnTop(id, enabled));\n  }\n\n  /**\n   * Update the block's always-on-bottom property. If true, this blocks's global sorting order is automatically\n   * adjusted to be lower than all other siblings without this property. If more than one block is set to be always-on-bottom,\n   * the child order decides which is on bottom.\n   *\n   * @param id - the block to update.\n   * @param enabled - whether the block shall always be below its siblings.\n   */\n  @setter\n  setAlwaysOnBottom(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setAlwaysOnBottom(id, enabled));\n  }\n\n  /**\n   * Query a block's always-on-top property.\n   *\n   * @param id - the block to query.\n   * @returns true if the block is set to be always-on-top, false otherwise.\n   */\n  @getter\n  isAlwaysOnTop(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isAlwaysOnTop(id));\n  }\n\n  /**\n   * Query a block's always-on-bottom property.\n   *\n   * @param id - the block to query.\n   * @returns true if the block is set to be always-on-bottom, false otherwise.\n   */\n  @getter\n  isAlwaysOnBottom(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isAlwaysOnBottom(id));\n  }\n\n  /**\n   * Updates the sorting order of this block and all of its manually created siblings\n   * so that the given block has the highest sorting order.\n   * @param id - The id of the block to be given the highest sorting order among its siblings.\n   */\n  @setter\n  bringToFront(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.bringToFront(id));\n  }\n\n  /**\n   * Updates the sorting order of this block and all of its manually created siblings\n   * so that the given block has the lowest sorting order.\n   * @param id - The id of the block to be given the lowest sorting order among its siblings.\n   */\n  @setter\n  sendToBack(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.sendToBack(id));\n  }\n\n  /**\n   * Updates the sorting order of this block and all of its superjacent siblings\n   * so that the given block has a higher sorting order than the next superjacent sibling.\n   * @param id - The id of the block to be given a higher sorting than the next superjacent sibling.\n   */\n  @setter\n  bringForward(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.bringForward(id));\n  }\n\n  /**\n   * Updates the sorting order of this block and all of its manually created and subjacent siblings\n   * so that the given block will have a lower sorting order than the next subjacent sibling.\n   * @param id - The id of the block to be given a lower sorting order than the next subjacent sibling.\n   */\n  @setter\n  sendBackward(id: DesignBlockId): void {\n    assert('id', id, number());\n    return unpackResult(this.#ubq.sendBackward(id));\n  }\n\n  /**\n   * Query a block's rotation in radians.\n   * @param id - The block to query.\n   * @returns The block's rotation around its center in radians.\n   */\n  @getter\n  getRotation(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getRotation(id));\n  }\n\n  /**\n   * Update a block's rotation.\n   * Required scope: 'layer/rotate'\n   * @param id - The block to update.\n   * @param radians - The new rotation in radians. Rotation is applied around the block's center.\n   */\n  @setter\n  setRotation(id: DesignBlockId, radians: number): void {\n    assert('id', id, integer());\n    assert('radians', radians, number());\n    return unpackResult(this.#ubq.setRotation(id, radians));\n  }\n\n  /**\n   * Query a block's horizontal flip state.\n   * @param id - The block to query.\n   * @returns A boolean indicating for whether the block is flipped in the queried direction\n   */\n  @getter\n  getFlipHorizontal(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    // TODO This need to be two methods in the C++ code, otherwise we're going\n    // down the path of putting logic into the UI code again. The UI should just\n    // be the thinnest possible wrapper around C++\n    return unpackResult(this.#ubq.getFlip(id)).horizontal;\n  }\n\n  /**\n   * Query a block's vertical flip state.\n   * @param id - The block to query.\n   * @returns A boolean indicating for whether the block is flipped in the queried direction\n   */\n  @getter\n  getFlipVertical(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    // TODO This need to be two methods in the C++ code, otherwise we're going\n    // down the path of putting logic into the UI code again. The UI should just\n    // be the thinnest possible wrapper around C++\n    return unpackResult(this.#ubq.getFlip(id)).vertical;\n  }\n\n  /**\n   * Update a block's horizontal flip.\n   * Required scope: 'layer/flip'\n   * @param id - The block to update.\n   * @param flip - If the flip should be enabled.\n   */\n  @setter\n  setFlipHorizontal(id: DesignBlockId, flip: boolean): void {\n    assert('id', id, integer());\n    assert('flip', flip, boolean());\n    return unpackResult(this.#ubq.setFlipHorizontal(id, flip));\n  }\n\n  /**\n   * Update a block's vertical flip.\n   * Required scope: 'layer/flip'\n   * @param id - The block to update.\n   * @param flip - If the flip should be enabled.\n   */\n  @setter\n  setFlipVertical(id: DesignBlockId, flip: boolean): void {\n    assert('id', id, integer());\n    assert('flip', flip, boolean());\n    return unpackResult(this.#ubq.setFlipVertical(id, flip));\n  }\n\n  /**\n   * Query if the given block has a content fill mode.\n   * @param id - The block to query.\n   * @returns true, if the block has a content fill mode.\n   * @deprecated Use supportsContentFillMode instead.\n   */\n  @getter\n  hasContentFillMode(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasContentFillMode(id));\n  }\n\n  /**\n   * Query if the given block has a content fill mode.\n   * @param id - The block to query.\n   * @returns true, if the block has a content fill mode.\n   */\n  @getter\n  supportsContentFillMode(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsContentFillMode(id));\n  }\n\n  /**\n   * Query a block's width.\n   * @param id - The block to query.\n   * @returns The value of the block's width.\n   */\n  @getter\n  getWidth(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getWidth(id));\n  }\n\n  /**\n   * Query a block's mode for its width.\n   * @param id - The block to query.\n   * @returns The current mode for the width: absolute, percent or auto.\n   */\n  @getter\n  getWidthMode(id: DesignBlockId): SizeMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getWidthMode(id)) as SizeMode;\n  }\n\n  /**\n   * Query a block's height.\n   * @param id - The block to query.\n   * @returns The value of the block's height.\n   */\n  @getter\n  getHeight(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getHeight(id));\n  }\n\n  /**\n   * Query a block's mode for its height.\n   * @param id - The block to query.\n   * @returns The current mode for the height: absolute, percent or auto.\n   */\n  @getter\n  getHeightMode(id: DesignBlockId): SizeMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getHeightMode(id)) as SizeMode;\n  }\n\n  /**\n   * Update a block's width.\n   * Required scope: 'layer/resize'\n   * @param id - The block to update.\n   * @param value - The new width of the block.\n   */\n  @setter\n  setWidth(id: DesignBlockId, value: number): void {\n    assert('id', id, integer());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setWidth(id, value));\n  }\n\n  /**\n   * Set a block's mode for its width.\n   * Required scope: 'layer/resize'\n   * @param id - The block to update.\n   * @param mode - The width mode: Absolute, Percent or Auto.\n   */\n  @setter\n  setWidthMode(id: DesignBlockId, mode: SizeMode): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setWidthMode(id, mode));\n  }\n\n  /**\n   * Update a block's height.\n   * Required scope: 'layer/resize'\n   * @param id - The block to update.\n   * @param value - The new height of the block.\n   */\n  @setter\n  setHeight(id: DesignBlockId, value: number): void {\n    assert('id', id, integer());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setHeight(id, value));\n  }\n\n  /**\n   * Set a block's mode for its height.\n   * Required scope: 'layer/resize'\n   * @param id - The block to update.\n   * @param mode - The height mode: Absolute, Percent or Auto.\n   */\n  @setter\n  setHeightMode(id: DesignBlockId, mode: SizeMode): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setHeightMode(id, mode));\n  }\n\n  /**\n   * Get a block's layout position on the x-axis. The position is only available after an\n   * internal update loop which only occurs if the `features/implicitUpdatesEnabled` setting is set.\n   * @param id - The block to query.\n   * @returns The layout position on the x-axis.\n   */\n  @getter\n  getFrameX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getLastFrameX(id));\n  }\n\n  /**\n   * Get a block's layout position on the y-axis. The position is only available after an\n   * internal update loop which only occurs if the `features/implicitUpdatesEnabled` setting is set.\n   * @param id - The block to query.\n   * @returns The layout position on the y-axis.\n   */\n  @getter\n  getFrameY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getLastFrameY(id));\n  }\n\n  /**\n   * Get a block's layout width. The width is only available after an\n   * internal update loop which only occurs if the `features/implicitUpdatesEnabled` setting is set.\n   * @param id - The block to query.\n   * @returns The layout width.\n   */\n  @getter\n  getFrameWidth(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getLastFrameWidth(id));\n  }\n\n  /**\n   * Get a block's layout height. The height is only available after an\n   * internal update loop which only occurs if the `features/implicitUpdatesEnabled` setting is set.\n   * @param id - The block to query.\n   * @returns The layout height.\n   */\n  @getter\n  getFrameHeight(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getLastFrameHeight(id));\n  }\n\n  /**\n   * Set a block's content fill mode.\n   * Required scope: 'layer/crop'\n   * @param id - The block to update.\n   * @param mode - The content fill mode mode: crop, cover or contain.\n   */\n  @setter\n  setContentFillMode(id: DesignBlockId, mode: ContentFillMode): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setContentFillMode(id, mode));\n  }\n\n  /**\n   * Query a block's content fill mode.\n   * @param id - The block to query.\n   * @returns The current mode: crop, cover or contain.\n   */\n  @getter\n  getContentFillMode(id: DesignBlockId): ContentFillMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getContentFillMode(id)) as ContentFillMode;\n  }\n\n  /**\n   * Duplicates a block including its children.\n   * Required scope: 'lifecycle/duplicate'\n   * @param id - The block to duplicate.\n   * @returns The handle of the duplicate.\n   */\n  @setter\n  duplicate(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.duplicate(id));\n  }\n\n  /**\n   * Destroys a block.\n   * Required scope: 'lifecycle/destroy'\n   * @param id - The block to destroy.\n   */\n  @setter\n  destroy(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.destroy(id));\n  }\n\n  /**\n   * Check if a block is valid. A block becomes invalid once it has been destroyed.\n   * @param id - The block to query.\n   * @returns True, if the block is valid.\n   */\n  @getter\n  isValid(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return this.#ubq.isValid(id);\n  }\n\n  /**\n   * Query a block's parent.\n   * @param id - The block to query.\n   * @returns The parent's handle or null if the block has no parent.\n   */\n  @getter\n  getParent(id: DesignBlockId): DesignBlockId | null {\n    assert('id', id, integer());\n    if (!unpackResult(this.#ubq.hasParent(id))) return null;\n    return unpackResult(this.#ubq.getParent(id));\n  }\n\n  /**\n   * Get all children of the given block. Children\n   * are sorted in their rendering order: Last child is rendered\n   * in front of other children.\n   * @param id - The block to query.\n   * @returns A list of block ids.\n   */\n  @getter\n  getChildren(id: DesignBlockId): DesignBlockId[] {\n    assert('id', id, integer());\n    const vector = unpackResult(this.#ubq.getChildren(id));\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Insert a new or existing child at a certain position in the parent's children.\n   * Required scope: 'editor/add'\n   * @param parent - The block whose children should be updated.\n   * @param child - The child to insert. Can be an existing child of `parent`.\n   * @param index - The index to insert or move to.\n   */\n  @setter\n  insertChild(\n    parent: DesignBlockId,\n    child: DesignBlockId,\n    index: number\n  ): void {\n    assert('parent', parent, number());\n    assert('child', child, number());\n    assert('index', index, min(number(), 0));\n    return unpackResult(this.#ubq.insertChild(parent, child, index));\n  }\n\n  /**\n   * Appends a new or existing child to a block's children.\n   * Required scope: 'editor/add'\n   * @param parent - The block whose children should be updated.\n   * @param child - The child to insert. Can be an existing child of `parent`.\n   */\n  @setter\n  appendChild(parent: DesignBlockId, child: DesignBlockId): void {\n    assert('parent', parent, number());\n    assert('child', child, number());\n    return unpackResult(this.#ubq.appendChild(parent, child));\n  }\n\n  /** Checks whether the given block references any variables. Doesn't check the block's children.\n   *\n   * @param id - The block to inspect.\n   * @returns true if the block references variables and false otherwise.\n   */\n  @getter\n  referencesAnyVariables(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.referencesAnyVariables(id));\n  }\n\n  /**\n   * Get the x position of the block's axis-aligned bounding box in the scene's global coordinate space.\n   * The scene's global coordinate space has its origin at the top left.\n   * @param id - The block whose bounding box should be calculated.\n   * @returns float The x coordinate of the position of the axis-aligned bounding box.\n   */\n  @getter\n  getGlobalBoundingBoxX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getGlobalBoundingBoxX(id));\n  }\n\n  /**\n   * Get the y position of the block's axis-aligned bounding box in the scene's global coordinate space.\n   * The scene's global coordinate space has its origin at the top left.\n   * @param id - The block whose bounding box should be calculated.\n   * @returns float The y coordinate of the position of the axis-aligned bounding box.\n   */\n  @getter\n  getGlobalBoundingBoxY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getGlobalBoundingBoxY(id));\n  }\n\n  /**\n   * Get the width of the block's axis-aligned bounding box in the scene's global coordinate space.\n   * The scene's global coordinate space has its origin at the top left.\n   * @param id - The block whose bounding box should be calculated.\n   * @returns float The width of the axis-aligned bounding box.\n   */\n  @getter\n  getGlobalBoundingBoxWidth(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getGlobalBoundingBoxWidth(id));\n  }\n\n  /**\n   * Get the height of the block's axis-aligned bounding box in the scene's global coordinate space.\n   * The scene's global coordinate space has its origin at the top left.\n   * @param id - The block whose bounding box should be calculated.\n   * @returns float The height of the axis-aligned bounding box.\n   */\n  @getter\n  getGlobalBoundingBoxHeight(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getGlobalBoundingBoxHeight(id));\n  }\n\n  /**\n   * Get the position and size of the axis-aligned bounding box for the given blocks in screen space.\n   * @param ids - The block to query.\n   * @returns The position and size of the bounding box.\n   */\n  @getter\n  getScreenSpaceBoundingBoxXYWH(ids: DesignBlockId[]): XYWH {\n    assert('ids', ids, array(number()));\n    return unpackResult(this.#ubq.getScreenSpaceBoundingBoxXYWH(ids)) as XYWH;\n  }\n\n  /**\n   * Align multiple blocks horizontally within their bounding box or a single block to its parent.\n   * Required scope: 'layer/move'\n   * @param ids - A non-empty array of block ids.\n   * @param alignment - How they should be aligned: left, right, or center\n   */\n  @setter\n  alignHorizontally(\n    ids: DesignBlockId[],\n    horizontalBlockAlignment: HorizontalBlockAlignment\n  ): void {\n    assert('ids', ids, nonempty(array(number())));\n    return unpackResult(\n      this.#ubq.alignHorizontally(ids, horizontalBlockAlignment)\n    );\n  }\n\n  /**\n   * Align multiple blocks vertically within their bounding box or a single block to its parent.\n   * Required scope: 'layer/move'\n   * @param ids - A non-empty array of block ids.\n   * @param alignment - How they should be aligned: top, bottom, or center\n   */\n  @setter\n  alignVertically(\n    ids: DesignBlockId[],\n    verticalBlockAlignment: VerticalBlockAlignment\n  ): void {\n    assert('ids', ids, nonempty(array(number())));\n    return unpackResult(this.#ubq.alignVertically(ids, verticalBlockAlignment));\n  }\n\n  /**\n   * Confirms that a given set of blocks can be aligned.\n   * @param ids - An array of block ids.\n   * @returns Whether the blocks can be aligned.\n   */\n  @getter\n  isAlignable(ids: DesignBlockId[]): boolean {\n    assert('ids', ids, array(number()));\n    return unpackResult(this.#ubq.isAlignable(ids));\n  }\n\n  /**\n   * Distribute multiple blocks horizontally within their bounding box so that the space between them is even.\n   * Required scope: 'layer/move'\n   * @param ids - A non-empty array of block ids.\n   */\n  @setter\n  distributeHorizontally(ids: DesignBlockId[]): void {\n    assert('ids', ids, nonempty(array(number())));\n    return unpackResult(this.#ubq.distributeHorizontally(ids));\n  }\n\n  /**\n   * Distribute multiple blocks vertically within their bounding box so that the space between them is even.\n   * Required scope: 'layer/move'\n   * @param ids - A non-empty array of block ids.\n   */\n  @setter\n  distributeVertically(ids: DesignBlockId[]): void {\n    assert('ids', ids, nonempty(array(number())));\n    return unpackResult(this.#ubq.distributeVertically(ids));\n  }\n\n  /**\n   * Confirms that a given set of blocks can be distributed.\n   * @param ids - An array of block ids.\n   * @returns Whether the blocks can be distributed.\n   */\n  @setter\n  isDistributable(ids: DesignBlockId[]): boolean {\n    assert('ids', ids, array(number()));\n    return unpackResult(this.#ubq.isDistributable(ids));\n  }\n\n  /**\n   * Resize and position a block to entirely fill its parent block.\n   * Required scope: 'layer/move'\n   * - 'layer/resize'\n   * @param id - The block that should fill its parent.\n   */\n  @setter\n  fillParent(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.fillParent(id));\n  }\n\n  /**\n   * Resize all blocks to the given size. The content of the blocks is automatically adjusted\n   * to fit the new dimensions.\n   * Required scope: 'layer/resize'\n   * @param ids - The blocks to resize.\n   * @param width - The new width of the blocks.\n   * @param height - The new height of the blocks.\n   */\n  @setter\n  resizeContentAware(\n    ids: DesignBlockId[],\n    width: number,\n    height: number\n  ): void {\n    assert('ids', ids, array(number()));\n    assert('width', width, number());\n    assert('height', height, number());\n    return unpackResult(this.#ubq.resizeContentAware(ids, width, height));\n  }\n\n  /**\n   * Scales the block and all of its children proportionally around the specified\n   * relative anchor point.\n   *\n   * This updates the position, size and style properties (e.g. stroke width) of\n   * the block and its children.\n   *\n   * Required scope: 'layer/resize'\n   * @param id - The block that should be scaled.\n   * @param scale - The scale factor to be applied to the current properties of the block.\n   * @param anchorX - The relative position along the width of the block around which the\n   * scaling should occur. (0 = left edge, 0.5 = center, 1 = right edge)\n   * @param anchorY - The relative position along the height of the block around which the\n   * scaling should occur. (0 = top edge, 0.5 = center, 1 = bottom edge)\n   */\n  @setter\n  scale(\n    id: DesignBlockId,\n    scale: number,\n    anchorX: number = 0,\n    anchorY: number = 0\n  ): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.scale(id, scale, anchorX, anchorY));\n  }\n\n  /**\n   * Get all available properties of a block.\n   * @param id - The block whose properties should be queried.\n   * @returns A list of the property names.\n   */\n  @getter\n  findAllProperties(id: DesignBlockId): string[] {\n    assert('id', id, integer());\n    return cppVectorToArray(unpackResult(this.#ubq.findAllProperties(id)));\n  }\n\n  /**\n   * Check if a property with a given name is readable\n   * @param property - The name of the property whose type should be queried.\n   * @returns Whether the property is readable or not. Will return false for unknown properties\n   */\n  @getter\n  isPropertyReadable(property: string): boolean {\n    assert('property', property, string());\n    return this.#ubq.isPropertyReadable(property);\n  }\n\n  /**\n   * Check if a property with a given name is writable\n   * @param property - The name of the property whose type should be queried.\n   * @returns Whether the property is writable or not. Will return false for unknown properties\n   */\n  @getter\n  isPropertyWritable(property: string): boolean {\n    assert('property', property, string());\n    return this.#ubq.isPropertyWritable(property);\n  }\n\n  /**\n   * Get the type of a property given its name.\n   * @param property - The name of the property whose type should be queried.\n   * @returns The property type.\n   */\n  @getter\n  getPropertyType(property: string): PropertyType {\n    assert('property', property, string());\n    const type = unpackResult(this.#ubq.getPropertyType(property));\n    return type as PropertyType;\n  }\n\n  /**\n   * Get all the possible values of an enum given an enum property.\n   * @param enumProperty - The name of the property whose enum values should be queried.\n   * @returns A list of the enum value names as string.\n   */\n  @getter\n  getEnumValues<T = string>(enumProperty: string): T[] {\n    assert('enumProperty', enumProperty, string());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getEnumValues(enumProperty))\n    ) as unknown as T[];\n  }\n\n  /**\n   * Set a bool property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setBool(id: DesignBlockId, property: string, value: boolean): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, boolean());\n    return unpackResult(this.#ubq.setBool(id, property, value));\n  }\n\n  /**\n   * Get the value of a bool property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getBool(id: DesignBlockId, property: string): boolean {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getBool(id, property));\n  }\n\n  /**\n   * Set an int property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setInt(id: DesignBlockId, property: string, value: number): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, integer());\n    return unpackResult(this.#ubq.setInt(id, property, value));\n  }\n\n  /**\n   * Get the value of an int property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getInt(id: DesignBlockId, property: string): number {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getInt(id, property));\n  }\n\n  /**\n   * Set a float property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setFloat(id: DesignBlockId, property: string, value: number): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setFloat(id, property, value));\n  }\n\n  /**\n   * Get the value of a float property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getFloat(id: DesignBlockId, property: string): number {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getFloat(id, property));\n  }\n\n  /**\n   * Set a double property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setDouble(id: DesignBlockId, property: string, value: number): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setDouble(id, property, value));\n  }\n\n  /**\n   * Get the value of a double property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getDouble(id: DesignBlockId, property: string): number {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getDouble(id, property));\n  }\n\n  /**\n   * Set a string property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setString(id: DesignBlockId, property: string, value: string): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, string());\n    return unpackResult(this.#ubq.setString(id, property, value));\n  }\n\n  /**\n   * Get the value of a string property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getString(id: DesignBlockId, property: string): string {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getString(id, property));\n  }\n\n  /**\n   * Set a color property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The value to set.\n   */\n  @setter\n  setColor(id: DesignBlockId, property: string, value: Color): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(\n      this.#ubq.setColor(id, property, ColorInternal.fromColor(value))\n    );\n  }\n\n  /**\n   * Get the value of a color property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value of the property.\n   */\n  @getter\n  getColor(id: DesignBlockId, property: string): Color {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return ColorInternal.toColor(\n      unpackResult(this.#ubq.getColor(id, property))\n    );\n  }\n\n  /**\n   * Set a color property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use setColor() instead.\n   */\n  @setter\n  setColorRGBA(\n    id: DesignBlockId,\n    property: string,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setColorRGBA(id, property, r, g, b, a));\n  }\n\n  /**\n   * Get the value of a string property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns A tuple of channels red, green, blue and alpha in the range of 0 to 1.\n   * @deprecated Use getColor() instead.\n   */\n  @getter\n  getColorRGBA(id: DesignBlockId, property: string): RGBA {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getColorRGBA(id, property));\n  }\n\n  /**\n   * Set a color property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param name - The name of the spot color.\n   * @param tint - The tint factor in the range of 0 to 1.\n   * @deprecated Use setColor() instead.\n   */\n  @setter\n  setColorSpot(\n    id: DesignBlockId,\n    property: string,\n    name: string,\n    tint: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('name', name, string());\n    assert('tint', tint, number());\n    return unpackResult(this.#ubq.setColorSpot(id, property, name, tint));\n  }\n\n  /**\n   * Get the spot color name of a color property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The name of the spot color.\n   * @deprecated Use getColor() instead.\n   */\n  @getter\n  getColorSpotName(id: DesignBlockId, property: string): string {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getColorSpotName(id, property));\n  }\n\n  /**\n   * Get the spot color tint factor of a color property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The tint factor of the spot color.\n   * @deprecated Use getColor() instead.\n   */\n  @getter\n  getColorSpotTint(id: DesignBlockId, property: string): number {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getColorSpotTint(id, property));\n  }\n\n  /**\n   * Set a gradient color stops property of the given design block.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   */\n  @setter\n  setGradientColorStops(\n    id: DesignBlockId,\n    property: string,\n    colors: GradientColorStop[]\n  ): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    const engineColors = colors.map((colorStop) => {\n      return {\n        color: ColorInternal.fromColor(colorStop.color),\n        stop: colorStop.stop\n      };\n    });\n    return unpackResult(\n      this.#ubq.setGradientColorStops(id, property, engineColors)\n    );\n  }\n\n  /**\n   * Get the gradient color stops property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The gradient colors.\n   */\n  @getter\n  getGradientColorStops(\n    id: DesignBlockId,\n    property: string\n  ): GradientColorStop[] {\n    assert('id', id, integer());\n    assert('property', property, string());\n    const result = this.#ubq.getGradientColorStops(id, property);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector).map((colorStop) => {\n      return {\n        color: ColorInternal.toColor(colorStop.color),\n        stop: colorStop.stop\n      };\n    });\n  }\n\n  /**\n   * Get the source set value of the given property.\n   * @param id - The block that should be queried.\n   * @param property - The name of the property to query.\n   * @returns The block's source set.\n   */\n  @getter\n  getSourceSet(id: DesignBlockId, property: string): Source[] {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return cppVectorToArray(unpackResult(this.#ubq.getSourceSet(id, property)));\n  }\n\n  /**\n   * Set the property of the given block.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param sourceSet - The block's new source set.\n   */\n  @setter\n  setSourceSet(id: DesignBlockId, property: string, sourceSet: Source[]): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert(\n      'sourceSet',\n      sourceSet,\n      array(\n        object({\n          uri: string(),\n          width: number(),\n          height: number()\n        })\n      )\n    );\n    unpackResult(this.#ubq.setSourceSet(id, property, sourceSet));\n  }\n\n  /**\n   * Add a source to the `sourceSet` property of the given block.\n   * If there already exists in source set an image with the same width, that existing image will be replaced.\n   * @param id - The block to update.\n   * @param property - The name of the property to modify.\n   * @param uri - The source to add to the source set.\n   */\n  @setter\n  addImageFileURIToSourceSet(\n    id: DesignBlockId,\n    property: string,\n    uri: string\n  ): Promise<void> {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('uri', uri, string());\n    return unpackAsync((cb) =>\n      this.#ubq.addImageFileURIToSourceSet(id, property, uri, cb)\n    );\n  }\n\n  /**\n   * Add a video file URI to the `sourceSet` property of the given block.\n   * If there already exists in source set an video with the same width, that existing video will be replaced.\n   * @param id - The block to update.\n   * @param property - The name of the property to modify.\n   * @param uri - The source to add to the source set.\n   */\n  @setter\n  addVideoFileURIToSourceSet(\n    id: DesignBlockId,\n    property: string,\n    uri: string\n  ): Promise<void> {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('uri', uri, string());\n    return unpackAsync((cb) =>\n      this.#ubq.addVideoFileURIToSourceSet(id, property, uri, cb)\n    );\n  }\n\n  /**\n   * Set an enum property of the given design block to the given value.\n   * @param id - The block whose property should be set.\n   * @param property - The name of the property to set.\n   * @param value - The enum value as string.\n   */\n  @setter\n  setEnum<T extends string = string>(\n    id: DesignBlockId,\n    property: string,\n    value: T\n  ): void {\n    assert('id', id, integer());\n    assert('property', property, string());\n    assert('value', value, string());\n    return unpackResult(this.#ubq.setEnum(id, property, value));\n  }\n\n  /**\n   * Get the value of an enum property of the given design block.\n   * @param id - The block whose property should be queried.\n   * @param property - The name of the property to query.\n   * @returns The value as string.\n   */\n  @getter\n  getEnum<T extends string = string>(id: DesignBlockId, property: string): T {\n    assert('id', id, integer());\n    assert('property', property, string());\n    return unpackResult(this.#ubq.getEnum(id, property)) as T;\n  }\n\n  /**\n   * Query if the given block has crop properties.\n   * @param id - The block to query.\n   * @returns true, if the block has crop properties.\n   * @deprecated Use supportsCrop() instead.\n   */\n  @getter\n  hasCrop(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasCrop(id));\n  }\n\n  /**\n   * Query if the given block has crop properties.\n   * @param id - The block to query.\n   * @returns true, if the block has crop properties.\n   */\n  @getter\n  supportsCrop(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsCrop(id));\n  }\n\n  /**\n   * Set the crop scale in x direction of the given design block.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param scaleX - The scale in x direction.\n   */\n  @setter\n  setCropScaleX(id: DesignBlockId, scaleX: number): void {\n    assert('id', id, integer());\n    assert('scaleX', scaleX, number());\n    return unpackResult(this.#ubq.setCropScaleX(id, scaleX));\n  }\n\n  /**\n   * Set the crop scale in y direction of the given design block.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param scaleY - The scale in y direction.\n   */\n  @setter\n  setCropScaleY(id: DesignBlockId, scaleY: number): void {\n    assert('id', id, integer());\n    assert('scaleY', scaleY, number());\n    return unpackResult(this.#ubq.setCropScaleY(id, scaleY));\n  }\n\n  /**\n   * Set the crop rotation of the given design block.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param rotation - The rotation in radians.\n   */\n  @setter\n  setCropRotation(id: DesignBlockId, rotation: number): void {\n    assert('id', id, integer());\n    assert('rotation', rotation, number());\n    return unpackResult(this.#ubq.setCropRotation(id, rotation));\n  }\n\n  /**\n   * Set the crop scale ratio of the given design block.\n   * This will uniformly scale the content up or down. The center of the\n   * scale operation is the center of the crop frame.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param scaleRatio - The crop scale ratio.\n   */\n  @setter\n  setCropScaleRatio(id: DesignBlockId, scaleRatio: number): void {\n    assert('id', id, integer());\n    assert('scaleRatio', scaleRatio, number());\n    return unpackResult(this.#ubq.setCropScaleRatio(id, scaleRatio));\n  }\n\n  /**\n   * Set the crop translation in x direction of the given design block.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param translationY - The translation in y direction.\n   */\n  @setter\n  setCropTranslationX(id: DesignBlockId, translationX: number): void {\n    assert('id', id, integer());\n    assert('translationX', translationX, number());\n    return unpackResult(this.#ubq.setCropTranslationX(id, translationX));\n  }\n\n  /**\n   * Set the crop translation in y direction of the given design block.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be set.\n   * @param translationY - The translation in y direction.\n   */\n  @setter\n  setCropTranslationY(id: DesignBlockId, translationY: number): void {\n    assert('id', id, integer());\n    assert('translationY', translationY, number());\n    return unpackResult(this.#ubq.setCropTranslationY(id, translationY));\n  }\n\n  /**\n   * Resets the manually set crop of the given design block.\n   * The block's content fill mode is set to 'cover'.\n   * Required scope: 'layer/crop'\n   * @param id - The block whose crop should be reset.\n   */\n  @setter\n  resetCrop(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.resetCrop(id));\n  }\n\n  /**\n   * Get the crop scale on the x axis of the given design block.\n   * @param id - The block whose scale should be queried.\n   * @returns The scale on the x axis.\n   */\n  @getter\n  getCropScaleX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropScaleX(id));\n  }\n\n  /**\n   * Get the crop scale on the y axis of the given design block.\n   * @param id - The block whose scale should be queried.\n   * @returns The scale on the y axis.\n   */\n  @getter\n  getCropScaleY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropScaleY(id));\n  }\n\n  /**\n   * Get the crop rotation of the given design block.\n   * @param id - The block whose crop rotation should be queried.\n   * @returns The crop rotation.\n   */\n  @getter\n  getCropRotation(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropRotation(id));\n  }\n\n  /**\n   * Get the crop scale ratio of the given design block.\n   * @param id - The block whose crop scale ratio should be queried.\n   * @returns The crop scale ratio.\n   */\n  @getter\n  getCropScaleRatio(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropScaleRatio(id));\n  }\n\n  /**\n   * Get the crop translation on the x axis of the given design block.\n   * @param id - The block whose translation should be queried.\n   * @returns The translation on the x axis.\n   */\n  @getter\n  getCropTranslationX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropTranslationX(id));\n  }\n\n  /**\n   * Get the crop translation on the y axis of the given design block.\n   * @param id - The block whose translation should be queried.\n   * @returns The translation on the y axis.\n   */\n  @getter\n  getCropTranslationY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getCropTranslationY(id));\n  }\n\n  /**\n   * Adjust the crop position/scale to at least fill the crop frame.\n   * @param id - The block whose crop scale ratio should be queried.\n   * @param minScaleRatio - The minimal crop scale ratio to go down to.\n   */\n  @setter\n  adjustCropToFillFrame(id: DesignBlockId, minScaleRatio: number): number {\n    assert('id', id, integer());\n    assert('minScaleRatio', minScaleRatio, number());\n    return unpackResult(this.#ubq.adjustCropToFillFrame(id, minScaleRatio));\n  }\n\n  /**\n   * Adjusts the crop in order to flip the content along its own horizontal axis.\n   * @param block - The block whose crop should be updated.\n   */\n  @setter\n  flipCropHorizontal(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.flipCropHorizontal(id));\n  }\n\n  /**\n   * Adjusts the crop in order to flip the content along its own vertical axis.\n   * @param block - The block whose crop should be updated.\n   */\n  @setter\n  flipCropVertical(id: DesignBlockId): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.flipCropVertical(id));\n  }\n\n  /**\n   * Query if the given block has an opacity.\n   * @param id - The block to query.\n   * @returns true, if the block has an opacity.\n   * @deprecated Use supportsOpacity() instead.\n   */\n  @getter\n  hasOpacity(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasOpacity(id));\n  }\n\n  /**\n   * Query if the given block has an opacity.\n   * @param id - The block to query.\n   * @returns true, if the block has an opacity.\n   */\n  @getter\n  supportsOpacity(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsOpacity(id));\n  }\n\n  /**\n   * Set the opacity of the given design block.\n   * Required scope: 'layer/opacity'\n   * @param id - The block whose opacity should be set.\n   * @param opacity - The opacity to be set. The valid range is 0 to 1.\n   */\n  @setter\n  setOpacity(id: DesignBlockId, opacity: number): void {\n    assert('id', id, integer());\n    assert('opacity', opacity, number());\n    return unpackResult(this.#ubq.setOpacity(id, opacity));\n  }\n\n  /**\n   * Get the opacity of the given design block.\n   * @param id - The block whose opacity should be queried.\n   * @returns The opacity.\n   */\n  @getter\n  getOpacity(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getOpacity(id));\n  }\n\n  /**\n   * Query if the given block has a blend mode.\n   * @param id - The block to query.\n   * @returns true, if the block has a blend mode.\n   * @deprecated Use supportsBlendMode() instead.\n   */\n  @getter\n  hasBlendMode(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasBlendMode(id));\n  }\n\n  /**\n   * Query if the given block has a blend mode.\n   * @param id - The block to query.\n   * @returns true, if the block has a blend mode.\n   */\n  @getter\n  supportsBlendMode(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsBlendMode(id));\n  }\n\n  /**\n   * Set the blend mode of the given design block.\n   * Required scope: 'layer/blendMode'\n   * @param id - The block whose blend mode should be set.\n   * @param blendMode - The blend mode to be set.\n   * @returns\n   */\n  @setter\n  setBlendMode(id: DesignBlockId, blendMode: BlendMode): void {\n    assert('id', id, integer());\n    assert('blendMode', blendMode, string());\n    return unpackResult(this.#ubq.setBlendMode(id, blendMode));\n  }\n\n  /**\n   * Get the blend mode of the given design block.\n   * @param id - The block whose blend mode should be queried.\n   * @returns The blend mode.\n   */\n  @getter\n  getBlendMode(id: DesignBlockId): BlendMode {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getBlendMode(id)) as BlendMode;\n  }\n\n  /**\n   * Query if the given block has fill color properties.\n   * @param id - The block to query.\n   * @returns true, if the block has fill color properties.\n   * @deprecated Query the fills type using getFill() and getType() instead.\n   */\n  @getter\n  hasFillColor(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasFillColor(id));\n  }\n\n  /**\n   * Query if the given block is included on the exported result.\n   * @param id - The block to query.\n   * @returns true, if the block is included on the exported result, false otherwise\n   */\n  @getter\n  isIncludedInExport(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isIncludedInExport(id));\n  }\n\n  /**\n   * Set if you want the given design block to be included in exported result.\n   * @param id - The block whose exportable state should be set.\n   * @param enabled - If true, the block will be included on the exported result.\n   */\n  @setter\n  setIncludedInExport(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setIncludedInExport(id, enabled));\n  }\n\n  /**\n   * Set the fill color of the given design block.\n   * @param id - The block whose fill color should be set.\n   * @param color - The fill color to be set, a tuple of\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use setFillSolidColor() instead.\n   */\n  @setter\n  setFillColorRGBA(\n    id: DesignBlockId,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setFillColorRGBA(id, r, g, b, a));\n  }\n\n  /**\n   * Get the fill color of the given design block.\n   * @param id - The block whose fill color should be queried.\n   * @returns The fill color.\n   * @deprecated Use getFillSolidColor() instead.\n   */\n  @getter\n  getFillColorRGBA(id: DesignBlockId): RGBA {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getFillColorRGBA(id));\n  }\n\n  /**\n   * Enable or disable the fill of the given design block.\n   * @param id - The block whose fill should be enabled or disabled.\n   * @param enabled - If true, the fill will be enabled.\n   * @deprecated Use setFillEnabled() instead.\n   */\n  @setter\n  setFillColorEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setFillColorEnabled(id, enabled));\n  }\n\n  /**\n   * Query if the fill of the given design block is enabled.\n   * @param id - The block whose fill state should be queried.\n   * @returns True, if fill is enabled.\n   * @deprecated Use isFillEnabled() instead.\"\n   */\n  @getter\n  isFillColorEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isFillColorEnabled(id));\n  }\n\n  /**\n   * Create a new effect block, fails if type is unknown or not a valid effect block type.\n   * @param type - The type id of the effect.\n   * @returns The created effects handle.\n   */\n  @setter\n  createEffect(type: EffectType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.createEffect(type));\n  }\n\n  /**\n   * Queries whether the block supports effects.\n   * @param id - The block to query.\n   * @returns True, if the block can render effects, false otherwise.\n   * @deprecated Use supportsEffects instead.\n   */\n  @getter\n  hasEffects(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasEffects(id));\n  }\n\n  /**\n   * Queries whether the block supports effects.\n   * @param id - The block to query.\n   * @returns True, if the block can render effects, false otherwise.\n   */\n  @getter\n  supportsEffects(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsEffects(id));\n  }\n\n  /**\n   * Get a list of all effects attached to this block\n   * @param id - The block to query.\n   * @returns A list of effects or an error, if the block doesn't support effects.\n   */\n  @getter\n  getEffects(id: DesignBlockId): DesignBlockId[] {\n    assert('id', id, integer());\n    const result = this.#ubq.getEffects(id);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Inserts an effect at the given index into the list of effects of the given block.\n   * The same effect can appear multiple times in the list and won't be removed if appended again.\n   * Required scope: 'appearance/effect'\n   * @param id - The block to update.\n   * @param effectId - The effect to insert\n   * @param index - The index at which the effect shall be inserted.\n   */\n  @setter\n  insertEffect(\n    id: DesignBlockId,\n    effectId: DesignBlockId,\n    index: number\n  ): void {\n    assert('id', id, integer());\n    assert('effectId', effectId, integer());\n    assert('index', index, min(integer(), 0));\n    unpackResult(this.#ubq.insertEffect(id, effectId, index));\n  }\n\n  /**\n   * Inserts an effect at the end of the list of effects\n   * The same effect can appear multiple times in the list and won't be removed if appended again.\n   * Required scope: 'appearance/effect'\n   * @param id - The block to append the effect to.\n   * @param effectId - The effect to append.\n   */\n  @setter\n  appendEffect(id: DesignBlockId, effectId: DesignBlockId): void {\n    assert('id', id, integer());\n    assert('effectId', effectId, integer());\n    unpackResult(this.#ubq.appendEffect(id, effectId));\n  }\n\n  /**\n   * Removes the effect at the given index.\n   * Required scope: 'appearance/effect'\n   * @param id - The block to remove the effect from.\n   * @param index - The index where the effect is stored.\n   */\n  @setter\n  removeEffect(id: DesignBlockId, index: number): void {\n    assert('id', id, integer());\n    assert('index', index, min(integer(), 0));\n    unpackResult(this.#ubq.removeEffect(id, index));\n  }\n\n  /**\n   * Checks whether an 'effect' block may be enabled and disabled.\n   * @param effectId - The 'effect' block to query.\n   * @returns True, if the block supports enabling and disabling, false otherwise.\n   * @deprecated Calls to this function can be removed. All effects can be enabled and disabled.\n   */\n  @getter\n  hasEffectEnabled(effectId: DesignBlockId): boolean {\n    assert('effectId', effectId, integer());\n    return unpackResult(this.#ubq.hasEffectEnabled(effectId));\n  }\n\n  /**\n   * Sets the enabled state of an 'effect' block.\n   * @param effectId - The 'effect' block to update.\n   * @param enabled - The new state.\n   */\n  @setter\n  setEffectEnabled(effectId: DesignBlockId, enabled: boolean): void {\n    assert('effectId', effectId, integer());\n    assert('enabled', enabled, boolean());\n    unpackResult(this.#ubq.setEffectEnabled(effectId, enabled));\n  }\n\n  /**\n   * Queries whether an 'effect' block is enabled and therefore applies its effect.\n   * @param effectId - The 'effect' block to query.\n   * @returns True, if the effect is enabled. False otherwise.\n   */\n  @getter\n  isEffectEnabled(effectId: DesignBlockId): boolean {\n    assert('effectId', effectId, integer());\n    return unpackResult(this.#ubq.isEffectEnabled(effectId));\n  }\n\n  // Blur\n\n  /**\n   * Create a new blur, fails if type is unknown or not a valid blur type.\n   * @param type - The type id of the block.\n   * @returns The handle of the newly created blur.\n   */\n  @setter\n  createBlur(type: BlurType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.createBlur(type));\n  }\n\n  /**\n   * Checks whether the block supports blur.\n   * @param id - The block to query.\n   * @returns True, if the block supports blur.\n   * @deprecated Use supportsBlur instead.\n   */\n  @getter\n  hasBlur(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasBlur(id));\n  }\n\n  /**\n   * Checks whether the block supports blur.\n   * @param id - The block to query.\n   * @returns True, if the block supports blur.\n   */\n  @getter\n  supportsBlur(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsBlur(id));\n  }\n\n  /**\n   * Connects `block`'s blur to the given `blur` block.\n   * Required scope: 'appearance/blur'\n   * @param id - The block to update.\n   * @param blurId - A 'blur' block.\n   */\n  @setter\n  setBlur(id: DesignBlockId, blurId: DesignBlockId): void {\n    assert('id', id, integer());\n    assert('blurId', blurId, integer());\n    unpackResult(this.#ubq.setBlur(id, blurId));\n  }\n\n  /**\n   * Get the 'blur' block of the given design block.\n   * @param id - The block to query.\n   * @returns The 'blur' block.\n   */\n  @getter\n  getBlur(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getBlur(id));\n  }\n\n  /**\n   * Enable or disable the blur of the given design block.\n   * @param id - The block to update.\n   * @param enabled - The new enabled value.\n   */\n  @setter\n  setBlurEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    unpackResult(this.#ubq.setBlurEnabled(id, enabled));\n  }\n\n  /**\n   * Query if blur is enabled for the given block.\n   * @param id - The block to query.\n   * @returns True, if the blur is enabled. False otherwise.\n   */\n  @getter\n  isBlurEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isBlurEnabled(id));\n  }\n\n  /**\n   * Query if the given block has background color properties.\n   * @param id - The block to query.\n   * @returns true, if the block has background color properties.\n   * @deprecated Use supportsBackgroundColor() instead.\n   */\n  @getter\n  hasBackgroundColor(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasBackgroundColor(id));\n  }\n\n  /**\n   * Query if the given block has background color properties.\n   * @param id - The block to query.\n   * @returns true, if the block has background color properties.\n   */\n  @getter\n  supportsBackgroundColor(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsBackgroundColor(id));\n  }\n\n  /**\n   * Set the background color of the given design block.\n   * Required scope: 'fill/change'\n   * @param id - The block whose background color should be set.\n   * @param color - The background color to be set, a tuple of\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use `Use setColor() with the key path 'backgroundColor/color' instead.`.\n   */\n  @setter\n  setBackgroundColorRGBA(\n    id: DesignBlockId,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setBackgroundColorRGBA(id, r, g, b, a));\n  }\n\n  /**\n   * Get the background color of the given design block.\n   * @param id - The block whose background color should be queried.\n   * @returns The background color.\n   * @deprecated Use `Use getColor() with the key path 'backgroundColor/color' instead.`.\n   */\n  @getter\n  getBackgroundColorRGBA(id: DesignBlockId): RGBA {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getBackgroundColorRGBA(id));\n  }\n\n  /**\n   * Enable or disable the background of the given design block.\n   * Required scope: 'fill/change'\n   * @param id - The block whose background should be enabled or disabled.\n   * @param enabled - If true, the background will be enabled.\n   */\n  @setter\n  setBackgroundColorEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setBackgroundColorEnabled(id, enabled));\n  }\n\n  /**\n   * Query if the background of the given design block is enabled.\n   * @param id - The block whose background state should be queried.\n   * @returns True, if background is enabled.\n   */\n  @getter\n  isBackgroundColorEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isBackgroundColorEnabled(id));\n  }\n\n  /**\n   * Query if the given block has a stroke property.\n   * @param id - The block to query.\n   * @returns True if the block has a stroke property.\n   * @deprecated Use supportsStroke() instead.\n   */\n  @getter\n  hasStroke(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasStroke(id));\n  }\n\n  /**\n   * Query if the given block has a stroke property.\n   * @param id - The block to query.\n   * @returns True if the block has a stroke property.\n   */\n  @getter\n  supportsStroke(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsStroke(id));\n  }\n\n  /**\n   * Enable or disable the stroke of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke should be enabled or disabled.\n   * @param enabled - If true, the stroke will be enabled.\n   */\n  @setter\n  setStrokeEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setStrokeEnabled(id, enabled));\n  }\n\n  /**\n   * Query if the stroke of the given design block is enabled.\n   * @param id - The block whose stroke state should be queried.\n   * @returns True if the block's stroke is enabled.\n   */\n  @getter\n  isStrokeEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isStrokeEnabled(id));\n  }\n\n  /**\n   * Set the stroke color of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke color should be set.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use setStrokeColor() instead.\n   */\n  @setter\n  setStrokeColorRGBA(\n    id: DesignBlockId,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setStrokeColorRGBA(id, r, g, b, a));\n  }\n\n  /**\n   * Set the stroke color of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke color should be set.\n   * @param color - The color to set.\n   */\n  @setter\n  setStrokeColor(id: DesignBlockId, color: Color): void {\n    assert('id', id, integer());\n    return unpackResult(\n      this.#ubq.setStrokeColor(id, ColorInternal.fromColor(color))\n    );\n  }\n\n  /**\n   * Get the stroke color of the given design block.\n   * @param id - The block whose stroke color should be queried.\n   * @returns The stroke color.\n   * @deprecated Use getStrokeColor() instead.\n   */\n  @getter\n  getStrokeColorRGBA(id: DesignBlockId): RGBA {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getStrokeColorRGBA(id));\n  }\n\n  /**\n   * Get the stroke color of the given design block.\n   * @param id - The block whose stroke color should be queried.\n   * @returns The stroke color.\n   */\n  @getter\n  getStrokeColor(id: DesignBlockId): Color {\n    assert('id', id, integer());\n    return ColorInternal.toColor(unpackResult(this.#ubq.getStrokeColor(id)));\n  }\n\n  /**\n   * Set the stroke width of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke width should be set.\n   * @param width - The stroke width to be set.\n   */\n  @setter\n  setStrokeWidth(id: DesignBlockId, width: number): void {\n    assert('id', id, integer());\n    assert('width', width, number());\n    return unpackResult(this.#ubq.setStrokeWidth(id, width));\n  }\n\n  /**\n   * Get the stroke width of the given design block.\n   * @param id - The block whose stroke width should be queried.\n   * @returns The stroke's width.\n   */\n  @getter\n  getStrokeWidth(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getStrokeWidth(id));\n  }\n\n  /**\n   * Set the stroke style of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke style should be set.\n   * @param style - The stroke style to be set.\n   */\n  @setter\n  setStrokeStyle(id: DesignBlockId, style: StrokeStyle): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setStrokeStyle(id, style));\n  }\n\n  /**\n   * Get the stroke style of the given design block.\n   * @param id - The block whose stroke style should be queried.\n   * @returns The stroke's style.\n   */\n  @getter\n  getStrokeStyle(id: DesignBlockId): StrokeStyle {\n    assert('id', id, integer());\n    const style = unpackResult(this.#ubq.getStrokeStyle(id));\n    return style as StrokeStyle;\n  }\n\n  /**\n   * Set the stroke position of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke position should be set.\n   * @param position - The stroke position to be set.\n   */\n  @setter\n  setStrokePosition(id: DesignBlockId, position: StrokePosition): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setStrokePosition(id, position));\n  }\n\n  /**\n   * Get the stroke position of the given design block.\n   * @param id - The block whose stroke position should be queried.\n   * @returns The stroke position.\n   */\n  @getter\n  getStrokePosition(id: DesignBlockId): StrokePosition {\n    assert('id', id, integer());\n    const position = unpackResult(this.#ubq.getStrokePosition(id));\n    return position as StrokePosition;\n  }\n\n  /**\n   * Set the stroke corner geometry of the given design block.\n   * Required scope: 'stroke/change'\n   * @param id - The block whose stroke join geometry should be set.\n   * @param cornerGeometry - The stroke join geometry to be set.\n   */\n  @setter\n  setStrokeCornerGeometry(\n    id: DesignBlockId,\n    cornerGeometry: StrokeCornerGeometry\n  ): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setStrokeCornerGeometry(id, cornerGeometry));\n  }\n\n  /**\n   * Get the stroke corner geometry of the given design block.\n   * @param id - The block whose stroke join geometry should be queried.\n   * @returns The stroke join geometry.\n   */\n  @getter\n  getStrokeCornerGeometry(id: DesignBlockId): StrokeCornerGeometry {\n    assert('id', id, integer());\n    const cornerGeometry = unpackResult(this.#ubq.getStrokeCornerGeometry(id));\n    return cornerGeometry as StrokeCornerGeometry;\n  }\n\n  /**\n   * Query if the given block has a drop shadow property.\n   * @param id - The block to query.\n   * @returns True if the block has a drop shadow property.\n   * @deprecated Use supportsDropShadow() instead.\n   */\n  @getter\n  hasDropShadow(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasDropShadow(id));\n  }\n\n  /**\n   * Query if the given block has a drop shadow property.\n   * @param id - The block to query.\n   * @returns True if the block has a drop shadow property.\n   */\n  @getter\n  supportsDropShadow(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsDropShadow(id));\n  }\n\n  /**\n   * Enable or disable the drop shadow of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow should be enabled or disabled.\n   * @param enabled - If true, the drop shadow will be enabled.\n   */\n  @setter\n  setDropShadowEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setDropShadowEnabled(id, enabled));\n  }\n\n  /**\n   * Query if the drop shadow of the given design block is enabled.\n   * @param id - The block whose drop shadow state should be queried.\n   * @returns True if the block's drop shadow is enabled.\n   */\n  @getter\n  isDropShadowEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isDropShadowEnabled(id));\n  }\n\n  /**\n   * Set the drop shadow color of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow color should be set.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use setDropShadowColor() instead.\n   */\n  @setter\n  setDropShadowColorRGBA(\n    id: DesignBlockId,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setDropShadowColorRGBA(id, r, g, b, a));\n  }\n\n  /**\n   * Set the drop shadow color of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow color should be set.\n   * @param color - The color to set.\n   */\n  @setter\n  setDropShadowColor(id: DesignBlockId, color: Color): void {\n    assert('id', id, integer());\n    return unpackResult(\n      this.#ubq.setDropShadowColor(id, ColorInternal.fromColor(color))\n    );\n  }\n\n  /**\n   * Get the  drop shadow color of the given design block.\n   * @param id - The block whose drop shadow color should be queried.\n   * @returns The drop shadow color.\n   * @deprecated Use getDropShadowColor instead.\n   */\n  @getter\n  getDropShadowColorRGBA(id: DesignBlockId): RGBA {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowColorRGBA(id));\n  }\n\n  /**\n   * Get the  drop shadow color of the given design block.\n   * @param id - The block whose drop shadow color should be queried.\n   * @returns The drop shadow color.\n   */\n  @getter\n  getDropShadowColor(id: DesignBlockId): Color {\n    assert('id', id, integer());\n    return ColorInternal.toColor(\n      unpackResult(this.#ubq.getDropShadowColor(id))\n    );\n  }\n\n  /**\n   * Set the drop shadow's X offset of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow's X offset should be set.\n   * @param offsetX - The X offset to be set.\n   */\n  @setter\n  setDropShadowOffsetX(id: DesignBlockId, offsetX: number): void {\n    assert('id', id, integer());\n    assert('offsetX', offsetX, number());\n    return unpackResult(this.#ubq.setDropShadowOffsetX(id, offsetX));\n  }\n\n  /**\n   * Get the drop shadow's X offset of the given design block.\n   * @param id - The block whose drop shadow's X offset should be queried.\n   * @returns The offset.\n   */\n  @getter\n  getDropShadowOffsetX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowOffsetX(id));\n  }\n\n  /**\n   * Set the drop shadow's Y offset of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow's Y offset should be set.\n   * @param offsetY - The X offset to be set.\n   */\n  @setter\n  setDropShadowOffsetY(id: DesignBlockId, offsetY: number): void {\n    assert('id', id, integer());\n    assert('offsetY', offsetY, number());\n    return unpackResult(this.#ubq.setDropShadowOffsetY(id, offsetY));\n  }\n\n  /**\n   * Get the drop shadow's Y offset of the given design block.\n   * @param id - The block whose drop shadow's Y offset should be queried.\n   * @returns The offset.\n   */\n  @getter\n  getDropShadowOffsetY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowOffsetY(id));\n  }\n\n  /**\n   * Set the drop shadow's blur radius on the X axis of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow's blur radius should be set.\n   * @param blurRadiusX - The blur radius to be set.\n   */\n  @setter\n  setDropShadowBlurRadiusX(id: DesignBlockId, blurRadiusX: number): void {\n    assert('id', id, integer());\n    assert('blurRadiusX', blurRadiusX, number());\n    return unpackResult(this.#ubq.setDropShadowBlurRadiusX(id, blurRadiusX));\n  }\n\n  /**\n   * Get the drop shadow's blur radius on the X axis of the given design block.\n   * @param id - The block whose drop shadow's blur radius should be queried.\n   * @returns The blur radius.\n   */\n  @getter\n  getDropShadowBlurRadiusX(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowBlurRadiusX(id));\n  }\n\n  /**\n   * Set the drop shadow's blur radius on the Y axis of the given design block.\n   * Required scope: 'appearance/shadow'\n   * @param id - The block whose drop shadow's blur radius should be set.\n   * @param blurRadiusY - The blur radius to be set.\n   */\n  @setter\n  setDropShadowBlurRadiusY(id: DesignBlockId, blurRadiusY: number): void {\n    assert('id', id, integer());\n    assert('blurRadiusY', blurRadiusY, number());\n    return unpackResult(this.#ubq.setDropShadowBlurRadiusY(id, blurRadiusY));\n  }\n\n  /**\n   * Get the drop shadow's blur radius on the Y axis of the given design block.\n   * @param id - The block whose drop shadow's blur radius should be queried.\n   * @returns The blur radius.\n   */\n  @getter\n  getDropShadowBlurRadiusY(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowBlurRadiusY(id));\n  }\n\n  /**\n   * Set the drop shadow's clipping of the given design block. (Only applies to shapes.)\n   * @param id - The block whose drop shadow's clip should be set.\n   * @param clip - The drop shadow's clip to be set.\n   */\n  @setter\n  setDropShadowClip(id: DesignBlockId, clip: boolean): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setDropShadowClip(id, clip));\n  }\n\n  /**\n   * Get the drop shadow's clipping of the given design block.\n   * @param id - The block whose drop shadow's clipping should be queried.\n   * @returns The drop shadow's clipping.\n   */\n  @getter\n  getDropShadowClip(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDropShadowClip(id));\n  }\n\n  /**\n   * Creates a cutout whose path will be the contour of the given blocks.\n   * The cutout path for each element is derived from one two ways:\n   *   - Blocks that have already have a vector path (shapes, SVG-based text or stickers).\n   *   - Blocks that don't have a vector path are vectorized and then, optionally, simplified to eliminate jaggedness\n   *   (images).\n   * @param blocks - The blocks whose shape will serve as the basis for the cutout's path.\n   * @param vectorizeDistanceThreshold - The maximum number of pixels by which the cutout's path can deviate from the\n   * original contour.\n   * @param simplifyDistanceThreshold - The maximum number of pixels by which the simplified cutout path can deviate from\n   * the cutout contour. If 0, no simplification step is performed.\n   * @param useExistingShapeInformation - If true, the existing vector paths of the provided blocks will be used to create the cutout.\n   * If false, new shape information for the cutout will be generated.\n   * @returns The newly created block or an error.\n   */\n  @setter\n  createCutoutFromBlocks(\n    ids: DesignBlockId[],\n    vectorizeDistanceThreshold: number = 2,\n    simplifyDistanceThreshold: number = 4,\n    useExistingShapeInformation: boolean = true\n  ): DesignBlockId {\n    assert('ids', ids, array(integer()));\n    assert('vectorizeDistanceThreshold', vectorizeDistanceThreshold, number());\n    assert('maxSmoothingDistance', simplifyDistanceThreshold, number());\n    assert(\n      'useExistingShapeInformation',\n      useExistingShapeInformation,\n      boolean()\n    );\n    return unpackResult(\n      this.#ubq.createCutoutFromBlocks(\n        ids,\n        vectorizeDistanceThreshold,\n        simplifyDistanceThreshold,\n        useExistingShapeInformation\n      )\n    );\n  }\n\n  /**\n   * Create a Cutout block.\n   * @param path - An SVG string describing a path.\n   * @returns The newly created block or an error.\n   */\n  @setter\n  createCutoutFromPath(path: string): DesignBlockId {\n    assert('path', path, string());\n    return unpackResult(this.#ubq.createCutoutFromPath(path));\n  }\n\n  /** Perform a boolean operation on the given Cutout blocks.\n   * The cutout offset of the new block is 0.\n   * The cutout type of the new block is that of the first block.\n   * When performing a `Difference` operation, the first block is the block subtracted from.\n   * @param blocks - The blocks with which to perform to the operation.\n   * @param op - The boolean operation to perform.\n   * @returns The newly created block or an error.\n   */\n  @setter\n  createCutoutFromOperation(\n    ids: DesignBlockId[],\n    op: CutoutOperation\n  ): DesignBlockId {\n    assert('ids', ids, array(integer()));\n    assert('op', op, cutoutOperationShape());\n    return unpackResult(this.#ubq.createCutoutFromOperation(ids, op));\n  }\n\n  /**\n   * Inserts the given text into the selected range of the text block.\n   * Required scope: 'text/edit'\n   * @param block - The text block into which to insert the given text.\n   * @param text - The text which should replace the selected range in the block.\n   * @param from - The start index of the UTF-16 range that should be replaced.\n   * If the value is negative, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme that should be replaced by the inserted text.\n   *   If `from` and `to` are negative, a this will fall back to the end of the entire text range, so the entire text will be replaced.\n   *   If `to` is negative but `from` is greater than or equal to 0, the text will be inserted at the index defined by `from`.\n   */\n  @setter\n  replaceText(\n    id: DesignBlockId,\n    text: string,\n    from: number = -1,\n    to: number = -1\n  ) {\n    assert('id', id, integer());\n    assert('text', text, string());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.replaceText(id, text, from, to));\n  }\n\n  /**\n   * Removes selected range of text of the given text block.\n   * Required scope: 'text/edit'\n   * @param block - The text block from which the selected text should be removed.\n   * @param from - The start index of the UTF-16 range that should be removed.\n   * If the value is negative, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme that should be removed.\n   * If the value is negative, this will fall back to the end of the entire text range.\n   */\n  @setter\n  removeText(id: DesignBlockId, from: number = -1, to: number = -1) {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.removeText(id, from, to));\n  }\n\n  /**\n   * Changes the color of the text in the selected range to the given color.\n   * Required scope: 'text/edit'\n   * @param block - The text block whose color should be changed.\n   * @param color - The new color of the selected text range.\n   * @param from - The start index of the UTF-16 range whose color should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose color should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  setTextColor(\n    id: DesignBlockId,\n    color: Color,\n    from: number = -1,\n    to: number = -1\n  ) {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(\n      this.#ubq.setTextColor(id, ColorInternal.fromColor(color), from, to)\n    );\n  }\n\n  /**\n   * Returns the ordered unique list of colors of the text in the selected range.\n   * @param block - The text block whose colors should be returned.\n   * @param from - The start index of the UTF-16 range whose colors should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose colors should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @getter\n  getTextColors(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): Array<Color> {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    const result = this.#ubq.getTextColors(id, from, to);\n    const colorInternals = cppVectorToArray(unpackResult(result));\n    return colorInternals.map((colorInternal) => {\n      return ColorInternal.toColor(colorInternal);\n    });\n  }\n\n  /**\n   * Changes the weight of the text in the selected range to the given weight.\n   * Required scope: 'text/edit'\n   * @param block - The text block whose weight should be changed.\n   * @param fontWeight - The new weight of the selected text range.\n   * @param from - The start index of the UTF-16 range whose weight should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose weight should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  setTextFontWeight(\n    id: DesignBlockId,\n    fontWeight: FontWeight,\n    from: number = -1,\n    to: number = -1\n  ) {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.setTextFontWeight(id, fontWeight, from, to));\n  }\n\n  /**\n   * Returns the ordered unique list of font weights of the text in the selected range.\n   * @param block - The text block whose font weights should be returned.\n   * @param from - The start index of the UTF-16 range whose font weights should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font weights should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @getter\n  getTextFontWeights(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): FontWeight[] {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getTextFontWeights(id, from, to))\n    );\n  }\n\n  /**\n   * Sets the given font size for the text block.\n   * Required scope: 'text/character'\n   * @param block - The text block whose font size should be changed.\n   * @param fontSize - The new font size.\n   * @param from - The start index of the UTF-16 range whose font size should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font size should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  setTextFontSize(\n    id: DesignBlockId,\n    fontSize: number,\n    from: number = -1,\n    to: number = -1\n  ) {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.setTextFontSize(id, fontSize, from, to));\n  }\n\n  /**\n   * Returns the ordered unique list of font sizes of the text in the selected range.\n   * @param block - The text block whose font sizes should be returned.\n   * @param from - The start index of the grapheme range whose font sizes should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font sizes should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @getter\n  getTextFontSizes(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): number[] {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getTextFontSizes(id, from, to))\n    );\n  }\n\n  /**\n   * Changes the style of the text in the selected range to the given style.\n   * Required scope: 'text/edit'\n   * @param block - The text block whose style should be changed.\n   * @param fontStyle - The new style of the selected text range.\n   * @param from - The start index of the UTF-16 range whose style should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose style should be changed.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  setTextFontStyle(\n    id: DesignBlockId,\n    fontStyle: FontStyle,\n    from: number = -1,\n    to: number = -1\n  ) {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.setTextFontStyle(id, fontStyle, from, to));\n  }\n\n  /**\n   * Returns the ordered unique list of font styles of the text in the selected range.\n   * @param block - The text block whose font styles should be returned.\n   * @param from - The start index of the UTF-16 range whose font styles should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font styles should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @getter\n  getTextFontStyles(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): FontStyle[] {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getTextFontStyles(id, from, to))\n    );\n  }\n\n  /**\n   * Returns the ordered list of text cases of the text in the selected range.\n   * @param block - The text block whose text cases should be returned.\n   * @param from - The start index of the UTF-16 range whose text cases should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose text cases should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @getter\n  getTextCases(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): TextCase[] {\n    assert('id', id, integer());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getTextCases(id, from, to))\n    ) as TextCase[];\n  }\n\n  /**\n   * Sets the given text case for the selected range of text.\n   * Required scope: 'text/character'\n   * @param id - The text block whose text case should be changed.\n   * @param textCase - The new text case value.\n   * @param from - The start index of the UTF-16 range whose text cases should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose text cases should be returned.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  setTextCase(\n    id: DesignBlockId,\n    textCase: TextCase,\n    from: number = -1,\n    to: number = -1\n  ): void {\n    assert('id', id, integer());\n    assert('textCase', textCase, string());\n    assert('from', from, integer());\n    assert('to', to, integer());\n    unpackResult(this.#ubq.setTextCase(id, textCase, from, to));\n  }\n\n  /**\n   * Returns whether the font weight of the given text block can be toggled between bold and normal.\n   * If any part of the selected range is not already bold and the necessary bold font is available, then this function returns true.\n   * @param id - The text block whose font weight should be toggled.\n   * @param from - The start index of the UTF-16 range whose font weight should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font weight should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   * @returns Whether the font weight of the given block can be toggled between bold and normal.\n   */\n  @getter\n  canToggleBoldFont(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.canToggleBoldFont(id, from, to));\n  }\n\n  /**\n   * Toggles the bold font style of the given text block.\n   * If any part of the selected range is not already italic and the necessary italic font is available, then this function returns true.\n   * @param id - The text block whose font style should be toggled.\n   * @param from - The start index of the UTF-16 range whose font style should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font style should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   * @returns Whether the font style of the given block can be toggled between italic and normal.\n   */\n  @getter\n  canToggleItalicFont(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.canToggleItalicFont(id, from, to));\n  }\n\n  /**\n   * Toggles the font weight of the given text block between bold and normal.\n   * If any part of the selected range is not already bold, all of the selected range will become bold. Only if the entire range is already bold will this function toggle it all back to normal.\n   * Required scope: 'text/character'\n   * @param id - The text block whose font weight should be toggled.\n   * @param from - The start index of the UTF-16 range whose font weight should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font weight should be toggled.\n   *   If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *   If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  toggleBoldFont(id: DesignBlockId, from: number = -1, to: number = -1): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.toggleBoldFont(id, from, to));\n  }\n\n  /**\n   * Toggles the font style of the given text block between italic and normal.\n   * If any part of the selected range is not already italic, all of the selected range will become italic. Only if the entire range is already italic will this function toggle it all back to normal.\n   * Required scope: 'text/character'\n   * @param id - The text block whose font style should be toggled.\n   * @param from - The start index of the UTF-16 range whose font style should be toggled.\n   *  If the value is negative and the block is currently being edited, this will fall back to the start of the current cursor index / selected grapheme range.\n   *  If the value is negative and the block is not being edited, this will fall back to the start of the entire text range.\n   * @param to - The UTF-16 index after the last grapheme whose font style should be toggled.\n   *  If the value is negative and the block is currently being edited, this will fall back to the end of the current cursor index / selected grapheme range.\n   *  If the value is negative and the block is not being edited, this will fall back to the end of the entire text range.\n   */\n  @setter\n  toggleItalicFont(\n    id: DesignBlockId,\n    from: number = -1,\n    to: number = -1\n  ): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.toggleItalicFont(id, from, to));\n  }\n\n  /**\n   * Sets the given font and typeface for the text block.\n   * Existing formatting is reset.\n   * Required scope: 'text/character'\n   * @param id - The text block whose font should be changed.\n   * @param fontFileUri - The URI of the new font file.\n   * @param typeface - The typeface of the new font.\n   */\n  @setter\n  setFont(id: DesignBlockId, fontFileUri: string, typeface: Typeface): void {\n    assert('block', id, integer());\n    assert('fontFileUri', fontFileUri, string());\n    unpackResult(this.#ubq.setFont(id, fontFileUri, typeface));\n  }\n\n  /**\n   * Sets the given typeface for the text block.\n   * The current formatting, e.g., bold or italic, is retained as far as possible. Some formatting might change if the\n   * new typeface does not support it, e.g. thin might change to light, bold to normal, and/or italic to non-italic.\n   * Required scope: 'text/character'\n   * @param id - The text block whose font should be changed.\n   * @param fallbackFontFileUri - The URI of the fallback font file.\n   * @param typeface - The new typeface.\n   */\n  @setter\n  setTypeface(\n    id: DesignBlockId,\n    fallbackFontFileUri: string,\n    typeface: Typeface\n  ): void {\n    assert('block', id, integer());\n    assert('fontFileUri', fallbackFontFileUri, string());\n    unpackResult(this.#ubq.setTypeface(id, fallbackFontFileUri, typeface));\n  }\n\n  /**\n   * Returns the current typeface of the given text block.\n   * @param id - The text block whose typeface should be queried.\n   * @returns The typeface of the text block.\n   * @throws An error if the block does not have a valid typeface.\n   */\n  @getter\n  getTypeface(id: DesignBlockId): Typeface {\n    assert('block', id, integer());\n    return unpackResult(this.#ubq.getTypeface(id));\n  }\n\n  /**\n   * Returns the UTF-16 indices of the selected range of the text block that is currently being edited.\n   * If both the start and end index of the returned range have the same value, then the text cursor is positioned at that index.\n   * @returns The selected UTF-16 range or \\{ from: -1, to: -1 \\} if no text block is currently being edited.\n   */\n  @getter\n  getTextCursorRange(): Range {\n    return unpackResult(this.#ubq.getTextCursorRange());\n  }\n\n  /**\n   * Query if the given block has fill color properties.\n   * @param id - The block to query.\n   * @returns true, if the block has fill color properties, an error otherwise.\n   * @deprecated Use supportsFill instead.\n   */\n  @getter\n  hasFill(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasFill(id));\n  }\n\n  /**\n   * Query if the given block has fill color properties.\n   * @param id - The block to query.\n   * @returns true, if the block has fill color properties, an error otherwise.\n   */\n  @getter\n  supportsFill(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsFill(id));\n  }\n\n  /**\n   * Query if the fill of the given design block is enabled.\n   * @param id - The block whose fill state should be queried.\n   * @returns A result holding the fill state or an error.\n   */\n  @getter\n  isFillEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isFillEnabled(id));\n  }\n\n  /**\n   * Enable or disable the fill of the given design block.\n   * Required scope: 'fill/change'\n   * @param id - The block whose fill should be enabled or disabled.\n   * @param enabled - If true, the fill will be enabled.\n   * @returns An empty result on success, an error otherwise.\n   */\n  @setter\n  setFillEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.setFillEnabled(id, enabled));\n  }\n\n  /**\n   * Returns the block containing the fill properties of the given block.\n   * @param id - The block whose fill block should be returned.\n   * @returns The block that currently defines the given block's fill.\n   */\n  @getter\n  getFill(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getFill(id));\n  }\n\n  /**\n   * Sets the block containing the fill properties of the given block.\n   * Note that the previous fill block is not destroyed automatically.\n   * Required scopes: 'fill/change', 'fill/changeType'\n   * @param id - The block whose fill should be changed.\n   * @param fill - The new fill.\n   */\n  @setter\n  setFill(id: DesignBlockId, fill: DesignBlockId): void {\n    assert('id', id, integer());\n    assert('fill', fill, integer());\n    return unpackResult(this.#ubq.setFill(id, fill));\n  }\n\n  /**\n   * Set the fill color of the given design block.\n   * Required scope: 'fill/change'\n   * @param id - The block whose fill color should be set.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @returns An empty result on success, an error otherwise.\n   */\n  @setter\n  setFillSolidColor(\n    id: DesignBlockId,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.setFillSolidColor(id, r, g, b, a));\n  }\n\n  /**\n   * Get the fill color of the given design block.\n   * @param id - The block whose fill color should be queried.\n   * @returns A result holding the fill color or an error.\n   */\n  @getter\n  getFillSolidColor(id: DesignBlockId): RGBA {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getFillSolidColor(id));\n  }\n\n  /**\n   * Enable or disable the placeholder function for a block.\n   * @param id - The block whose placeholder function should be enabled or disabled.\n   * @param enabled - Whether the function should be enabled or disabled.\n   */\n  @setter\n  setPlaceholderEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    unpackResult(this.#ubq.setPlaceholderEnabled(id, enabled));\n  }\n\n  /**\n   * Query whether the placeholder function for a block is enabled.\n   * @param id - The block whose placeholder function state should be queried.\n   * @returns the enabled state of the placeholder function.\n   */\n  @getter\n  isPlaceholderEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isPlaceholderEnabled(id));\n  }\n\n  /**\n   * Checks whether the block supports placeholder behavior.\n   * @param block - The block to query.\n   * @returns True, if the block supports placeholder behavior.\n   * @deprecated Use supportsPlaceholderBehavior instead.\n   */\n  @getter\n  hasPlaceholderBehavior(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasPlaceholderBehavior(id));\n  }\n\n  /**\n   * Checks whether the block supports placeholder behavior.\n   * @param block - The block to query.\n   * @returns True, if the block supports placeholder behavior.\n   */\n  @getter\n  supportsPlaceholderBehavior(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsPlaceholderBehavior(id));\n  }\n\n  /**\n   * Enable or disable the placeholder behavior for a block.\n   * @param id - The block whose placeholder behavior should be enabled or disabled.\n   * @param enabled - Whether the placeholder behavior should be enabled or disabled.\n   */\n  @setter\n  setPlaceholderBehaviorEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.setPlaceholderBehaviorEnabled(id, enabled));\n  }\n\n  /**\n   * Query whether the placeholder behavior for a block is enabled.\n   * @param id - The block whose placeholder behavior state should be queried.\n   * @returns the enabled state of the placeholder behavior.\n   */\n  @getter\n  isPlaceholderBehaviorEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isPlaceholderBehaviorEnabled(id));\n  }\n\n  /**\n   * Checks whether the block supports placeholder controls.\n   * @param block - The block to query.\n   * @returns True, if the block supports placeholder controls.\n   * @deprecated Use supportsPlaceholderControls instead.\n   */\n  @getter\n  hasPlaceholderControls(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasPlaceholderControls(id));\n  }\n\n  /**\n   * Checks whether the block supports placeholder controls.\n   * @param block - The block to query.\n   * @returns True, if the block supports placeholder controls.\n   */\n  @getter\n  supportsPlaceholderControls(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsPlaceholderControls(id));\n  }\n\n  /**\n   * Enable or disable the visibility of the placeholder overlay pattern for a block.\n   * @param block - The block whose placeholder overlay should be enabled or disabled.\n   * @param enabled - Whether the placeholder overlay should be shown or not.\n   * @returns An empty result on success, an error otherwise.\n   */\n  @setter\n  setPlaceholderControlsOverlayEnabled(\n    id: DesignBlockId,\n    enabled: boolean\n  ): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(\n      this.#ubq.setPlaceholderControlsOverlayEnabled(id, enabled)\n    );\n  }\n\n  /**\n   * Query whether the placeholder overlay pattern for a block is shown.\n   * @param block - The block whose placeholder overlay visibility state should be queried.\n   * @returns An error if the block was invalid, otherwise the visibility state of the block's placeholder overlay pattern.\n   */\n  @getter\n  isPlaceholderControlsOverlayEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isPlaceholderControlsOverlayEnabled(id));\n  }\n\n  /** Enable or disable the visibility of the placeholder button for a block.\n   * @param block - The block whose placeholder button should be shown or not.\n   * @param enabled - Whether the placeholder button should be shown or not.\n   * @returns An empty result on success, an error otherwise.\n   */\n  @setter\n  setPlaceholderControlsButtonEnabled(\n    id: DesignBlockId,\n    enabled: boolean\n  ): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(\n      this.#ubq.setPlaceholderControlsButtonEnabled(id, enabled)\n    );\n  }\n\n  /** Query whether the placeholder button for a block is shown.\n   * @param block - The block whose placeholder button visibility state should be queried.\n   * @returns An error if the block was invalid, otherwise\n   */\n  @getter\n  isPlaceholderControlsButtonEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isPlaceholderControlsButtonEnabled(id));\n  }\n\n  /**\n   * Set a metadata value of a block identified by a key.\n   * If the key does not exist, yet, it will be added.\n   * @param id - The block whose metadata will be accessed.\n   * @param key - The key used to identify the desired piece of metadata.\n   * @param value - The value to set.\n   */\n  @setter\n  setMetadata(id: DesignBlockId, key: string, value: string): void {\n    assert('id', id, integer());\n    assert('key', key, string());\n    assert('value', value, string());\n    unpackResult(this.#ubq.setMetadata(id, key, value));\n  }\n\n  /**\n   * Get a metadata value of a block identified by a key.\n   * If the key does not exist, yet, this method will fail.\n   * @param id - The block whose metadata will be accessed.\n   * @param key - The key used to identify the desired piece of metadata.\n   * @returns the value associated with the key.\n   */\n  @getter\n  getMetadata(id: DesignBlockId, key: string): string {\n    assert('id', id, integer());\n    assert('key', key, string());\n    return unpackResult(this.#ubq.getMetadata(id, key));\n  }\n\n  /**\n   * Check if the block has metadata associated with the key.\n   * @param id - The block whose metadata will be accessed.\n   * @param key - The key used to identify the desired piece of metadata.\n   * @returns whether the key exists.\n   */\n  @getter\n  hasMetadata(id: DesignBlockId, key: string): boolean {\n    assert('id', id, integer());\n    assert('key', key, string());\n    return unpackResult(this.#ubq.hasMetadata(id, key));\n  }\n\n  /**\n   * Query all metadata keys that exist on this block.\n   * @param id - The block whose metadata will be accessed.\n   * @returns A list of all metadata keys on this block or an error,\n   * if the block is invalid.\n   */\n  @getter\n  findAllMetadata(id: DesignBlockId): string[] {\n    assert('id', id, integer());\n    return cppVectorToArray(unpackResult(this.#ubq.findAllMetadata(id)));\n  }\n\n  /**\n   * Remove metadata associated with the key from the given block.\n   * If the key does not exist, this method will fail.\n   * @param id - The block whose metadata will be accessed.\n   * @param key - The key used to identify the desired piece of metadata.\n   */\n  @setter\n  removeMetadata(id: DesignBlockId, key: string): void {\n    assert('id', id, integer());\n    assert('key', key, string());\n    unpackResult(this.#ubq.removeMetadata(id, key));\n  }\n\n  /**\n   * Enable or disable a scope for a given block.\n   * @param id - The block whose scope should be enabled or disabled.\n   * @param key - The scope to enable or disable.\n   * @param enabled - Whether the scope should be enabled or disabled.\n   */\n  @setter\n  setScopeEnabled(id: DesignBlockId, key: Scope, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('key', key, string());\n    assert('enabled', enabled, boolean());\n    unpackResult(this.#ubq.setScopeEnabled(id, key, enabled));\n  }\n\n  /**\n   * Query whether a scope is enabled for a given block.\n   * @param id - The block whose scope state should be queried.\n   * @param key - The scope to query.\n   * @returns the enabled state of the scope for the given block.\n   */\n  @getter\n  isScopeEnabled(id: DesignBlockId, key: Scope): boolean {\n    assert('id', id, integer());\n    assert('key', key, string());\n    return unpackResult(this.#ubq.isScopeEnabled(id, key));\n  }\n\n  /**\n   * Check if a scope is allowed for a given block.\n   * @param id - The block to check.\n   * @param key - The scope to check.\n   * @returns whether the scope is allowed for the given block.\n   */\n  @getter\n  isAllowedByScope(id: DesignBlockId, key: Scope): boolean {\n    assert('id', id, integer());\n    assert('key', key, string());\n    return unpackResult(this.#ubq.isAllowedByScope(id, key));\n  }\n\n  // Video\n\n  /**\n   * Returns whether the block has a duration property.\n   * @param id - The block to query.\n   * @returns true if the block has a duration property.\n   * @deprecated Use supportsDuration instead.\n   */\n  @getter\n  hasDuration(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasDuration(id));\n  }\n\n  /**\n   * Returns whether the block has a duration property.\n   * @param id - The block to query.\n   * @returns true if the block has a duration property.\n   */\n  @getter\n  supportsDuration(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsDuration(id));\n  }\n\n  /**\n   * Set the playback duration of the given block in seconds.\n   * The duration defines for how long the block is active in the scene during playback.\n   * The duration is ignored when the scene is not in \"Video\" mode.\n   * @param id - The block whose duration should be changed.\n   * @param duration - The new duration in seconds.\n   */\n  @setter\n  setDuration(id: DesignBlockId, duration: number): void {\n    assert('id', id, integer());\n    assert('duration', duration, number());\n    return unpackResult(this.#ubq.setDuration(id, duration));\n  }\n\n  /**\n   * Get the playback duration of the given block in seconds.\n   * @param id - The block whose duration should be returned.\n   * @returns The block's duration.\n   */\n  @getter\n  getDuration(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getDuration(id));\n  }\n\n  /**\n   * Returns whether the block has a time offset property.\n   * @param id - The block to query.\n   * @returns true, if the block has a time offset property.\n   * @deprecated Use supportsTimeOffset instead.\n   */\n  @getter\n  hasTimeOffset(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasTimeOffset(id));\n  }\n\n  /**\n   * Returns whether the block has a time offset property.\n   * @param id - The block to query.\n   * @returns true, if the block has a time offset property.\n   */\n  @getter\n  supportsTimeOffset(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsTimeOffset(id));\n  }\n\n  /**\n   * Set the time offset of the given block relative to its parent.\n   * The time offset controls when the block is first active in the timeline.\n   * The time offset is not supported by the page block.\n   * @param id - The block whose time offset should be changed.\n   * @param offset - The new time offset in seconds.\n   */\n  @setter\n  setTimeOffset(id: DesignBlockId, offset: number): void {\n    assert('id', id, integer());\n    assert('offset', offset, number());\n    return unpackResult(this.#ubq.setTimeOffset(id, offset));\n  }\n\n  /**\n   * Get the time offset of the given block relative to its parent.\n   * @param id - The block whose time offset should be queried.\n   * @returns the time offset of the block.\n   */\n  @getter\n  getTimeOffset(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getTimeOffset(id));\n  }\n\n  /**\n   * Returns whether the block has trim properties.\n   * @param id - The block to query.\n   * @returns true, if the block has trim properties.\n   * @deprecated Use supportsTrim instead.\n   */\n  @getter\n  hasTrim(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasTrim(id));\n  }\n\n  /**\n   * Returns whether the block has trim properties.\n   * @param id - The block to query.\n   * @returns true, if the block has trim properties.\n   */\n  @getter\n  supportsTrim(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsTrim(id));\n  }\n\n  /**\n   * Set the trim offset of the given block or fill.\n   * Sets the time in seconds within the fill at which playback of the audio or video clip should begin.\n   * This requires the video or audio clip to be loaded.\n   * @param id - The block whose trim should be updated.\n   * @param offset - The new trim offset.\n   */\n  @setter\n  setTrimOffset(id: DesignBlockId, offset: number): void {\n    assert('id', id, integer());\n    assert('offset', offset, number());\n    return unpackResult(this.#ubq.setTrimOffset(id, offset));\n  }\n\n  /**\n   * Get the trim offset of this block.\n   * * This requires the video or audio clip to be loaded.\n   * @param id - The block whose trim offset should be queried.\n   * @returns the trim offset in seconds.\n   */\n  @getter\n  getTrimOffset(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getTrimOffset(id));\n  }\n\n  /**\n   * Set the trim length of the given block or fill.\n   * The trim length is the duration of the audio or video clip that should be used for playback.\n   * After reaching this value during playback, the trim region will loop.\n   * This requires the video or audio clip to be loaded.\n   * @param id - The object whose trim length should be updated.\n   * @param length - The new trim length in seconds.\n   */\n  @setter\n  setTrimLength(id: DesignBlockId, length: number): void {\n    assert('id', id, integer());\n    assert('length', length, number());\n    return unpackResult(this.#ubq.setTrimLength(id, length));\n  }\n\n  /**\n   * Get the trim length of the given block or fill.\n   * @param id - The object whose trim length should be queried.\n   * @returns the trim length of the object.\n   */\n  @getter\n  getTrimLength(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getTrimLength(id));\n  }\n\n  /**\n   * Returns the total duration (in seconds) of a scene in video mode.\n   * The duration is defined by all blocks in the scene.\n   * @param scene - The scene whose duration is being queried.\n   * @returns the total scene duration.\n   * @deprecated Use `getDuration` and pass a page block.\n   */\n  @getter\n  getTotalSceneDuration(scene: DesignBlockId): number {\n    assert('scene', scene, integer());\n    return unpackResult(this.#ubq.getTotalSceneDuration(scene));\n  }\n\n  /**\n   * Set whether the block should be playing during active playback.\n   * @param id - The block that should be updated.\n   * @param enabled - Whether the block should be playing its contents.\n   */\n  @setter\n  setPlaying(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setPlaying(id, enabled));\n  }\n\n  /**\n   * Returns whether the block is playing during active playback.\n   * @param id - The block to query.\n   * @returns whether the block is playing during playback.\n   */\n  @getter\n  isPlaying(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isPlaying(id));\n  }\n\n  /**\n   * Returns whether the block has a playback time property.\n   * @param id - The block to query.\n   * @returns whether the block has a playback time property.\n   * @deprecated Use supportsPlaybackTime instead.\n   */\n  @getter\n  hasPlaybackTime(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasPlaybackTime(id));\n  }\n\n  /**\n   * Returns whether the block has a playback time property.\n   * @param id - The block to query.\n   * @returns whether the block has a playback time property.\n   */\n  @getter\n  supportsPlaybackTime(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsPlaybackTime(id));\n  }\n\n  /**\n   * Set the playback time of the given block.\n   * @param id - The block whose playback time should be updated.\n   * @param time - The new playback time of the block in seconds.\n   */\n  @setter\n  setPlaybackTime(id: DesignBlockId, time: number): void {\n    assert('id', id, integer());\n    assert('time', time, number());\n    return unpackResult(this.#ubq.setPlaybackTime(id, time));\n  }\n\n  /**\n   * Get the playback time of the given block.\n   * @param id - The block to query.\n   * @returns the playback time of the block in seconds.\n   */\n  @getter\n  getPlaybackTime(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getPlaybackTime(id));\n  }\n\n  /**\n   * Returns whether the block should be visible on the canvas at the current playback time.\n   * @param id - The block to query.\n   * @returns Whether the block should be visible on the canvas at the current playback time.\n   */\n  @getter\n  isVisibleAtCurrentPlaybackTime(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isVisibleAtCurrentPlaybackTime(id));\n  }\n\n  /**\n   * Set whether the given block or fill should play\n   * its contents while the rest of the scene remains paused.\n   * Setting this to true for one block will automatically set\n   * it to false on all other blocks.\n   * @param id - The block or fill to update.\n   * @param enabled - Whether the block's playback should progress as time moves on.\n   */\n  @setter\n  setSoloPlaybackEnabled(id: DesignBlockId, enabled: boolean): void {\n    assert('id', id, integer());\n    assert('enabled', enabled, boolean());\n    return unpackResult(this.#ubq.setSoloPlaybackEnabled(id, enabled));\n  }\n\n  /**\n   * Return whether the given block or fill is currently set to play\n   * its contents while the rest of the scene remains paused.\n   * @param id - The block or fill to query.\n   * @returns Whether solo playback is enabled for this block.\n   */\n  @getter\n  isSoloPlaybackEnabled(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isSoloPlaybackEnabled(id));\n  }\n\n  /**\n   * Returns whether the block supports a playback control.\n   * @param block - The block to query.\n   * @returns Whether the block has playback control.\n   * @deprecated Use supportsPlaybackControl instead\n   */\n  @getter\n  hasPlaybackControl(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.hasPlaybackControl(id));\n  }\n\n  /**\n   * Returns whether the block supports a playback control.\n   * @param block - The block to query.\n   * @returns Whether the block has playback control.\n   */\n  @getter\n  supportsPlaybackControl(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsPlaybackControl(id));\n  }\n\n  /**\n   * Set whether the block should restart from the beginning again or stop.\n   * @param block - The block or video fill to update.\n   * @param looping - Whether the block should loop to the beginning or stop.\n   */\n  @setter\n  setLooping(id: DesignBlockId, looping: boolean): void {\n    assert('id', id, integer());\n    assert('looping', looping, boolean());\n    unpackResult(this.#ubq.setLooping(id, looping));\n  }\n\n  /**\n   * Query whether the block is looping.\n   * @param block - The block to query.\n   * @returns Whether the block is looping.\n   */\n  @getter\n  isLooping(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isLooping(id));\n  }\n\n  /**\n   * Set whether the audio of the block is muted.\n   * @param block - The block or video fill to update.\n   * @param muted - Whether the audio should be muted.\n   */\n  @setter\n  setMuted(id: DesignBlockId, muted: boolean): void {\n    assert('id', id, integer());\n    assert('muted', muted, boolean());\n    unpackResult(this.#ubq.setMuted(id, muted));\n  }\n\n  /**\n   * Query whether the block is muted.\n   * @param block - The block to query.\n   * @returns Whether the block is muted.\n   */\n  @getter\n  isMuted(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.isMuted(id));\n  }\n\n  /**\n   * Set the audio volume of the given block.\n   * @param block - The block or video fill to update.\n   * @param volume - The desired volume with a range of [0, 1].\n   */\n  @setter\n  setVolume(id: DesignBlockId, volume: number): void {\n    assert('id', id, integer());\n    assert('volume', volume, number());\n    unpackResult(this.#ubq.setVolume(id, volume));\n  }\n\n  /**\n   * Get the audio volume of the given block.\n   * @param block - The block to query.\n   * @returns The volume with a range of [0, 1].\n   */\n  @getter\n  getVolume(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getVolume(id));\n  }\n\n  /**\n   * Begins loading the required audio and video resource for the given video fill or audio block.\n   * @param id - The video fill or audio block whose resource should be loaded.\n   * @returns A Promise that resolves once the resource has finished loading.\n   */\n  @setter\n  async forceLoadAVResource(id: DesignBlockId): Promise<void> {\n    assert('id', id, integer());\n    return unpackAsync((cb) => this.#ubq.forceLoadAVResource(id, cb));\n  }\n\n  /**\n   * Returns whether the audio and video resource for the given video fill or audio block is loaded.\n   * @param id - The video fill or audio block.\n   * @returns The loading state of the resource.\n   */\n  @getter\n  unstable_isAVResourceLoaded(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.unstable_isAVResourceLoaded(id));\n  }\n\n  /**\n   * Get the duration in seconds of the video or audio resource that is attached to the given block.\n   * @param id - The video fill or audio block.\n   * @returns The video or audio file duration.\n   */\n  @getter\n  getAVResourceTotalDuration(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getAVResourceTotalDuration(id));\n  }\n\n  /**\n   * Get the video width in pixels of the video resource that is attached to the given block.\n   * @param block - The video fill.\n   * @returns The video width in pixels or an error.\n   */\n  @getter\n  getVideoWidth(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getVideoWidth(id));\n  }\n\n  /**\n   * Get the video height in pixels of the video resource that is attached to the given block.\n   * @param block - The video fill.\n   * @returns The video height in pixels or an error.\n   */\n  @getter\n  getVideoHeight(id: DesignBlockId): number {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getVideoHeight(id));\n  }\n\n  /**\n   * Generate a sequence of thumbnails for the given video fill or design block.\n   * Note: there can only be one thumbnail generation request in progress for a given block.\n   * @param id - The video fill or design block.\n   * @param thumbnailHeight - The height of a thumbnail. The width will be calculated from the video aspect ratio.\n   * @param timeBegin - The time in seconds relative to the time offset of the design block at which the thumbnail sequence should start.\n   * @param timeEnd - The time in seconds relative to the time offset of the design block  at which the thumbnail sequence should end.\n   * @param numberOfFrames - The number of frames to generate.\n   * @param onFrame - Gets passed the frame index and RGBA image data.\n   * @returns A method that will cancel any thumbnail generation request in progress for this block.\n   */\n  generateVideoThumbnailSequence(\n    id: DesignBlockId,\n    thumbnailHeight: number,\n    timeBegin: number,\n    timeEnd: number,\n    numberOfFrames: number,\n    onFrame: (frameIndex: number, result: ImageData | Error) => void\n  ): () => void {\n    assert('id', id, integer());\n    assert('thumbnailHeight', thumbnailHeight, integer());\n    assert('timeBegin', timeBegin, number());\n    assert('timeEnd', timeEnd, number());\n    assert('numberOfFrames', numberOfFrames, integer());\n    const handle = this.#ubq.generateVideoThumbnailSequence(\n      id,\n      thumbnailHeight,\n      timeBegin,\n      timeEnd,\n      numberOfFrames,\n      (result) => {\n        if ('error' in result) {\n          onFrame(0, new Error(result.error));\n        } else {\n          onFrame(\n            result.frameIndex,\n            new ImageData(\n              new Uint8ClampedArray(result.imageData),\n              result.width,\n              result.height\n            )\n          );\n        }\n      }\n    );\n    return () => {\n      this.#ubq.cancelVideoThumbnailSequenceGeneration(handle);\n    };\n  }\n\n  /**\n   * Generate a thumbnail sequence for the given audio block or video fill.\n   * A thumbnail in this case is a chunk of samples in the range of 0 to 1.\n   * In case stereo data is requested, the samples are interleaved, starting with the left channel.\n   * @param id - The audio block or video fill.\n   * @param samplesPerChunk - The number of samples per chunk. `onChunk` is called when this many samples are ready.\n   * @param timeBegin - The time in seconds at which the thumbnail sequence should start.\n   * @param timeEnd - The time in seconds at which the thumbnail sequence should end.\n   * @param numberOfSamples - The total number of samples to generate.\n   * @param numberOfChannels - The number of channels in the output. 1 for mono, 2 for stereo.\n   * @param onChunk - This gets passed an index and a chunk of samples whenever it's ready, or an error.\n   */\n  generateAudioThumbnailSequence(\n    id: DesignBlockId,\n    samplesPerChunk: number,\n    timeBegin: number,\n    timeEnd: number,\n    numberOfSamples: number,\n    numberOfChannels: number,\n    onChunk: (chunkIndex: number, result: Float32Array | Error) => void\n  ): () => void {\n    assert('id', id, integer());\n    assert('samplesPerChunk', samplesPerChunk, integer());\n    assert('timeBegin', timeBegin, number());\n    assert('timeEnd', timeEnd, number());\n    assert('numberOfSamples', numberOfSamples, integer());\n    assert('numberOfChannels', numberOfChannels, integer());\n    const handle = this.#ubq.generateAudioThumbnailSequence(\n      id,\n      samplesPerChunk,\n      timeBegin,\n      timeEnd,\n      numberOfSamples,\n      numberOfChannels,\n      (result) => {\n        if ('error' in result) {\n          onChunk(0, new Error(result.error));\n        } else {\n          onChunk(result.chunkIndex, result.sampleData);\n        }\n      }\n    );\n    return () => {\n      this.#ubq.cancelAudioThumbnailSequenceGeneration(handle);\n    };\n  }\n\n  /**\n   * Generate a thumbnail for the given video fill.\n   * @param id - The video fill.\n   * @param thumbnailHeight - The height of a thumbnail. The width will be calculated from the video aspect ratio.\n   * @returns A thumbnail encoded as JPEG.\n   * @deprecated Use `generateVideoThumbnailSequence` instead.\n   */\n  @getter\n  async getVideoFillThumbnail(\n    id: DesignBlockId,\n    thumbnailHeight: number\n  ): Promise<Blob> {\n    assert('id', id, integer());\n    assert('thumbnailHeight', thumbnailHeight, integer());\n    return new Promise((resolve, reject) => {\n      this.#ubq.getVideoFillThumbnail(id, thumbnailHeight, (result) => {\n        if ('error' in result) {\n          reject(result.error);\n        } else {\n          resolve(new Blob([result], { type: 'image/jpeg' }));\n        }\n      });\n    });\n  }\n\n  /**\n   * Generate a thumbnail atlas for the given video fill.\n   * @param id - The video fill.\n   * @param numberOfColumns - The number of columns to generate.\n   * @param numberOfRows - The number of rows to generate.\n   * @param thumbnailHeight - The height of a thumbnail. The width will be calculated from the video aspect ratio.\n   * @returns A thumbnail atlas of the video as JPEG.\n   * @deprecated Use `generateVideoThumbnailSequence` instead.\n   */\n  @getter\n  async getVideoFillThumbnailAtlas(\n    id: DesignBlockId,\n    numberOfColumns: number,\n    numberOfRows: number,\n    thumbnailHeight: number\n  ): Promise<Blob> {\n    assert('id', id, integer());\n    assert('numberOfColumns', numberOfColumns, integer());\n    assert('numberOfRows', numberOfRows, integer());\n    assert('thumbnailHeight', thumbnailHeight, integer());\n    return new Promise((resolve, reject) => {\n      this.#ubq.getVideoFillThumbnailAtlas(\n        id,\n        numberOfColumns,\n        numberOfRows,\n        thumbnailHeight,\n        (result) => {\n          if ('error' in result) {\n            reject(result.error);\n          } else {\n            resolve(new Blob([result], { type: 'image/jpeg' }));\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Generate a thumbnail atlas for the given page.\n   * @param id - The page.\n   * @param numberOfColumns - The number of columns to generate.\n   * @param numberOfRows - The number of rows to generate.\n   * @param thumbnailHeight - The height of a thumbnail. The width will be calculated from the page aspect ratio.\n   * @returns A thumbnail atlas of the composition as JPEG.\n   * @deprecated Use `generateVideoThumbnailSequence` instead.\n   */\n  @getter\n  async getPageThumbnailAtlas(\n    id: DesignBlockId,\n    numberOfColumns: number,\n    numberOfRows: number,\n    thumbnailHeight: number\n  ): Promise<Blob> {\n    assert('id', id, integer());\n    assert('numberOfColumns', numberOfColumns, integer());\n    assert('numberOfRows', numberOfRows, integer());\n    return new Promise((resolve, reject) => {\n      this.#ubq.getPageThumbnailAtlas(\n        id,\n        numberOfColumns,\n        numberOfRows,\n        thumbnailHeight,\n        (result) => {\n          if ('error' in result) {\n            reject(result.error);\n          } else {\n            resolve(new Blob([result], { type: 'image/jpeg' }));\n          }\n        }\n      );\n    });\n  }\n\n  /**\n   * Creates a new animation, fails if type is unknown.\n   * @param type - The type of animation to create.\n   * @returns The handle of the new animation instance.\n   */\n  @setter\n  createAnimation(type: AnimationType): DesignBlockId {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.createAnimation(type));\n  }\n\n  /**\n   * Returns whether the block supports animation.\n   * @param block - The block to query.\n   * @returns Whether the block supports animation.\n   */\n  @getter\n  supportsAnimation(id: DesignBlockId): boolean {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.supportsAnimation(id));\n  }\n\n  /**\n   * Set the \"in\" animation of the given block.\n   * @param id - The block whose \"in\" animation should be set.\n   * @param animation - The animation to set.\n   */\n  @setter\n  setInAnimation(id: DesignBlockId, animation: DesignBlockId) {\n    assert('id', id, integer());\n    assert('animation', animation, integer());\n    unpackResult(this.#ubq.setInAnimation(id, animation));\n  }\n\n  /**\n   * Set the \"loop\" animation of the given block.\n   * @param id - The block whose \"loop\" animation should be set.\n   * @param animation - The animation to set.\n   */\n  @setter\n  setLoopAnimation(id: DesignBlockId, animation: DesignBlockId) {\n    assert('id', id, integer());\n    assert('animation', animation, integer());\n    unpackResult(this.#ubq.setLoopAnimation(id, animation));\n  }\n\n  /**\n   * Set the \"out\" animation of the given block.\n   * @param id - The block whose \"out\" animation should be set.\n   * @param animation - The animation to set.\n   */\n  @setter\n  setOutAnimation(id: DesignBlockId, animation: DesignBlockId) {\n    assert('id', id, integer());\n    assert('animation', animation, integer());\n    unpackResult(this.#ubq.setOutAnimation(id, animation));\n  }\n\n  /**\n   * Get the \"in\" animation of the given block.\n   * @param id - The block whose \"in\" animation should be queried.\n   * @returns The \"in\" animation of the block.\n   */\n  @getter\n  getInAnimation(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getInAnimation(id));\n  }\n\n  /**\n   * Get the \"loop\" animation of the given block.\n   * @param id - The block whose \"loop\" animation should be queried.\n   * @returns The \"loop\" animation of the block.\n   */\n  @getter\n  getLoopAnimation(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getLoopAnimation(id));\n  }\n\n  /**\n   * Get the \"out\" animation of the given block.\n   * @param id - The block whose \"out\" animation should be queried.\n   * @returns The \"out\" animation of the block.\n   */\n  @getter\n  getOutAnimation(id: DesignBlockId): DesignBlockId {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getOutAnimation(id));\n  }\n\n  /**\n   * Update the pixels of the given pixel stream fill block.\n   * @param id - The pixel stream fill block.\n   * @param buffer - Use pixel data from a canvas or a video element.\n   */\n  @setter\n  setNativePixelBuffer(\n    id: number,\n    buffer: HTMLCanvasElement | HTMLVideoElement\n  ): void {\n    assert('id', id, integer());\n    if (buffer instanceof HTMLVideoElement) {\n      buffer.width = buffer.videoWidth;\n      buffer.height = buffer.videoHeight;\n    }\n    unpackResult(this.#ubq.setNativePixelBuffer(id, buffer));\n  }\n\n  /**\n   * Returns the block's state.\n   * If this block is in error state or this block has a `Shape` block, `Fill` block or `Effect` block(s), that\n   * is in error state, the returned state will be `Error`.\n   * Else, if this block is in pending state or this block has a `Shape` block, `Fill` block or `Effect` block(s), that\n   * is in pending state, the returned state will be `Pending`.\n   * Else, the returned state will be `Ready`.\n   * @param id - The block to query.\n   * @returns The block's state.\n   */\n  @getter\n  getState(id: DesignBlockId): BlockState {\n    assert('id', id, integer());\n    return unpackResult(this.#ubq.getState(id));\n  }\n\n  /**\n   * Set the state of a block.\n   * @param id - The block whose state should be set.\n   * @param state - The new state to set.\n   */\n  @setter\n  setState(id: DesignBlockId, state: BlockState): void {\n    assert('id', id, integer());\n    unpackResult(this.#ubq.setState(id, state));\n  }\n\n  /**\n   * Subscribe to changes to the state of a block.\n   * Like `getState`, the state of a block is determined by the state of itself and its `Shape`, `Fill` and\n   * `Effect` block(s).\n   * @param blocks - A list of blocks to filter events by. If the list is empty, events for every block are sent.\n   * @param callback - The event callback.\n   * @returns Subscription A handle to the subscription. Use it to unsubscribe when done.\n   */\n  onStateChanged = (\n    ids: DesignBlockId[],\n    callback: (ids: DesignBlockId[]) => void\n  ): (() => void) => {\n    assert('ids', ids, array(integer()));\n    const subscription = this.#ubq.subscribeToBlockState(ids, (blockIds) => {\n      try {\n        callback(cppVectorToArray(blockIds, true));\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.error(e);\n      }\n    });\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Begins loading the resources of the given blocks and their children.\n   * This function is useful for preloading resources before they are needed.\n   * @param ids - The blocks whose resources should be loaded. The given blocks don't require to have resources and\n   * can have children blocks (e.g. a scene block or a page block).\n   * @returns A Promise that resolves once the resources have finished loading.\n   */\n  @setter\n  async forceLoadResources(ids: DesignBlockId[]): Promise<void> {\n    assert('ids', ids, array(integer()));\n    return unpackAsync((cb) => this.#ubq.forceLoadResources(ids, cb));\n  }\n}\n", "import { integer } from 'superstruct';\nimport assert, { boolean, number, string } from './assert';\nimport { getter, setter } from './reactor/decorate';\nimport {\n  ColorInternal,\n  type CMYKColor,\n  type Color,\n  type ColorSpace,\n  type RGBAColor\n} from './types/color';\nimport type { CutoutType } from './types/cutout';\nimport type { EditMode, HistoryId, TrackingMetadata } from './types/engine';\nimport type { RoleString } from './types/role';\nimport type { Scope } from './types/scope';\nimport type {\n  Buffer,\n  CMYK,\n  RGBA,\n  TransientResource,\n  UBQ\n} from './ubq/ubq_binding';\nimport { unpackAsync, unpackResult } from './ubq/ubq_result';\nimport cppVectorToArray from './utils/cppVectorToArray';\n\n/** @public */\nexport type SettingType =\n  | 'Bool'\n  | 'Int'\n  | 'Float'\n  | 'String'\n  | 'Color'\n  | 'Enum';\n\n/** @public */\nexport type SettingsBool =\n  | 'controlGizmo/showCropHandles'\n  | 'controlGizmo/showCropScaleHandles'\n  | 'controlGizmo/showMoveHandles'\n  | 'controlGizmo/showResizeHandles'\n  | 'controlGizmo/showRotateHandles'\n  | 'controlGizmo/showScaleHandles'\n  | 'doubleClickToCropEnabled'\n  | 'features/singlePageModeEnabled'\n  | 'features/pageCarouselEnabled'\n  | 'features/transformEditsRetainCoverMode'\n  | 'mouse/enableScroll'\n  | 'mouse/enableZoom'\n  | 'page/allowCropInteraction'\n  | 'page/allowMoveInteraction'\n  | 'page/allowResizeInteraction'\n  | 'page/allowRotateInteraction'\n  | 'page/dimOutOfPageAreas'\n  | 'page/restrictResizeInteractionToFixedAspectRatio'\n  | 'page/title/appendPageName'\n  | 'page/title/show'\n  | 'page/title/showOnSinglePage'\n  | 'page/title/showPageTitleTemplate'\n  | 'placeholderControls/showButton'\n  | 'placeholderControls/showOverlay'\n  | 'blockAnimations/enabled'\n  | 'showBuildVersion'\n  | 'touch/dragStartCanSelect'\n  | 'touch/singlePointPanning';\n\n/**\n * These settings exist but are not part of our public API.\n * @internal\n */\nexport type SettingsBoolInternal =\n  | SettingsBool\n  | 'alwaysHighlightPlaceholders'\n  | 'colorMaskingSettings/secondPass'\n  | 'debug/enforceScopesInAPIs'\n  | 'debug/showHandlesInteractionArea'\n  | 'debug/useDebugMipmaps'\n  | 'features/effectsEnabled'\n  | 'features/highQualityMipmaps'\n  | 'features/hspSelectiveAdjustmentsEnabled'\n  | 'features/implicitUpdatesEnabled'\n  | 'features/templatingEnabled'\n  | 'features/videosEnabled'\n  | 'renderTextCursorAndSelectionInEngine';\n\n/** @public */\nexport type SettingsString =\n  | 'basePath'\n  | 'defaultEmojiFontFileUri'\n  | 'defaultFontFileUri'\n  | 'license'\n  | 'page/title/fontFileUri'\n  | 'page/title/separator';\n\n/** @public */\nexport type SettingsFloat =\n  | 'controlGizmo/blockScaleDownLimit'\n  | 'positionSnappingThreshold'\n  | 'rotationSnappingThreshold';\n\n/** @public */\nexport type SettingsInt = 'maxImageSize';\n\n/** @public\n */\nexport type SettingsColor =\n  | 'borderOutlineColor'\n  | 'clearColor'\n  | 'colorMaskingSettings/maskColor'\n  | 'cropOverlayColor'\n  | 'errorStateColor'\n  | 'highlightColor'\n  | 'page/innerBorderColor'\n  | 'page/marginFillColor'\n  | 'page/marginFrameColor'\n  | 'page/outerBorderColor'\n  | 'page/title/color'\n  | 'placeholderHighlightColor'\n  | 'progressColor'\n  | 'rotationSnappingGuideColor'\n  | 'ruleOfThirdsLineColor'\n  | 'snappingGuideColor'\n  | 'textVariableHighlightColor';\n\n/** @public\n * @deprecated Use SettingsColor instead.\n */\nexport type SettingsColorRGBA = SettingsColor;\n\n/** @public */\nexport type SettingsEnum = {\n  doubleClickSelectionMode: 'Direct' | 'Hierarchical';\n  'touch/pinchAction': 'None' | 'Zoom' | 'Scale';\n  'touch/rotateAction': 'None' | 'Rotate';\n  'camera/clamping/overshootMode': 'Center' | 'Reverse';\n};\n\n/** @internal */\nexport type SettingsEnumInternal = SettingsEnum & {\n  renderMode: 'Preview' | 'Export' | 'Thumbnail';\n};\n\n/** @internal */\ntype OptionalPrefix<T extends string> = `ubq://${T}` | T;\n\n/**\n * Important for getting the URLResolver back out of the UBQ instance when launching a worker\n * @internal\n */\nconst _urlResolvers = new WeakMap<\n  UBQ,\n  (URI: string, defaultURIResolver: (URI: string) => string) => string\n>();\n\n/**\n * @public\n */\nexport default class EditorAPI {\n  /** @internal */\n  #ubq: UBQ;\n\n  /** @internal */\n  constructor(ubq: UBQ) {\n    this.#ubq = ubq;\n  }\n\n  /** @internal */\n  @setter\n  unlockWithLicense(license: string): void {\n    unpackResult(this.#ubq.unlockWithLicense(license));\n  }\n\n  /** @internal */\n  @setter\n  startTracking(license: string, userId: string): void {\n    this.#ubq.startTracking(license, userId, '');\n  }\n\n  /** @internal */\n  @setter\n  setTrackingMetadata(metadata: TrackingMetadata): void {\n    this.#ubq.setTrackingMetadata(metadata);\n  }\n\n  /** @internal */\n  @getter\n  getTrackingMetadata(): TrackingMetadata {\n    return unpackResult(this.#ubq.getTrackingMetadata());\n  }\n\n  /** @internal */\n  @getter\n  getActiveLicense(): string {\n    return unpackResult(this.#ubq.getActiveLicense());\n  }\n\n  /**\n   * Run the engine update.\n   * @internal\n   * @deprecated This is only offered as a workaround, to give the CESDK a way\n   * to trigger an update when switching to the text edit mode in CanvasActionTextEdit.tsx\n   */\n  @setter\n  _update(): void {\n    this.#ubq.update();\n  }\n\n  /**\n   * Subscribe to changes to the editor state.\n   * @param callback - This function is called at the end of the engine update, if the editor state has changed.\n   * @returns A method to unsubscribe.\n   */\n  onStateChanged = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToEditorState(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Set the edit mode of the editor.\n   * An edit mode defines what type of content can currently be edited by the user.\n   * Hint: the initial edit mode is \"Transform\".\n   * @param mode - \"Transform\", \"Crop\", \"Text\", \"Playback\", \"Trim\" or a custom value.\n   */\n  @setter\n  setEditMode(mode: EditMode): void {\n    assert('keypath', mode, string());\n    this.#ubq.setEditMode(mode);\n  }\n\n  /**\n   * Get the current edit mode of the editor.\n   * An edit mode defines what type of content can currently be edited by the user.\n   * @returns \"Transform\", \"Crop\", \"Text\", \"Playback\", \"Trim\" or a custom value.\n   */\n  @getter\n  getEditMode(): EditMode {\n    return this.#ubq.getEditMode();\n  }\n\n  /**\n   * If an user interaction is happening, e.g., a resize edit with a drag handle or a touch gesture.\n   * @returns True if an interaction is happening.\n   */\n  @getter\n  unstable_isInteractionHappening(): boolean {\n    return unpackResult(this.#ubq.unstable_isInteractionHappening());\n  }\n\n  /**\n   * Get the type of cursor that should be displayed by the application.\n   * @returns The cursor type.\n   */\n  @getter\n  getCursorType():\n    | 'Arrow'\n    | 'Move'\n    | 'MoveNotPermitted'\n    | 'Resize'\n    | 'Rotate'\n    | 'Text' {\n    return this.#ubq.getCursorType();\n  }\n\n  /**\n   * Get the rotation with which to render the mouse cursor.\n   * @returns The angle in radians.\n   */\n  @getter\n  getCursorRotation(): number {\n    return this.#ubq.getCursorRotation();\n  }\n\n  /**\n   * Get the current text cursor's x position in screen space.\n   * @returns The text cursor's x position in screen space.\n   */\n  @getter\n  getTextCursorPositionInScreenSpaceX(): number {\n    return this.#ubq.getTextCursorPositionInScreenSpaceX();\n  }\n\n  /**\n   * Get the current text cursor's y position in screen space.\n   * @returns The text cursor's y position in screen space.\n   */\n  @getter\n  getTextCursorPositionInScreenSpaceY(): number {\n    return this.#ubq.getTextCursorPositionInScreenSpaceY();\n  }\n\n  /* History */\n\n  /**\n   * Create a history which consists of an undo/redo stack for editing operations.\n   * There can be multiple. But only one can be active at a time.\n   * @returns The handle of the created history.\n   */\n  @setter\n  public createHistory(): HistoryId {\n    return this.#ubq.createHistory();\n  }\n\n  /**\n   * Destroy the given history, throws an error if the handle doesn't refer to a history.\n   * @param history - The history to destroy.\n   */\n  @setter\n  public destroyHistory(history: HistoryId): void {\n    unpackResult<void>(this.#ubq.destroyHistory(history));\n  }\n\n  /**\n   * Mark the given history as active, throws an error if the handle doesn't refer to a history.\n   * All other histories get cleared from the active state. Undo/redo operations only apply to the active history.\n   * @param history - The history to make active.\n   */\n  @setter\n  public setActiveHistory(history: HistoryId): void {\n    unpackResult<void>(this.#ubq.setActiveHistory(history));\n  }\n\n  /**\n   * Get the handle to the currently active history. If there's none it will be created.\n   * @returns History - The handle of the active history.\n   */\n  @getter\n  public getActiveHistory(): HistoryId {\n    return this.#ubq.getActiveHistory();\n  }\n\n  /**\n   * Adds a new history state to the stack, if undoable changes were made.\n   */\n  @setter\n  public addUndoStep(): void {\n    unpackResult<void>(this.#ubq.addUndoStep());\n  }\n\n  /**\n   * Undo one step in the history if an undo step is available.\n   */\n  @setter\n  public undo(): void {\n    unpackResult<void>(this.#ubq.undo());\n  }\n\n  /**\n   * Redo one step in the history if a redo step is available.\n   */\n  @setter\n  public redo(): void {\n    unpackResult<void>(this.#ubq.redo());\n  }\n\n  /**\n   * If an undo step is available.\n   *\n   * @returns True if an undo step is available.\n   */\n  @getter\n  public canUndo(): boolean {\n    return unpackResult<boolean>(this.#ubq.canUndo());\n  }\n\n  /**\n   * If a redo step is available.\n   *\n   * @returns True if a redo step is available.\n   */\n  @getter\n  public canRedo(): boolean {\n    return unpackResult<boolean>(this.#ubq.canRedo());\n  }\n\n  /**\n   * Subscribe to changes to the undo/redo history.\n   *\n   * @param callback - This function is called at the end of the engine update, if the undo/redo history has been changed.\n   * @returns A method to unsubscribe\n   */\n  onHistoryUpdated = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToHistory(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      this.#ubq.unsubscribe(subscription);\n    };\n  };\n\n  /**\n   * Subscribe to changes to the editor settings.\n   * @param callback - This function is called at the end of the engine update, if the editor settings have changed.\n   * @returns A method to unsubscribe.\n   */\n  onSettingsChanged = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToSettings(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Subscribe to changes to the editor role.\n   *\n   * This lets you react to changes in the role of the user and update engine\n   * and editor settings in response.\n   *\n   * @param callback - This function will be called immediately after a role has\n   * been set and the default settings for that role have been applied. This function\n   * will also be called in case the role is set to the same value as before.\n   * @returns A function for unsubscribing\n   */\n  onRoleChanged = (callback: (role: RoleString) => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToRoleChange(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Set a boolean setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickToCropEnabled`\n   * @param value - The value to set.\n   * @throws An error, if the keypath is invalid.\n   */\n  setSettingBool(keypath: SettingsBool, value: boolean): void;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  setSettingBool(keypath: `ubq://${SettingsBool}`, value: boolean): void;\n  /** @internal */\n  setSettingBool(keypath: SettingsBoolInternal, value: boolean): void;\n  @setter\n  setSettingBool(\n    keypath: OptionalPrefix<SettingsBoolInternal>,\n    value: boolean\n  ): void {\n    assert('keypath', keypath, string());\n    assert('value', value, boolean());\n    return unpackResult(this.#ubq.setSettingBool(keypath, value));\n  }\n\n  /**\n   * Get a boolean setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickToCropEnabled`\n   * @throws An error, if the keypath is invalid.\n   */\n  getSettingBool(keypath: SettingsBool): boolean;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingBool(keypath: `ubq://${SettingsBool}`): boolean;\n  /** @internal */\n  getSettingBool(keypath: SettingsBoolInternal): boolean;\n  @getter\n  getSettingBool(keypath: OptionalPrefix<SettingsBoolInternal>): boolean {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingBool(keypath));\n  }\n\n  /**\n   * Set an integer setting.\n   * @param keypath - The settings keypath.\n   * @param value - The value to set.\n   * @throws An error, if the keypath is invalid.\n   */\n  @setter\n  setSettingInt(keypath: string, value: number): void {\n    assert('keypath', keypath, string());\n    assert('value', value, integer());\n    return unpackResult(this.#ubq.setSettingInt(keypath, value));\n  }\n\n  /**\n   * Get an integer setting.\n   * @param keypath - The settings keypath.\n   * @throws An error, if the keypath is invalid.\n   */\n  @getter\n  getSettingInt(keypath: string): number {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingInt(keypath));\n  }\n\n  /**\n   * Set a float setting.\n   * @param keypath - The settings keypath, e.g. `positionSnappingThreshold`\n   * @param value - The value to set.\n   * @throws An error, if the keypath is invalid.\n   */\n  setSettingFloat(keypath: SettingsFloat, value: number): void;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  setSettingFloat(keypath: `ubq://${SettingsFloat}`, value: number): void;\n  @setter\n  setSettingFloat(keypath: OptionalPrefix<SettingsFloat>, value: number): void {\n    assert('keypath', keypath, string());\n    assert('value', value, number());\n    return unpackResult(this.#ubq.setSettingFloat(keypath, value));\n  }\n\n  /**\n   * Get a float setting.\n   * @param keypath - The settings keypath, e.g. `positionSnappingThreshold`\n   * @throws An error, if the keypath is invalid.\n   */\n  getSettingFloat(keypath: SettingsFloat): number;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingFloat(keypath: `ubq://${SettingsFloat}`): number;\n  @getter\n  getSettingFloat(keypath: OptionalPrefix<SettingsFloat>): number {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingFloat(keypath));\n  }\n\n  /**\n   * Set a string setting.\n   * @param keypath - The settings keypath, e.g. `license`\n   * @param value - The value to set.\n   * @throws An error, if the keypath is invalid.\n   */\n  setSettingString(keypath: SettingsString, value: string): void;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  setSettingString(keypath: `ubq://${SettingsString}`, value: string): void;\n  @setter\n  setSettingString(\n    keypath: OptionalPrefix<SettingsString>,\n    value: string\n  ): void {\n    assert('keypath', keypath, string());\n    assert('value', value, string());\n    return unpackResult(this.#ubq.setSettingString(keypath, value));\n  }\n\n  /**\n   * Get a string setting.\n   * @param keypath - The settings keypath, e.g. `license`\n   * @throws An error, if the keypath is invalid.\n   */\n  getSettingString(keypath: SettingsString): string;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingString(keypath: `ubq://${SettingsString}`): string;\n  @getter\n  getSettingString(keypath: OptionalPrefix<SettingsString>): string {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingString(keypath));\n  }\n\n  /**\n   * Set a color setting.\n   * @param keypath - The settings keypath, e.g. `highlightColor`.\n   * @param value - The The value to set.\n   */\n  setSettingColor(keypath: SettingsColor, value: Color): void;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  setSettingColor(keypath: `ubq://${SettingsColor}`, value: Color): void;\n  @setter\n  setSettingColor(keypath: OptionalPrefix<SettingsColor>, value: Color): void {\n    assert('keypath', keypath, string());\n    return unpackResult(\n      this.#ubq.setSettingColor(keypath, ColorInternal.fromColor(value))\n    );\n  }\n\n  /**\n   * Get a color setting.\n   * @param keypath - The settings keypath, e.g. `highlightColor`.\n   * @throws An error, if the keypath is invalid.\n   */\n  getSettingColor(keypath: SettingsColor): Color;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingColor(keypath: `ubq://${SettingsColor}`): Color;\n  @getter\n  getSettingColor(keypath: OptionalPrefix<SettingsColor>): Color {\n    assert('keypath', keypath, string());\n    return ColorInternal.toColor(\n      unpackResult(this.#ubq.getSettingColor(keypath))\n    );\n  }\n\n  /**\n   * Set a color setting.\n   * @param keypath - The settings keypath, e.g. `highlightColor`.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   * @param a - The alpha color component in the range of 0 to 1.\n   * @deprecated Use setSettingColor() instead.\n   */\n  @setter\n  setSettingColorRGBA(\n    keypath: SettingsColorRGBA | `ubq://${SettingsColorRGBA}`,\n    r: number,\n    g: number,\n    b: number,\n    a: number = 1\n  ): void {\n    assert('keypath', keypath, string());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    assert('a', a, number());\n    return unpackResult(this.#ubq.setSettingColorRGBA(keypath, r, g, b, a));\n  }\n\n  /**\n   * Get a color setting.\n   * @param keypath - The settings keypath, e.g. `highlightColor`.\n   * @returns A tuple of channels red, green, blue and alpha in the range of 0 to 1.\n   * @deprecated Use getSettingColor() instead.\n   */\n  @getter\n  getSettingColorRGBA(\n    keypath: SettingsColorRGBA | `ubq://${SettingsColorRGBA}`\n  ): RGBA {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingColorRGBA(keypath));\n  }\n\n  /**\n   * Set an enum setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickSelectionMode`.\n   * @param value - The enum value as string.\n   */\n  setSettingEnum<T extends keyof SettingsEnum>(\n    keypath: T,\n    value: SettingsEnum[T]\n  ): void;\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  setSettingEnum<T extends keyof SettingsEnum>(\n    keypath: `ubq://${T}`,\n    value: SettingsEnum[T]\n  ): void;\n  /** @internal */\n  setSettingEnum<T extends keyof SettingsEnumInternal>(\n    keypath: T,\n    value: SettingsEnumInternal[T]\n  ): void;\n  @setter\n  setSettingEnum<T extends keyof SettingsEnum>(\n    keypath: T,\n    value: SettingsEnum[T]\n  ): void {\n    assert('keypath', keypath, string());\n    assert('value', value, string());\n    return unpackResult(this.#ubq.setSettingEnum(keypath, value));\n  }\n\n  /**\n   * Get an enum setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickSelectionMode`.\n   * @returns The value as string.\n   */\n  getSettingEnum<T extends keyof SettingsEnum>(keypath: T): SettingsEnum[T];\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingEnum<T extends keyof SettingsEnum>(\n    keypath: `ubq://${T}`\n  ): SettingsEnum[T];\n  /** @internal */\n  getSettingEnum<T extends keyof SettingsEnumInternal>(\n    keypath: T\n  ): SettingsEnumInternal[T];\n  @getter\n  getSettingEnum<T extends keyof SettingsEnum>(keypath: T): SettingsEnum[T] {\n    assert('keypath', keypath, string());\n    return unpackResult(this.#ubq.getSettingEnum(keypath)) as SettingsEnum[T];\n  }\n\n  /**\n   * Get the possible enum options for a given enum setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickSelectionMode`.\n   * @returns The possible enum options as strings.\n   */\n  getSettingEnumOptions<T extends keyof SettingsEnum>(keypath: T): string[];\n  /** @deprecated Support for `ubq://` prefixed keypaths will be removed in a future release. */\n  getSettingEnumOptions<T extends keyof SettingsEnum>(\n    keypath: `ubq://${T}`\n  ): string[];\n  getSettingEnumOptions<T extends keyof SettingsEnum>(keypath: T): string[] {\n    assert('keypath', keypath, string());\n    return cppVectorToArray(\n      unpackResult(this.#ubq.getSettingEnumOptions(keypath))\n    );\n  }\n\n  /**\n   * Set the role of the user and apply role-dependent defaults for scopes and settings\n   */\n  @setter\n  setRole(role: RoleString): void {\n    return unpackResult(this.#ubq.setRole(role));\n  }\n\n  /**\n   * Get the current role of the user\n   */\n  @getter\n  getRole(): RoleString {\n    return unpackResult<RoleString>(this.#ubq.getRole());\n  }\n\n  /**\n   * Returns a list of all the settings available.\n   * @returns A list of settings keypaths.\n   */\n  @getter\n  findAllSettings(): string[] {\n    return cppVectorToArray(this.#ubq.findAllSettings());\n  }\n\n  /**\n   * Returns the type of a setting.\n   * @param keypath - The settings keypath, e.g. `doubleClickSelectionMode`.\n   * @returns The setting type.\n   */\n  getSettingType(keypath: string): SettingType {\n    // TODO: The type for keypath should be `SettingsBool | SettingsFloat |\n    // SettingsString | SettingsColor | SettingsEnum` but I don't think this\n    // function is used much anyways\n    assert('keypath', keypath, string());\n    const type = unpackResult(this.#ubq.getSettingType(keypath));\n    return type as SettingType;\n  }\n\n  /**\n   * Get the currently available memory in bytes.\n   * @returns The currently available memory in bytes.\n   */\n  @getter\n  getAvailableMemory(): number {\n    return unpackResult(this.#ubq.getAvailableMemory());\n  }\n\n  /**\n   * Get the current memory usage of the engine in bytes.\n   * @returns The current memory usage in bytes.\n   */\n  @getter\n  getUsedMemory(): number {\n    return unpackResult(this.#ubq.getUsedMemory());\n  }\n\n  /**\n   * Get the export size limit in pixels on the current device. An export is\n   * only possible when both the width and height of the output are below or\n   * equal this limit. However, this is only an upper limit as the export might\n   * also not be possible due to other reasons, e.g., memory constraints.\n   * @returns The upper export size limit in pixels or an unlimited size, i.e,\n   * the maximum signed 32-bit integer value, if the limit is unknown.\n   */\n  @getter\n  getMaxExportSize(): number {\n    return unpackResult(this.#ubq.getMaxExportSize());\n  }\n\n  /**\n   * Sets a custom URI resolver.\n   * This function can be called more than once. Subsequent calls will overwrite previous calls.\n   * To remove a previously set resolver, pass the value `null`.\n   * The given function must return an absolute path with a scheme.\n   * @param resolver - Custom resolution function. The resolution function\n   *                   should not reference variables outside of its scope.\n   *                   It receives the default URI resolver as its second argument\n   */\n  @setter\n  setURIResolver(\n    resolver: (\n      URI: string,\n      defaultURIResolver: (URI: string) => string\n    ) => string\n  ): void {\n    _urlResolvers.set(this.#ubq, resolver);\n    const resolverWithDefault = (uri: string) =>\n      resolver(uri, this.defaultURIResolver.bind(this));\n    return unpackResult(this.#ubq.setURIResolver(resolverWithDefault));\n  }\n\n  /**\n   * @internal\n   * @returns The currently set URI resolver or `null` if no custom resolver has been set.\n   */\n  @getter\n  unstable_getURIResolver():\n    | ((URI: string, defaultURIResolver: (URI: string) => string) => string)\n    | null {\n    return _urlResolvers.get(this.#ubq) ?? null;\n  }\n\n  /**\n   * This is the default implementation for the URI resolver.\n   * It resolves the given path relative to the `basePath` setting.\n   * @param relativePath - The relative path that should be resolved.\n   * @returns The resolved absolute URI.\n   */\n  defaultURIResolver(relativePath: string): string {\n    return this.#ubq.defaultURIResolver(relativePath);\n  }\n\n  /**\n   * Resolves the given path.\n   * If a custom resolver has been set with `setURIResolver`, it invokes it with the given path.\n   * Else, it resolves it as relative to the `basePath` setting.\n   * This performs NO validation of whether a file exists at the specified location.\n   * @param relativePath - A relative path string\n   * @returns The resolved absolute uri or an error if an invalid path was given.\n   */\n  @getter\n  getAbsoluteURI(relativePath: string): string {\n    return unpackResult(this.#ubq.getAbsoluteURI(relativePath));\n  }\n\n  /**\n   * Get all available global scopes that can be set.\n   * @returns The names of all available global scopes.\n   */\n  @getter\n  findAllScopes(): Scope[] {\n    return cppVectorToArray<Scope>(this.#ubq.findAllScopes());\n  }\n\n  /**\n   * Set a scope to be globally allowed, denied, or deferred to the block-level.\n   * @param key - The scope to set.\n   * @param value - `Allow` will always allow the scope, `Deny` will always deny the scope, and `Defer` will defer to the block-level.\n   */\n  @setter\n  setGlobalScope(key: Scope, value: 'Allow' | 'Deny' | 'Defer'): void {\n    assert('key', key, string());\n    assert('value', value, string());\n    unpackResult(this.#ubq.setGlobalScope(key, value));\n  }\n\n  /**\n   * Query the state of a global scope.\n   * @param key - The scope to query.\n   * @returns `Allow` if the scope is allowed, `Deny` if it is disallowed, and `Defer` if it is deferred to the block-level.\n   */\n  @getter\n  getGlobalScope(key: Scope): 'Allow' | 'Deny' | 'Defer' {\n    assert('key', key, string());\n    return unpackResult(this.#ubq.getGlobalScope(key));\n  }\n\n  /**\n   * Queries the names of currently set spot colors previously set with `setSpotColorRGB`.\n   * @returns The names of set spot colors.\n   */\n  @getter\n  findAllSpotColors(): string[] {\n    return cppVectorToArray(this.#ubq.findAllSpotColors());\n  }\n\n  /**\n   * Queries the RGB representation set for a spot color.\n   * If the value of the queried spot color has not been set yet, returns the default RGB representation (of magenta).\n   * The alpha value is always 1.0.\n   * @param name - The name of a spot color.\n   * @returns A result holding a float array of the four color components.\n   */\n  @getter\n  getSpotColorRGBA(name: string): RGBA {\n    assert('name', name, string());\n    return this.#ubq.getSpotColorRGB(name);\n  }\n\n  /**\n   * Queries the CMYK representation set for a spot color.\n   * If the value of the queried spot color has not been set yet, returns the default CMYK representation (of magenta).\n   * @param name - The name of a spot color.\n   * @returns A result holding a float array of the four color components.\n   */\n  @getter\n  getSpotColorCMYK(name: string): CMYK {\n    assert('name', name, string());\n    return this.#ubq.getSpotColorCMYK(name);\n  }\n\n  /**\n   * Sets the RGB representation of a spot color.\n   * Use this function to both create a new spot color or update an existing spot color.\n   * @param name - The name of a spot color.\n   * @param r - The red color component in the range of 0 to 1.\n   * @param g - The green color component in the range of 0 to 1.\n   * @param b - The blue color component in the range of 0 to 1.\n   */\n  @setter\n  setSpotColorRGB(name: string, r: number, g: number, b: number): void {\n    assert('name', name, string());\n    assert('r', r, number());\n    assert('g', g, number());\n    assert('b', b, number());\n    return this.#ubq.setSpotColorRGB(name, r, g, b);\n  }\n\n  /**\n   * Sets the CMYK representation of a spot color.\n   * Use this function to both create a new spot color or update an existing spot color.\n   * @param name - The name of a spot color.\n   * @param c - The cyan color component in the range of 0 to 1.\n   * @param m - The magenta color component in the range of 0 to 1.\n   * @param y - The yellow color component in the range of 0 to 1.\n   * @param k - The key color component in the range of 0 to 1.\n   */\n  @setter\n  setSpotColorCMYK(\n    name: string,\n    c: number,\n    m: number,\n    y: number,\n    k: number\n  ): void {\n    assert('name', name, string());\n    assert('c', c, number());\n    assert('m', m, number());\n    assert('y', y, number());\n    assert('k', k, number());\n    return this.#ubq.setSpotColorCMYK(name, c, m, y, k);\n  }\n\n  /**\n   * Removes a spot color from the list of set spot colors.\n   * @param name - The name of a spot color.\n   * @returns An empty result on success, an error otherwise.\n   */\n  @setter\n  removeSpotColor(name: string): void {\n    assert('name', name, string());\n    return unpackResult(this.#ubq.removeSpotColor(name));\n  }\n\n  /**\n   * Set the spot color assign to a cutout type.\n   * All cutout blocks of the given type will be immediately assigned that spot color.\n   * @param type - The cutout type.\n   * @param name - The spot color name to assign.\n   */\n  @setter\n  setSpotColorForCutoutType(type: CutoutType, color: string): void {\n    assert('type', type, string());\n    assert('color', color, string());\n    return unpackResult(this.#ubq.setSpotColorForCutoutType(type, color));\n  }\n\n  /**\n   * Get the name of the spot color assigned to a cutout type.\n   * @param type - The cutout type.\n   * @returns The color spot name.\n   */\n  @setter\n  getSpotColorForCutoutType(type: CutoutType): string {\n    assert('type', type, string());\n    return unpackResult(this.#ubq.getSpotColorForCutoutType(type));\n  }\n\n  /**\n   * Converts a color to the given color space.\n   * @param color - The color to convert.\n   * @param colorSpace - The color space to convert to.\n   * @returns The converted color.\n   */\n  convertColorToColorSpace(color: Color, colorSpace: 'sRGB'): RGBAColor;\n  /** */\n  convertColorToColorSpace(color: Color, colorSpace: 'CMYK'): CMYKColor;\n  /** */\n  convertColorToColorSpace(color: Color, colorSpace: ColorSpace): never;\n  /**  */\n  @getter\n  convertColorToColorSpace(color: Color, colorSpace: ColorSpace): Color {\n    assert('colorSpace', colorSpace, string());\n    return ColorInternal.toColor(\n      unpackResult(\n        this.#ubq.convertColorToColorSpace(\n          ColorInternal.fromColor(color),\n          colorSpace\n        )\n      )\n    );\n  }\n\n  /**\n   * Create a resizable buffer that can hold arbitrary data.\n   * @returns A URI to identify the buffer.\n   */\n  createBuffer(): string {\n    return this.#ubq.createBuffer();\n  }\n\n  /**\n   * Destroy a buffer and free its resources.\n   * @param uri - The URI of the buffer to destroy.\n   */\n  destroyBuffer(uri: string): void {\n    unpackResult(this.#ubq.destroyBuffer(uri));\n  }\n\n  /**\n   * Set the data of a buffer at a given offset.\n   * @param uri - The URI of the buffer to update.\n   * @param offset - The offset in bytes at which to start writing.\n   * @param data - The data to write.\n   */\n  setBufferData(uri: string, offset: number, data: Uint8Array): void {\n    assert('offset', offset, integer());\n    unpackResult(this.#ubq.setBufferData(uri, offset, data));\n  }\n\n  /**\n   * Get the data of a buffer at a given offset.\n   * @param uri - The URI of the buffer to query.\n   * @param offset - The offset in bytes at which to start reading.\n   * @param length - The number of bytes to read.\n   * @returns The data at the given offset.\n   */\n  getBufferData(uri: string, offset: number, length: number): Uint8Array {\n    assert('offset', offset, integer());\n    assert('length', length, integer());\n    const result = this.#ubq.getBufferData(uri, offset, length);\n    if ('error' in result) {\n      throw new Error(result.error);\n    }\n    return result;\n  }\n\n  /**\n   * Set the length of a buffer.\n   * @param uri - The URI of the buffer to update.\n   * @param length - The new length of the buffer in bytes.\n   */\n  setBufferLength(uri: string, length: number): void {\n    assert('length', length, integer());\n    unpackResult(this.#ubq.setBufferLength(uri, length));\n  }\n\n  /**\n   * Get the length of a buffer.\n   * @param uri - The URI of the buffer to query.\n   * @returns The length of the buffer in bytes.\n   */\n  getBufferLength(uri: string): number {\n    return unpackResult(this.#ubq.getBufferLength(uri));\n  }\n\n  /** @internal */\n  cloneBuffers(): Buffer[] {\n    return cppVectorToArray(unpackResult(this.#ubq.cloneBuffers()));\n  }\n\n  /** @internal */\n  restoreBuffers(buffers: Buffer[]): void {\n    unpackResult(this.#ubq.restoreBuffers(buffers));\n  }\n\n  /**\n   * Returns the mimetype of the resources at the given URI.\n   * If the resource is not already downloaded, this function will download it.\n   * @param uri - The URI of the resource.\n   * @returns The mimetype of the resource.\n   * @throws An error if the resource could not be downloaded or the mimetype could not be determined.\n   */\n  getMimeType(uri: string): Promise<string> {\n    assert('uri', uri, string());\n    return unpackAsync((cb) => this.#ubq.getMimeType(uri, cb));\n  }\n\n  /**\n   * Returns the URLs and sizes of all resources whose data would be lost if the scene was exported.\n   * This function is useful for determining which resources need to be relocated (e.g., to a CDN) before\n   * exporting a scene since the resources are not included in the exported scene.\n   * @returns The URLs and sizes of transient resources.\n   */\n  findAllTransientResources(): TransientResource[] {\n    return cppVectorToArray(\n      unpackResult(this.#ubq.findAllTransientResources())\n    );\n  }\n\n  /**\n   * Provides the data of a resource at the given URL.\n   * @param url - The URL of the resource.\n   * @param chunkSize - The size of the chunks in which the resource data is provided.\n   * @param onData - The callback function that is called with the resource data or an error if an error occurred.\n   * The callback will be called as long as there is data left to provide and the callback returns `true`.\n   */\n  getResourceData(\n    uri: string,\n    chunkSize: number,\n    onData: (result: Uint8Array) => boolean\n  ): void {\n    assert('uri', uri, string());\n    assert('chunkSize', chunkSize, integer());\n    unpackResult(this.#ubq.getResourceData(uri, chunkSize, onData));\n  }\n\n  /**\n   * Changes the URL associated with a resource.\n   * This function can be used change the URL of a resource that has been relocated (e.g., to a CDN).\n   * @param currentURL - The current URL of the resource.\n   * @param relocatedURL - The new URL of the resource.\n   */\n  relocateResource(currentUrl: string, relocatedUrl: string): void {\n    assert('currentUrl', currentUrl, string());\n    assert('relocatedUrl', relocatedUrl, string());\n    unpackResult(this.#ubq.relocateResource(currentUrl, relocatedUrl));\n  }\n}\n", "import { integer } from 'superstruct';\nimport assert, {\n  array,\n  designUnitShape,\n  min,\n  number,\n  sceneLayoutShape,\n  string,\n  zoomAutoFitAxisShape\n} from './assert';\nimport { getter, setter } from './reactor/decorate';\nimport MimeType from './types/MimeType';\nimport type { DesignBlockType } from './types/blockTypes';\nimport type {\n  DesignBlockId,\n  DesignUnit,\n  SceneLayout,\n  SceneMode,\n  ZoomAutoFitAxis\n} from './types/engine';\nimport type { UBQ } from './ubq/ubq_binding';\nimport { unpackAsync, unpackResult } from './ubq/ubq_result';\nimport Blob from './utils/Blob';\nimport cppVectorToArray from './utils/cppVectorToArray';\n\n/**\n * @public\n */\nexport default class SceneAPI {\n  /** @internal */\n  #ubq: UBQ;\n\n  /** @internal */\n  constructor(ubq: UBQ) {\n    this.#ubq = ubq;\n  }\n\n  /**\n   * Load the contents of a scene file.\n   * @param sceneContent - The scene file contents, a base64 string.\n   * @returns A handle to the loaded scene.\n   */\n  @setter\n  async loadFromString(sceneContent: string): Promise<DesignBlockId> {\n    assert('sceneContent', sceneContent, string());\n    return unpackAsync((cb) => this.#ubq.loadSceneFromString(sceneContent, cb));\n  }\n\n  /**\n   * Load a scene from the URL to the scene file.\n   * The scene file will be fetched asynchronously by the engine. This requires continuous `render`\n   * calls on this engines instance.\n   * @param url - The URL of the scene file.\n   * @returns scene A promise that resolves once the scene was loaded or rejects with an error otherwise.\n   */\n  @setter\n  async loadFromURL(url: string): Promise<DesignBlockId> {\n    assert('url', url, string());\n    return unpackAsync((cb) => this.#ubq.loadSceneFromURL(url, cb));\n  }\n\n  /**\n   * Load a previously archived scene from the URL to the scene file.\n   * The scene file will be fetched asynchronously by the engine. This requires continuous `render`\n   * calls on this engines instance.\n   * @param url - The URL of the scene file.\n   * @returns scene A promise that resolves once the scene was loaded or rejects with an error otherwise.\n   */\n  @setter\n  async loadFromArchiveURL(url: string): Promise<DesignBlockId> {\n    assert('url', url, string());\n    return unpackAsync((cb) => this.#ubq.loadSceneFromArchiveURL(url, cb));\n  }\n\n  /**\n   * Serializes the current scene into a string. Selection is discarded.\n   * @returns A promise that resolves with a string on success or an error on failure.\n   */\n  async saveToString(\n    allowedResourceSchemes: string[] = [\n      'blob',\n      'bundle',\n      'file',\n      'http',\n      'https'\n    ]\n  ): Promise<string> {\n    const scene = this.get();\n\n    if (scene == null) {\n      throw new Error('No scene available.');\n    }\n\n    return unpackAsync((cb) => {\n      this.#ubq.saveSceneToString(scene, cb, allowedResourceSchemes);\n    });\n  }\n\n  /**\n   * Saves the current scene and all of its referenced assets into an archive.\n   * The archive contains all assets, that were accessible when this function was called.\n   * Blocks in the archived scene reference assets relative from to the location of the scene\n   * file. These references are resolved when loading such a scene via `loadSceneFromURL`.\n   *\n   * @returns A promise that resolves with a Blob on success or an error on failure.\n   */\n  async saveToArchive(): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n      const scene = this.get();\n      if (scene == null) {\n        reject(new Error('No scene available.'));\n      } else {\n        this.#ubq.saveSceneToArchive(scene, (result) => {\n          if ('error' in result) {\n            reject(result.error);\n          } else {\n            resolve(new Blob([result], { type: MimeType.Zip }));\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Create a new design scene, along with its own camera.\n   * @returns The scene's handle.\n   */\n  @setter\n  create(sceneLayout: SceneLayout = 'Free'): DesignBlockId {\n    assert('sceneLayout', sceneLayout, sceneLayoutShape());\n    const scene = unpackResult(this.#ubq.createScene(sceneLayout));\n    return scene;\n  }\n\n  /**\n   * Create a new scene in video mode, along with its own camera.\n   * @returns The scene's handle.\n   */\n  @setter\n  createVideo(): DesignBlockId {\n    return unpackResult(this.#ubq.createVideoScene());\n  }\n\n  /**\n   * Loads the given image and creates a scene with a single page showing the image.\n   * Fetching the image may take an arbitrary amount of time, so the scene isn't immediately\n   * available.\n   * @param url - The image URL.\n   * @param dpi - The scene's DPI.\n   * @param pixelScaleFactor - The display's pixel scale factor.\n   * @returns A promise that resolves with the scene ID on success or rejected with an error otherwise.\n   */\n  @setter\n  createFromImage(\n    url: string,\n    dpi = 300,\n    pixelScaleFactor = 1,\n    sceneLayout: SceneLayout = 'Free',\n    spacing = 0,\n    spacingInScreenSpace = false\n  ): Promise<DesignBlockId> {\n    assert('url', url, string());\n    assert('dpi', dpi, min(number(), 0));\n    assert('pixelScaleFactor', pixelScaleFactor, min(number(), 0));\n    assert('sceneLayout', sceneLayout, sceneLayoutShape());\n    return unpackAsync((cb) =>\n      this.#ubq.createSceneFromImage(\n        url,\n        dpi,\n        pixelScaleFactor,\n        sceneLayout,\n        spacing,\n        spacingInScreenSpace,\n        cb\n      )\n    );\n  }\n\n  /**\n   * Loads the given video and creates a scene with a single page showing the video.\n   * Fetching the video may take an arbitrary amount of time, so the scene isn't immediately\n   * available.\n   * @param url - The video URL.\n   * @returns A promise that resolves with the scene ID on success or rejected with an error otherwise.\n   */\n  @setter\n  createFromVideo(url: string): Promise<DesignBlockId> {\n    assert('url', url, string());\n    return unpackAsync((cb) => this.#ubq.createSceneFromVideo(url, cb));\n  }\n\n  /**\n   * Return the currently active scene.\n   * @returns The scene or null, if none was created yet.\n   */\n  @getter\n  get(): DesignBlockId | null {\n    const result = this.#ubq.findByType('scene');\n    const vector = unpackResult(result);\n    const scenes = cppVectorToArray(vector);\n    return scenes.length > 0 ? scenes[0] : null;\n  }\n\n  /**\n   * Applies the contents of the given template scene to the currently loaded scene.\n   * This loads the template scene while keeping the design unit and page dimensions\n   * of the current scene. The content of the pages is automatically adjusted to fit\n   * the new dimensions.\n   * @param content - The template scene file contents, a base64 string.\n   * @returns A Promise that resolves once the template was applied or rejects if there was an error.\n   */\n  @setter\n  async applyTemplateFromString(content: string): Promise<void> {\n    assert('content', content, string());\n    return unpackAsync((cb) => this.#ubq.applyTemplateFromString(content, cb));\n  }\n\n  /**\n   * Applies the contents of the given template scene to the currently loaded scene.\n   * This loads the template scene while keeping the design unit and page dimensions\n   * of the current scene. The content of the pages is automatically adjusted to fit\n   * the new dimensions.\n   * @param url - The url to the template scene file.\n   * @returns A Promise that resolves once the template was applied or rejects if there was an error.\n   */\n  @setter\n  async applyTemplateFromURL(url: string): Promise<void> {\n    assert('url', url, string());\n    return unpackAsync((cb) => this.#ubq.applyTemplateFromURL(url, cb));\n  }\n\n  /**\n   * Get the current scene mode.\n   * @returns The current mode of the scene.\n   */\n  @getter\n  getMode(): SceneMode {\n    const scene = this.get();\n    return unpackResult(this.#ubq.getSceneMode(scene));\n  }\n\n  /**\n   * Converts all values of the current scene into the given design unit.\n   * @param designUnit - The new design unit of the scene\n   */\n  @setter\n  setDesignUnit(designUnit: DesignUnit): void {\n    assert('designUnit', designUnit, designUnitShape());\n    const scene = this.get();\n    unpackResult(this.#ubq.setDesignUnit(scene, designUnit));\n  }\n\n  /**\n   * Returns the design unit of the current scene.\n   * @returns The current design unit.\n   */\n  @getter\n  getDesignUnit(): DesignUnit {\n    const scene = this.get();\n    return unpackResult(this.#ubq.getDesignUnit(scene)) as DesignUnit;\n  }\n\n  /**\n   * Get the sorted list of pages in the scene.\n   * @returns The sorted list of pages in the scene.\n   */\n  @getter\n  getPages(): DesignBlockId[] {\n    return cppVectorToArray(unpackResult(this.#ubq.getPages()));\n  }\n\n  /**\n   * Get the current page, i.e., the page of the first selected element if this page\n   * is at least 25% visible or, otherwise, the page nearest to the viewport center.\n   * @returns The current page in the scene or null.\n   */\n  @getter\n  getCurrentPage(): DesignBlockId | null {\n    const scene = this.get();\n    if (scene == null) {\n      return null;\n    }\n    const result = this.#ubq.getCurrentPage(scene);\n    if (!result.isValid()) {\n      return null;\n    }\n    return unpackResult(result);\n  }\n\n  /**\n   * Find all blocks with the given type sorted by the distance to viewport center.\n   * @param type - The type to search for.\n   * @returns A list of block ids sorted by distance to viewport center.\n   */\n  @getter\n  findNearestToViewPortCenterByType(type: DesignBlockType): DesignBlockId[] {\n    assert('type', type, string());\n    const scene = this.get();\n    if (scene == null) {\n      return [];\n    }\n    const result = this.#ubq.findNearestToViewPortCenterByType(scene, type);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Find all blocks with the given kind sorted by the distance to viewport center.\n   * @param kind - The kind to search for.\n   * @returns A list of block ids sorted by distance to viewport center.\n   */\n  @getter\n  findNearestToViewPortCenterByKind(kind: string): DesignBlockId[] {\n    assert('kind', kind, string());\n    const scene = this.get();\n    if (scene == null) {\n      return [];\n    }\n    const result = this.#ubq.findNearestToViewPortCenterByKind(scene, kind);\n    const vector = unpackResult(result);\n    return cppVectorToArray(vector);\n  }\n\n  /**\n   * Set the zoom level of the scene, e.g., for headless versions.\n   * This only shows an effect if the zoom level is not handled/overwritten by the UI.\n   * Setting a zoom level of 2.0f results in one dot in the design to be two pixels on the screen.\n   *\n   * @param zoomLevel - The new zoom level.\n   */\n  @setter\n  setZoomLevel(zoomLevel = 1.0) {\n    const scene = this.get();\n    assert('zoomLevel', zoomLevel, min(number(), 0));\n    this.#ubq.setZoomLevel(scene, zoomLevel);\n  }\n\n  /**\n   * Get the zoom level of the scene or for a camera in the scene in unit `dpx/dot`. A zoom level of 2.0 results in one pixel in the design to be two pixels\n   * on the screen.\n   * @returns The zoom level of the block's camera.\n   */\n  @getter\n  getZoomLevel(): number {\n    const scene = this.get();\n    return unpackResult(this.#ubq.getZoomLevel(scene));\n  }\n\n  /**\n   * Sets the zoom and focus to show a block.\n   * This only shows an effect if the zoom level is not handled/overwritten by the UI.\n   * Without padding, this results in a tight view on the block.\n   *\n   * @param id - The block that should be focused on.\n   * @param paddingLeft - Optional padding in screen pixels to the left of the block.\n   * @param paddingTop - Optional padding in screen pixels to the top of the block.\n   * @param paddingRight - Optional padding in screen pixels to the right of the block.\n   * @param paddingBottom - Optional padding in screen pixels to the bottom of the block.\n   * @returns A promise that resolves once the zoom was set or rejects with an error otherwise.\n   */\n  @setter\n  async zoomToBlock(\n    id: DesignBlockId,\n    paddingLeft = 0,\n    paddingTop = 0,\n    paddingRight = 0,\n    paddingBottom = 0\n  ): Promise<void> {\n    assert('id', id, integer());\n    return unpackAsync((cb) =>\n      this.#ubq.zoomToBlock(\n        id,\n        paddingLeft,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        cb\n      )\n    );\n  }\n\n  /**\n   * Continually adjusts the zoom level to fit the width or height of a block's axis-aligned bounding box.\n   * This only shows an effect if the zoom level is not handled/overwritten by the UI.\n   * Without padding, this results in a tight view on the block.\n   * No more than one block per scene can have zoom auto-fit enabled.\n   * Calling `setZoomLevel` or `zoomToBlock` disables the continuous adjustment.\n   *\n   * @param id - The block for which the zoom is adjusted.\n   * @param axis - The block axis for which the zoom is adjusted.\n   * @param paddingBefore - Optional padding in screen pixels before the block.\n   * @param paddingAfter - Optional padding in screen pixels after the block.\n   */\n  enableZoomAutoFit(\n    id: DesignBlockId,\n    axis: 'Horizontal' | 'Vertical',\n    paddingBefore?: number,\n    paddingAfter?: number\n  ): void;\n  /**\n   * Continually adjusts the zoom level to fit the width or height of a block's axis-aligned bounding box.\n   * This only shows an effect if the zoom level is not handled/overwritten by the UI.\n   * Without padding, this results in a tight view on the block.\n   * Calling `setZoomLevel` or `zoomToBlock` disables the continuous adjustment.\n   *\n   * @param id - The block for which the zoom is adjusted.\n   * @param axis - The block axis for which the zoom is adjusted.\n   * @param paddingLeft - Optional padding in screen pixels to the left of the block.\n   * @param paddingTop - Optional padding in screen pixels to the top of the block.\n   * @param paddingRight - Optional padding in screen pixels to the right of the block.\n   * @param paddingBottom - Optional padding in screen pixels to the bottom of the block.\n   */\n  enableZoomAutoFit(\n    id: DesignBlockId,\n    axis: 'Both',\n    paddingLeft?: number,\n    paddingTop?: number,\n    paddingRight?: number,\n    paddingBottom?: number\n  ): void;\n  @setter\n  enableZoomAutoFit(\n    id: DesignBlockId,\n    axis: ZoomAutoFitAxis,\n    paddingBeforeOrLeft = 0,\n    paddingAfterOrTop = 0,\n    paddingRight = 0,\n    paddingBottom = 0\n  ): void {\n    assert('id', id, integer());\n    assert('axis', axis, zoomAutoFitAxisShape());\n\n    if (axis === 'Horizontal') {\n      assert('paddingBefore', paddingBeforeOrLeft, number());\n      assert('paddingAfter', paddingAfterOrTop, number());\n      return unpackResult(\n        this.#ubq.enableZoomAutoFit(\n          id,\n          axis,\n          paddingBeforeOrLeft,\n          0,\n          paddingAfterOrTop,\n          0\n        )\n      );\n    }\n\n    if (axis === 'Vertical') {\n      assert('paddingBefore', paddingBeforeOrLeft, number());\n      assert('paddingAfter', paddingAfterOrTop, number());\n      return unpackResult(\n        this.#ubq.enableZoomAutoFit(\n          id,\n          axis,\n          0,\n          paddingBeforeOrLeft,\n          0,\n          paddingAfterOrTop\n        )\n      );\n    }\n\n    assert('paddingLeft', paddingBeforeOrLeft, number());\n    assert('paddingTop', paddingAfterOrTop, number());\n    assert('paddingRight', paddingRight, number());\n    assert('paddingBottom', paddingBottom, number());\n    return unpackResult(\n      this.#ubq.enableZoomAutoFit(\n        id,\n        axis,\n        paddingBeforeOrLeft,\n        paddingAfterOrTop,\n        paddingRight,\n        paddingBottom\n      )\n    );\n  }\n\n  /**\n   *  Disables any previously set zoom auto-fit.\n   *\n   * @param blockOrScene - The scene or a block in the scene for which to disable zoom auto-fit.\n   */\n  @setter\n  disableZoomAutoFit(blockOrScene: DesignBlockId): void {\n    assert('blockOrScene', blockOrScene, integer());\n    return unpackResult(this.#ubq.disableZoomAutoFit(blockOrScene));\n  }\n\n  /**\n   *  Queries whether zoom auto-fit is enabled.\n   *\n   * @param blockOrScene - The scene or a block in the scene for which to query the zoom auto-fit.\n   * @returns True if the given block has auto-fit set or the scene contains a block for which auto-fit is set, false\n   * otherwise.\n   */\n  @getter\n  isZoomAutoFitEnabled(blockOrScene: DesignBlockId): boolean {\n    assert('blockOrScene', blockOrScene, integer());\n    return unpackResult(this.#ubq.isZoomAutoFitEnabled(blockOrScene));\n  }\n\n  /**\n   * Continually ensures the camera position to be within the width and height of the blocks axis-aligned bounding box.\n   * Without padding, this results in a tight clamp on the block. With padding, the padded part of the\n   * blocks is ensured to be visible.\n   *\n   * @param ids - The blocks to which the camera position is adjusted to, usually, the scene or a page.\n   * @param paddingLeft - Optional padding in screen pixels to the left of the block.\n   * @param paddingTop - Optional padding in screen pixels to the top of the block.\n   * @param paddingRight - Optional padding in screen pixels to the right of the block.\n   * @param paddingBottom - Optional padding in screen pixels to the bottom of the block.\n   * @param scaledPaddingLeft - Optional padding in screen pixels to the left of the block that scales with the zoom level until five times the initial value.\n   * @param scaledPaddingTop - Optional padding in screen pixels to the top of the block that scales with the zoom level until five times the initial value.\n   * @param scaledPaddingRight - Optional padding in screen pixels to the right of the block that scales with the zoom level until five times the initial value.\n   * @param scaledPaddingBottom - Optional padding in screen pixels to the bottom of the block that scales with the zoom level until five times the initial value.\n   */\n  unstable_enableCameraPositionClamping(\n    ids: DesignBlockId[],\n    paddingLeft = 0,\n    paddingTop = 0,\n    paddingRight = 0,\n    paddingBottom = 0,\n    scaledPaddingLeft = 0,\n    scaledPaddingTop = 0,\n    scaledPaddingRight = 0,\n    scaledPaddingBottom = 0\n  ): void {\n    assert('ids', ids, array(number()));\n\n    assert('paddingLeft', paddingLeft, number());\n    assert('paddingTop', paddingTop, number());\n    assert('paddingRight', paddingRight, number());\n    assert('paddingBottom', paddingBottom, number());\n    assert('scaledPaddingLeft', paddingLeft, number());\n    assert('scaledPaddingTop', paddingTop, number());\n    assert('scaledPaddingRight', paddingRight, number());\n    assert('scaledPaddingBottom', paddingBottom, number());\n    return unpackResult(\n      this.#ubq.unstable_enableCameraPositionClamping(\n        ids,\n        paddingLeft,\n        paddingTop,\n        paddingRight,\n        paddingBottom,\n        scaledPaddingLeft,\n        scaledPaddingTop,\n        scaledPaddingRight,\n        scaledPaddingBottom\n      )\n    );\n  }\n\n  /**\n   *  Disables any previously set position clamping for the current scene.\n   * @param blockOrScene - Optionally, the scene or a block in the scene for which to query the position clamping.\n   */\n  unstable_disableCameraPositionClamping(blockOrScene = this.get()): void {\n    if (blockOrScene == null) {\n      throw new Error('No scene available.');\n    }\n\n    return unpackResult(\n      this.#ubq.unstable_disableCameraPositionClamping(blockOrScene)\n    );\n  }\n\n  /**\n   *  Queries whether position clamping is enabled.\n   *\n   * @param blockOrScene - Optionally, the scene or a block in the scene for which to query the position clamping.\n   * @returns True if the given block has position clamping set or the scene contains a block for which position clamping is set, false\n   * otherwise.\n   */\n  unstable_isCameraPositionClampingEnabled(blockOrScene = this.get()): boolean {\n    if (blockOrScene == null) {\n      throw new Error('No scene available.');\n    }\n    return unpackResult(\n      this.#ubq.unstable_isCameraPositionClampingEnabled(blockOrScene)\n    );\n  }\n\n  /**\n   * Continually ensures the zoom level of the camera in the active scene to be in the given range.\n   *\n   * @param ids - The blocks to which the camera zoom limits are adjusted to, usually, the scene or a page.\n   * @param minZoomLimit - The minimum zoom level limit when zooming out, unlimited when negative.\n   * @param maxZoomLimit - The maximum zoom level limit when zooming in, unlimited when negative.\n   * @param paddingLeft - Optional padding in screen pixels to the left of the block. Only applied when the block is not a camera.\n   * @param paddingTop - Optional padding in screen pixels to the top of the block. Only applied when the block is not a camera.\n   * @param paddingRight - Optional padding in screen pixels to the right of the block. Only applied when the block is not a camera.\n   * @param paddingBottom - Optional padding in screen pixels to the bottom of the block. Only applied when the block is not a camera.\n   *\n   */\n  unstable_enableCameraZoomClamping(\n    ids: DesignBlockId[],\n    minZoomLimit = -1.0,\n    maxZoomLimit = -1.0,\n    paddingLeft = 0,\n    paddingTop = 0,\n    paddingRight = 0,\n    paddingBottom = 0\n  ): void {\n    assert('ids', ids, array(number()));\n    assert('minZoomLimit', minZoomLimit, number());\n    assert('maxZoomLimit', maxZoomLimit, number());\n    assert('paddingLeft', paddingLeft, number());\n    assert('paddingTop', paddingTop, number());\n    assert('paddingRight', paddingRight, number());\n    assert('paddingBottom', paddingBottom, number());\n    return unpackResult(\n      this.#ubq.unstable_enableCameraZoomClamping(\n        ids,\n        minZoomLimit,\n        maxZoomLimit,\n        paddingLeft,\n        paddingTop,\n        paddingRight,\n        paddingBottom\n      )\n    );\n  }\n\n  /**\n   * Disables any previously set zoom clamping for the current scene.\n   * @param blockOrScene - Optionally, the scene or a block for which to query the zoom clamping.\n   */\n  unstable_disableCameraZoomClamping(blockOrScene = this.get()): void {\n    if (blockOrScene == null) {\n      throw new Error('No scene available.');\n    }\n\n    return unpackResult(\n      this.#ubq.unstable_disableCameraZoomClamping(blockOrScene)\n    );\n  }\n\n  /**\n   * Queries whether zoom clamping is enabled.\n   *\n   * @param blockOrScene - Optionally, the scene or a block for which to query the zoom clamping.\n   * @returns True if the given block has zoom clamping set or the scene contains a block for which zoom clamping is set, false otherwise.\n   */\n  unstable_isCameraZoomClampingEnabled(blockOrScene = this.get()): boolean {\n    if (blockOrScene == null) {\n      throw new Error('No scene available.');\n    }\n    return unpackResult(\n      this.#ubq.unstable_isCameraZoomClampingEnabled(blockOrScene)\n    );\n  }\n\n  /**\n   * Subscribe to changes to the zoom level.\n   * @param callback - This function is called at the end of the engine update, if the zoom level has changed.\n   * @returns A method to unsubscribe.\n   * @privateRemarks This will currently fire on _all_ changes to camera properties\n   */\n  onZoomLevelChanged = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToZoomLevel(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Subscribe to changes to the active scene rendered by the engine.\n   * @param callback - This function is called at the end of the engine update, if the active scene has changed.\n   * @returns A method to unsubscribe.\n   */\n  onActiveChanged = (callback: () => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToActiveSceneChange(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n}\n", "import type {\n  AssetDefinition,\n  AssetProperty,\n  AssetQueryData,\n  AssetResult,\n  AssetSource,\n  AssetsQueryResult,\n  CompleteAssetResult\n} from './types/asset';\nimport type { DesignBlockId, Vector } from './types/engine';\nimport type {\n  FindAssetsQuery,\n  FindAssetsQueryCpp,\n  UBQ\n} from './ubq/ubq_binding';\nimport { unpackAsync, unpackResult } from './ubq/ubq_result';\nimport cppVectorToArray from './utils/cppVectorToArray';\n\nconst assetCallbacks = new WeakMap<\n  UBQ,\n  Map<\n    string,\n    {\n      canManageAssets: AssetSource['canManageAssets'];\n    }\n  >\n>();\n\nconst EMPTY_RESULT = {\n  assets: [],\n  total: 0,\n  currentPage: 0,\n  nextPage: undefined\n};\n\n/**\n * @public\n */\nexport default class AssetAPI {\n  /** @internal */\n  #ubq: UBQ;\n\n  /** @internal */\n  constructor(ubq: UBQ) {\n    this.#ubq = ubq;\n  }\n\n  /** @internal */\n  #applyAssetMiddlewares: Set<\n    (\n      sourceId: string,\n      assetResult: AssetResult,\n      apply: AssetAPI['apply']\n    ) => Promise<DesignBlockId | undefined>\n  > = new Set();\n\n  /** @internal */\n  #applyAssetToBlockMiddlewares: Set<\n    (\n      sourceId: string,\n      assetResult: AssetResult,\n      block: DesignBlockId,\n      applyToBlock: AssetAPI['applyToBlock']\n    ) => Promise<void>\n  > = new Set();\n\n  /**\n   * Register a middleware that is called before applying an asset to the scene.\n   * @internal\n   */\n  unstable_registerApplyAssetMiddleware(\n    middleware: (\n      sourceId: string,\n      assetResult: AssetResult,\n      apply: AssetAPI['apply']\n    ) => Promise<DesignBlockId | undefined>\n  ): VoidFunction {\n    this.#applyAssetMiddlewares.add(middleware);\n    return () => {\n      this.#applyAssetMiddlewares.delete(middleware);\n    };\n  }\n\n  /**\n   * Register a middleware that is called before applying an asset to a block.\n   * @internal\n   */\n  unstable_registerApplyAssetToBlockMiddleware(\n    middleware: (\n      sourceId: string,\n      assetResult: AssetResult,\n      block: DesignBlockId,\n      applyToBlock: AssetAPI['applyToBlock']\n    ) => Promise<void>\n  ): VoidFunction {\n    this.#applyAssetToBlockMiddlewares.add(middleware);\n    return () => {\n      this.#applyAssetToBlockMiddlewares.delete(middleware);\n    };\n  }\n\n  /**\n   * Adds a custom asset source. Its ID has to be unique.\n   * @param source - The asset source.\n   */\n  addSource(source: AssetSource): void {\n    const getSupportedMimeTypes = source.getSupportedMimeTypes?.bind(source);\n    const getGroups = source.getGroups?.bind(source);\n    const applyAsset = source.applyAsset?.bind(source);\n    const applyAssetToBlock = source.applyAssetToBlock?.bind(source);\n    const addAsset = source.addAsset?.bind(source);\n    const removeAsset = source.removeAsset?.bind(source);\n\n    const credits = source.credits;\n    const license = source.license;\n\n    unpackResult(\n      this.#ubq.addAssetSource(\n        source.id,\n        async (query: FindAssetsQueryCpp, callback) => {\n          try {\n            const queryData: AssetQueryData = {\n              ...query,\n              sortKey: query.sortKey,\n              sortingOrder: query.sortingOrder,\n              sortActiveFirst: query.sortActiveFirst,\n              tags: cppVectorToArray(query.tags),\n              groups: cppVectorToArray(query.groups),\n              excludeGroups: cppVectorToArray(query.excludeGroups)\n            };\n            const result = await source.findAssets(queryData);\n            if (!result) {\n              callback.invoke(EMPTY_RESULT);\n            } else {\n              const completeResult: AssetsQueryResult<CompleteAssetResult> = {\n                ...result,\n                assets: result.assets.map((asset) =>\n                  ensureComplete(asset, source.id)\n                )\n              };\n              callback.invoke(completeResult);\n            }\n          } catch (e: any) {\n            callback.invoke(\n              e.message ?? 'Unknown error in user-defined `findAssets`'\n            );\n          }\n        },\n        getGroups\n          ? async (callback) => {\n              try {\n                const groups = await getGroups();\n                callback.invoke(groups);\n              } catch (e: any) {\n                callback.invoke(\n                  e.message ?? 'Unknown error in user-defined `getGroups`'\n                );\n              }\n            }\n          : null,\n        credits ? () => ({ name: credits.name, url: credits.url ?? '' }) : null,\n        license ? () => ({ name: license.name, url: license.url ?? '' }) : null,\n        getSupportedMimeTypes\n          ? () => {\n              return getSupportedMimeTypes() ?? [];\n            }\n          : null,\n        applyAsset\n          ? async (findAssetResult, callback) => {\n              try {\n                const id = await applyAsset(\n                  this.#adaptAssetResult(findAssetResult)\n                );\n                callback.invoke(id);\n              } catch (e: any) {\n                callback.invoke(\n                  e.message ?? 'Unknown error in user-defined `applyAsset`'\n                );\n              }\n            }\n          : null,\n        applyAssetToBlock\n          ? async (result, block, callback) => {\n              try {\n                await applyAssetToBlock(this.#adaptAssetResult(result), block);\n                // TODO Fix error when `invoke` is called without argument and then remove this @ts-ignore\n                // @ts-ignore\n                callback.invoke({});\n              } catch (e: any) {\n                callback.invoke(\n                  e.message ??\n                    'Unknown error in user-defined `applyAssetToBlock`'\n                );\n              }\n            }\n          : null,\n        addAsset\n          ? async (asset) => {\n              addAsset(asset);\n            }\n          : null,\n        removeAsset\n          ? async (id) => {\n              removeAsset(id);\n            }\n          : null\n      )\n    );\n\n    this.#addAssetCallbacks(source.id, source);\n  }\n\n  /**\n   * Adds a local asset source. Its ID has to be unique.\n   * @param source - The asset source.\n   * @param supportedMimeTypes - The mime types of assets that are allowed to be added to this local source.\n   * @param applyAsset - An optional callback that can be used to override the default behavior of applying a given\n   * asset result to the active scene.\n   * @param applyAssetToBlock - An optional callback that can be used to override the default behavior of applying\n   * an asset result to a given block.\n   */\n  addLocalSource(\n    id: string,\n    supportedMimeTypes?: string[],\n    applyAsset?: (\n      asset: CompleteAssetResult\n    ) => Promise<DesignBlockId | undefined>,\n    applyAssetToBlock?: (\n      asset: CompleteAssetResult,\n      block: DesignBlockId\n    ) => Promise<void>\n  ): void {\n    unpackResult(\n      this.#ubq.addLocalAssetSource(\n        id,\n        supportedMimeTypes ?? [],\n        applyAsset\n          ? async (findAssetResult, callback) => {\n              try {\n                const blockId = await applyAsset(\n                  this.#adaptAssetResult(findAssetResult)\n                );\n                callback.invoke(blockId);\n              } catch (e: any) {\n                callback.invoke(\n                  e.message ?? 'Unknown error in user-defined `applyAsset`'\n                );\n              }\n            }\n          : null,\n        applyAssetToBlock\n          ? async (result, block, callback) => {\n              try {\n                await applyAssetToBlock(this.#adaptAssetResult(result), block);\n                callback.invoke({});\n              } catch (e: any) {\n                callback.invoke(\n                  e.message ??\n                    'Unknown error in user-defined `applyAssetToBlock`'\n                );\n              }\n            }\n          : null\n      )\n    );\n  }\n\n  /**\n   * Removes an asset source with the given ID.\n   * @param id - The ID to refer to the asset source.\n   */\n  removeSource(id: string): void {\n    unpackResult(this.#ubq.removeAssetSource(id));\n    this.#removeAssetCallbacks(id);\n  }\n\n  /**\n   * Finds all registered asset sources.\n   * @returns A list with the IDs of all registered asset sources.\n   */\n  findAllSources(): string[] {\n    return cppVectorToArray<string>(this.#ubq.findAllAssetSources());\n  }\n\n  /**\n   * Finds assets of a given type in a specific asset source.\n   * @param sourceId - The ID of the asset source.\n   * @param query - All the options to filter the search results by.\n   * @returns The search results.\n   */\n  findAssets(\n    sourceId: string,\n    query: AssetQueryData\n  ): Promise<AssetsQueryResult<CompleteAssetResult>> {\n    return new Promise((resolve, reject) => {\n      let tags = query?.tags ?? [];\n      if (!Array.isArray(tags)) tags = [tags];\n      const findAssetQuery: FindAssetsQuery = {\n        perPage: query?.perPage ?? 0,\n        page: query?.page ?? 0,\n        query: query?.query ?? '',\n        tags,\n        groups: query?.groups ?? [],\n        excludeGroups: query?.excludeGroups ?? [],\n        locale: query?.locale ?? '',\n        sortingOrder: query?.sortingOrder ?? 'None',\n        sortKey: query?.sortKey ?? '',\n        sortActiveFirst: query?.sortActiveFirst ?? false\n      };\n      this.#ubq.findAssetSourceAssets(sourceId, findAssetQuery, (result) => {\n        try {\n          const unpacked =\n            unpackResult<AssetsQueryResult<CompleteAssetResult>>(result);\n          resolve({\n            ...unpacked,\n            nextPage: unpacked.nextPage === -1 ? undefined : unpacked.nextPage\n          });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n\n  /** internal */\n  #adaptAssetResult(findAssetResult: CompleteAssetResult): CompleteAssetResult {\n    const assetResult: CompleteAssetResult = {\n      ...findAssetResult\n    };\n\n    if (assetResult.groups?.length === 0) {\n      delete assetResult.groups;\n    }\n    if (!assetResult.locale) {\n      delete assetResult.locale;\n    }\n    if (!assetResult.label) {\n      delete assetResult.label;\n    }\n    if (assetResult.tags?.length === 0) {\n      delete assetResult.tags;\n    }\n    if (!assetResult.credits?.name && !assetResult.credits?.url) {\n      delete assetResult.credits;\n    } else if (!assetResult.credits.url) {\n      delete assetResult.credits.url;\n    }\n    if (!assetResult.license?.name && !assetResult.license?.url) {\n      delete assetResult.license;\n    } else if (!assetResult.license.url) {\n      delete assetResult.license.url;\n    }\n    if (!assetResult.utm?.source && !assetResult.utm?.medium) {\n      delete assetResult.utm;\n    } else {\n      if (!assetResult.utm.source) {\n        delete assetResult.utm.source;\n      }\n      if (!assetResult.utm.medium) {\n        delete assetResult.utm.medium;\n      }\n    }\n    return assetResult;\n  }\n\n  /**\n   * Queries the asset source's groups for a certain asset type.\n   * @param id - The ID of the asset source.\n   * @returns The asset groups.\n   */\n  async getGroups(id: string): Promise<string[]> {\n    return unpackAsync<Vector<string>>((cb) =>\n      this.#ubq.getAssetSourceGroups(id, cb)\n    ).then((vector) => cppVectorToArray(vector));\n  }\n\n  /**\n   * Queries the list of supported mime types of the specified asset source.\n   * An empty result means that all mime types are supported.\n   * @param sourceId - The ID of the asset source.\n   */\n  getSupportedMimeTypes(sourceId: string): string[] {\n    return cppVectorToArray<string>(\n      unpackResult(this.#ubq.getAssetSourceSupportedMimeTypes(sourceId))\n    );\n  }\n\n  /**\n   * Queries the asset source's credits info.\n   * @param sourceId - The ID of the asset source.\n   * @returns The asset source's credits info consisting of a name and an optional URL.\n   */\n  getCredits(sourceId: string):\n    | {\n        name: string;\n        url: string | undefined;\n      }\n    | undefined {\n    const credits = unpackResult(this.#ubq.getAssetSourceCredits(sourceId));\n    if (!credits.name && !credits.url) {\n      return undefined;\n    } else if (!credits.url) {\n      return { name: credits.name, url: undefined };\n    }\n    return credits;\n  }\n\n  /**\n   * Queries the asset source's license info.\n   * @param sourceId - The ID of the asset source.\n   * @returns The asset source's license info consisting of a name and an optional URL.\n   */\n  getLicense(sourceId: string):\n    | {\n        name: string;\n        url: string | undefined;\n      }\n    | undefined {\n    const license = unpackResult(this.#ubq.getAssetSourceLicense(sourceId));\n    if (!license.name && !license.url) {\n      return undefined;\n    } else if (!license.url) {\n      return { name: license.name, url: undefined };\n    }\n    return license;\n  }\n\n  canManageAssets(sourceId: string): boolean {\n    return !!assetCallbacks.get(this.#ubq)?.get(sourceId)?.canManageAssets;\n  }\n\n  /**\n   * Adds the given asset to a local asset source.\n   * @param sourceId - The local asset source ID that the asset should be added to.\n   * @param asset - The asset to be added to the asset source.\n   */\n  addAssetToSource(sourceId: string, asset: AssetDefinition): void {\n    unpackResult(this.#ubq.addAssetToSource(sourceId, asset));\n  }\n\n  /**\n   * Removes the specified asset from its local asset source.\n   * @param sourceId - The id of the local asset source that currently contains the asset.\n   * @param assetId - The id of the asset to be removed.\n   */\n  removeAssetFromSource(sourceId: string, assetId: string): void {\n    unpackResult(this.#ubq.removeAssetFromSource(sourceId, assetId));\n  }\n\n  #addAssetCallbacks(\n    sourceId: string,\n    source: Pick<AssetSource, 'canManageAssets'>\n  ): void {\n    if (!assetCallbacks.has(this.#ubq)) {\n      assetCallbacks.set(this.#ubq, new Map());\n    }\n    if (source.canManageAssets) {\n      // TODO Remove `canManageAssets` in version 1.11\n      // eslint-disable-next-line no-console\n      console.warn(\n        `\nDEPRECATION WARNING:\n\n'canManageAssets' flag was found for asset source with the id '${sourceId}'.\n\nThis flag is deprecated and will be removed in the next version. If you have used it to control if an upload buttons is rendered in the asset library, use the 'canAdd' options on an asset library entry. See documentation here: https://img.ly/docs/cesdk/ui/guides/customize-asset-library/`\n      );\n    }\n    assetCallbacks.get(this.#ubq)!.set(sourceId, {\n      canManageAssets: source.canManageAssets\n    });\n  }\n\n  #removeAssetCallbacks(sourceId: string): void {\n    assetCallbacks.get(this.#ubq)?.delete(sourceId);\n  }\n\n  /**\n   * Apply an asset result to the active scene.\n   * The default behavior will instantiate a block and configure it according to the asset's properties.\n   * Note that this can be overridden by providing an `applyAsset` function when adding the asset source.\n   * @param sourceId - The ID of the asset source.\n   * @param assetResult - A single assetResult of a `findAssets` query.\n   */\n  async apply(\n    sourceId: string,\n    assetResult: AssetResult\n  ): Promise<DesignBlockId | undefined> {\n    const originalApplyAsset = (id: string, asset: AssetResult) => {\n      return new Promise<number | undefined>((resolve, reject) => {\n        this.#ubq.applyAssetSourceAsset(\n          id,\n          ensureComplete(asset, id),\n          (result) => {\n            try {\n              const _id = unpackResult(result);\n              if (this.#ubq.isValid(_id)) {\n                resolve(_id);\n              } else {\n                resolve(undefined);\n              }\n            } catch (e) {\n              reject(e);\n            }\n          }\n        );\n      });\n    };\n\n    if (this.#applyAssetMiddlewares.size > 0) {\n      const applyAsset = Array.from(this.#applyAssetMiddlewares).reduce(\n        (\n          next: AssetAPI['apply'],\n          middleware: (\n            sourceId: string,\n            assetResult: AssetResult,\n            apply: AssetAPI['apply']\n          ) => Promise<DesignBlockId | undefined>\n        ) => {\n          return (id, asset) => middleware(id, asset, next);\n        },\n        originalApplyAsset\n      );\n      return applyAsset(sourceId, assetResult);\n    } else {\n      return originalApplyAsset(sourceId, assetResult);\n    }\n  }\n\n  /**\n   * Apply an asset result to the given block.\n   * @param sourceId - The ID of the asset source.\n   * @param assetResult - A single assetResult of a `findAssets` query.\n   * @param block - The block the asset should be applied to.\n   */\n  async applyToBlock(\n    sourceId: string,\n    assetResult: AssetResult,\n    block: DesignBlockId\n  ): Promise<void> {\n    const originalApplyAssetToBlock = (\n      id: string,\n      asset: AssetResult,\n      blockId: DesignBlockId\n    ) => {\n      return unpackAsync<void>((cb) =>\n        this.#ubq.applyAssetSourceAssetToBlock(\n          id,\n          ensureComplete(asset, id),\n          blockId,\n          cb\n        )\n      );\n    };\n    if (this.#applyAssetToBlockMiddlewares.size > 0) {\n      const applyToBlock = Array.from(\n        this.#applyAssetToBlockMiddlewares\n      ).reduce(\n        (\n          next: AssetAPI['applyToBlock'],\n          middleware: (\n            sourceId: string,\n            assetResult: AssetResult,\n            block: DesignBlockId,\n            applyToBlock: AssetAPI['applyToBlock']\n          ) => Promise<void>\n        ) => {\n          return (id, asset, blockId) => middleware(id, asset, blockId, next);\n        },\n        originalApplyAssetToBlock\n      );\n      return applyToBlock(sourceId, assetResult, block);\n    } else {\n      return originalApplyAssetToBlock(sourceId, assetResult, block);\n    }\n  }\n\n  async unstable_applyProperty(\n    sourceId: string,\n    assetResult: AssetResult,\n    property: AssetProperty\n  ): Promise<void> {\n    return unpackAsync((cb) =>\n      this.#ubq.unstable_applyAssetSourceProperty(\n        sourceId,\n        ensureComplete(assetResult, sourceId),\n        property,\n        cb\n      )\n    );\n  }\n\n  /**\n   * The default implementation for applying an asset to the scene.\n   * This implementation is used when no `applyAsset` function is provided to `addSource`.\n   * @param assetResult - A single assetResult of a `findAssets` query.\n   */\n  async defaultApplyAsset(\n    assetResult: AssetResult\n  ): Promise<DesignBlockId | undefined> {\n    return new Promise((resolve, reject) => {\n      this.#ubq.defaultApplyAsset(ensureComplete(assetResult, ''), (result) => {\n        try {\n          const id = unpackResult(result);\n          if (this.#ubq.isValid(id)) {\n            resolve(id);\n          } else {\n            resolve(undefined);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n\n  /**\n   * The default implementation for applying an asset to an existing block.\n   * @param assetResult - A single assetResult of a `findAssets` query.\n   * @param block - The block to apply the asset result to.\n   */\n  async defaultApplyAssetToBlock(\n    assetResult: AssetResult,\n    block: DesignBlockId\n  ): Promise<void> {\n    return unpackAsync((cb) =>\n      this.#ubq.defaultApplyAssetToBlock(\n        ensureComplete(assetResult, ''),\n        block,\n        cb\n      )\n    );\n  }\n\n  /**\n   * Register a callback to be called every time an asset source is added.\n   * @param callback - The function that is called whenever an asset source is added.\n   * @returns A method to unsubscribe.\n   */\n  onAssetSourceAdded = (callback: (sourceID: string) => void): (() => void) => {\n    const subscription = this.#ubq.subscribeToAssetSourceAdded(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Register a callback to be called every time an asset source is removed.\n   * @param callback - The function that is called whenever an asset source is added.\n   * @returns A method to unsubscribe.\n   */\n  onAssetSourceRemoved = (\n    callback: (sourceID: string) => void\n  ): (() => void) => {\n    const subscription = this.#ubq.subscribeToAssetSourceRemoved(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Register a callback to be called every time an asset source's contents are changed.\n   * @param callback - The function that is called whenever an asset source is updated.\n   * @returns A method to unsubscribe.\n   */\n  onAssetSourceUpdated = (\n    callback: (sourceID: string) => void\n  ): (() => void) => {\n    const subscription = this.#ubq.subscribeToAssetSourceUpdated(callback);\n    return () => {\n      if (this.#ubq.isDeleted()) return;\n      unpackResult(this.#ubq.unsubscribe(subscription));\n    };\n  };\n\n  /**\n   * Notifies the engine that the contents of an asset source changed.\n   * @param sourceID - The asset source whose contents changed.\n   */\n  assetSourceContentsChanged(sourceID: string): void {\n    unpackResult(this.#ubq.assetSourceContentsChanged(sourceID));\n  }\n\n  /**\n   * @internal\n   * Remove reference in WeakMap. Just a precaution to not leak a handful of references in a global map.\n   */\n  dispose(): void {\n    assetCallbacks.delete(this.#ubq);\n  }\n}\n\n/**\n * Makes sure that a given asset result is complete with a context with the\n * given source id and an active flag.\n *\n * Will return the original asset result if it already has the correct context\n * and an active flag.\n * Will return a new asset result with the correct context if the original asset\n * result did not have a context.\n */\nfunction ensureComplete(\n  assetResult: AssetResult | CompleteAssetResult,\n  sourceId: string\n): CompleteAssetResult {\n  const hasContext =\n    'context' in assetResult && assetResult.context.sourceId === sourceId;\n  const hasActive = 'active' in assetResult;\n  if (hasContext && hasActive) {\n    return assetResult;\n  }\n  return {\n    ...assetResult,\n    active: assetResult.active ?? false,\n    context: { sourceId }\n  };\n}\n", "// This is very internal, very close to C++, like UBQResult\n/** @internal */\nexport interface Vector<T> extends EmscriptenClassHandle {\n  size: () => number;\n  get: (index: number) => T;\n}\n\n/**\n * A numerical identifier for a design block\n * @public\n */\nexport type DesignBlockId = number;\n\n/**\n * A numerical identifier for a history stack\n * @public\n */\nexport type HistoryId = number;\n\n/** @internal */\nexport interface NumberRange {\n  start: number;\n  end: number;\n}\n\n// Check for duplicates\n/** @public */\nexport interface Vec2 {\n  x: number;\n  y: number;\n}\n\n// Check for duplicates\n/** @public */\nexport interface Vec3 {\n  x: number;\n  y: number;\n  z: number;\n}\n\n// Check for duplicates\n/** @public */\nexport interface Size2 {\n  width: number;\n  height: number;\n}\n\n/**\n * An open range.\n * @public\n * */\nexport interface Range {\n  /** The starting value of the range */\n  from: number;\n  /** The non-inclusive ending value of the range */\n  to: number;\n}\n\n/** @internal */\nexport interface ClampArgs {\n  horizontalPaddingInPixels: number;\n  verticalPaddingInPixels: number;\n}\n\n/** @internal */\nexport interface ClampCameraCommandResult {\n  scrollPercentage: Vec2;\n  sceneSize: Vec2;\n}\n\n// These 3 things go to their own file\n\n/** @internal */\nexport interface EmscriptenClassHandle {\n  isAliasOf(other: unknown): boolean;\n  clone(): this;\n  delete(): void;\n  isDeleted(): boolean;\n  // This function exists, but I think it won' delete until we set\n  // a delayFunction in the CESDK_JS Module:\n  // deleteLater(): this;\n}\n\n/**\n * @internal\n */\nexport interface UBQError extends EmscriptenClassHandle {\n  message(): string;\n  publicMessage(): string;\n}\n\n/**\n * Result object that binds the C++ `ResultOrError<T, Error>` object. Acessing `value()` for an\n * invalid object will cause an exception in C++.\n * @internal\n */\nexport interface UBQResult<T> extends EmscriptenClassHandle {\n  value(): T;\n  error(): UBQError;\n  isValid(): boolean;\n  valueOr(t: T): T;\n}\n\n// These are used for mouse/keyboard interaction with the engine\n// Should probably go to its own file\n/** @internal */\nexport enum MouseButton {\n  Left = 0,\n  Right = 1,\n  Middle = 2,\n  Unknown = 255\n}\n\n/**\n * Describes the unit of the mouse wheel delta.\n * @internal\n */\nexport enum MouseWheelDeltaMode {\n  Pixel = 0,\n  Line = 1,\n  Page = 2\n}\n\n/** @internal */\nexport enum ButtonState {\n  Up = 0,\n  Down = 1\n}\n\n/** @internal */\nexport interface MouseButtonEvent {\n  button: MouseButton;\n  state: ButtonState;\n  position: Vec2;\n  shiftIsHeld: boolean;\n  isTouch: boolean;\n  timestamp: number;\n}\n\n/** @internal */\nexport interface MouseMoveEvent {\n  position: Vec2;\n  isTouch: boolean;\n  timestamp: number;\n}\n\n/** @internal */\nexport interface MouseWheelEvent {\n  position: Vec2;\n  timestamp: number;\n  deltaX: number;\n  deltaY: number;\n  deltaMode: MouseWheelDeltaMode;\n  shiftIsHeld: boolean;\n  /**\n   * Ctrl is used for zooming.\n   * Browsers will emit wheel events with ctrl held when using a two-finger\n   * pinch, Meta (CMD) is also considered for pro users who zoom with CMD+Wheel\n   */\n  ctrlOrMetaIsHeld: boolean;\n}\n\n/** @internal */\nexport enum KeyboardKey {\n  Key0 = 0,\n  Key1 = 1,\n  Key2 = 2,\n  Key3 = 3,\n  Key4 = 4,\n  Key5 = 5,\n  Key6 = 6,\n  Key7 = 7,\n  Key8 = 8,\n  Key9 = 9,\n  A = 10,\n  B = 11,\n  C = 12,\n  D = 13,\n  E = 14,\n  F = 15,\n  G = 16,\n  H = 17,\n  I = 18,\n  J = 19,\n  K = 20,\n  L = 21,\n  M = 22,\n  N = 23,\n  O = 24,\n  P = 25,\n  Q = 26,\n  R = 27,\n  S = 28,\n  T = 29,\n  U = 30,\n  V = 31,\n  W = 32,\n  X = 33,\n  Y = 34,\n  Z = 35,\n  ArrowLeft = 36,\n  ArrowRight = 37,\n  ArrowUp = 38,\n  ArrowDown = 39,\n  Backspace = 40,\n  Enter = 41,\n  Space = 42,\n  Escape = 43,\n  Delete = 44,\n  // Modifier Keys\n  Control,\n  Option,\n  Shift,\n  Unknown = 255\n}\n\n/** @internal */\nexport interface KeyboardKeyEvent {\n  key: KeyboardKey;\n  characters: string;\n  shiftIsHeld: boolean;\n  commandIsHeld: boolean;\n  optionIsHeld: boolean;\n  timestamp: number;\n}\n\n/** @internal */\nexport enum NotificationType {\n  Information,\n  Warning,\n  Error\n}\n\n/**\n * The scene layout determines how the layout stack should layout its pages.\n * @public\n */\nexport type SceneLayout =\n  | 'Free'\n  | 'VerticalStack'\n  | 'HorizontalStack'\n  | 'DepthStack';\n\n/**\n * The old numeric enum used to represent scene layout\n * @internal\n * @deprecated This is only used internally between Ubique and the LegacyAPI\n */\nexport enum SceneLayoutNumeric {\n  Free,\n  VerticalStack,\n  HorizontalStack,\n  DepthStack\n}\n\n/**\n * The mode of the scene defines how the editor and playback should behave.\n * @public\n */\nexport type SceneMode = 'Design' | 'Video';\n\n/**\n * The axis(es) for which to auto-fit.\n * @public\n */\nexport type ZoomAutoFitAxis = 'Horizontal' | 'Vertical' | 'Both';\n\n/**\n * The unit type in which the page values (size, distances, etc.) are defined.\n * @public\n */\nexport type DesignUnit = 'Pixel' | 'Millimeter' | 'Inch';\n\n/**\n * The horizontal text alignment options.\n * @public\n */\nexport type HorizontalTextAlignment = 'Left' | 'Right' | 'Center';\n\n/**\n * The vertical text alignment options.\n * @public\n */\nexport type VerticalTextAlignment = 'Top' | 'Bottom' | 'Center';\n\n/** @internal */\nexport enum GestureState {\n  Began = 0,\n  Changed = 1,\n  Ended = 2\n}\n\n/** @internal */\nexport interface EngineTouchEvent {\n  /** Nanoseconds */\n  timestamp: number;\n  state: GestureState;\n  touchPoints: Vec2[];\n}\n\n/** @internal */\nexport interface TouchRotateEvent extends EngineTouchEvent {\n  rotation: number;\n}\n\n/** @internal */\nexport interface TouchPanEvent extends EngineTouchEvent {\n  panDistance: Vec2;\n}\n\n/** @internal */\nexport interface TouchPinchEvent extends EngineTouchEvent {\n  scale: number;\n}\n\n/** @internal */\nexport interface TrackingMetadata {\n  apiKey: string;\n  userId: string;\n  deviceId: string;\n  sessionId: string;\n  endpoint: string;\n}\n\n/** @public */\nexport type EditMode =\n  | 'Transform'\n  | 'Crop'\n  | 'Text'\n  | 'Playback'\n  | 'Trim'\n  | (string & {});\n", "import { KeyboardKey, type KeyboardKeyEvent } from '../types/engine';\n\nexport default function mapToEngineKey(event: {\n  key: string;\n  shiftKey: boolean;\n  metaKey: boolean;\n  ctrlKey: boolean;\n  altKey: boolean;\n}): KeyboardKeyEvent {\n  const result: KeyboardKeyEvent = {\n    key: KeyboardKey.Unknown,\n    characters: event.key,\n    shiftIsHeld: event.shiftKey,\n    commandIsHeld: event.metaKey || event.ctrlKey,\n    optionIsHeld: event.altKey,\n    timestamp: Date.now()\n  };\n  // FIXME: Make sure we filter out all special keys out here\n  switch (event.key.toUpperCase()) {\n    case '0':\n      result.key = KeyboardKey.Key0;\n      break;\n    case '1':\n      result.key = KeyboardKey.Key1;\n      break;\n    case '2':\n      result.key = KeyboardKey.Key2;\n      break;\n    case '3':\n      result.key = KeyboardKey.Key3;\n      break;\n    case '4':\n      result.key = KeyboardKey.Key4;\n      break;\n    case '5':\n      result.key = KeyboardKey.Key5;\n      break;\n    case '6':\n      result.key = KeyboardKey.Key6;\n      break;\n    case '7':\n      result.key = KeyboardKey.Key7;\n      break;\n    case '8':\n      result.key = KeyboardKey.Key8;\n      break;\n    case '9':\n      result.key = KeyboardKey.Key9;\n      break;\n    case 'A':\n      result.key = KeyboardKey.A;\n      break;\n    case 'B':\n      result.key = KeyboardKey.B;\n      break;\n    case 'C':\n      result.key = KeyboardKey.C;\n      break;\n    case 'D':\n      result.key = KeyboardKey.D;\n      break;\n    case 'E':\n      result.key = KeyboardKey.E;\n      break;\n    case 'F':\n      result.key = KeyboardKey.F;\n      break;\n    case 'G':\n      result.key = KeyboardKey.G;\n      break;\n    case 'H':\n      result.key = KeyboardKey.H;\n      break;\n    case 'I':\n      result.key = KeyboardKey.I;\n      break;\n    case 'J':\n      result.key = KeyboardKey.J;\n      break;\n    case 'K':\n      result.key = KeyboardKey.K;\n      break;\n    case 'L':\n      result.key = KeyboardKey.L;\n      break;\n    case 'M':\n      result.key = KeyboardKey.M;\n      break;\n    case 'N':\n      result.key = KeyboardKey.N;\n      break;\n    case 'O':\n      result.key = KeyboardKey.O;\n      break;\n    case 'P':\n      result.key = KeyboardKey.P;\n      break;\n    case 'Q':\n      result.key = KeyboardKey.Q;\n      break;\n    case 'R':\n      result.key = KeyboardKey.R;\n      break;\n    case 'S':\n      result.key = KeyboardKey.S;\n      break;\n    case 'T':\n      result.key = KeyboardKey.T;\n      break;\n    case 'U':\n      result.key = KeyboardKey.U;\n      break;\n    case 'V':\n      result.key = KeyboardKey.V;\n      break;\n    case 'W':\n      result.key = KeyboardKey.W;\n      break;\n    case 'X':\n      result.key = KeyboardKey.X;\n      break;\n    case 'Y':\n      result.key = KeyboardKey.Y;\n      break;\n    case 'Z':\n      result.key = KeyboardKey.Z;\n      break;\n    case ' ':\n      result.key = KeyboardKey.Space;\n      break;\n    case 'ESCAPE':\n      result.key = KeyboardKey.Escape;\n      result.characters = '';\n      break;\n    case 'BACKSPACE':\n      result.key = KeyboardKey.Backspace;\n      result.characters = '';\n      break;\n    case 'DELETE':\n      result.key = KeyboardKey.Delete;\n      result.characters = '';\n      break;\n    case 'ENTER':\n      result.key = KeyboardKey.Enter;\n      result.characters = result.shiftIsHeld ? '\\u2028' : '\\n';\n      break;\n    case 'CONTROL':\n      result.key = KeyboardKey.Control;\n      result.characters = '';\n      break;\n    case 'ALT':\n      result.key = KeyboardKey.Option;\n      result.characters = '';\n      break;\n    case 'SHIFT':\n      result.key = KeyboardKey.Shift;\n      result.characters = '';\n      break;\n    case 'ARROWLEFT':\n      result.key = KeyboardKey.ArrowLeft;\n      result.characters = '';\n      break;\n    case 'ARROWRIGHT':\n      result.key = KeyboardKey.ArrowRight;\n      result.characters = '';\n      break;\n    case 'ARROWUP':\n      result.key = KeyboardKey.ArrowUp;\n      result.characters = '';\n      break;\n    case 'ARROWDOWN':\n      result.key = KeyboardKey.ArrowDown;\n      result.characters = '';\n      break;\n    case 'DEAD':\n      result.key = KeyboardKey.Unknown;\n      result.characters = '';\n      break;\n    default:\n      break;\n  }\n  return result;\n}\n", "import { getter } from '../reactor/decorate';\nimport type { Source } from '../streams';\nimport type { DesignBlockTypeLonghand } from '../types/blockTypes';\nimport {\n  NotificationType,\n  SceneLayoutNumeric,\n  type ClampArgs,\n  type ClampCameraCommandResult,\n  type DesignBlockId,\n  type KeyboardKeyEvent,\n  type MouseButtonEvent,\n  type MouseMoveEvent,\n  type SceneLayout,\n  type TouchPanEvent,\n  type TouchPinchEvent,\n  type TouchRotateEvent,\n  type UBQResult,\n  type Vec2\n} from '../types/engine';\nimport mapToEngineKey from '../utils/mapToEngineKey';\nimport type { UbiqueEngine } from './ubique';\nimport type { UBQ } from './ubq_binding';\nimport { unpackResult } from './ubq_result';\n\n/**\n * Wrapper around Ubique that removes all the C++ weirdness\n * @internal\n */\nexport default class LegacyAPI {\n  private ubique: UbiqueEngine;\n\n  constructor(ubq: UBQ) {\n    this.ubique = ubq.getInternalAPI();\n  }\n\n  dispose() {\n    this.ubique.delete();\n  }\n\n  setErrorCallback(\n    callback: (buffer: string) => void,\n    abortOnError: boolean\n  ): void {\n    this.ubique.setErrorCallback(callback, abortOnError);\n  }\n\n  notificationStream: Source<{\n    type: 'Information' | 'Warning' | 'Error';\n    i18n: string;\n  }> = (handler) => {\n    const disposable = this.ubique.addEventCallback('NotificationEvent', (e) =>\n      handler({\n        type: NotificationType[e.type] as 'Information' | 'Warning' | 'Error',\n        i18n: e.i18n\n      })\n    );\n    return () => {\n      disposable.dispose();\n      disposable.delete();\n    };\n  };\n\n  designElementLifecycleStream =\n    (\n      event:\n        | 'DesignBlockAddedEvent'\n        | 'DesignBlockUpdatedEvent'\n        | 'DesignBlockRemovedEvent'\n    ): Source<{ entity: DesignBlockId; typeName: string }> =>\n    (handler) => {\n      const disposable = this.ubique.addEventCallback(event, handler);\n      return () => {\n        disposable.dispose();\n        disposable.delete();\n      };\n    };\n\n  historyStream: Source<void> = (handler) => {\n    const disposable = this.ubique.addEventCallback(\n      'HistoryUpdatedEvent',\n      handler\n    );\n    return () => {\n      disposable.dispose();\n      disposable.delete();\n    };\n  };\n\n  @getter\n  getSelectedText(): string {\n    return unpackResult(this.ubique.getSelectedText());\n  }\n\n  @getter\n  hasComponent(id: DesignBlockId, component: string): boolean {\n    return unpackResult(this.ubique.hasComponent(id, component));\n  }\n\n  @getter\n  getValue<T>(id: DesignBlockId, component: string, keyPath: string): T {\n    return unpackResult<T>(this.ubique.getValue<T>(id, component, keyPath));\n  }\n\n  execute(\n    command: 'cesdk/clampCameraAndRender',\n    args: ClampArgs\n  ): Promise<ClampCameraCommandResult>;\n  execute(command: 'cesdk/getCapabilitiesInfo'): Promise<string>;\n  execute(command: 'cesdk/getVersionInfo'): Promise<string>;\n  /**\n   * @deprecated Replace with EditorAPI commands\n   *\n   * Used in UndoManager\n   */\n  execute(\n    command: 'ubq/editor/history/createSnapshot',\n    args: [name: string, resyncCamera: boolean]\n  ): Promise<void>;\n  /**\n   * @deprecated Use BlockAPI instead\n   *\n   * Used in ImagePositionTransform\n   */\n  execute(\n    command: 'ubq/editor/setAbsoluteCropTranslation',\n    args: { value: Vec2 }\n  ): Promise<void>;\n  /**\n   * @deprecated Use BlockAPI instead\n   *\n   * Used in CropAreaTransform\n   */\n  execute(\n    command: 'ubq/editor/setCropAreaSize',\n    args: { size: Vec2 }\n  ): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(\n    command: 'ubq/inputs/keyboardkey',\n    arg: KeyboardKeyEvent\n  ): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(\n    command: 'ubq/inputs/mousebutton',\n    arg: MouseButtonEvent\n  ): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(command: 'ubq/inputs/mousemove', arg: MouseMoveEvent): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(\n    command: 'ubq/inputs/touchrotate',\n    arg: TouchRotateEvent\n  ): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(command: 'ubq/inputs/touchpan', arg: TouchPanEvent): Promise<void>;\n  /**\n   * Send input to the engine. Not exposed externally, can remain a command\n   */\n  execute(\n    command: 'ubq/inputs/touchpinch',\n    arg: TouchPinchEvent\n  ): Promise<void>;\n  /**\n   * @deprecated Used by copy/paste, replace with method on UBQ (sync or async).\n   * Copy/paste is otherwise not available to customers\n   * BlockAPI.loadFromString\n   *\n   * Used in Facade.ubqExecute\n   */\n  execute(\n    command: 'ubq/loadElements',\n    args: { elementsContent: string; setHidden: boolean }\n  ): Promise<\n    {\n      id: DesignBlockId;\n      sourceId: DesignBlockId;\n      sourceParent: DesignBlockId;\n    }[]\n  >;\n  execute(command: 'ubq/render'): Promise<void>;\n  /**\n   * @deprecated Replace with synchronous method on UBQ or with a property setter on the scene\n   */\n  execute(\n    command: 'ubq/scene/changeLayout',\n    args: [\n      sceneId: DesignBlockId,\n      layout: SceneLayoutNumeric,\n      spacing: number,\n      spacingInScreenSpace: boolean\n    ]\n  ): Promise<void>;\n  /**\n   * @deprecated Replace usage with BlockApi.findAll, only used in useAllDesignElements hook\n   * Currently this is the only way to get the selectable design elements\n   */\n  execute(command: 'ubq/scene/getAll'): Promise<\n    Array<{\n      id: DesignBlockId;\n      typeId: DesignBlockTypeLonghand;\n      isSelectable?: boolean;\n    }>\n  >;\n  /**\n   * @deprecated\n   * TextInputSystem is still completely missing from the new API\n   */\n  execute(command: 'ubq/text/compositionEnd'): Promise<void>;\n  /**\n   * @deprecated\n   * TextInputSystem is still completely missing from the new API\n   */\n  execute(command: 'ubq/text/compositionStart'): Promise<void>;\n  /**\n   * @deprecated\n   * TextInputSystem is still completely missing from the new API\n   */\n  execute(\n    command: 'ubq/text/compositionUpdate',\n    arg: { value: string; cursorPosition: number }\n  ): Promise<void>;\n  /**\n   * @deprecated\n   * TextInputSystem is still completely missing from the new API\n   * Already exists in sync api\n   */\n  execute(command: 'ubq/text/selectAllText'): Promise<void>;\n  execute<T>(command: string, args?: unknown): Promise<T> {\n    let executeResult: UBQResult<void>;\n    const resultPromise = new Promise<T>((resolve, reject) => {\n      executeResult = this.ubique.ubqExecute<T>(command, args, (rawResult) => {\n        try {\n          const result = unpackResult(rawResult);\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n    // This will throw when there was an error while queueing the command\n    unpackResult(executeResult!);\n    return resultPromise;\n  }\n\n  /**\n   * Convencience helper to send keyboard events into the engine\n   */\n  sendKey(event: {\n    key: string;\n    shiftKey: boolean;\n    metaKey: boolean;\n    ctrlKey: boolean;\n    altKey: boolean;\n  }) {\n    return this.execute('ubq/inputs/keyboardkey', mapToEngineKey(event));\n  }\n\n  /** Convenience helper to avoid having to work with numeric scene layouts in the CESDK */\n  changeSceneLayout(\n    scene: DesignBlockId,\n    layout: SceneLayout,\n    spacing: number,\n    spacingInScreenSpace: boolean\n  ) {\n    return this.execute('ubq/scene/changeLayout', [\n      scene,\n      SceneLayoutNumeric[layout],\n      spacing,\n      spacingInScreenSpace\n    ]);\n  }\n}\n", "import assert, { string } from './assert';\nimport { getter, setter } from './reactor/decorate';\nimport type { UBQ } from './ubq/ubq_binding';\nimport { unpackResult } from './ubq/ubq_result';\nimport cppVectorToArray from './utils/cppVectorToArray';\n\n/**\n * @public\n */\nexport default class VariableAPI {\n  /** @internal */\n  #ubq: UBQ;\n\n  /** @internal */\n  constructor(ubq: UBQ) {\n    this.#ubq = ubq;\n  }\n\n  /**\n   * Get all text variables currently stored in the engine.\n   * @returns Return a list of variable names\n   */\n  @getter\n  findAll(): string[] {\n    return cppVectorToArray(this.#ubq.findAllVariables());\n  }\n\n  /**\n   * Set a text variable.\n   * @param key - The variable's key.\n   * @param value - The text to replace the variable with.\n   */\n  @setter\n  setString(key: string, value: string): void {\n    assert('key', key, string());\n    assert('value', value, string());\n    return unpackResult(this.#ubq.setVariableString(key, value));\n  }\n\n  /**\n   * Set a text variable.\n   * @param key - The variable's key.\n   * @returns  The text value of the variable.\n   */\n  @getter\n  getString(key: string): string {\n    assert('key', key, string());\n    return unpackResult(this.#ubq.getVariableString(key));\n  }\n\n  /**\n   * Destroy a text variable.\n   * @param key - The variable's key.\n   */\n  @setter\n  remove(key: string): void {\n    assert('key', key, string());\n    return unpackResult(this.#ubq.removeVariable(key));\n  }\n}\n", "import AssetAPI from './AssetAPI';\nimport type { Configuration } from './configuration';\nimport EditorAPI from './EditorAPI';\nimport LegacyAPI from './ubq/LegacyAPI';\nimport type { UBQ } from './ubq/ubq_binding';\nimport VariableAPI from './VariableAPI';\n\nconst isDevelopment = IMGLY_NODE_ENV === 'development';\n\n/**\n * Method for low-level configuration of the Engine. Anything not UI-related\n * that is coming from the user config goes into the engine through here.\n */\nexport default function configureEngine(ubq: UBQ, config: Configuration) {\n  const editor = new EditorAPI(ubq);\n  const assets = new AssetAPI(ubq);\n\n  editor.setRole(config.role ?? 'Creator');\n\n  if (isDevelopment) {\n    const legacyApi = new LegacyAPI(ubq);\n    void legacyApi.execute('cesdk/getVersionInfo').then((info) =>\n      // eslint-disable-next-line no-console\n      console.debug(info)\n    );\n    void legacyApi.execute('cesdk/getCapabilitiesInfo').then((info) =>\n      // eslint-disable-next-line no-console\n      console.debug(info)\n    );\n    legacyApi.dispose();\n  }\n  editor.setSettingString('basePath', config.baseURL);\n\n  editor.setSettingBool(\n    'showBuildVersion',\n    isDevelopment || IMGLY_INTERNAL_DEPLOY\n  );\n\n  if (config.featureFlags?.preventScrolling) {\n    editor.setSettingBool('touch/singlePointPanning', false);\n    editor.setSettingBool('touch/dragStartCanSelect', false);\n  }\n\n  assets.addLocalSource('ly.img.text');\n\n  initializeFeatures();\n\n  initializeVariables();\n\n  editor.startTracking(config.license, config.userId ?? '');\n\n  // helpers:\n\n  function initializeFeatures() {\n    if (IMGLY_INTERNAL_DEPLOY || isDevelopment) {\n      editor.setSettingBool('features/hspSelectiveAdjustmentsEnabled', false);\n      editor.setSettingBool('features/templatingEnabled', true);\n    }\n\n    const singlePageMode = !!config.featureFlags?.singlePageMode;\n    editor.setSettingBool('features/singlePageModeEnabled', singlePageMode);\n\n    editor.setSettingBool('features/effectsEnabled', true);\n  }\n\n  function initializeVariables() {\n    const api = new VariableAPI(ubq);\n    if (\n      IMGLY_INTERNAL_DEPLOY ||\n      isDevelopment ||\n      (typeof window !== 'undefined' && window.Cypress)\n    ) {\n      api.setString('company_name', 'img.ly');\n      api.setString('first_name', 'Charly');\n      api.setString('last_name', 'Williams');\n      api.setString('address', '742 Evergreen Terrace');\n      api.setString('city', 'Springfield');\n    }\n  }\n}\n", "import type { Configuration } from './configuration';\nimport type { UBQ } from './ubq/ubq_binding';\nimport { unpackResult } from './ubq/ubq_result';\n\nconst licenseEndpoint =\n  IMGLY_NODE_ENV === 'development'\n    ? 'https://api.staging.img.ly/activate'\n    : 'https://api.img.ly/activate';\n\ntype LicenseReponse =\n  | { status: 'valid'; license: string }\n  | { status: 'invalid' | 'expired' };\n\n/**\n * Takes a config object and returns a promise that resolves to a license key.\n *\n * It will take the license from `config.license` and depending on its length,\n * either return it as a license key, or interpret it as an api key and use that\n * to fetch a license from the license endpoint.\n *\n * If `config.license` is missing, it will **synchronously** throw an error.\n *\n * There is no guarantee that the returned license key is valid.\n * That needs to be further used with `ubq.unlockWithLicense()`.\n * @internal\n */\nexport function downloadAndCheckLicense(\n  config: Configuration,\n  fetchImpl: typeof window.fetch = fetch\n): Promise<string> {\n  // The function is not async, because we want to throw this error synchronously.\n  if (!config.license) {\n    throw new Error('Missing license key in config');\n  }\n\n  const license =\n    config.license.length < 128\n      ? fetchImpl(licenseEndpoint, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            apiKey: config.license,\n            userId: config.userId\n          })\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error(\n                `Unfortunately we are experiencing a server down time and your License key cannot be validated. We're already working on a fix and will restore service soon. Should services not restore within the hour, kindly get in touch with our support team.`\n              );\n            }\n          })\n          .then((data: LicenseReponse) => {\n            if (data.status === 'valid') {\n              return data.license;\n            } else if (data.status === 'expired') {\n              throw new Error(\n                'Thanks for using IMG.LY for creative editing. Please note that your license file or commercial use is expired. Please get in touch with our sales team to discuss extension of your commercial license.'\n              );\n            } else {\n              throw new Error(\n                'The License Key (API Key) you are using to access the IMG.LY SDK is invalid. Please ensure that you are using the license key tied to your subscription and get in touch with our support team.'\n              );\n            }\n          })\n      : Promise.resolve(config.license);\n\n  return license;\n}\n\n/**\n * Unlocks a UBQ instance with a given license key.\n * @param ubq - The UBQ instance to unlock.\n * @param license - The license key to unlock the UBQ instance with. Don't pass and API key\n * @internal\n */\nexport function unlockUbq(ubq: UBQ, license: string): void {\n  if (!license) throw new Error('Missing license key');\n  unpackResult(ubq.unlockWithLicense(license));\n}\n", "/// <reference types=\"emscripten\" />\n/// <reference path=\"../../generated-alias.d.ts\" />\n\nimport CESDK from '@generated/cesdk';\nimport CESDK_DATA from '@generated/cesdk.data';\nimport CESDK_WASM from '@generated/cesdk.wasm';\nimport type { UBQResult } from '../types/engine';\nimport type { UBQ } from './ubq_binding';\n\ninterface UbqWasmModule extends EmscriptenModule {\n  // This is `unknown` instead of OffscreenCanvas, since this file is\n  // used from @cesdk/node too\n  specialHTMLTargets: { [k: string]: HTMLElement | unknown };\n  emscripten_ubq_settings_forceWebGL1: boolean;\n  emscripten_ubq_asyncFetchManager: {\n    // See packages/ubq-core/src/ubq/fetch/emscripten/FetchAsync.pre.ts\n    setFetch(impl: typeof fetch): void;\n  };\n  createEngine(\n    canvasTarget: 'canvas' | string,\n    audioOutput: 'none' | 'auto'\n  ): UBQResult<UBQ>;\n}\n\nconst CESDK_JS: EmscriptenModuleFactory<UbqWasmModule> = CESDK;\n\nexport { CESDK_JS, CESDK_WASM, CESDK_DATA };\n", "// https://stackoverflow.com/a/32598826\nexport const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nconst userAgent = (canUseDOM && navigator && navigator.userAgent) || '';\n\nexport const isEdge = userAgent.indexOf('Edge') !== -1;\n\nexport const isIE = !!userAgent.match(/msie|trident/i);\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent#making_the_best_of_user_agent_sniffing\nexport const isMobileWebKit =\n  /\\b(iPad|iPhone|iPod)\\b/.test(userAgent) &&\n  /WebKit/.test(userAgent) &&\n  !/Edge/.test(userAgent) &&\n  (typeof window === 'undefined' || !('MSStream' in window));\n", "import type { Configuration } from './configuration';\nimport configureEngine from './configure';\nimport { downloadAndCheckLicense, unlockUbq } from './license';\nimport { CESDK_DATA, CESDK_JS, CESDK_WASM } from './ubq/module';\nimport type { UBQ } from './ubq/ubq_binding';\nimport { unpackResult } from './ubq/ubq_result';\nimport { isMobileWebKit } from './ui/browser';\n\ndeclare global {\n  interface EmscriptenModule {\n    printWithColors?: boolean;\n    wasmMemory?: WebAssembly.Memory;\n  }\n}\n\nconst changeAssetPath = (initialPath: string, assetPath?: string) => {\n  if (assetPath != null) {\n    const fileName = initialPath.split('/').pop();\n    return [assetPath, fileName].join('');\n  }\n\n  return new URL(initialPath, window.location.origin);\n};\n\nfunction getWasmMemory() {\n  try {\n    return new WebAssembly.Memory({\n      initial: getWasmPageLimitFromMegabytes(isMobileWebKit ? 512 : 32),\n      maximum: getWasmPageLimitFromMegabytes(2048)\n    });\n  } catch (e) {\n    return new WebAssembly.Memory({\n      initial: getWasmPageLimitFromMegabytes(32),\n      maximum: getWasmPageLimitFromMegabytes(2048)\n    });\n  }\n}\n\nfunction getWasmPageLimitFromMegabytes(limitInMegabytes: number): number {\n  return (limitInMegabytes * 1024 * 1024) / 65536;\n}\n\nexport default async function init(\n  canvasElement: HTMLCanvasElement | OffscreenCanvas,\n  config: Configuration\n) {\n  const { core } = config;\n  const log = config.logger;\n  const wasmPath = changeAssetPath(CESDK_WASM, core.baseURL).toString();\n  const dataPath = changeAssetPath(CESDK_DATA, core.baseURL).toString();\n  const targetIsElectron = /electron/i.test(navigator.userAgent);\n  // We define the `getPreloadedPackage` callback only for use with Electron,\n  // to avoid the Electron renderer process attempting to access the Node file system API (fs).\n\n  const license = downloadAndCheckLicense(config);\n\n  const getPreloadedPackage = targetIsElectron\n    ? await fetch(dataPath, { credentials: 'same-origin' })\n        .then((res) => res.arrayBuffer())\n        .then((buffer) => {\n          // eslint-disable-next-line @typescript-eslint/no-shadow\n          return function getPreloadedPackage(\n            name: string,\n            size: number\n          ): ArrayBuffer {\n            if (name !== dataPath) {\n              // @ts-ignore @types/emscripten is wrong\n              return null;\n            }\n            if (size === buffer.byteLength) {\n              return buffer;\n            } else {\n              throw new Error(\n                `Attempt to get preloaded package of unknown name or size: ${name} ${size}`\n              );\n            }\n          };\n        })\n    : undefined;\n\n  return new Promise<UBQ>((resolveInit, rejectInit) => {\n    const emscriptenConfig: Partial<EmscriptenModule> = {\n      getPreloadedPackage,\n      locateFile: (path: string, prefix: string) => {\n        if (path.endsWith('.wasm')) {\n          return wasmPath;\n        }\n        if (path.endsWith('.data')) {\n          return dataPath;\n        }\n\n        return prefix + path;\n      },\n      print: (message: string) => {\n        if (message && message !== 'undefined') {\n          log(message, 'Info');\n        }\n      },\n      printErr: (message: string) => {\n        if (message && message !== 'undefined') {\n          log(message, 'Error');\n        }\n      },\n      logReadFiles: false,\n      printWithColors: true,\n      wasmMemory: getWasmMemory()\n    };\n\n    CESDK_JS(emscriptenConfig)\n      .then(async (ModuleInstance) => {\n        // Note: Video encoding relies on the OffscreenCanvas being available from this dictionary.\n        ModuleInstance.specialHTMLTargets['!canvas'] = canvasElement;\n        const target = '!canvas';\n        // Note: Mobile WebKit has a bug in its WebGL 2.0 implementation that causes\n        // the glReadPixels call during the export to lead to a page reload.\n        // However, when forcing WebGL 1.0, we end up with random text rendering issues in mobile Safari.\n        // This issue is slightly more critical than the broken in-browser image exports, so we keep\n        // WebGL 2.0 enabled by default for now.\n        ModuleInstance.emscripten_ubq_settings_forceWebGL1 =\n          isMobileWebKit || !!config?.forceWebGL1;\n\n        const engine = unpackResult(\n          ModuleInstance.createEngine(target, config.audioOutput ?? 'auto')\n        );\n\n        unlockUbq(engine, await license);\n        configureEngine(engine, config);\n        resolveInit(engine);\n      })\n      .catch(rejectInit);\n  });\n}\n", "import EditorAPI, {\n  type SettingsBool,\n  type SettingsColor,\n  type SettingsEnum,\n  type SettingsFloat,\n  type SettingsString\n} from '../EditorAPI';\n\n/**\n * Export all current settings.\n * @param editor - The EditorAPI wrapping a UBQ instance.\n * @returns The settings as a key value map.\n * @internal\n */\nexport function exportSettings(editor: EditorAPI): Map<string, any> {\n  const result = new Map<string, any>();\n  const settings = editor.findAllSettings();\n  for (const setting of settings) {\n    switch (editor.getSettingType(setting)) {\n      case 'Bool':\n        result.set(setting, editor.getSettingBool(setting as SettingsBool));\n        break;\n      case 'Int':\n        result.set(setting, editor.getSettingInt(setting));\n        break;\n      case 'Float':\n        result.set(setting, editor.getSettingFloat(setting as SettingsFloat));\n        break;\n      case 'String':\n        result.set(setting, editor.getSettingString(setting as SettingsString));\n        break;\n      case 'Color':\n        result.set(setting, editor.getSettingColor(setting as SettingsColor));\n        break;\n      case 'Enum':\n        result.set(\n          setting,\n          editor.getSettingEnum(setting as keyof SettingsEnum)\n        );\n        break;\n      default:\n        break;\n    }\n  }\n  return result;\n}\n\n/**\n * Import settings from a key value map.\n * @param editor - The EditorAPI wrapping a UBQ instance.\n * @param settings - The settings to import.\n * @internal\n */\nexport function importSettings(\n  editor: EditorAPI,\n  settings: Map<string, any>\n): void {\n  for (const [key, value] of settings) {\n    switch (editor.getSettingType(key)) {\n      case 'Bool':\n        editor.setSettingBool(key as SettingsBool, value);\n        break;\n      case 'Int':\n        editor.setSettingInt(key, value);\n        break;\n      case 'Float':\n        editor.setSettingFloat(key as SettingsFloat, value);\n        break;\n      case 'String':\n        editor.setSettingString(key as SettingsString, value);\n        break;\n      case 'Color':\n        editor.setSettingColor(key as SettingsColor, value);\n        break;\n      case 'Enum':\n        {\n          const _key = key as keyof SettingsEnum;\n          const _value = value as SettingsEnum[typeof _key];\n          editor.setSettingEnum(_key, _value);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n}\n", "import BlockAPI from '../BlockAPI';\nimport EditorAPI from '../EditorAPI';\nimport SceneAPI from '../SceneAPI';\nimport type { Configuration } from '../configuration';\nimport init from '../init';\nimport type { ChannelSync } from '../streams/Channel';\nimport MimeType from '../types/MimeType';\nimport type { DesignBlockId } from '../types/engine';\nimport type { Scope } from '../types/scope';\nimport { importSettings } from './transferSettings';\nimport type { WorkerOptions } from './workerTypes';\n\n/**\n * If the number of frames in the encoder queue is `>= MAX_QUEUE_SIZE`,\n * skip rendering new frames;\n */\nconst MAX_QUEUE_SIZE = 10;\n\n/** @internal */\nexport type ExportOptions = {\n  block?: DesignBlockId;\n  h264Profile?: number;\n  h264Level?: number;\n  videoBitrate?: number;\n  audioBitrate?: number;\n  timeOffset?: number;\n  duration?: number;\n  width?: number;\n  height?: number;\n  framerate?: number;\n};\n\ndeclare global {\n  /* eslint-disable no-var, vars-on-top */\n  /**\n   * Used to communicate the status to C++ in CodecService-emscripten\n   * from the exportVideo task\n   */\n  var ubq_browserTabHidden: boolean;\n  /* eslint-enable no-var, vars-on-top */\n}\n\nglobalThis.ubq_browserTabHidden = true;\n\n/**\n * Instantiates an engine with an offscreencavas and exports a video.\n * @internal\n */\nexport default async function exportVideo(\n  config: Configuration & { abortSignal?: AbortSignal },\n  settings: Map<string, any>,\n  sceneString: string,\n  options: ExportOptions,\n  workerOptions: WorkerOptions,\n  runOptions: {\n    onProgress: (\n      renderedFrames: number,\n      encodedFrames: number,\n      totalFrames: number\n    ) => void;\n    visibility?: ChannelSync<boolean>;\n    inactivityTimeout: number;\n  }\n): Promise<Uint8Array> {\n  /** Number of frames in the encode queue (rendered, but not encoded) */\n  let queueSize = 0;\n\n  let lastActivity: number | null = null;\n\n  let rejectExport: (reason?: any) => void;\n\n  let timeout: ReturnType<typeof setTimeout>;\n\n  const visibilityChannel = runOptions.visibility ?? defaultVisibility;\n\n  const inactivityTimeout = runOptions.inactivityTimeout;\n\n  const unsubscribeVisibility = visibilityChannel.subscribe(() => {\n    // Reset the inactivity timer to avoid aborting the export right when the tab becomes visible again.\n    if (lastActivity !== null) {\n      lastActivity = Date.now();\n    }\n    globalThis.ubq_browserTabHidden = !visibilityChannel.value();\n  });\n\n  let disposeEngine: (() => void) | null = null;\n\n  function dispose() {\n    clearTimeout(timeout);\n    unsubscribeVisibility();\n    disposeEngine?.();\n  }\n\n  try {\n    const canvas = new OffscreenCanvas(64, 64);\n    const ubq = await init(canvas, { ...config, audioOutput: 'none' });\n    const sceneApi = new SceneAPI(ubq);\n    const blockApi = new BlockAPI(ubq);\n    const editorApi = new EditorAPI(ubq);\n\n    disposeEngine = () => {\n      ubq.delete();\n    };\n\n    importSettings(editorApi, settings);\n\n    if (workerOptions?.trackingMetadata) {\n      editorApi.setTrackingMetadata(workerOptions.trackingMetadata);\n    }\n\n    if (workerOptions?.uriResolver) {\n      // - The (0, eval) is required to avoid \"direct eval\"\n      //   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_direct_eval!\n      // - The \"use strict\" is required to avoid accidental pollution of the\n      //   global scope\n      // - The parentheses are necessary to ensure that a function definition is\n      //   evaluated as an expression and not as a statement\n      //\n      // eslint-disable-next-line no-eval\n      const uriResolver = (0, eval)(\n        `'use strict';(${workerOptions.uriResolver})`\n      );\n\n      function resolverWithError(\n        uri: string,\n        defaultURIResolver: (uri: string) => string\n      ) {\n        try {\n          return uriResolver(uri, defaultURIResolver);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Error during execution of URI resolver: ${e}.\\nMake sure the url resolver function does not reference any external variables. Falling back to default URI resolver.`\n          );\n          return defaultURIResolver(uri);\n        }\n      }\n      editorApi.setURIResolver(resolverWithError);\n    }\n\n    if (workerOptions?.scopes) {\n      for (const [scope, value] of Object.entries(workerOptions.scopes)) {\n        editorApi.setGlobalScope(scope as Scope, value);\n      }\n    }\n\n    if (workerOptions?.buffers) {\n      editorApi.restoreBuffers(workerOptions.buffers);\n    }\n\n    const sceneId = await sceneApi.loadFromString(sceneString);\n    const exportVideoDuration = options.block\n      ? blockApi.getDuration(options.block)\n      : blockApi.getTotalSceneDuration(sceneApi.get()!);\n\n    function update() {\n      // Don't abort the export if the tab is hidden.\n      if (visibilityChannel.value() === true && lastActivity !== null) {\n        if (Date.now() - lastActivity > inactivityTimeout) {\n          rejectExport(new Error('Video export timed out due to inactivity.'));\n          return;\n        }\n      }\n\n      if (queueSize < MAX_QUEUE_SIZE) {\n        ubq.update();\n      }\n      timeout = setTimeout(update, 1);\n    }\n\n    update();\n\n    const data = await new Promise<Uint8Array>((resolve, reject) => {\n      rejectExport = reject;\n\n      config.abortSignal?.addEventListener('abort', () => {\n        reject(new Error('AbortSignal received'));\n      });\n\n      ubq.exportVideoToBuffer(\n        options.block ?? sceneId,\n        options.timeOffset ?? 0,\n        options.duration ?? exportVideoDuration,\n        MimeType.Mp4,\n        (renderedFrames, encodedFrames, totalFrames) => {\n          queueSize = renderedFrames - encodedFrames;\n          lastActivity = Date.now();\n          runOptions?.onProgress?.(renderedFrames, encodedFrames, totalFrames);\n        },\n        (exportResult) => {\n          if ('error' in exportResult) {\n            reject(exportResult.error);\n          } else {\n            resolve(exportResult);\n          }\n        },\n        {\n          h264Profile: options.h264Profile ?? 77, // Main\n          h264Level: options.h264Level ?? 52, // 5.2\n          framerate: options.framerate ?? 30,\n          videoBitrate: options.videoBitrate ?? 0,\n          audioBitrate: options.audioBitrate ?? 0,\n          useTargetSize:\n            options.width !== undefined && options.height !== undefined,\n          targetWidth: options.width ?? 0,\n          targetHeight: options.height ?? 0\n        }\n      );\n    });\n\n    const videoData = new Uint8Array(data.byteLength);\n    videoData.set(data);\n    dispose();\n    return videoData;\n  } catch (e) {\n    dispose();\n    throw e;\n  }\n}\n\nconst defaultVisibility: ChannelSync<boolean> = {\n  value() {\n    if (typeof document === 'undefined') {\n      return true;\n    } else {\n      return document.visibilityState === 'visible';\n    }\n  },\n  subscribe(handler) {\n    if (typeof document === 'undefined') {\n      return () => {};\n    } else {\n      const handleChange = () => {\n        handler(document.visibilityState === 'visible');\n      };\n      document.addEventListener('visibilitychange', handleChange);\n      return () => {\n        document.removeEventListener('visibilitychange', handleChange);\n      };\n    }\n  }\n};\n", "import type { Configuration } from '../configuration';\nimport { LogLevel } from '../types/Logger';\nimport type MimeType from '../types/MimeType';\nimport type { TrackingMetadata } from '../types/engine';\nimport type { Scope } from '../types/scope';\nimport type { Buffer } from '../ubq/ubq_binding';\nimport type { ExportOptions } from './exportVideo';\n\n/** A version of the Configuration type with non-transferable data removed */\nexport type WorkerConfiguration = Omit<Configuration, 'logger'> & {\n  logger?: undefined;\n};\n\nexport type SetVisibility = {\n  msg: 'setVisibility';\n  visible: boolean;\n};\n\nexport function setVisibility(visible: boolean): SetVisibility {\n  return { msg: 'setVisibility', visible };\n}\n\n/**\n * Data needed for setting up the engine in the worker that is _not_ covered by the config\n * @internal\n * */\nexport type WorkerOptions = {\n  trackingMetadata?: TrackingMetadata;\n  scopes?: { [scope in Scope]: 'Allow' | 'Deny' | 'Defer' };\n  buffers?: Buffer[];\n  uriResolver?: string;\n};\n\nnamespace ExportVideo {\n  export type Start = {\n    msg: 'exportVideo';\n    config: WorkerConfiguration;\n    engineSettings: Map<string, any>;\n    sceneString: string;\n    exportOptions: ExportOptions;\n    inactivityTimeout: number;\n    workerOptions: WorkerOptions;\n  };\n\n  export type Abort = {\n    msg: 'exportVideoAbort';\n  };\n\n  export type Finished = {\n    msg: 'exportVideoFinished';\n    data: Uint8Array;\n    mimeType: MimeType;\n  };\n\n  export type Error = {\n    msg: 'exportVideoError';\n    error: unknown;\n  };\n\n  export type Progress = {\n    msg: 'exportVideoProgress';\n    totalFrames: number;\n    renderedFrames: number;\n    encodedFrames: number;\n  };\n\n  export type Log = {\n    msg: 'exportLog';\n    logLevel?: LogLevel;\n    message: string;\n  };\n\n  export type Command = Start | Abort;\n\n  export type Reponse = Finished | Error | Progress | Log;\n\n  export function start(args: Omit<Start, 'msg'>): Start {\n    return { ...args, msg: 'exportVideo' };\n  }\n  export function abort(): Abort {\n    return { msg: 'exportVideoAbort' };\n  }\n  export function finished(args: Omit<Finished, 'msg'>): Finished {\n    return { ...args, msg: 'exportVideoFinished' };\n  }\n  export function error(args: Omit<Error, 'msg'>): Error {\n    return { ...args, msg: 'exportVideoError' };\n  }\n  export function progress(args: Omit<Progress, 'msg'>): Progress {\n    return { ...args, msg: 'exportVideoProgress' };\n  }\n  export function log(args: Omit<Log, 'msg'>): Log {\n    return { ...args, msg: 'exportLog' };\n  }\n}\n\ntype WorkerCommand = ExportVideo.Command | SetVisibility;\n\ntype WorkerResponse = ExportVideo.Reponse;\n\nexport { ExportVideo };\nexport type { WorkerCommand, WorkerResponse };\n", "import { makeValueChannel } from '../streams/Channel';\nimport type Logger from '../types/Logger';\nimport MimeType from '../types/MimeType';\nimport exportVideo from './exportVideo';\nimport {\n  ExportVideo,\n  type WorkerCommand,\n  type WorkerResponse\n} from './workerTypes';\n\ndeclare const WorkerGlobalScope: unknown;\n\ndeclare const self: {\n  onmessage?: (ev: MessageEvent<WorkerCommand>) => void;\n  postMessage(message: WorkerResponse): void;\n};\n\n/*\n * This file, imported from index.js lets us use the whole @cesdk/engine module\n * as the source for a web worker, not requiring a complicated separate module.\n */\n\nif (typeof WorkerGlobalScope !== 'undefined') {\n  const visibility = makeValueChannel(() => true);\n  const exportVideoAbortController = new AbortController();\n\n  self.onmessage = async ({ data }) => {\n    const logger: Logger = (message, logLevel) => {\n      self.postMessage(ExportVideo.log({ logLevel, message }));\n    };\n\n    if (data.msg === 'setVisibility') {\n      visibility.update(data.visible);\n    } else if (data.msg === 'exportVideo') {\n      exportVideo(\n        {\n          ...data.config,\n          logger,\n          abortSignal: exportVideoAbortController.signal\n        },\n        data.engineSettings,\n        data.sceneString,\n        data.exportOptions,\n        data.workerOptions,\n        {\n          onProgress: (renderedFrames, encodedFrames, totalFrames) => {\n            self.postMessage(\n              ExportVideo.progress({\n                renderedFrames,\n                encodedFrames,\n                totalFrames\n              })\n            );\n          },\n          visibility,\n          inactivityTimeout: data.inactivityTimeout\n        }\n      ).then(\n        (videoData) => {\n          self.postMessage(\n            ExportVideo.finished({ data: videoData, mimeType: MimeType.Mp4 })\n          );\n        },\n        (error) => {\n          self.postMessage(ExportVideo.error({ error }));\n        }\n      );\n    } else if (data.msg === 'exportVideoAbort') {\n      exportVideoAbortController.abort();\n    }\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,YAAQ,aAAa;AACrB,YAAQ,cAAc;AACtB,YAAQ,gBAAgB;AAExB,QAAI,SAAS,CAAC;AACd,QAAI,YAAY,CAAC;AACjB,QAAI,MAAM,OAAO,eAAe,cAAc,aAAa;AAE3D,QAAI,OAAO;AACX,SAAS,IAAI,GAAG,MAAM,KAAK,QAAQ,IAAI,KAAK,EAAE,GAAG;AAC/C,aAAO,CAAC,IAAI,KAAK,CAAC;AAClB,gBAAU,KAAK,WAAW,CAAC,CAAC,IAAI;AAAA,IAClC;AAHS;AAAO;AAOhB,cAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAC/B,cAAU,IAAI,WAAW,CAAC,CAAC,IAAI;AAE/B,aAAS,QAAS,KAAK;AACrB,UAAIA,OAAM,IAAI;AAEd,UAAIA,OAAM,IAAI,GAAG;AACf,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AAIA,UAAI,WAAW,IAAI,QAAQ,GAAG;AAC9B,UAAI,aAAa,GAAI,YAAWA;AAEhC,UAAI,kBAAkB,aAAaA,OAC/B,IACA,IAAK,WAAW;AAEpB,aAAO,CAAC,UAAU,eAAe;AAAA,IACnC;AAGA,aAAS,WAAY,KAAK;AACxB,UAAI,OAAO,QAAQ,GAAG;AACtB,UAAI,WAAW,KAAK,CAAC;AACrB,UAAI,kBAAkB,KAAK,CAAC;AAC5B,cAAS,WAAW,mBAAmB,IAAI,IAAK;AAAA,IAClD;AAEA,aAAS,YAAa,KAAK,UAAU,iBAAiB;AACpD,cAAS,WAAW,mBAAmB,IAAI,IAAK;AAAA,IAClD;AAEA,aAAS,YAAa,KAAK;AACzB,UAAI;AACJ,UAAI,OAAO,QAAQ,GAAG;AACtB,UAAI,WAAW,KAAK,CAAC;AACrB,UAAI,kBAAkB,KAAK,CAAC;AAE5B,UAAI,MAAM,IAAI,IAAI,YAAY,KAAK,UAAU,eAAe,CAAC;AAE7D,UAAI,UAAU;AAGd,UAAIA,OAAM,kBAAkB,IACxB,WAAW,IACX;AAEJ,UAAIC;AACJ,WAAKA,KAAI,GAAGA,KAAID,MAAKC,MAAK,GAAG;AAC3B,cACG,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,KAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,KACpC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IACrC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC;AACjC,YAAI,SAAS,IAAK,OAAO,KAAM;AAC/B,YAAI,SAAS,IAAK,OAAO,IAAK;AAC9B,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AAEA,UAAI,oBAAoB,GAAG;AACzB,cACG,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,IAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AACvC,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AAEA,UAAI,oBAAoB,GAAG;AACzB,cACG,UAAU,IAAI,WAAWA,EAAC,CAAC,KAAK,KAChC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK,IACpC,UAAU,IAAI,WAAWA,KAAI,CAAC,CAAC,KAAK;AACvC,YAAI,SAAS,IAAK,OAAO,IAAK;AAC9B,YAAI,SAAS,IAAI,MAAM;AAAA,MACzB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAiB,KAAK;AAC7B,aAAO,OAAO,OAAO,KAAK,EAAI,IAC5B,OAAO,OAAO,KAAK,EAAI,IACvB,OAAO,OAAO,IAAI,EAAI,IACtB,OAAO,MAAM,EAAI;AAAA,IACrB;AAEA,aAAS,YAAa,OAAO,OAAO,KAAK;AACvC,UAAI;AACJ,UAAI,SAAS,CAAC;AACd,eAASA,KAAI,OAAOA,KAAI,KAAKA,MAAK,GAAG;AACnC,eACI,MAAMA,EAAC,KAAK,KAAM,aAClB,MAAMA,KAAI,CAAC,KAAK,IAAK,UACtB,MAAMA,KAAI,CAAC,IAAI;AAClB,eAAO,KAAK,gBAAgB,GAAG,CAAC;AAAA,MAClC;AACA,aAAO,OAAO,KAAK,EAAE;AAAA,IACvB;AAEA,aAAS,cAAe,OAAO;AAC7B,UAAI;AACJ,UAAID,OAAM,MAAM;AAChB,UAAI,aAAaA,OAAM;AACvB,UAAI,QAAQ,CAAC;AACb,UAAI,iBAAiB;AAGrB,eAASC,KAAI,GAAGC,QAAOF,OAAM,YAAYC,KAAIC,OAAMD,MAAK,gBAAgB;AACtE,cAAM,KAAK,YAAY,OAAOA,IAAIA,KAAI,iBAAkBC,QAAOA,QAAQD,KAAI,cAAe,CAAC;AAAA,MAC7F;AAGA,UAAI,eAAe,GAAG;AACpB,cAAM,MAAMD,OAAM,CAAC;AACnB,cAAM;AAAA,UACJ,OAAO,OAAO,CAAC,IACf,OAAQ,OAAO,IAAK,EAAI,IACxB;AAAA,QACF;AAAA,MACF,WAAW,eAAe,GAAG;AAC3B,eAAO,MAAMA,OAAM,CAAC,KAAK,KAAK,MAAMA,OAAM,CAAC;AAC3C,cAAM;AAAA,UACJ,OAAO,OAAO,EAAE,IAChB,OAAQ,OAAO,IAAK,EAAI,IACxB,OAAQ,OAAO,IAAK,EAAI,IACxB;AAAA,QACF;AAAA,MACF;AAEA,aAAO,MAAM,KAAK,EAAE;AAAA,IACtB;AAAA;AAAA;;;ACrJA;AAAA;AACA,YAAQ,OAAO,SAAU,QAAQ,QAAQ,MAAM,MAAM,QAAQ;AAC3D,UAAI,GAAG;AACP,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,QAAQ;AACZ,UAAI,IAAI,OAAQ,SAAS,IAAK;AAC9B,UAAI,IAAI,OAAO,KAAK;AACpB,UAAI,IAAI,OAAO,SAAS,CAAC;AAEzB,WAAK;AAEL,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAO,OAAO,SAAS,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AAE3E,UAAI,KAAM,KAAM,CAAC,SAAU;AAC3B,YAAO,CAAC;AACR,eAAS;AACT,aAAO,QAAQ,GAAG,IAAK,IAAI,MAAO,OAAO,SAAS,CAAC,GAAG,KAAK,GAAG,SAAS,GAAG;AAAA,MAAC;AAE3E,UAAI,MAAM,GAAG;AACX,YAAI,IAAI;AAAA,MACV,WAAW,MAAM,MAAM;AACrB,eAAO,IAAI,OAAQ,IAAI,KAAK,KAAK;AAAA,MACnC,OAAO;AACL,YAAI,IAAI,KAAK,IAAI,GAAG,IAAI;AACxB,YAAI,IAAI;AAAA,MACV;AACA,cAAQ,IAAI,KAAK,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI;AAAA,IAChD;AAEA,YAAQ,QAAQ,SAAU,QAAQ,OAAO,QAAQ,MAAM,MAAM,QAAQ;AACnE,UAAI,GAAG,GAAG;AACV,UAAI,OAAQ,SAAS,IAAK,OAAO;AACjC,UAAI,QAAQ,KAAK,QAAQ;AACzB,UAAI,QAAQ,QAAQ;AACpB,UAAI,KAAM,SAAS,KAAK,KAAK,IAAI,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI;AAC9D,UAAI,IAAI,OAAO,IAAK,SAAS;AAC7B,UAAI,IAAI,OAAO,IAAI;AACnB,UAAI,IAAI,QAAQ,KAAM,UAAU,KAAK,IAAI,QAAQ,IAAK,IAAI;AAE1D,cAAQ,KAAK,IAAI,KAAK;AAEtB,UAAI,MAAM,KAAK,KAAK,UAAU,UAAU;AACtC,YAAI,MAAM,KAAK,IAAI,IAAI;AACvB,YAAI;AAAA,MACN,OAAO;AACL,YAAI,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG;AACzC,YAAI,SAAS,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG;AACrC;AACA,eAAK;AAAA,QACP;AACA,YAAI,IAAI,SAAS,GAAG;AAClB,mBAAS,KAAK;AAAA,QAChB,OAAO;AACL,mBAAS,KAAK,KAAK,IAAI,GAAG,IAAI,KAAK;AAAA,QACrC;AACA,YAAI,QAAQ,KAAK,GAAG;AAClB;AACA,eAAK;AAAA,QACP;AAEA,YAAI,IAAI,SAAS,MAAM;AACrB,cAAI;AACJ,cAAI;AAAA,QACN,WAAW,IAAI,SAAS,GAAG;AACzB,eAAM,QAAQ,IAAK,KAAK,KAAK,IAAI,GAAG,IAAI;AACxC,cAAI,IAAI;AAAA,QACV,OAAO;AACL,cAAI,QAAQ,KAAK,IAAI,GAAG,QAAQ,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI;AACrD,cAAI;AAAA,QACN;AAAA,MACF;AAEA,aAAO,QAAQ,GAAG,OAAO,SAAS,CAAC,IAAI,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAE/E,UAAK,KAAK,OAAQ;AAClB,cAAQ;AACR,aAAO,OAAO,GAAG,OAAO,SAAS,CAAC,IAAI,IAAI,KAAM,KAAK,GAAG,KAAK,KAAK,QAAQ,GAAG;AAAA,MAAC;AAE9E,aAAO,SAAS,IAAI,CAAC,KAAK,IAAI;AAAA,IAChC;AAAA;AAAA;;;ACpFA;AAAA;AAAA;AAUA,QAAI,SAAS;AACb,QAAI,UAAU;AACd,QAAI,sBACD,OAAO,WAAW,cAAc,OAAO,OAAO,KAAK,MAAM,aACtD,OAAO,KAAK,EAAE,4BAA4B,IAC1C;AAEN,YAAQ,SAASG;AACjB,YAAQ,aAAa;AACrB,YAAQ,oBAAoB;AAE5B,QAAI,eAAe;AACnB,YAAQ,aAAa;AAgBrB,IAAAA,QAAO,sBAAsB,kBAAkB;AAE/C,QAAI,CAACA,QAAO,uBAAuB,OAAO,YAAY,eAClD,OAAO,QAAQ,UAAU,YAAY;AACvC,cAAQ;AAAA,QACN;AAAA,MAEF;AAAA,IACF;AAEA,aAAS,oBAAqB;AAE5B,UAAI;AACF,YAAI,MAAM,IAAI,WAAW,CAAC;AAC1B,YAAI,QAAQ,EAAE,KAAK,WAAY;AAAE,iBAAO;AAAA,QAAG,EAAE;AAC7C,eAAO,eAAe,OAAO,WAAW,SAAS;AACjD,eAAO,eAAe,KAAK,KAAK;AAChC,eAAO,IAAI,IAAI,MAAM;AAAA,MACvB,SAAS,GAAG;AACV,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI,EAAG,QAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAED,WAAO,eAAeA,QAAO,WAAW,UAAU;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,YAAI,CAACA,QAAO,SAAS,IAAI,EAAG,QAAO;AACnC,eAAO,KAAK;AAAA,MACd;AAAA,IACF,CAAC;AAED,aAAS,aAAc,QAAQ;AAC7B,UAAI,SAAS,cAAc;AACzB,cAAM,IAAI,WAAW,gBAAgB,SAAS,gCAAgC;AAAA,MAChF;AAEA,UAAI,MAAM,IAAI,WAAW,MAAM;AAC/B,aAAO,eAAe,KAAKA,QAAO,SAAS;AAC3C,aAAO;AAAA,IACT;AAYA,aAASA,QAAQ,KAAK,kBAAkB,QAAQ;AAE9C,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,qBAAqB,UAAU;AACxC,gBAAM,IAAI;AAAA,YACR;AAAA,UACF;AAAA,QACF;AACA,eAAO,YAAY,GAAG;AAAA,MACxB;AACA,aAAO,KAAK,KAAK,kBAAkB,MAAM;AAAA,IAC3C;AAEA,IAAAA,QAAO,WAAW;AAElB,aAAS,KAAM,OAAO,kBAAkB,QAAQ;AAC9C,UAAI,OAAO,UAAU,UAAU;AAC7B,eAAO,WAAW,OAAO,gBAAgB;AAAA,MAC3C;AAEA,UAAI,YAAY,OAAO,KAAK,GAAG;AAC7B,eAAO,cAAc,KAAK;AAAA,MAC5B;AAEA,UAAI,SAAS,MAAM;AACjB,cAAM,IAAI;AAAA,UACR,oHAC0C,OAAO;AAAA,QACnD;AAAA,MACF;AAEA,UAAI,WAAW,OAAO,WAAW,KAC5B,SAAS,WAAW,MAAM,QAAQ,WAAW,GAAI;AACpD,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AAEA,UAAI,OAAO,sBAAsB,gBAC5B,WAAW,OAAO,iBAAiB,KACnC,SAAS,WAAW,MAAM,QAAQ,iBAAiB,IAAK;AAC3D,eAAO,gBAAgB,OAAO,kBAAkB,MAAM;AAAA,MACxD;AAEA,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,UAAI,UAAU,MAAM,WAAW,MAAM,QAAQ;AAC7C,UAAI,WAAW,QAAQ,YAAY,OAAO;AACxC,eAAOA,QAAO,KAAK,SAAS,kBAAkB,MAAM;AAAA,MACtD;AAEA,UAAI,IAAI,WAAW,KAAK;AACxB,UAAI,EAAG,QAAO;AAEd,UAAI,OAAO,WAAW,eAAe,OAAO,eAAe,QACvD,OAAO,MAAM,OAAO,WAAW,MAAM,YAAY;AACnD,eAAOA,QAAO;AAAA,UACZ,MAAM,OAAO,WAAW,EAAE,QAAQ;AAAA,UAAG;AAAA,UAAkB;AAAA,QACzD;AAAA,MACF;AAEA,YAAM,IAAI;AAAA,QACR,oHAC0C,OAAO;AAAA,MACnD;AAAA,IACF;AAUA,IAAAA,QAAO,OAAO,SAAU,OAAO,kBAAkB,QAAQ;AACvD,aAAO,KAAK,OAAO,kBAAkB,MAAM;AAAA,IAC7C;AAIA,WAAO,eAAeA,QAAO,WAAW,WAAW,SAAS;AAC5D,WAAO,eAAeA,SAAQ,UAAU;AAExC,aAAS,WAAY,MAAM;AACzB,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,UAAU,wCAAwC;AAAA,MAC9D,WAAW,OAAO,GAAG;AACnB,cAAM,IAAI,WAAW,gBAAgB,OAAO,gCAAgC;AAAA,MAC9E;AAAA,IACF;AAEA,aAAS,MAAO,MAAM,MAAM,UAAU;AACpC,iBAAW,IAAI;AACf,UAAI,QAAQ,GAAG;AACb,eAAO,aAAa,IAAI;AAAA,MAC1B;AACA,UAAI,SAAS,QAAW;AAItB,eAAO,OAAO,aAAa,WACvB,aAAa,IAAI,EAAE,KAAK,MAAM,QAAQ,IACtC,aAAa,IAAI,EAAE,KAAK,IAAI;AAAA,MAClC;AACA,aAAO,aAAa,IAAI;AAAA,IAC1B;AAMA,IAAAA,QAAO,QAAQ,SAAU,MAAM,MAAM,UAAU;AAC7C,aAAO,MAAM,MAAM,MAAM,QAAQ;AAAA,IACnC;AAEA,aAAS,YAAa,MAAM;AAC1B,iBAAW,IAAI;AACf,aAAO,aAAa,OAAO,IAAI,IAAI,QAAQ,IAAI,IAAI,CAAC;AAAA,IACtD;AAKA,IAAAA,QAAO,cAAc,SAAU,MAAM;AACnC,aAAO,YAAY,IAAI;AAAA,IACzB;AAIA,IAAAA,QAAO,kBAAkB,SAAU,MAAM;AACvC,aAAO,YAAY,IAAI;AAAA,IACzB;AAEA,aAAS,WAAYC,SAAQ,UAAU;AACrC,UAAI,OAAO,aAAa,YAAY,aAAa,IAAI;AACnD,mBAAW;AAAA,MACb;AAEA,UAAI,CAACD,QAAO,WAAW,QAAQ,GAAG;AAChC,cAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,MACrD;AAEA,UAAI,SAAS,WAAWC,SAAQ,QAAQ,IAAI;AAC5C,UAAI,MAAM,aAAa,MAAM;AAE7B,UAAI,SAAS,IAAI,MAAMA,SAAQ,QAAQ;AAEvC,UAAI,WAAW,QAAQ;AAIrB,cAAM,IAAI,MAAM,GAAG,MAAM;AAAA,MAC3B;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAeC,QAAO;AAC7B,UAAI,SAASA,OAAM,SAAS,IAAI,IAAI,QAAQA,OAAM,MAAM,IAAI;AAC5D,UAAI,MAAM,aAAa,MAAM;AAC7B,eAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAClC,YAAI,CAAC,IAAIA,OAAM,CAAC,IAAI;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,WAAW;AACjC,UAAI,WAAW,WAAW,UAAU,GAAG;AACrC,YAAI,OAAO,IAAI,WAAW,SAAS;AACnC,eAAO,gBAAgB,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAAA,MACtE;AACA,aAAO,cAAc,SAAS;AAAA,IAChC;AAEA,aAAS,gBAAiBA,QAAO,YAAY,QAAQ;AACnD,UAAI,aAAa,KAAKA,OAAM,aAAa,YAAY;AACnD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AAEA,UAAIA,OAAM,aAAa,cAAc,UAAU,IAAI;AACjD,cAAM,IAAI,WAAW,sCAAsC;AAAA,MAC7D;AAEA,UAAI;AACJ,UAAI,eAAe,UAAa,WAAW,QAAW;AACpD,cAAM,IAAI,WAAWA,MAAK;AAAA,MAC5B,WAAW,WAAW,QAAW;AAC/B,cAAM,IAAI,WAAWA,QAAO,UAAU;AAAA,MACxC,OAAO;AACL,cAAM,IAAI,WAAWA,QAAO,YAAY,MAAM;AAAA,MAChD;AAGA,aAAO,eAAe,KAAKF,QAAO,SAAS;AAE3C,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,KAAK;AACxB,UAAIA,QAAO,SAAS,GAAG,GAAG;AACxB,YAAI,MAAM,QAAQ,IAAI,MAAM,IAAI;AAChC,YAAI,MAAM,aAAa,GAAG;AAE1B,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,KAAK,GAAG,GAAG,GAAG;AACvB,eAAO;AAAA,MACT;AAEA,UAAI,IAAI,WAAW,QAAW;AAC5B,YAAI,OAAO,IAAI,WAAW,YAAY,YAAY,IAAI,MAAM,GAAG;AAC7D,iBAAO,aAAa,CAAC;AAAA,QACvB;AACA,eAAO,cAAc,GAAG;AAAA,MAC1B;AAEA,UAAI,IAAI,SAAS,YAAY,MAAM,QAAQ,IAAI,IAAI,GAAG;AACpD,eAAO,cAAc,IAAI,IAAI;AAAA,MAC/B;AAAA,IACF;AAEA,aAAS,QAAS,QAAQ;AAGxB,UAAI,UAAU,cAAc;AAC1B,cAAM,IAAI,WAAW,4DACa,aAAa,SAAS,EAAE,IAAI,QAAQ;AAAA,MACxE;AACA,aAAO,SAAS;AAAA,IAClB;AAEA,aAAS,WAAY,QAAQ;AAC3B,UAAI,CAAC,UAAU,QAAQ;AACrB,iBAAS;AAAA,MACX;AACA,aAAOA,QAAO,MAAM,CAAC,MAAM;AAAA,IAC7B;AAEA,IAAAA,QAAO,WAAW,SAAS,SAAU,GAAG;AACtC,aAAO,KAAK,QAAQ,EAAE,cAAc,QAClC,MAAMA,QAAO;AAAA,IACjB;AAEA,IAAAA,QAAO,UAAU,SAAS,QAAS,GAAG,GAAG;AACvC,UAAI,WAAW,GAAG,UAAU,EAAG,KAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,WAAW,GAAG,UAAU,EAAG,KAAIA,QAAO,KAAK,GAAG,EAAE,QAAQ,EAAE,UAAU;AACxE,UAAI,CAACA,QAAO,SAAS,CAAC,KAAK,CAACA,QAAO,SAAS,CAAC,GAAG;AAC9C,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,UAAI,MAAM,EAAG,QAAO;AAEpB,UAAI,IAAI,EAAE;AACV,UAAI,IAAI,EAAE;AAEV,eAAS,IAAI,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,GAAG,IAAI,KAAK,EAAE,GAAG;AAClD,YAAI,EAAE,CAAC,MAAM,EAAE,CAAC,GAAG;AACjB,cAAI,EAAE,CAAC;AACP,cAAI,EAAE,CAAC;AACP;AAAA,QACF;AAAA,MACF;AAEA,UAAI,IAAI,EAAG,QAAO;AAClB,UAAI,IAAI,EAAG,QAAO;AAClB,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,aAAa,SAAS,WAAY,UAAU;AACjD,cAAQ,OAAO,QAAQ,EAAE,YAAY,GAAG;AAAA,QACtC,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,QACT;AACE,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,IAAAA,QAAO,SAAS,SAAS,OAAQ,MAAM,QAAQ;AAC7C,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAM,IAAI,UAAU,6CAA6C;AAAA,MACnE;AAEA,UAAI,KAAK,WAAW,GAAG;AACrB,eAAOA,QAAO,MAAM,CAAC;AAAA,MACvB;AAEA,UAAI;AACJ,UAAI,WAAW,QAAW;AACxB,iBAAS;AACT,aAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,oBAAU,KAAK,CAAC,EAAE;AAAA,QACpB;AAAA,MACF;AAEA,UAAI,SAASA,QAAO,YAAY,MAAM;AACtC,UAAI,MAAM;AACV,WAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAChC,YAAI,MAAM,KAAK,CAAC;AAChB,YAAI,WAAW,KAAK,UAAU,GAAG;AAC/B,cAAI,MAAM,IAAI,SAAS,OAAO,QAAQ;AACpC,YAAAA,QAAO,KAAK,GAAG,EAAE,KAAK,QAAQ,GAAG;AAAA,UACnC,OAAO;AACL,uBAAW,UAAU,IAAI;AAAA,cACvB;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF,WAAW,CAACA,QAAO,SAAS,GAAG,GAAG;AAChC,gBAAM,IAAI,UAAU,6CAA6C;AAAA,QACnE,OAAO;AACL,cAAI,KAAK,QAAQ,GAAG;AAAA,QACtB;AACA,eAAO,IAAI;AAAA,MACb;AACA,aAAO;AAAA,IACT;AAEA,aAAS,WAAYC,SAAQ,UAAU;AACrC,UAAID,QAAO,SAASC,OAAM,GAAG;AAC3B,eAAOA,QAAO;AAAA,MAChB;AACA,UAAI,YAAY,OAAOA,OAAM,KAAK,WAAWA,SAAQ,WAAW,GAAG;AACjE,eAAOA,QAAO;AAAA,MAChB;AACA,UAAI,OAAOA,YAAW,UAAU;AAC9B,cAAM,IAAI;AAAA,UACR,6FACmB,OAAOA;AAAA,QAC5B;AAAA,MACF;AAEA,UAAI,MAAMA,QAAO;AACjB,UAAI,YAAa,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM;AAC1D,UAAI,CAAC,aAAa,QAAQ,EAAG,QAAO;AAGpC,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ,UAAU;AAAA,UAChB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO;AAAA,UACT,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,YAAYA,OAAM,EAAE;AAAA,UAC7B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,MAAM;AAAA,UACf,KAAK;AACH,mBAAO,QAAQ;AAAA,UACjB,KAAK;AACH,mBAAO,cAAcA,OAAM,EAAE;AAAA,UAC/B;AACE,gBAAI,aAAa;AACf,qBAAO,YAAY,KAAK,YAAYA,OAAM,EAAE;AAAA,YAC9C;AACA,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AACA,IAAAD,QAAO,aAAa;AAEpB,aAAS,aAAc,UAAU,OAAO,KAAK;AAC3C,UAAI,cAAc;AASlB,UAAI,UAAU,UAAa,QAAQ,GAAG;AACpC,gBAAQ;AAAA,MACV;AAGA,UAAI,QAAQ,KAAK,QAAQ;AACvB,eAAO;AAAA,MACT;AAEA,UAAI,QAAQ,UAAa,MAAM,KAAK,QAAQ;AAC1C,cAAM,KAAK;AAAA,MACb;AAEA,UAAI,OAAO,GAAG;AACZ,eAAO;AAAA,MACT;AAGA,eAAS;AACT,iBAAW;AAEX,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,SAAU,YAAW;AAE1B,aAAO,MAAM;AACX,gBAAQ,UAAU;AAAA,UAChB,KAAK;AACH,mBAAO,SAAS,MAAM,OAAO,GAAG;AAAA,UAElC,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAM,OAAO,GAAG;AAAA,UAEnC,KAAK;AACH,mBAAO,WAAW,MAAM,OAAO,GAAG;AAAA,UAEpC,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,UAErC,KAAK;AACH,mBAAO,YAAY,MAAM,OAAO,GAAG;AAAA,UAErC,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,aAAa,MAAM,OAAO,GAAG;AAAA,UAEtC;AACE,gBAAI,YAAa,OAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,WAAW,IAAI,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAQA,IAAAA,QAAO,UAAU,YAAY;AAE7B,aAAS,KAAM,GAAG,GAAG,GAAG;AACtB,UAAI,IAAI,EAAE,CAAC;AACX,QAAE,CAAC,IAAI,EAAE,CAAC;AACV,QAAE,CAAC,IAAI;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AAAA,MACrB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,MAAM,GAAG;AACjB,cAAM,IAAI,WAAW,2CAA2C;AAAA,MAClE;AACA,eAAS,IAAI,GAAG,IAAI,KAAK,KAAK,GAAG;AAC/B,aAAK,MAAM,GAAG,IAAI,CAAC;AACnB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AACvB,aAAK,MAAM,IAAI,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,WAAW,SAAS,WAAY;AAC/C,UAAI,SAAS,KAAK;AAClB,UAAI,WAAW,EAAG,QAAO;AACzB,UAAI,UAAU,WAAW,EAAG,QAAO,UAAU,MAAM,GAAG,MAAM;AAC5D,aAAO,aAAa,MAAM,MAAM,SAAS;AAAA,IAC3C;AAEA,IAAAA,QAAO,UAAU,iBAAiBA,QAAO,UAAU;AAEnD,IAAAA,QAAO,UAAU,SAAS,SAAS,OAAQ,GAAG;AAC5C,UAAI,CAACA,QAAO,SAAS,CAAC,EAAG,OAAM,IAAI,UAAU,2BAA2B;AACxE,UAAI,SAAS,EAAG,QAAO;AACvB,aAAOA,QAAO,QAAQ,MAAM,CAAC,MAAM;AAAA,IACrC;AAEA,IAAAA,QAAO,UAAU,UAAU,SAAS,UAAW;AAC7C,UAAI,MAAM;AACV,UAAIG,OAAM,QAAQ;AAClB,YAAM,KAAK,SAAS,OAAO,GAAGA,IAAG,EAAE,QAAQ,WAAW,KAAK,EAAE,KAAK;AAClE,UAAI,KAAK,SAASA,KAAK,QAAO;AAC9B,aAAO,aAAa,MAAM;AAAA,IAC5B;AACA,QAAI,qBAAqB;AACvB,MAAAH,QAAO,UAAU,mBAAmB,IAAIA,QAAO,UAAU;AAAA,IAC3D;AAEA,IAAAA,QAAO,UAAU,UAAU,SAAS,QAAS,QAAQ,OAAO,KAAK,WAAW,SAAS;AACnF,UAAI,WAAW,QAAQ,UAAU,GAAG;AAClC,iBAASA,QAAO,KAAK,QAAQ,OAAO,QAAQ,OAAO,UAAU;AAAA,MAC/D;AACA,UAAI,CAACA,QAAO,SAAS,MAAM,GAAG;AAC5B,cAAM,IAAI;AAAA,UACR,mFACoB,OAAO;AAAA,QAC7B;AAAA,MACF;AAEA,UAAI,UAAU,QAAW;AACvB,gBAAQ;AAAA,MACV;AACA,UAAI,QAAQ,QAAW;AACrB,cAAM,SAAS,OAAO,SAAS;AAAA,MACjC;AACA,UAAI,cAAc,QAAW;AAC3B,oBAAY;AAAA,MACd;AACA,UAAI,YAAY,QAAW;AACzB,kBAAU,KAAK;AAAA,MACjB;AAEA,UAAI,QAAQ,KAAK,MAAM,OAAO,UAAU,YAAY,KAAK,UAAU,KAAK,QAAQ;AAC9E,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AAEA,UAAI,aAAa,WAAW,SAAS,KAAK;AACxC,eAAO;AAAA,MACT;AACA,UAAI,aAAa,SAAS;AACxB,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK;AAChB,eAAO;AAAA,MACT;AAEA,iBAAW;AACX,eAAS;AACT,qBAAe;AACf,mBAAa;AAEb,UAAI,SAAS,OAAQ,QAAO;AAE5B,UAAI,IAAI,UAAU;AAClB,UAAI,IAAI,MAAM;AACd,UAAI,MAAM,KAAK,IAAI,GAAG,CAAC;AAEvB,UAAI,WAAW,KAAK,MAAM,WAAW,OAAO;AAC5C,UAAI,aAAa,OAAO,MAAM,OAAO,GAAG;AAExC,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,YAAI,SAAS,CAAC,MAAM,WAAW,CAAC,GAAG;AACjC,cAAI,SAAS,CAAC;AACd,cAAI,WAAW,CAAC;AAChB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,IAAI,EAAG,QAAO;AAClB,UAAI,IAAI,EAAG,QAAO;AAClB,aAAO;AAAA,IACT;AAWA,aAAS,qBAAsB,QAAQ,KAAK,YAAY,UAAU,KAAK;AAErE,UAAI,OAAO,WAAW,EAAG,QAAO;AAGhC,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW;AACX,qBAAa;AAAA,MACf,WAAW,aAAa,YAAY;AAClC,qBAAa;AAAA,MACf,WAAW,aAAa,aAAa;AACnC,qBAAa;AAAA,MACf;AACA,mBAAa,CAAC;AACd,UAAI,YAAY,UAAU,GAAG;AAE3B,qBAAa,MAAM,IAAK,OAAO,SAAS;AAAA,MAC1C;AAGA,UAAI,aAAa,EAAG,cAAa,OAAO,SAAS;AACjD,UAAI,cAAc,OAAO,QAAQ;AAC/B,YAAI,IAAK,QAAO;AAAA,YACX,cAAa,OAAO,SAAS;AAAA,MACpC,WAAW,aAAa,GAAG;AACzB,YAAI,IAAK,cAAa;AAAA,YACjB,QAAO;AAAA,MACd;AAGA,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAMA,QAAO,KAAK,KAAK,QAAQ;AAAA,MACjC;AAGA,UAAIA,QAAO,SAAS,GAAG,GAAG;AAExB,YAAI,IAAI,WAAW,GAAG;AACpB,iBAAO;AAAA,QACT;AACA,eAAO,aAAa,QAAQ,KAAK,YAAY,UAAU,GAAG;AAAA,MAC5D,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AACZ,YAAI,OAAO,WAAW,UAAU,YAAY,YAAY;AACtD,cAAI,KAAK;AACP,mBAAO,WAAW,UAAU,QAAQ,KAAK,QAAQ,KAAK,UAAU;AAAA,UAClE,OAAO;AACL,mBAAO,WAAW,UAAU,YAAY,KAAK,QAAQ,KAAK,UAAU;AAAA,UACtE;AAAA,QACF;AACA,eAAO,aAAa,QAAQ,CAAC,GAAG,GAAG,YAAY,UAAU,GAAG;AAAA,MAC9D;AAEA,YAAM,IAAI,UAAU,sCAAsC;AAAA,IAC5D;AAEA,aAAS,aAAc,KAAK,KAAK,YAAY,UAAU,KAAK;AAC1D,UAAI,YAAY;AAChB,UAAI,YAAY,IAAI;AACpB,UAAI,YAAY,IAAI;AAEpB,UAAI,aAAa,QAAW;AAC1B,mBAAW,OAAO,QAAQ,EAAE,YAAY;AACxC,YAAI,aAAa,UAAU,aAAa,WACpC,aAAa,aAAa,aAAa,YAAY;AACrD,cAAI,IAAI,SAAS,KAAK,IAAI,SAAS,GAAG;AACpC,mBAAO;AAAA,UACT;AACA,sBAAY;AACZ,uBAAa;AACb,uBAAa;AACb,wBAAc;AAAA,QAChB;AAAA,MACF;AAEA,eAASI,MAAM,KAAKC,IAAG;AACrB,YAAI,cAAc,GAAG;AACnB,iBAAO,IAAIA,EAAC;AAAA,QACd,OAAO;AACL,iBAAO,IAAI,aAAaA,KAAI,SAAS;AAAA,QACvC;AAAA,MACF;AAEA,UAAI;AACJ,UAAI,KAAK;AACP,YAAI,aAAa;AACjB,aAAK,IAAI,YAAY,IAAI,WAAW,KAAK;AACvC,cAAID,MAAK,KAAK,CAAC,MAAMA,MAAK,KAAK,eAAe,KAAK,IAAI,IAAI,UAAU,GAAG;AACtE,gBAAI,eAAe,GAAI,cAAa;AACpC,gBAAI,IAAI,aAAa,MAAM,UAAW,QAAO,aAAa;AAAA,UAC5D,OAAO;AACL,gBAAI,eAAe,GAAI,MAAK,IAAI;AAChC,yBAAa;AAAA,UACf;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,aAAa,YAAY,UAAW,cAAa,YAAY;AACjE,aAAK,IAAI,YAAY,KAAK,GAAG,KAAK;AAChC,cAAI,QAAQ;AACZ,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAIA,MAAK,KAAK,IAAI,CAAC,MAAMA,MAAK,KAAK,CAAC,GAAG;AACrC,sBAAQ;AACR;AAAA,YACF;AAAA,UACF;AACA,cAAI,MAAO,QAAO;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAJ,QAAO,UAAU,WAAW,SAAS,SAAU,KAAK,YAAY,UAAU;AACxE,aAAO,KAAK,QAAQ,KAAK,YAAY,QAAQ,MAAM;AAAA,IACrD;AAEA,IAAAA,QAAO,UAAU,UAAU,SAAS,QAAS,KAAK,YAAY,UAAU;AACtE,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,IAAI;AAAA,IACnE;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,KAAK,YAAY,UAAU;AAC9E,aAAO,qBAAqB,MAAM,KAAK,YAAY,UAAU,KAAK;AAAA,IACpE;AAEA,aAAS,SAAU,KAAKC,SAAQ,QAAQ,QAAQ;AAC9C,eAAS,OAAO,MAAM,KAAK;AAC3B,UAAI,YAAY,IAAI,SAAS;AAC7B,UAAI,CAAC,QAAQ;AACX,iBAAS;AAAA,MACX,OAAO;AACL,iBAAS,OAAO,MAAM;AACtB,YAAI,SAAS,WAAW;AACtB,mBAAS;AAAA,QACX;AAAA,MACF;AAEA,UAAI,SAASA,QAAO;AAEpB,UAAI,SAAS,SAAS,GAAG;AACvB,iBAAS,SAAS;AAAA,MACpB;AACA,eAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,YAAI,SAAS,SAASA,QAAO,OAAO,IAAI,GAAG,CAAC,GAAG,EAAE;AACjD,YAAI,YAAY,MAAM,EAAG,QAAO;AAChC,YAAI,SAAS,CAAC,IAAI;AAAA,MACpB;AACA,aAAO;AAAA,IACT;AAEA,aAAS,UAAW,KAAKA,SAAQ,QAAQ,QAAQ;AAC/C,aAAO,WAAW,YAAYA,SAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IACjF;AAEA,aAAS,WAAY,KAAKA,SAAQ,QAAQ,QAAQ;AAChD,aAAO,WAAW,aAAaA,OAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IAC7D;AAEA,aAAS,YAAa,KAAKA,SAAQ,QAAQ,QAAQ;AACjD,aAAO,WAAW,cAAcA,OAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IAC9D;AAEA,aAAS,UAAW,KAAKA,SAAQ,QAAQ,QAAQ;AAC/C,aAAO,WAAW,eAAeA,SAAQ,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,MAAM;AAAA,IACpF;AAEA,IAAAD,QAAO,UAAU,QAAQ,SAAS,MAAOC,SAAQ,QAAQ,QAAQ,UAAU;AAEzE,UAAI,WAAW,QAAW;AACxB,mBAAW;AACX,iBAAS,KAAK;AACd,iBAAS;AAAA,MAEX,WAAW,WAAW,UAAa,OAAO,WAAW,UAAU;AAC7D,mBAAW;AACX,iBAAS,KAAK;AACd,iBAAS;AAAA,MAEX,WAAW,SAAS,MAAM,GAAG;AAC3B,iBAAS,WAAW;AACpB,YAAI,SAAS,MAAM,GAAG;AACpB,mBAAS,WAAW;AACpB,cAAI,aAAa,OAAW,YAAW;AAAA,QACzC,OAAO;AACL,qBAAW;AACX,mBAAS;AAAA,QACX;AAAA,MACF,OAAO;AACL,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,UAAI,YAAY,KAAK,SAAS;AAC9B,UAAI,WAAW,UAAa,SAAS,UAAW,UAAS;AAEzD,UAAKA,QAAO,SAAS,MAAM,SAAS,KAAK,SAAS,MAAO,SAAS,KAAK,QAAQ;AAC7E,cAAM,IAAI,WAAW,wCAAwC;AAAA,MAC/D;AAEA,UAAI,CAAC,SAAU,YAAW;AAE1B,UAAI,cAAc;AAClB,iBAAS;AACP,gBAAQ,UAAU;AAAA,UAChB,KAAK;AACH,mBAAO,SAAS,MAAMA,SAAQ,QAAQ,MAAM;AAAA,UAE9C,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAMA,SAAQ,QAAQ,MAAM;AAAA,UAE/C,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,WAAW,MAAMA,SAAQ,QAAQ,MAAM;AAAA,UAEhD,KAAK;AAEH,mBAAO,YAAY,MAAMA,SAAQ,QAAQ,MAAM;AAAA,UAEjD,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,MAAMA,SAAQ,QAAQ,MAAM;AAAA,UAE/C;AACE,gBAAI,YAAa,OAAM,IAAI,UAAU,uBAAuB,QAAQ;AACpE,wBAAY,KAAK,UAAU,YAAY;AACvC,0BAAc;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAEA,IAAAD,QAAO,UAAU,SAAS,SAAS,SAAU;AAC3C,aAAO;AAAA,QACL,MAAM;AAAA,QACN,MAAM,MAAM,UAAU,MAAM,KAAK,KAAK,QAAQ,MAAM,CAAC;AAAA,MACvD;AAAA,IACF;AAEA,aAAS,YAAa,KAAK,OAAO,KAAK;AACrC,UAAI,UAAU,KAAK,QAAQ,IAAI,QAAQ;AACrC,eAAO,OAAO,cAAc,GAAG;AAAA,MACjC,OAAO;AACL,eAAO,OAAO,cAAc,IAAI,MAAM,OAAO,GAAG,CAAC;AAAA,MACnD;AAAA,IACF;AAEA,aAAS,UAAW,KAAK,OAAO,KAAK;AACnC,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAC9B,UAAI,MAAM,CAAC;AAEX,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,YAAI,YAAY,IAAI,CAAC;AACrB,YAAI,YAAY;AAChB,YAAI,mBAAoB,YAAY,MAChC,IACC,YAAY,MACT,IACC,YAAY,MACT,IACA;AAEZ,YAAI,IAAI,oBAAoB,KAAK;AAC/B,cAAI,YAAY,WAAW,YAAY;AAEvC,kBAAQ,kBAAkB;AAAA,YACxB,KAAK;AACH,kBAAI,YAAY,KAAM;AACpB,4BAAY;AAAA,cACd;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,mBAAK,aAAa,SAAU,KAAM;AAChC,iCAAiB,YAAY,OAAS,IAAO,aAAa;AAC1D,oBAAI,gBAAgB,KAAM;AACxB,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,0BAAY,IAAI,IAAI,CAAC;AACrB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,KAAM;AAC/D,iCAAiB,YAAY,OAAQ,MAAO,aAAa,OAAS,IAAO,YAAY;AACrF,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU,gBAAgB,QAAS;AAC/E,8BAAY;AAAA,gBACd;AAAA,cACF;AACA;AAAA,YACF,KAAK;AACH,2BAAa,IAAI,IAAI,CAAC;AACtB,0BAAY,IAAI,IAAI,CAAC;AACrB,2BAAa,IAAI,IAAI,CAAC;AACtB,mBAAK,aAAa,SAAU,QAAS,YAAY,SAAU,QAAS,aAAa,SAAU,KAAM;AAC/F,iCAAiB,YAAY,OAAQ,MAAQ,aAAa,OAAS,MAAO,YAAY,OAAS,IAAO,aAAa;AACnH,oBAAI,gBAAgB,SAAU,gBAAgB,SAAU;AACtD,8BAAY;AAAA,gBACd;AAAA,cACF;AAAA,UACJ;AAAA,QACF;AAEA,YAAI,cAAc,MAAM;AAGtB,sBAAY;AACZ,6BAAmB;AAAA,QACrB,WAAW,YAAY,OAAQ;AAE7B,uBAAa;AACb,cAAI,KAAK,cAAc,KAAK,OAAQ,KAAM;AAC1C,sBAAY,QAAS,YAAY;AAAA,QACnC;AAEA,YAAI,KAAK,SAAS;AAClB,aAAK;AAAA,MACP;AAEA,aAAO,sBAAsB,GAAG;AAAA,IAClC;AAKA,QAAI,uBAAuB;AAE3B,aAAS,sBAAuB,YAAY;AAC1C,UAAI,MAAM,WAAW;AACrB,UAAI,OAAO,sBAAsB;AAC/B,eAAO,OAAO,aAAa,MAAM,QAAQ,UAAU;AAAA,MACrD;AAGA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,IAAI,KAAK;AACd,eAAO,OAAO,aAAa;AAAA,UACzB;AAAA,UACA,WAAW,MAAM,GAAG,KAAK,oBAAoB;AAAA,QAC/C;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,KAAK,OAAO,KAAK;AACpC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,CAAC,IAAI,GAAI;AAAA,MAC1C;AACA,aAAO;AAAA,IACT;AAEA,aAAS,YAAa,KAAK,OAAO,KAAK;AACrC,UAAI,MAAM;AACV,YAAM,KAAK,IAAI,IAAI,QAAQ,GAAG;AAE9B,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,OAAO,aAAa,IAAI,CAAC,CAAC;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,SAAU,KAAK,OAAO,KAAK;AAClC,UAAI,MAAM,IAAI;AAEd,UAAI,CAAC,SAAS,QAAQ,EAAG,SAAQ;AACjC,UAAI,CAAC,OAAO,MAAM,KAAK,MAAM,IAAK,OAAM;AAExC,UAAI,MAAM;AACV,eAAS,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAChC,eAAO,oBAAoB,IAAI,CAAC,CAAC;AAAA,MACnC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,KAAK,OAAO,KAAK;AACtC,UAAI,QAAQ,IAAI,MAAM,OAAO,GAAG;AAChC,UAAI,MAAM;AAEV,eAAS,IAAI,GAAG,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG;AAC5C,eAAO,OAAO,aAAa,MAAM,CAAC,IAAK,MAAM,IAAI,CAAC,IAAI,GAAI;AAAA,MAC5D;AACA,aAAO;AAAA,IACT;AAEA,IAAAA,QAAO,UAAU,QAAQ,SAAS,MAAO,OAAO,KAAK;AACnD,UAAI,MAAM,KAAK;AACf,cAAQ,CAAC,CAAC;AACV,YAAM,QAAQ,SAAY,MAAM,CAAC,CAAC;AAElC,UAAI,QAAQ,GAAG;AACb,iBAAS;AACT,YAAI,QAAQ,EAAG,SAAQ;AAAA,MACzB,WAAW,QAAQ,KAAK;AACtB,gBAAQ;AAAA,MACV;AAEA,UAAI,MAAM,GAAG;AACX,eAAO;AACP,YAAI,MAAM,EAAG,OAAM;AAAA,MACrB,WAAW,MAAM,KAAK;AACpB,cAAM;AAAA,MACR;AAEA,UAAI,MAAM,MAAO,OAAM;AAEvB,UAAI,SAAS,KAAK,SAAS,OAAO,GAAG;AAErC,aAAO,eAAe,QAAQA,QAAO,SAAS;AAE9C,aAAO;AAAA,IACT;AAKA,aAAS,YAAa,QAAQ,KAAK,QAAQ;AACzC,UAAK,SAAS,MAAO,KAAK,SAAS,EAAG,OAAM,IAAI,WAAW,oBAAoB;AAC/E,UAAI,SAAS,MAAM,OAAQ,OAAM,IAAI,WAAW,uCAAuC;AAAA,IACzF;AAEA,IAAAA,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQM,aAAY,UAAU;AAC/E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,MAAM,KAAK,MAAM;AACrB,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAK,SAAS,CAAC,IAAI;AAAA,MAC5B;AAEA,aAAO;AAAA,IACT;AAEA,IAAAN,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,QAAQM,aAAY,UAAU;AAC/E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,oBAAY,QAAQA,aAAY,KAAK,MAAM;AAAA,MAC7C;AAEA,UAAI,MAAM,KAAK,SAAS,EAAEA,WAAU;AACpC,UAAI,MAAM;AACV,aAAOA,cAAa,MAAM,OAAO,MAAQ;AACvC,eAAO,KAAK,SAAS,EAAEA,WAAU,IAAI;AAAA,MACvC;AAEA,aAAO;AAAA,IACT;AAEA,IAAAN,QAAO,UAAU,YACjBA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQ,UAAU;AACjE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAK,MAAM;AAAA,IACpB;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,KAAK,MAAM,IAAK,KAAK,SAAS,CAAC,KAAK;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAQ,KAAK,MAAM,KAAK,IAAK,KAAK,SAAS,CAAC;AAAA,IAC9C;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,cAAS,KAAK,MAAM,IACf,KAAK,SAAS,CAAC,KAAK,IACpB,KAAK,SAAS,CAAC,KAAK,MACpB,KAAK,SAAS,CAAC,IAAI;AAAA,IAC1B;AAEA,IAAAA,QAAO,UAAU,eACjBA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,MAAM,IAAI,YACnB,KAAK,SAAS,CAAC,KAAK,KACrB,KAAK,SAAS,CAAC,KAAK,IACrB,KAAK,SAAS,CAAC;AAAA,IACnB;AAEA,IAAAA,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQM,aAAY,UAAU;AAC7E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,MAAM,KAAK,MAAM;AACrB,UAAI,MAAM;AACV,UAAI,IAAI;AACR,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,eAAO,KAAK,SAAS,CAAC,IAAI;AAAA,MAC5B;AACA,aAAO;AAEP,UAAI,OAAO,IAAK,QAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,aAAO;AAAA,IACT;AAEA,IAAAN,QAAO,UAAU,YAAY,SAAS,UAAW,QAAQM,aAAY,UAAU;AAC7E,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,SAAU,aAAY,QAAQA,aAAY,KAAK,MAAM;AAE1D,UAAI,IAAIA;AACR,UAAI,MAAM;AACV,UAAI,MAAM,KAAK,SAAS,EAAE,CAAC;AAC3B,aAAO,IAAI,MAAM,OAAO,MAAQ;AAC9B,eAAO,KAAK,SAAS,EAAE,CAAC,IAAI;AAAA,MAC9B;AACA,aAAO;AAEP,UAAI,OAAO,IAAK,QAAO,KAAK,IAAI,GAAG,IAAIA,WAAU;AAEjD,aAAO;AAAA,IACT;AAEA,IAAAN,QAAO,UAAU,WAAW,SAAS,SAAU,QAAQ,UAAU;AAC/D,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,UAAI,EAAE,KAAK,MAAM,IAAI,KAAO,QAAQ,KAAK,MAAM;AAC/C,cAAS,MAAO,KAAK,MAAM,IAAI,KAAK;AAAA,IACtC;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,UAAI,MAAM,KAAK,MAAM,IAAK,KAAK,SAAS,CAAC,KAAK;AAC9C,aAAQ,MAAM,QAAU,MAAM,aAAa;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,UAAI,MAAM,KAAK,SAAS,CAAC,IAAK,KAAK,MAAM,KAAK;AAC9C,aAAQ,MAAM,QAAU,MAAM,aAAa;AAAA,IAC7C;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,MAAM,IAChB,KAAK,SAAS,CAAC,KAAK,IACpB,KAAK,SAAS,CAAC,KAAK,KACpB,KAAK,SAAS,CAAC,KAAK;AAAA,IACzB;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AAEjD,aAAQ,KAAK,MAAM,KAAK,KACrB,KAAK,SAAS,CAAC,KAAK,KACpB,KAAK,SAAS,CAAC,KAAK,IACpB,KAAK,SAAS,CAAC;AAAA,IACpB;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AAEA,IAAAA,QAAO,UAAU,cAAc,SAAS,YAAa,QAAQ,UAAU;AACrE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAM,QAAQ,MAAM,IAAI,CAAC;AAAA,IAC/C;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,QAAQ,UAAU;AACvE,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,aAAY,QAAQ,GAAG,KAAK,MAAM;AACjD,aAAO,QAAQ,KAAK,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,IAChD;AAEA,aAAS,SAAU,KAAK,OAAO,QAAQ,KAAKG,MAAKI,MAAK;AACpD,UAAI,CAACP,QAAO,SAAS,GAAG,EAAG,OAAM,IAAI,UAAU,6CAA6C;AAC5F,UAAI,QAAQG,QAAO,QAAQI,KAAK,OAAM,IAAI,WAAW,mCAAmC;AACxF,UAAI,SAAS,MAAM,IAAI,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AAAA,IAC1E;AAEA,IAAAP,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQM,aAAY,UAAU;AACxF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,YAAI,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC7C,iBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;AAAA,MACvD;AAEA,UAAI,MAAM;AACV,UAAI,IAAI;AACR,WAAK,MAAM,IAAI,QAAQ;AACvB,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,aAAK,SAAS,CAAC,IAAK,QAAQ,MAAO;AAAA,MACrC;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAN,QAAO,UAAU,cACjBA,QAAO,UAAU,cAAc,SAAS,YAAa,OAAO,QAAQM,aAAY,UAAU;AACxF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,MAAAA,cAAaA,gBAAe;AAC5B,UAAI,CAAC,UAAU;AACb,YAAI,WAAW,KAAK,IAAI,GAAG,IAAIA,WAAU,IAAI;AAC7C,iBAAS,MAAM,OAAO,QAAQA,aAAY,UAAU,CAAC;AAAA,MACvD;AAEA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,WAAK,SAAS,CAAC,IAAI,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,aAAK,SAAS,CAAC,IAAK,QAAQ,MAAO;AAAA,MACrC;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAN,QAAO,UAAU,aACjBA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQ,UAAU;AAC1E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,CAAC;AACvD,WAAK,MAAM,IAAK,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,WAAK,MAAM,IAAK,QAAQ;AACxB,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,CAAC;AACzD,WAAK,MAAM,IAAK,UAAU;AAC1B,WAAK,SAAS,CAAC,IAAK,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,MAAM,IAAK,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBACjBA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,CAAC;AAC7D,WAAK,MAAM,IAAK,UAAU;AAC1B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQM,aAAY,UAAU;AACtF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,YAAI,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE5C,iBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AAEA,UAAI,IAAI;AACR,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAK,MAAM,IAAI,QAAQ;AACvB,aAAO,EAAE,IAAIA,gBAAe,OAAO,MAAQ;AACzC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,CAAC,MAAM,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAK,SAAS,CAAC,KAAM,QAAQ,OAAQ,KAAK,MAAM;AAAA,MAClD;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAN,QAAO,UAAU,aAAa,SAAS,WAAY,OAAO,QAAQM,aAAY,UAAU;AACtF,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,YAAI,QAAQ,KAAK,IAAI,GAAI,IAAIA,cAAc,CAAC;AAE5C,iBAAS,MAAM,OAAO,QAAQA,aAAY,QAAQ,GAAG,CAAC,KAAK;AAAA,MAC7D;AAEA,UAAI,IAAIA,cAAa;AACrB,UAAI,MAAM;AACV,UAAI,MAAM;AACV,WAAK,SAAS,CAAC,IAAI,QAAQ;AAC3B,aAAO,EAAE,KAAK,MAAM,OAAO,MAAQ;AACjC,YAAI,QAAQ,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,CAAC,MAAM,GAAG;AACxD,gBAAM;AAAA,QACR;AACA,aAAK,SAAS,CAAC,KAAM,QAAQ,OAAQ,KAAK,MAAM;AAAA,MAClD;AAEA,aAAO,SAASA;AAAA,IAClB;AAEA,IAAAN,QAAO,UAAU,YAAY,SAAS,UAAW,OAAO,QAAQ,UAAU;AACxE,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,KAAM,IAAK;AAC3D,UAAI,QAAQ,EAAG,SAAQ,MAAO,QAAQ;AACtC,WAAK,MAAM,IAAK,QAAQ;AACxB,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAK,MAAM,IAAK,QAAQ;AACxB,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,OAAQ,MAAO;AAC/D,WAAK,MAAM,IAAK,UAAU;AAC1B,WAAK,SAAS,CAAC,IAAK,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,WAAK,MAAM,IAAK,QAAQ;AACxB,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,SAAU,UAAS,MAAM,OAAO,QAAQ,GAAG,YAAY,WAAW;AACvE,UAAI,QAAQ,EAAG,SAAQ,aAAa,QAAQ;AAC5C,WAAK,MAAM,IAAK,UAAU;AAC1B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,UAAU;AAC9B,WAAK,SAAS,CAAC,IAAK,QAAQ;AAC5B,aAAO,SAAS;AAAA,IAClB;AAEA,aAAS,aAAc,KAAK,OAAO,QAAQ,KAAKG,MAAKI,MAAK;AACxD,UAAI,SAAS,MAAM,IAAI,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AACxE,UAAI,SAAS,EAAG,OAAM,IAAI,WAAW,oBAAoB;AAAA,IAC3D;AAEA,aAAS,WAAY,KAAK,OAAO,QAAQ,cAAc,UAAU;AAC/D,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAO,QAAQ,GAAG,sBAAwB,qBAAuB;AAAA,MACrF;AACA,cAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAP,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,aAAO,WAAW,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAAA,IACvD;AAEA,IAAAA,QAAO,UAAU,eAAe,SAAS,aAAc,OAAO,QAAQ,UAAU;AAC9E,aAAO,WAAW,MAAM,OAAO,QAAQ,OAAO,QAAQ;AAAA,IACxD;AAEA,aAAS,YAAa,KAAK,OAAO,QAAQ,cAAc,UAAU;AAChE,cAAQ,CAAC;AACT,eAAS,WAAW;AACpB,UAAI,CAAC,UAAU;AACb,qBAAa,KAAK,OAAO,QAAQ,GAAG,uBAAyB,sBAAwB;AAAA,MACvF;AACA,cAAQ,MAAM,KAAK,OAAO,QAAQ,cAAc,IAAI,CAAC;AACrD,aAAO,SAAS;AAAA,IAClB;AAEA,IAAAA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,aAAO,YAAY,MAAM,OAAO,QAAQ,MAAM,QAAQ;AAAA,IACxD;AAEA,IAAAA,QAAO,UAAU,gBAAgB,SAAS,cAAe,OAAO,QAAQ,UAAU;AAChF,aAAO,YAAY,MAAM,OAAO,QAAQ,OAAO,QAAQ;AAAA,IACzD;AAGA,IAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,QAAQ,aAAa,OAAO,KAAK;AACtE,UAAI,CAACA,QAAO,SAAS,MAAM,EAAG,OAAM,IAAI,UAAU,6BAA6B;AAC/E,UAAI,CAAC,MAAO,SAAQ;AACpB,UAAI,CAAC,OAAO,QAAQ,EAAG,OAAM,KAAK;AAClC,UAAI,eAAe,OAAO,OAAQ,eAAc,OAAO;AACvD,UAAI,CAAC,YAAa,eAAc;AAChC,UAAI,MAAM,KAAK,MAAM,MAAO,OAAM;AAGlC,UAAI,QAAQ,MAAO,QAAO;AAC1B,UAAI,OAAO,WAAW,KAAK,KAAK,WAAW,EAAG,QAAO;AAGrD,UAAI,cAAc,GAAG;AACnB,cAAM,IAAI,WAAW,2BAA2B;AAAA,MAClD;AACA,UAAI,QAAQ,KAAK,SAAS,KAAK,OAAQ,OAAM,IAAI,WAAW,oBAAoB;AAChF,UAAI,MAAM,EAAG,OAAM,IAAI,WAAW,yBAAyB;AAG3D,UAAI,MAAM,KAAK,OAAQ,OAAM,KAAK;AAClC,UAAI,OAAO,SAAS,cAAc,MAAM,OAAO;AAC7C,cAAM,OAAO,SAAS,cAAc;AAAA,MACtC;AAEA,UAAI,MAAM,MAAM;AAEhB,UAAI,SAAS,UAAU,OAAO,WAAW,UAAU,eAAe,YAAY;AAE5E,aAAK,WAAW,aAAa,OAAO,GAAG;AAAA,MACzC,OAAO;AACL,mBAAW,UAAU,IAAI;AAAA,UACvB;AAAA,UACA,KAAK,SAAS,OAAO,GAAG;AAAA,UACxB;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAMA,IAAAA,QAAO,UAAU,OAAO,SAAS,KAAM,KAAK,OAAO,KAAK,UAAU;AAEhE,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI,OAAO,UAAU,UAAU;AAC7B,qBAAW;AACX,kBAAQ;AACR,gBAAM,KAAK;AAAA,QACb,WAAW,OAAO,QAAQ,UAAU;AAClC,qBAAW;AACX,gBAAM,KAAK;AAAA,QACb;AACA,YAAI,aAAa,UAAa,OAAO,aAAa,UAAU;AAC1D,gBAAM,IAAI,UAAU,2BAA2B;AAAA,QACjD;AACA,YAAI,OAAO,aAAa,YAAY,CAACA,QAAO,WAAW,QAAQ,GAAG;AAChE,gBAAM,IAAI,UAAU,uBAAuB,QAAQ;AAAA,QACrD;AACA,YAAI,IAAI,WAAW,GAAG;AACpB,cAAI,OAAO,IAAI,WAAW,CAAC;AAC3B,cAAK,aAAa,UAAU,OAAO,OAC/B,aAAa,UAAU;AAEzB,kBAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,WAAW,OAAO,QAAQ,UAAU;AAClC,cAAM,MAAM;AAAA,MACd,WAAW,OAAO,QAAQ,WAAW;AACnC,cAAM,OAAO,GAAG;AAAA,MAClB;AAGA,UAAI,QAAQ,KAAK,KAAK,SAAS,SAAS,KAAK,SAAS,KAAK;AACzD,cAAM,IAAI,WAAW,oBAAoB;AAAA,MAC3C;AAEA,UAAI,OAAO,OAAO;AAChB,eAAO;AAAA,MACT;AAEA,cAAQ,UAAU;AAClB,YAAM,QAAQ,SAAY,KAAK,SAAS,QAAQ;AAEhD,UAAI,CAAC,IAAK,OAAM;AAEhB,UAAI;AACJ,UAAI,OAAO,QAAQ,UAAU;AAC3B,aAAK,IAAI,OAAO,IAAI,KAAK,EAAE,GAAG;AAC5B,eAAK,CAAC,IAAI;AAAA,QACZ;AAAA,MACF,OAAO;AACL,YAAI,QAAQA,QAAO,SAAS,GAAG,IAC3B,MACAA,QAAO,KAAK,KAAK,QAAQ;AAC7B,YAAI,MAAM,MAAM;AAChB,YAAI,QAAQ,GAAG;AACb,gBAAM,IAAI,UAAU,gBAAgB,MAClC,mCAAmC;AAAA,QACvC;AACA,aAAK,IAAI,GAAG,IAAI,MAAM,OAAO,EAAE,GAAG;AAChC,eAAK,IAAI,KAAK,IAAI,MAAM,IAAI,GAAG;AAAA,QACjC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,QAAI,oBAAoB;AAExB,aAAS,YAAa,KAAK;AAEzB,YAAM,IAAI,MAAM,GAAG,EAAE,CAAC;AAEtB,YAAM,IAAI,KAAK,EAAE,QAAQ,mBAAmB,EAAE;AAE9C,UAAI,IAAI,SAAS,EAAG,QAAO;AAE3B,aAAO,IAAI,SAAS,MAAM,GAAG;AAC3B,cAAM,MAAM;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAEA,aAAS,YAAaC,SAAQ,OAAO;AACnC,cAAQ,SAAS;AACjB,UAAI;AACJ,UAAI,SAASA,QAAO;AACpB,UAAI,gBAAgB;AACpB,UAAI,QAAQ,CAAC;AAEb,eAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,oBAAYA,QAAO,WAAW,CAAC;AAG/B,YAAI,YAAY,SAAU,YAAY,OAAQ;AAE5C,cAAI,CAAC,eAAe;AAElB,gBAAI,YAAY,OAAQ;AAEtB,mBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF,WAAW,IAAI,MAAM,QAAQ;AAE3B,mBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD;AAAA,YACF;AAGA,4BAAgB;AAEhB;AAAA,UACF;AAGA,cAAI,YAAY,OAAQ;AACtB,iBAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAClD,4BAAgB;AAChB;AAAA,UACF;AAGA,uBAAa,gBAAgB,SAAU,KAAK,YAAY,SAAU;AAAA,QACpE,WAAW,eAAe;AAExB,eAAK,SAAS,KAAK,GAAI,OAAM,KAAK,KAAM,KAAM,GAAI;AAAA,QACpD;AAEA,wBAAgB;AAGhB,YAAI,YAAY,KAAM;AACpB,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM,KAAK,SAAS;AAAA,QACtB,WAAW,YAAY,MAAO;AAC5B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,IAAM;AAAA,YACnB,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,WAAW,YAAY,OAAS;AAC9B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,KAAM;AAAA,YACnB,aAAa,IAAM,KAAO;AAAA,YAC1B,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,WAAW,YAAY,SAAU;AAC/B,eAAK,SAAS,KAAK,EAAG;AACtB,gBAAM;AAAA,YACJ,aAAa,KAAO;AAAA,YACpB,aAAa,KAAM,KAAO;AAAA,YAC1B,aAAa,IAAM,KAAO;AAAA,YAC1B,YAAY,KAAO;AAAA,UACrB;AAAA,QACF,OAAO;AACL,gBAAM,IAAI,MAAM,oBAAoB;AAAA,QACtC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAc,KAAK;AAC1B,UAAI,YAAY,CAAC;AACjB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAEnC,kBAAU,KAAK,IAAI,WAAW,CAAC,IAAI,GAAI;AAAA,MACzC;AACA,aAAO;AAAA,IACT;AAEA,aAAS,eAAgB,KAAK,OAAO;AACnC,UAAI,GAAG,IAAI;AACX,UAAI,YAAY,CAAC;AACjB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AACnC,aAAK,SAAS,KAAK,EAAG;AAEtB,YAAI,IAAI,WAAW,CAAC;AACpB,aAAK,KAAK;AACV,aAAK,IAAI;AACT,kBAAU,KAAK,EAAE;AACjB,kBAAU,KAAK,EAAE;AAAA,MACnB;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,KAAK;AAC3B,aAAO,OAAO,YAAY,YAAY,GAAG,CAAC;AAAA,IAC5C;AAEA,aAAS,WAAY,KAAK,KAAK,QAAQ,QAAQ;AAC7C,eAAS,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC/B,YAAK,IAAI,UAAU,IAAI,UAAY,KAAK,IAAI,OAAS;AACrD,YAAI,IAAI,MAAM,IAAI,IAAI,CAAC;AAAA,MACzB;AACA,aAAO;AAAA,IACT;AAKA,aAAS,WAAY,KAAKO,OAAM;AAC9B,aAAO,eAAeA,SACnB,OAAO,QAAQ,IAAI,eAAe,QAAQ,IAAI,YAAY,QAAQ,QACjE,IAAI,YAAY,SAASA,MAAK;AAAA,IACpC;AACA,aAAS,YAAa,KAAK;AAEzB,aAAO,QAAQ;AAAA,IACjB;AAIA,QAAI,sBAAuB,WAAY;AACrC,UAAI,WAAW;AACf,UAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,YAAI,MAAM,IAAI;AACd,iBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AAC3B,gBAAM,MAAM,CAAC,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC;AAAA,QAC3C;AAAA,MACF;AACA,aAAO;AAAA,IACT,EAAG;AAAA;AAAA;;;ACxxDH;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AACA,QAAIC,UAAS,MAAM;AACjB,UAAI,aAAa,OAAO,aAAa,eAAe,SAAS,gBAAgB,SAAS,cAAc,MAAM;AAC1G,UAAI,OAAO,eAAe,YAAa,gBAAe;AACtD,aACF,SAAS,YAAY,CAAC,GAAG;AAgBzB,YAAI,SAAS;AAGb,YAAI,qBAAqB;AACzB,eAAO,OAAO,IAAI,IAAI,QAAQ,CAAC,SAAS,WAAW;AACjD,gCAAsB;AACtB,+BAAqB;AAAA,QACvB,CAAC;AACD,SAAC,WAAU,SAAQ,8BAA6B,yBAAwB,uBAAsB,mDAAkD,oDAAmD,2BAA0B,gCAA+B,oBAAmB,sBAAqB,YAAW,YAAW,0BAAyB,cAAa,SAAQ,sBAAsB,EAAE,QAAQ,CAAC,SAAS;AAChZ,cAAI,CAAC,OAAO,yBAAyB,OAAO,OAAO,GAAG,IAAI,GAAG;AAC3D,mBAAO,eAAe,OAAO,OAAO,GAAG,MAAM;AAAA,cAC3C,KAAK,MAAM,MAAM,qBAAqB,OAAO,+IAA+I;AAAA,cAC5L,KAAK,MAAM,MAAM,qBAAqB,OAAO,+IAA+I;AAAA,YAC9L,CAAC;AAAA,UACH;AAAA,QACF,CAAC;AAKC,YAAI,CAAC,OAAO,2BAA2B;AACrC,iBAAO,4BAA4B;AAAA,QACrC;AAEA,eAAO;AACP,SAAC,WAAW;AAEV,cAAI,OAAO,wBAAwB,KAAK,OAAO,KAAK,EAAG;AACvD,cAAI,cAAc,SAAS,UAAU;AAEnC,gBAAI,eAAe;AACnB,gBAAI,OAAO,WAAW,UAAU;AAC9B,6BAAe,OAAO,oBAAoB,EAAE,OAAO,SAAS,SAAS,SAAS,EAAE,UAAU,GAAG,OAAO,SAAS,SAAS,SAAS,EAAE,YAAY,GAAG,CAAC,IAAI,GAAG;AAAA,YAC1J,WAAW,OAAO,YAAY,eAAe,OAAO,aAAa,aAAa;AAE5E,6BAAe,mBAAmB,SAAS,SAAS,SAAS,EAAE,UAAU,GAAG,SAAS,SAAS,SAAS,EAAE,YAAY,GAAG,CAAC,IAAI,GAAG;AAAA,YAClI;AACA,gBAAI,eAAe;AACnB,gBAAI,sBAAsB;AAC1B,gBAAI,OAAO,OAAO,mBAAmB,MAAM,cAAc,CAAC,OAAO,YAAY,GAAG;AAC9E,qBAAO,YAAY,IAAI,OAAO,mBAAmB;AACjD,kBAAI,kIAAkI;AAAA,YACxI;AACA,gBAAI,sBAAsB,OAAO,YAAY,IAAI,OAAO,YAAY,EAAE,qBAAqB,EAAE,IAAI;AACvG,gBAAI,sBAAsB,SAAS,qBAAqB;AAElD,qBAAS,mBAAmB,aAAa,aAAa,UAAU,SAAS;AACvE,kBAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa,YAAY,OAAO,QAAQ,SAAS,SAAS,UAAU;AACpH,wCAAc,SAAS,aAAa,SAASC,MAAK,UAAU;AAC1D,sBAAIA,MAAK;AACP,4BAAQA,IAAG;AAAA,kBACb,OAAO;AACL,6BAAS,SAAS,MAAM;AAAA,kBAC1B;AAAA,gBACF,CAAC;AACD;AAAA,cACF;AACA,kBAAI,MAAM,IAAI,eAAe;AAC7B,kBAAI,KAAK,OAAO,aAAa,IAAI;AACjC,kBAAI,eAAe;AACnB,kBAAI,aAAa,SAAS,OAAO;AAC/B,oBAAI,MAAM;AACV,oBAAI,OAAO;AACX,oBAAI,MAAM,MAAO,QAAO,MAAM;AAC9B,oBAAI,MAAM,QAAQ;AAChB,sBAAI,CAAC,IAAI,YAAY;AACnB,wBAAI,aAAa;AACjB,wBAAI,CAAC,OAAO,kBAAmB,QAAO,oBAAoB,CAAC;AAC3D,2BAAO,kBAAkB,GAAG,IAAI;AAAA,sBAC9B,QAAQ,MAAM;AAAA,sBACd,OAAO;AAAA,oBACT;AAAA,kBACF,OAAO;AACL,2BAAO,kBAAkB,GAAG,EAAE,SAAS,MAAM;AAAA,kBAC/C;AACA,sBAAI,QAAQ;AACZ,sBAAI,SAAS;AACb,sBAAI,MAAM;AACV,2BAAS,YAAY,OAAO,mBAAmB;AAC/C,wBAAI,OAAO,OAAO,kBAAkB,QAAQ;AAC1C,6BAAS,KAAK;AACd,8BAAU,KAAK;AACf;AAAA,kBACF;AACA,0BAAQ,KAAK,KAAK,QAAQ,OAAO,4BAA0B,GAAG;AAC9D,sBAAI,OAAO,WAAW,EAAG,QAAO,WAAW,EAAE,wBAAwB,MAAM,IAAI,KAAK,GAAG;AAAA,gBACzF,WAAW,CAAC,OAAO,mBAAmB;AACpC,sBAAI,OAAO,WAAW,EAAG,QAAO,WAAW,EAAE,qBAAqB;AAAA,gBACpE;AAAA,cACF;AACA,kBAAI,UAAU,SAAS,OAAO;AAC5B,sBAAM,IAAI,MAAM,uBAAuB,WAAW;AAAA,cACpD;AACA,kBAAI,SAAS,SAAS,OAAO;AAC3B,oBAAI,IAAI,UAAU,OAAO,IAAI,UAAU,OAAO,IAAI,UAAU,OAAQ,IAAI,UAAU,KAAK,IAAI,UAAW;AACpG,sBAAI,cAAc,IAAI;AACtB,2BAAS,WAAW;AAAA,gBACtB,OAAO;AACL,wBAAM,IAAI,MAAM,IAAI,aAAa,QAAQ,IAAI,WAAW;AAAA,gBAC1D;AAAA,cACF;AACA,kBAAI,KAAK,IAAI;AAAA,YACf;AAAC;AAED,qBAAS,YAAY,OAAO;AAC1B,sBAAQ,MAAM,kBAAkB,KAAK;AAAA,YACvC;AAAC;AAED,gBAAI,kBAAkB;AACtB,gBAAI,UAAU,OAAO,qBAAqB,IAAI,OAAO,qBAAqB,EAAE,qBAAqB,mBAAmB,IAAI;AAExH,gBAAI,CAAC,QAAS,oBAAmB,qBAAqB,qBAAqB,SAAS,MAAM;AACxF,kBAAI,iBAAiB;AACnB,gCAAgB,IAAI;AACpB,kCAAkB;AAAA,cACpB,OAAO;AACL,0BAAU;AAAA,cACZ;AAAA,YACF,GAAG,WAAW;AAEhB,qBAAS,YAAY;AAEnB,uBAASC,QAAO,OAAO,KAAK;AAC1B,oBAAI,CAAC,MAAO,OAAM,MAAM,IAAI,MAAM,EAAE;AAAA,cACtC;AACN,qBAAO,eAAe,EAAE,KAAK,gBAAgB,MAAM,IAAI;AACvD,qBAAO,eAAe,EAAE,iBAAiB,SAAS,MAAM,IAAI;AAC5D,qBAAO,eAAe,EAAE,iBAAiB,SAAS,MAAM,IAAI;AAC5D,qBAAO,eAAe,EAAE,iBAAiB,OAAO,MAAM,IAAI;AAC1D,qBAAO,eAAe,EAAE,iBAAiB,WAAW,MAAM,IAAI;AAC9D,qBAAO,eAAe,EAAE,iBAAiB,WAAW,MAAM,IAAI;AAC9D,qBAAO,eAAe,EAAE,yBAAyB,UAAU,MAAM,IAAI;AAG/D,uBAAS,YAAY,OAAO,KAAK,OAAO;AACtC,qBAAK,QAAQ;AACb,qBAAK,MAAM;AACX,qBAAK,QAAQ;AAAA,cACf;AACA,0BAAY,YAAY;AAAA,gBACtB,UAAU,CAAC;AAAA,gBACX,MAAM,SAAS,MAAM,MAAM;AACzB,uBAAK,OAAO;AACZ,uBAAK,SAAS,IAAI,IAAI;AACtB,yBAAO,kBAAkB,EAAE,MAAM,KAAK,IAAI,EAAE;AAAA,gBAC9C;AAAA,gBACA,MAAM,WAAW;AAAA,gBAAC;AAAA,gBAClB,QAAQ,WAAW;AACjB,sBAAI,YAAY,KAAK,UAAU,SAAS,KAAK,OAAO,KAAK,GAAG;AAC5D,uBAAK,OAAO,SAAS;AAAA,gBACvB;AAAA,gBACA,QAAQ,SAAS,WAAW;AAC1B,sBAAI,OAAO;AAEX,yBAAO,mBAAmB,EAAE,KAAK,MAAM,MAAM,WAAW,MAAM,MAAM,IAAI;AACxE,yBAAO,qBAAqB,EAAE,MAAM,KAAK,IAAI,EAAE;AAC/C,uBAAK,SAAS,KAAK,IAAI,IAAI;AAAA,gBAC7B;AAAA,cACF;AAEA,kBAAI,QAAQ,SAAS,OAAO;AAC5B,uBAASC,KAAI,GAAGA,KAAI,MAAM,QAAQ,EAAEA,IAAG;AACrC,oBAAI,YAAY,MAAMA,EAAC,EAAE,OAAO,GAAG,MAAMA,EAAC,EAAE,KAAK,GAAG,MAAMA,EAAC,EAAE,OAAO,KAAK,CAAC,EAAE,KAAK,OAAO,MAAMA,EAAC,EAAE,UAAU,CAAC;AAAA,cAC9G;AAEA,uBAAS,mBAAmB,aAAa;AACvC,gBAAAD,QAAO,aAAa,2BAA2B;AAC/C,gBAAAA,QAAO,YAAY,YAAY,SAAS,YAAY,MAAM,iCAAiC;AAC3F,oBAAI,YAAY,IAAI,WAAW,WAAW;AAC1C,oBAAI;AAEF,4BAAY,UAAU,YAAY;AAClC,oBAAIE,SAAQ,SAAS,OAAO;AAC5B,yBAASD,KAAI,GAAGA,KAAIC,OAAM,QAAQ,EAAED,IAAG;AACrC,8BAAY,UAAU,SAASC,OAAMD,EAAC,EAAE,QAAQ,EAAE,OAAO;AAAA,gBAC3D;AAAW,uBAAO,qBAAqB,EAAE,qBAAqB;AAAA,cAElE;AAAC;AACD,qBAAO,kBAAkB,EAAE,qBAAqB;AAEhD,kBAAI,CAAC,OAAO,eAAgB,QAAO,iBAAiB,CAAC;AAErD,qBAAO,eAAe,YAAY,IAAI,EAAC,WAAW,MAAK;AACvD,kBAAI,SAAS;AACX,mCAAmB,OAAO;AAC1B,0BAAU;AAAA,cACZ,OAAO;AACL,kCAAkB;AAAA,cACpB;AAAA,YAEF;AACA,gBAAI,OAAO,WAAW,GAAG;AACvB,wBAAU;AAAA,YACZ,OAAO;AACL,kBAAI,CAAC,OAAO,QAAQ,EAAG,QAAO,QAAQ,IAAI,CAAC;AAC3C,qBAAO,QAAQ,EAAE,KAAK,SAAS;AAAA,YACjC;AAAA,UAEA;AACA,sBAAY,EAAC,SAAS,CAAC,EAAC,YAAY,qDAAqD,SAAS,GAAG,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,2CAA2C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,gCAAgC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,2CAA2C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,kCAAkC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,+BAA+B,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,0CAA0C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,0DAA0D,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,qDAAqD,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,2DAA2D,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,mDAAmD,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,uDAAuD,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,+CAA+C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wCAAwC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,0CAA0C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,6CAA6C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,2CAA2C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,mCAAmC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wCAAwC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wDAAwD,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,qCAAqC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,yCAAyC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,yCAAyC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,qCAAqC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,uCAAuC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,uCAAuC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wDAAwD,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wCAAwC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,2CAA2C,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,sCAAsC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wCAAwC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,wCAAwC,SAAS,QAAQ,OAAO,OAAM,GAAG,EAAC,YAAY,uCAAuC,SAAS,QAAQ,OAAO,OAAM,CAAC,GAAG,uBAAuB,OAAM,CAAC;AAAA,QAE71G,GAAG;AAKD,YAAI,OAAO,wBAAwB,KAAK,OAAO,KAAK,EAAG,QAAO,QAAQ,IAAI,CAAC;AAC3E,YAAI,sBAAsB,OAAO,QAAQ,EAAE,MAAM;AACnD,YAAI,OAAQ,WAAY,YAAY,OAAQ,OAAO,gBAAiB,UAAU;AAC5E,iBAAO,cAAc;AAAA,QACzB,WACS,OAAQ,WAAY,YACzB,OAAQ,OAAO,eAAgB,YAC/B,OAAQ,OAAO,WAAW,gBAAiB,UAAU;AACrD,iBAAO,cAAc,OAAO,WAAW;AAAA,QAC3C,OACK;AACD,iBAAO,cAAc,EAAE,MAAM,WAAY;AAAA,UAAE,GAAG,SAAS,WAAY;AAAA,UAAE,EAAE;AAAA,QAC3E;AACA,YAAI;AACJ,SAAC,SAAUE,4BAA2B;AAClC,UAAAA,2BAA0BA,2BAA0B,SAAS,IAAI,CAAC,IAAI;AACtE,UAAAA,2BAA0BA,2BAA0B,UAAU,IAAI,CAAC,IAAI;AACvE,UAAAA,2BAA0BA,2BAA0B,WAAW,IAAI,CAAC,IAAI;AACxE,UAAAA,2BAA0BA,2BAA0B,OAAO,IAAI,CAAC,IAAI;AAAA,QACxE,GAAG,8BAA8B,4BAA4B,CAAC,EAAE;AAChE,YAAI;AACJ,SAAC,SAAUC,6BAA4B;AACnC,UAAAA,4BAA2BA,4BAA2B,KAAK,IAAI,CAAC,IAAI;AACpE,UAAAA,4BAA2BA,4BAA2B,MAAM,IAAI,CAAC,IAAI;AAAA,QACzE,GAAG,+BAA+B,6BAA6B,CAAC,EAAE;AAAA,QAClE,MAAM,aAAa;AAAA,UACf,YAAY,QAAQ,KAAK;AACrB,iBAAK,QAAQ,0BAA0B;AACvC,iBAAK,aAAa;AAClB,iBAAK,iBAAiB;AACtB,iBAAK,SAAS;AACd,iBAAK,MAAM;AACX,iBAAK,kBAAkB,IAAI,gBAAgB;AAC3C,iBAAK,cAAc,KAAK,gBAAgB;AAAA,UAC5C;AAAA,UACA,MAAM,WAAW,MAAM;AACnB,gBAAI,iBAAiB;AACrB,kBAAM,SAAS,CAAC;AAChB,kBAAM,YAAY,CAAC,UAAU;AACzB,qBAAO,KAAK,KAAK;AACjB,gCAAkB,MAAM;AACxB,mBAAK,iBAAiB;AAAA,YAC1B;AACA,gBAAI,QAAQ,MAAM;AAAA,YAClB,WACS,eAAe,MAAM;AAC1B,oBAAM,SAAS,KAAK,UAAU;AAC9B,yBAAS;AACL,sBAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAC1C,oBAAI;AACA;AACJ,oBAAI,KAAK,YAAY,SAAS;AAC1B,wBAAM,OAAO,OAAO;AACpB,yBAAO,YAAY;AACnB,wBAAM,IAAI,MAAM,KAAK,YAAY,MAAM;AAAA,gBAC3C;AACA,0BAAU,KAAK;AAAA,cACnB;AACA,qBAAO,YAAY;AAAA,YACvB,OACK;AACD,oBAAM,cAAc,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,YAAY,MAAM,CAAC;AACzE,mBAAK,YAAY,iBAAiB,SAAS,aAAa,EAAE,MAAM,KAAK,CAAC;AACtE,kBAAI;AACA,sBAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AACnC,uBAAK,GAAG,QAAQ,SAAS;AACzB,uBAAK,GAAG,OAAO,MAAM,QAAQ,CAAC;AAC9B,uBAAK,GAAG,SAAS,CAACL,SAAQ,OAAOA,IAAG,CAAC;AAAA,gBACzC,CAAC;AAAA,cACL,UACA;AACI,qBAAK,YAAY,oBAAoB,SAAS,WAAW;AAAA,cAC7D;AAAA,YACJ;AACA,kBAAM,eAAe,IAAI,WAAW,cAAc;AAClD,gBAAI,WAAW;AACf,uBAAW,SAAS,QAAQ;AACxB,2BAAa,IAAI,OAAO,QAAQ;AAChC,0BAAY,MAAM;AAAA,YACtB;AACA,mBAAO,KAAK,OAAO,YAAY;AAAA,UACnC;AAAA,UACA,QAAQ;AACJ,gBAAI,KAAK,UAAU,GAAG;AAClB,mBAAK,gBAAgB,MAAM,eAAe;AAAA,YAC9C;AAAA,UACJ;AAAA,UACA,YAAY;AACR,mBAAO,KAAK,UAAU,0BAA0B;AAAA,UACpD;AAAA,UACA,UAAU;AACN,mBAAO,KAAK,UAAU,0BAA0B;AAAA,UACpD;AAAA,UACA,aAAa;AACT,mBAAO,KAAK,UAAU,0BAA0B;AAAA,UACpD;AAAA,UACA,cAAc;AACV,mBAAO,KAAK,UAAU,0BAA0B;AAAA,UACpD;AAAA,UACA,WAAW;AACP,gBAAI,KAAK,YAAY;AACjB,qBAAO;AACX,gBAAI,KAAK,WAAW,GAAG;AACnB,oBAAM,eAAe,KAAK,OAAO;AACjC,oBAAM,gBAAgB,OAAO,QAAQ,YAAY;AACjD,qBAAO,OAAO,IAAI,KAAK,QAAQ,aAAa;AAC5C,oBAAM,mBAAmB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG;AAAA,gBAAE,OAAO,0BAA0B;AAAA,gBAAW;AAAA,gBAC1G;AAAA,cAAa,CAAC;AAClB,qBAAO,OAAO,MAAM,gBAAgB;AACpC,qBAAO;AAAA,YACX;AACA,mBAAO;AAAA,UACX;AAAA,UACA,OAAO,QAAQ;AACX,kBAAM,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,0BAA0B,UAAU,QAAQ,YAAY,OAAO,OAAO,CAAC;AAC/I,mBAAO,OAAO,OAAO,MAAM,eAAe;AAAA,UAC9C;AAAA,UACA,KAAK,OAAO;AACR,kBAAM,iBAAiB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,0BAA0B,OAAO,MAAM,CAAC;AAC/G,mBAAO,OAAO,OAAO,MAAM,cAAc;AAAA,UAC7C;AAAA,QACJ;AAAA,QACA,MAAM,kBAAkB;AAAA,UACpB,cAAc;AACV,iBAAK,cAAc;AACnB,iBAAK,oBAAoB;AACzB,iBAAK,aAAa,oBAAI,IAAI;AAC1B,iBAAK,WAAW,oBAAI,IAAI;AACxB,iBAAK,aAAa;AAAA,UACtB;AAAA,UACA,OAAO,MAAMM,OAAM;AACf,gBAAI,KAAK,YAAY;AACjB,qBAAO,KAAK,WAAW,MAAMA,KAAI;AAAA,YACrC,OACK;AACD,qBAAO,MAAM,MAAMA,KAAI;AAAA,YAC3B;AAAA,UACJ;AAAA,UACA,SAAS,UAAU;AACf,iBAAK,aAAa;AAAA,UACtB;AAAA,UACA,WAAW,QAAQ;AACf,mBAAO,KAAK,WAAW,IAAI,MAAM;AAAA,UACrC;AAAA,UACA,cAAc,QAAQ;AAClB,kBAAMC,WAAU,KAAK,WAAW,IAAI,MAAM;AAC1C,gBAAIA,aAAY,QAAQA,aAAY,SAAS,SAASA,SAAQ,UAAU,GAAG;AACvE,cAAAA,SAAQ,MAAM;AAAA,YAClB;AACA,mBAAO,KAAK,WAAW,OAAO,MAAM;AAAA,UACxC;AAAA,UACA,QAAQ;AACJ,uBAAWA,YAAW,KAAK,WAAW,OAAO,GAAG;AAC5C,kBAAIA,SAAQ,UAAU,GAAG;AACrB,gBAAAA,SAAQ,MAAM;AAAA,cAClB;AAAA,YACJ;AACA,iBAAK,WAAW,MAAM;AACtB,iBAAK,SAAS,MAAM;AAAA,UACxB;AAAA,UACA,MAAM,QAAQ,YAAY,WAAW,sBAAsB,mBAAmB,oBAAoB,mBAAmB,oBAAoB,mBAAmB;AACxJ,kBAAM,YAAY,OAAO,aAAa,YAAY,SAAS;AAC3D,kBAAM,SAAS,KAAK;AACpB,kBAAMA,WAAU,IAAI,aAAa,QAAQ,SAAS;AAClD,iBAAK,WAAW,IAAI,QAAQA,QAAO;AACnC,gBAAI,UAAU,MAAM,QAAQ,GAAG;AAC3B,mBAAK,WAAWA,QAAO,EAAE,MAAM,CAAC,UAAU;AACtC,gBAAAA,SAAQ,KAAK,KAAK;AAAA,cACtB,CAAC;AAAA,YACL,OACK;AACD,mBAAK,aAAaA,UAAS,QAAQ,sBAAsB,mBAAmB,oBAAoB,mBAAmB,oBAAoB,iBAAiB,EAAE,MAAM,CAAC,UAAU;AACvK,gBAAAA,SAAQ,KAAK,KAAK;AAAA,cACtB,CAAC;AAAA,YACL;AACA,mBAAOA;AAAA,UACX;AAAA,UACA,MAAM,WAAWA,UAAS;AACtB,gBAAI,OAAO,WAAW;AAClB,oBAAM,IAAI,MAAM,qCAAqC;AACzD,kBAAMC,MAAK;AACX,kBAAM,EAAE,cAAc,IAAI;AAC1B,kBAAM,aAAaA,IAAG,iBAAiB,cAAcD,SAAQ,GAAG,CAAC;AACjE,mBAAOA,SAAQ,WAAW,UAAU;AAAA,UACxC;AAAA,UACA,MAAM,aAAaA,UAAS,QAAQ,sBAAsB,mBAAmB,oBAAoB,mBAAmB,oBAAoB,mBAAmB;AACvJ,kBAAM,cAAc,OAAO,aAAa,oBAAoB,iBAAiB;AAC7E,kBAAM,UAAU,KAAK,WAAW,sBAAsB,iBAAiB;AACvE,kBAAM,OAAO,WAAW,2BAA2B,OAC7C,IAAI,WAAW,IAAI,WAAW,OAAO,OAAO,QAAQ,oBAAoB,iBAAiB,CAAC,IAC1F;AACN,kBAAM,WAAW,MAAM,KAAK,OAAOA,SAAQ,KAAK;AAAA,cAC5C,QAAQ,2BAA2B,MAAM;AAAA,cACzC;AAAA,cACA;AAAA,cACA,MAAM;AAAA,cACN;AAAA,cACA,QAAQA,SAAQ;AAAA,YACpB,CAAC;AACD,gBAAI,SAAS,UAAU,OAAO,SAAS,UAAU,KAAK;AAClD,kBAAI,gBAAgB;AACpB,kBAAI,SAAS,QAAQ,IAAI,gBAAgB,GAAG;AACxC,gCAAgB,CAAC,SAAS,QAAQ,IAAI,gBAAgB;AAAA,cAC1D;AACA,cAAAA,SAAQ,aAAa;AACrB,qBAAOA,SAAQ,WAAW,SAAS,IAAI;AAAA,YAC3C,OACK;AACD,qBAAOA,SAAQ,KAAK,SAAS,UAAU;AAAA,YAC3C;AAAA,UACJ;AAAA,UACA,WAAW,SAAS,OAAO;AACvB,kBAAM,UAAU,CAAC;AACjB,qBAASL,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC5B,oBAAM,eAAe,OAAO,SAAU,UAAUA,KAAI,GAAI,KAAK;AAC7D,oBAAM,SAAS,KAAK,SAAS,IAAI,YAAY;AAC7C,sBAAQ,OAAO,GAAG,IAAI,OAAO;AAAA,YACjC;AACA,mBAAO;AAAA,UACX;AAAA,UACA,aAAa,YAAY,WAAW,cAAc,aAAa;AAC3D,kBAAM,MAAM,OAAO,aAAa,YAAY,SAAS;AACrD,kBAAM,QAAQ,OAAO,aAAa,cAAc,WAAW;AAC3D,kBAAM,SAAS,KAAK;AACpB,iBAAK,SAAS,IAAI,QAAQ,EAAE,KAAK,MAAM,CAAC;AACxC,mBAAO;AAAA,UACX;AAAA,UACA,aAAa,QAAQ;AACjB,mBAAO,KAAK,SAAS,OAAO,MAAM;AAAA,UACtC;AAAA,QACJ;AACA,eAAO,mCAAmC,IAAI,kBAAkB;AAEhE,eAAO,qCAAqC,oBAAI,IAAI;AACpD,eAAO,qCAAqC,oBAAI,IAAI;AACpD,eAAO,qCAAqC,oBAAI,IAAI;AACpD,eAAO,qCAAqC,oBAAI,IAAI;AAEpD,eAAO,8CAA8C;AACrD,eAAO,8CAA8C;AACrD,eAAO,8CAA8C;AACrD,eAAO,8CAA8C;AAErD,eAAO,0CAA0C,SAAU,QAAQ;AAEjE,gBAAM,YAAY,OAAO,QAAQ,CAAC;AAClC,gBAAMO,SAAQ,OAAO,QAAQ,SAAS,YAAY,GAAG,YAAY,IAAI,CAAC;AACtE,UAAAA,OAAM,CAAC,IAAI,OAAO,SAAS,OAAO,SAAS,OAAO,OAAO,OAAO,OAAO;AACvE,cAAI,OAAO,OAAO;AAChB,kBAAM,UAAU,IAAI,YAAY;AAChC,kBAAM,aAAa,QAAQ,OAAO,OAAO,KAAK;AAC9C,kBAAM,YAAY,OAAO,QAAQ,WAAW,SAAS,CAAC;AACtD,kBAAMC,UAAS,OAAO,OAAO,SAAS,WAAW,YAAY,WAAW,SAAS,CAAC;AAClF,qBAASR,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAK;AAC1C,cAAAQ,QAAOR,EAAC,IAAI,WAAWA,EAAC;AAAA,YAC1B;AACA,YAAAQ,QAAO,WAAW,MAAM,IAAI;AAC5B,YAAAD,OAAM,CAAC,IAAI;AAAA,UACb,OAAO;AACL,YAAAA,OAAM,CAAC,IAAI;AAAA,UACb;AACA,iBAAO;AAAA,QACT;AAEA,eAAO,0CAA0C,SAAU,QAAQ,iBAAiB;AAClF,gBAAM,eAAe,IAAI,aAAa;AAAA,YACpC,QAAQ,CAAC,UAAU;AACjB,oBAAM,WAAW,aAAa;AAE9B,kBAAI,YAAY;AAChB,kBAAI,aAAa,kBAAkB;AACjC,4BAAY;AAAA,cACd,WAAW,aAAa,gBAAgB,aAAa,gBAAgB;AACnE,4BAAY;AAAA,cACd,WAAW,aAAa,mBAAmB,SAAS,QAAQ;AAC1D,4BAAY;AAAA,cACd;AAEA,kBAAI,CAAC,WAAW;AACd,oBAAI,KAAK,OAAO;AAChB,sBAAM,eAAe,aAAa,gBAAgB,SAAS;AAC3D,sBAAM,cAAc,GAAG,aAAa,GAAG,kBAAkB;AACzD,mBAAG,YAAY,GAAG,YAAY,SAAS,YAAY,CAAC;AACpD,mBAAG;AAAA,kBACD,GAAG;AAAA,kBACH;AAAA,kBACA,GAAG;AAAA,kBACH,GAAG;AAAA,kBACH,GAAG;AAAA,kBACH;AAAA,gBACF;AACA,mBAAG,YAAY,GAAG,YAAY,WAAW;AAAA,cAC3C;AAGA,oBAAM,MAAM;AACZ,2BAAa;AACb,qBAAO;AAAA,gBACL;AAAA,gBACA,aAAa;AAAA,gBACb;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,YACA,OAAO,CAAC,MAAM;AACZ,2BAAa,kBAAkB;AAC/B,sBAAQ,MAAM,CAAC;AAAA,YACjB;AAAA,UACF,CAAC;AAED,uBAAa,gBAAgB;AAC7B,uBAAa,iBAAiB;AAC9B,uBAAa,mBAAmB;AAEhC,iBAAO;AAAA,QACT;AAEA,eAAO,0CAA0C,SAC/C,eACA,gBACA,cACA;AACA,gBAAM,eAAe,IAAI,aAAa;AAAA,YACpC,QAAQ,CAAC,SAAS;AAChB,kBAAI,aAAa,UAAU;AACzB,qBAAK,MAAM;AACX;AAAA,cACF;AAEA,oBAAM,YAAY,OAAO,QAAQ;AAAA,gBAC/B,gBAAgB;AAAA,gBAChB,gBAAgB,IAAI;AAAA,cACtB;AACA,oBAAM,aAAa,OAAO,QAAQ;AAAA,gBAChC,iBAAiB;AAAA,gBACjB,iBAAiB,IAAI;AAAA,cACvB;AAEA,oBAAM,kBAAkB,KAAK,qBAAqB,IAAI,IAAI;AAE1D,kBAAI,KAAK,WAAW,cAAc;AAChC,oBAAI,cAAc,aAAa,gBAAgB;AAC/C,oBAAI,cAAc,KAAK,kBAAkB,cAAc;AACrD,uBAAK,OAAO,UAAU,SAAS,WAAW,GAAG;AAAA,oBAC3C,YAAY;AAAA,oBACZ,YAAY,KAAK;AAAA,kBACnB,CAAC;AACD,uBAAK,OAAO,WAAW,SAAS,WAAW,GAAG;AAAA,oBAC5C,YAAY;AAAA,oBACZ,YAAY,KAAK;AAAA,kBACnB,CAAC;AAAA,gBACH,OAAO;AACL,wBAAM,SAAS,eAAe;AAC9B,uBAAK,OAAO,UAAU,SAAS,WAAW,GAAG;AAAA,oBAC3C,YAAY;AAAA,oBACZ,YAAY;AAAA,kBACd,CAAC;AACD,uBAAK,OAAO,WAAW,SAAS,WAAW,GAAG;AAAA,oBAC5C,YAAY;AAAA,oBACZ,YAAY;AAAA,kBACd,CAAC;AACD,uBAAK,OAAO,WAAW,EAAE,YAAY,GAAG,aAAa,OAAO,CAAC;AAC7D,uBAAK,OAAO,YAAY,EAAE,YAAY,iBAAiB,aAAa,OAAO,CAAC;AAAA,gBAC9E;AACA,6BAAa,iBAAiB,KAAK;AAAA,cACrC,WAAW,KAAK,WAAW,cAAc;AACvC,oBAAI,KAAK,qBAAqB,GAAG;AAC/B,wBAAM,SAAS,IAAI,WAAW,KAAK,cAAc;AACjD,uBAAK,OAAO,QAAQ,EAAE,YAAY,EAAE,CAAC;AACrC,2BAAS,aAAa,GAAG,aAAa,KAAK,gBAAgB,cAAc;AACvE,0BAAM,SAAS,OAAO,UAAU,IAAI;AACpC,wBAAI,cAAc,aAAa,gBAAgB;AAC/C,8BAAU,WAAW,IAAI;AACzB,+BAAW,WAAW,IAAI;AAC1B,iCAAa;AAAA,kBACf;AAAA,gBACF,OAAO;AACL,wBAAM,aAAa,IAAI,WAAW,KAAK,cAAc;AACrD,wBAAM,cAAc,IAAI,WAAW,KAAK,cAAc;AACtD,uBAAK,OAAO,YAAY,EAAE,YAAY,EAAE,CAAC;AACzC,uBAAK,OAAO,aAAa,EAAE,YAAY,EAAE,CAAC;AAC1C,2BAAS,aAAa,GAAG,aAAa,KAAK,gBAAgB,cAAc;AACvE,wBAAI,cAAc,aAAa,gBAAgB;AAC/C,8BAAU,WAAW,IAAI,WAAW,UAAU,IAAI;AAClD,+BAAW,WAAW,IAAI,YAAY,UAAU,IAAI;AACpD,iCAAa;AAAA,kBACf;AAAA,gBACF;AAAA,cACF,WAAW,KAAK,WAAW,OAAO;AAChC,sBAAM,SAAS,IAAI,WAAW,KAAK,iBAAiB,KAAK,gBAAgB;AACzE,qBAAK,OAAO,QAAQ,EAAE,YAAY,EAAE,CAAC;AACrC,oBAAI,KAAK,qBAAqB,GAAG;AAC/B,2BAAS,aAAa,GAAG,aAAa,KAAK,gBAAgB,cAAc;AACvE,0BAAM,SAAS,OAAO,UAAU,IAAI;AACpC,wBAAI,cAAc,aAAa,gBAAgB;AAC/C,8BAAU,WAAW,IAAI;AACzB,+BAAW,WAAW,IAAI;AAC1B,iCAAa;AAAA,kBACf;AAAA,gBACF,OAAO;AACL,2BAAS,aAAa,GAAG,aAAa,KAAK,gBAAgB,cAAc;AACvE,wBAAI,cAAc,aAAa,gBAAgB;AAC/C,8BAAU,WAAW,IAAI,OAAO,aAAa,KAAK,mBAAmB,CAAC,IAAI;AAC1E,+BAAW,WAAW,IAAI,OAAO,aAAa,KAAK,mBAAmB,CAAC,IAAI;AAC3E,iCAAa;AAAA,kBACf;AAAA,gBACF;AAAA,cACF,OAAO;AACL,wBAAQ,MAAM,6BAA6B,KAAK,MAAM;AAAA,cACxD;AAGA,mBAAK,MAAM;AAAA,YACb;AAAA,YACA,OAAO,CAAC,MAAM;AACZ,2BAAa,kBAAkB;AAC/B,sBAAQ,MAAM,CAAC;AAAA,YACjB;AAAA,UACF,CAAC;AACD,uBAAa,gBAAgB;AAC7B,iBAAO;AAAA,QACT;AAEA,eAAO,sCAAsC;AAEzC,YAAI,CAAC,OAAO,QAAQ,EAAG,OAAM;AAC7B,4BAAoB,QAAQ,SAAS,MAAM;AACzC,cAAI,OAAO,QAAQ,EAAE,QAAQ,IAAI,IAAI,EAAG,OAAM;AAAA,QAChD,CAAC;AAQL,YAAI,kBAAkB,OAAO,OAAO,CAAC,GAAG,MAAM;AAE9C,YAAI,aAAa,CAAC;AAClB,YAAI,cAAc;AAClB,YAAI,QAAQ,CAAC,QAAQ,YAAY;AAC/B,gBAAM;AAAA,QACR;AAMA,YAAI,qBAAqB,OAAO,UAAU;AAC1C,YAAI,wBAAwB,OAAO,iBAAiB;AAGpD,YAAI,sBAAsB,OAAO,WAAW,YAAY,OAAO,QAAQ,YAAY,YAAY,OAAO,QAAQ,SAAS,QAAQ;AAC/H,YAAI,uBAAuB,CAAC,sBAAsB,CAAC,uBAAuB,CAAC;AAE3E,YAAI,OAAO,aAAa,GAAG;AACzB,gBAAM,IAAI,MAAM,kKAAkK;AAAA,QACpL;AAGA,YAAI,kBAAkB;AACtB,iBAAS,WAAW,MAAM;AACxB,cAAI,OAAO,YAAY,GAAG;AACxB,mBAAO,OAAO,YAAY,EAAE,MAAM,eAAe;AAAA,UACnD;AACA,iBAAO,kBAAkB;AAAA,QAC3B;AAGA,YAAI,OACA,WACA;AAEJ,YAAI,qBAAqB;AACvB,cAAI,OAAO,WAAW,eAAe,CAAC,QAAQ,WAAW,QAAQ,QAAQ,SAAS,OAAQ,OAAM,IAAI,MAAM,wLAAwL;AAElS,cAAI,cAAc,QAAQ,SAAS;AACnC,cAAI,iBAAiB,YAAY,MAAM,GAAG,EAAE,MAAM,GAAG,CAAC;AACtD,2BAAkB,eAAe,CAAC,IAAI,MAAU,eAAe,CAAC,IAAI,MAAQ,eAAe,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,IAAI;AAC9G,cAAI,aAAa;AACjB,cAAI,iBAAiB,QAAQ;AAC3B,kBAAM,IAAI,MAAM,yEAAyE,cAAc,GAAG;AAAA,UAC5G;AAQA,cAAI,KAAK;AACT,cAAI,WAAW;AAEf,cAAI,uBAAuB;AACzB,8BAAkB,SAAS,QAAQ,eAAe,IAAI;AAAA,UACxD,OAAO;AACL,8BAAkB,YAAY;AAAA,UAChC;AAGF,kBAAQ,CAAC,UAAU,WAAW;AAG5B,uBAAW,UAAU,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,UAAU,QAAQ;AAChF,mBAAO,GAAG,aAAa,UAAU,SAAS,SAAY,MAAM;AAAA,UAC9D;AAEA,uBAAa,CAAC,aAAa;AACzB,gBAAI,MAAM,MAAM,UAAU,IAAI;AAC9B,gBAAI,CAAC,IAAI,QAAQ;AACf,oBAAM,IAAI,WAAW,GAAG;AAAA,YAC1B;AACA,YAAAR,QAAO,IAAI,MAAM;AACjB,mBAAO;AAAA,UACT;AAEA,sBAAY,CAAC,UAAU,QAAQ,SAAS,SAAS,SAAS;AAExD,uBAAW,UAAU,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,SAAS,UAAU,QAAQ;AAChF,eAAG,SAAS,UAAU,SAAS,SAAY,QAAQ,CAACD,MAAK,SAAS;AAChE,kBAAIA,KAAK,SAAQA,IAAG;AAAA,kBACf,QAAO,SAAS,KAAK,SAAS,IAAI;AAAA,YACzC,CAAC;AAAA,UACH;AAEE,cAAI,CAAC,OAAO,aAAa,KAAK,QAAQ,KAAK,SAAS,GAAG;AACrD,0BAAc,QAAQ,KAAK,CAAC,EAAE,QAAQ,OAAO,GAAG;AAAA,UAClD;AAEA,uBAAa,QAAQ,KAAK,MAAM,CAAC;AAIjC,kBAAQ,CAAC,QAAQ,YAAY;AAC3B,oBAAQ,WAAW;AACnB,kBAAM;AAAA,UACR;AAAA,QAEF,WACI,sBAAsB;AAExB,cAAK,OAAO,WAAW,YAAY,OAAO,cAAY,cAAe,OAAO,UAAU,YAAY,OAAO,iBAAiB,WAAY,OAAM,IAAI,MAAM,wLAAwL;AAE9U,cAAI,OAAO,QAAQ,aAAa;AAC9B,oBAAQ;AAAA,UACV;AAEA,uBAAa,CAAC,MAAM;AAClB,gBAAI,OAAO,cAAc,YAAY;AACnC,qBAAO,IAAI,WAAW,WAAW,CAAC,CAAC;AAAA,YACrC;AACA,gBAAI,OAAO,KAAK,GAAG,QAAQ;AAC3B,YAAAC,QAAO,OAAO,QAAQ,QAAQ;AAC9B,mBAAO;AAAA,UACT;AAEA,sBAAY,CAAC,GAAG,QAAQ,YAAY;AAClC,uBAAW,MAAM,OAAO,WAAW,CAAC,CAAC,CAAC;AAAA,UACxC;AAEA,cAAI,OAAO,gBAAgB,aAAa;AACtC,uBAAW,eAAe,CAAC,OAAO;AAAA,YAAC;AAAA,UACrC;AAEA,cAAI,OAAO,cAAc,aAAa;AAEpC,uBAAW,aAAa,CAAC,MAAO,OAAO,KAAK,aAAc,EAAE,IAAI,MAAM;AAAA,UACxE;AAEA,cAAI,OAAO,cAAc,aAAa;AACpC,yBAAa;AAAA,UACf,WAAW,OAAO,aAAa,aAAa;AAC1C,yBAAa;AAAA,UACf;AAEA,cAAI,OAAO,QAAQ,YAAY;AAC7B,oBAAQ,CAAC,QAAQ,YAAY;AAU3B,yBAAW,MAAM;AACf,oBAAI,EAAE,mBAAmB,aAAa;AACpC,sBAAI,QAAQ;AACZ,sBAAI,WAAW,OAAO,WAAW,YAAY,QAAQ,OAAO;AAC1D,4BAAQ,CAAC,SAAS,QAAQ,KAAK;AAAA,kBACjC;AACA,sBAAI,6BAA6B,KAAK,EAAE;AAAA,gBAC1C;AACA,qBAAK,MAAM;AAAA,cACb,CAAC;AACD,oBAAM;AAAA,YACR;AAAA,UACF;AAEA,cAAI,OAAO,SAAS,aAAa;AAE/B,gBAAI,OAAO,WAAW,YAAa;AAAA,YAAiC,CAAC;AACrE,oBAAQ;AAAA,YAA8D;AACtE,oBAAQ,OAAO,QAAQ;AAAA,YAAgE,OAAO,YAAY,cAAc,WAAW;AAAA,UACrI;AAAA,QAEF,WAKI,sBAAsB,uBAAuB;AAC/C,cAAI,uBAAuB;AACzB,8BAAkB,KAAK,SAAS;AAAA,UAClC,WAAW,OAAO,YAAY,eAAe,SAAS,eAAe;AACnE,8BAAkB,SAAS,cAAc;AAAA,UAC3C;AAGA,cAAI,YAAY;AACd,8BAAkB;AAAA,UACpB;AAOA,cAAI,gBAAgB,WAAW,OAAO,GAAG;AACvC,8BAAkB;AAAA,UACpB,OAAO;AACL,8BAAkB,gBAAgB,OAAO,GAAG,gBAAgB,QAAQ,UAAU,EAAE,EAAE,YAAY,GAAG,IAAE,CAAC;AAAA,UACtG;AAEA,cAAI,EAAE,OAAO,UAAU,YAAY,OAAO,iBAAiB,YAAa,OAAM,IAAI,MAAM,wLAAwL;AAIhR;AAEF,oBAAQ,CAAC,QAAQ;AACb,kBAAI,MAAM,IAAI,eAAe;AAC7B,kBAAI,KAAK,OAAO,KAAK,KAAK;AAC1B,kBAAI,KAAK,IAAI;AACb,qBAAO,IAAI;AAAA,YACb;AAEA,gBAAI,uBAAuB;AACzB,2BAAa,CAAC,QAAQ;AACpB,oBAAI,MAAM,IAAI,eAAe;AAC7B,oBAAI,KAAK,OAAO,KAAK,KAAK;AAC1B,oBAAI,eAAe;AACnB,oBAAI,KAAK,IAAI;AACb,uBAAO,IAAI;AAAA;AAAA,kBAAsC,IAAI;AAAA,gBAAS;AAAA,cAChE;AAAA,YACF;AAEA,wBAAY,CAAC,KAAK,QAAQ,YAAY;AACpC,kBAAI,MAAM,IAAI,eAAe;AAC7B,kBAAI,KAAK,OAAO,KAAK,IAAI;AACzB,kBAAI,eAAe;AACnB,kBAAI,SAAS,MAAM;AACjB,oBAAI,IAAI,UAAU,OAAQ,IAAI,UAAU,KAAK,IAAI,UAAW;AAC1D,yBAAO,IAAI,QAAQ;AACnB;AAAA,gBACF;AACA,wBAAQ;AAAA,cACV;AACA,kBAAI,UAAU;AACd,kBAAI,KAAK,IAAI;AAAA,YACf;AAAA,UAGA;AAAA,QACF,OACA;AACE,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AAEA,YAAI,MAAM,OAAO,OAAO,KAAK,QAAQ,IAAI,KAAK,OAAO;AACrD,YAAI,MAAM,OAAO,UAAU,KAAK,QAAQ,MAAM,KAAK,OAAO;AAG1D,eAAO,OAAO,QAAQ,eAAe;AAGrC,0BAAkB;AAClB,+BAAuB;AAOvB,YAAI,OAAO,WAAW,EAAG,cAAa,OAAO,WAAW;AAAE,yBAAiB,aAAa,YAAY;AAEpG,YAAI,OAAO,aAAa,EAAG,eAAc,OAAO,aAAa;AAAE,yBAAiB,eAAe,aAAa;AAE5G,YAAI,OAAO,MAAM,EAAG,SAAQ,OAAO,MAAM;AAAE,yBAAiB,QAAQ,OAAO;AAI3E,QAAAA,QAAO,OAAO,OAAO,4BAA4B,KAAK,aAAa,qFAAqF;AACxJ,QAAAA,QAAO,OAAO,OAAO,sBAAsB,KAAK,aAAa,+EAA+E;AAC5I,QAAAA,QAAO,OAAO,OAAO,wBAAwB,KAAK,aAAa,iFAAiF;AAChJ,QAAAA,QAAO,OAAO,OAAO,sBAAsB,KAAK,aAAa,+EAA+E;AAC5I,QAAAA,QAAO,OAAO,OAAO,MAAM,KAAK,aAAa,qDAAqD;AAClG,QAAAA,QAAO,OAAO,OAAO,WAAW,KAAK,aAAa,8DAA8D;AAChH,QAAAA,QAAO,OAAO,OAAO,YAAY,KAAK,aAAa,gEAAgE;AACnH,QAAAA,QAAO,OAAO,OAAO,gBAAgB,KAAK,aAAa,qFAAqF;AAC5I,QAAAA,QAAO,OAAO,OAAO,cAAc,KAAK,aAAa,4DAA4D;AACjH,yBAAiB,OAAO,aAAa;AACrC,yBAAiB,QAAQ,OAAO;AAChC,yBAAiB,aAAa,WAAW;AACzC,yBAAiB,cAAc,YAAY;AAC3C,yBAAiB,kBAAkB,gBAAgB;AACnD,YAAI,QAAQ;AACZ,YAAI,UAAU;AACd,YAAI,WAAW;AACf,YAAI,UAAU;AACd,YAAI,UAAU;AACd,YAAI,WAAW;AACf,YAAI,OAAO;AAEX,YAAI,SAAS;AAEb,QAAAA,QAAO,CAAC,sBAAsB,sGAAsG;AAepI,YAAI;AACJ,YAAI,OAAO,YAAY,EAAG,cAAa,OAAO,YAAY;AAAE,yBAAiB,cAAc,YAAY;AAEvG,YAAI,OAAO,eAAe,UAAU;AAClC,gBAAM,iCAAiC;AAAA,QACzC;AAIA,iBAAS,mBAAmB,GAAG;AAC7B,cAAI,OAAO,uBAAuB,eAAe,qBAAqB;AACpE,gBAAI,MAAM,OAAO,KAAK,GAAG,QAAQ;AACjC,mBAAO,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,MAAM;AAAA,UAC9D;AAEA,cAAI,UAAU,KAAK,CAAC;AACpB,cAAI,QAAQ,IAAI,WAAW,QAAQ,MAAM;AACzC,mBAASC,KAAI,GAAIA,KAAI,QAAQ,QAAS,EAAEA,IAAG;AACzC,kBAAMA,EAAC,IAAI,QAAQ,WAAWA,EAAC;AAAA,UACjC;AACA,iBAAO;AAAA,QACT;AAIA,iBAAS,kBAAkB,UAAU;AACnC,cAAI,CAAC,UAAU,QAAQ,GAAG;AACxB;AAAA,UACF;AAEA,iBAAO,mBAAmB,SAAS,MAAM,cAAc,MAAM,CAAC;AAAA,QAChE;AAIA,YAAI;AAQJ,YAAI,QAAQ;AAKZ,YAAI;AAOJ,iBAASD,QAAO,WAAW,MAAM;AAC/B,cAAI,CAAC,WAAW;AACd,kBAAM,sBAAsB,OAAO,OAAO,OAAO,GAAG;AAAA,UACtD;AAAA,QACF;AAOA,YAAI,MAEF,OAEA,QAEA,QAEA,SAEA,QAEA,SAEA,SAGA,QAGA,SAEA;AAEF,iBAAS,oBAAoB;AAC3B,cAAI,IAAI,WAAW;AACnB,iBAAO,OAAO,IAAI,QAAQ,IAAI,UAAU,CAAC;AACzC,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,SAAS,IAAI,UAAU,IAAI,YAAY,CAAC;AAC/C,iBAAO,QAAQ,IAAI,SAAS,IAAI,WAAW,CAAC;AAC5C,iBAAO,SAAS,IAAI,UAAU,IAAI,YAAY,CAAC;AAC/C,iBAAO,SAAS,IAAI,UAAU,IAAI,aAAa,CAAC;AAChD,iBAAO,SAAS,IAAI,UAAU,IAAI,aAAa,CAAC;AAChD,iBAAO,QAAQ,IAAI,SAAS,IAAI,cAAc,CAAC;AAC/C,iBAAO,SAAS,IAAI,UAAU,IAAI,eAAe,CAAC;AAAA,QACpD;AAEA,QAAAA,QAAO,CAAC,OAAO,YAAY,GAAG,4EAA4E;AAE1G,QAAAA;AAAA,UAAO,OAAO,cAAc,eAAe,OAAO,iBAAiB,eAAe,WAAW,UAAU,YAAY,UAAa,WAAW,UAAU,OAAO;AAAA,UACrJ;AAAA,QAAqD;AAM5D,YAAI,iBAAiB,OAAO,gBAAgB,KAAK;AAAS,yBAAiB,kBAAkB,gBAAgB;AAE7G,QAAAA,QAAO,kBAAkB,OAAO,0DAA0D,iBAAiB,sBAA8B;AAIvI,YAAI,OAAO,YAAY,GAAG;AACxB,uBAAa,OAAO,YAAY;AAAA,QAClC,OACA;AACE,uBAAa,IAAI,YAAY,OAAO;AAAA,YAClC,WAAW,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAM5B,WAAW,aAAa;AAAA,UAC1B,CAAC;AAAA,QACH;AAEF,0BAAkB;AAIlB,yBAAiB,WAAW,OAAO;AACnC,QAAAA,QAAO,iBAAiB,UAAU,CAAC;AAKnC,iBAAS,mBAAmB;AAC1B,cAAIU,OAAM,0BAA0B;AACpC,UAAAV,SAAQU,OAAM,MAAM,CAAC;AAIrB,cAAIA,QAAO,GAAG;AACZ,YAAAA,QAAO;AAAA,UACT;AAIA,kBAAUA,QAAM,CAAE,IAAI;AACtB,kBAAWA,OAAM,KAAK,CAAE,IAAI;AAE5B,kBAAU,KAAI,CAAE,IAAI;AAAA,QACtB;AAEA,iBAAS,mBAAmB;AAC1B,cAAI,MAAO;AACX,cAAIA,OAAM,0BAA0B;AAEpC,cAAIA,QAAO,GAAG;AACZ,YAAAA,QAAO;AAAA,UACT;AACA,cAAI,UAAU,QAAUA,QAAM,CAAE;AAChC,cAAI,UAAU,QAAWA,OAAM,KAAK,CAAE;AACtC,cAAI,WAAW,YAAc,WAAW,YAAY;AAClD,kBAAM,wDAAwD,YAAYA,IAAG,CAAC,gEAAgE,YAAY,OAAO,CAAC,IAAI,YAAY,OAAO,CAAC,EAAE;AAAA,UAC9L;AAEA,cAAI,QAAU,KAAI,CAAE,KAAK,YAAyB;AAChD,kBAAM,mFAAmF;AAAA,UAC3F;AAAA,QACF;AAIA,SAAC,WAAW;AACV,cAAI,MAAM,IAAI,WAAW,CAAC;AAC1B,cAAI,KAAK,IAAI,UAAU,IAAI,MAAM;AACjC,cAAI,CAAC,IAAI;AACT,cAAI,GAAG,CAAC,MAAM,OAAQ,GAAG,CAAC,MAAM,GAAM,OAAM;AAAA,QAC9C,GAAG;AAGH,YAAI,eAAgB,CAAC;AACrB,YAAI,aAAgB,CAAC;AACrB,YAAI,aAAgB,CAAC;AACrB,YAAI,aAAgB,CAAC;AACrB,YAAI,gBAAgB,CAAC;AAErB,YAAI,qBAAqB;AAEzB,iBAAS,SAAS;AAChB,cAAI,OAAO,QAAQ,GAAG;AACpB,gBAAI,OAAO,OAAO,QAAQ,KAAK,WAAY,QAAO,QAAQ,IAAI,CAAC,OAAO,QAAQ,CAAC;AAC/E,mBAAO,OAAO,QAAQ,EAAE,QAAQ;AAC9B,0BAAY,OAAO,QAAQ,EAAE,MAAM,CAAC;AAAA,YACtC;AAAA,UACF;AACA,+BAAqB,YAAY;AAAA,QACnC;AAEA,iBAAS,cAAc;AACrB,UAAAV,QAAO,CAAC,kBAAkB;AAC1B,+BAAqB;AAErB,2BAAiB;AAGnB,cAAI,CAAC,OAAO,UAAU,KAAK,CAAC,GAAG,KAAK;AAClC,eAAG,KAAK;AACV,aAAG,oBAAoB;AAEvB,cAAI,KAAK;AACP,+BAAqB,UAAU;AAAA,QACjC;AAEA,iBAAS,UAAU;AACjB,2BAAiB;AAEjB,+BAAqB,UAAU;AAAA,QACjC;AAEA,iBAAS,UAAU;AACjB,2BAAiB;AAEjB,cAAI,OAAO,SAAS,GAAG;AACrB,gBAAI,OAAO,OAAO,SAAS,KAAK,WAAY,QAAO,SAAS,IAAI,CAAC,OAAO,SAAS,CAAC;AAClF,mBAAO,OAAO,SAAS,EAAE,QAAQ;AAC/B,2BAAa,OAAO,SAAS,EAAE,MAAM,CAAC;AAAA,YACxC;AAAA,UACF;AAEA,+BAAqB,aAAa;AAAA,QACpC;AAEA,iBAAS,YAAY,IAAI;AACvB,uBAAa,QAAQ,EAAE;AAAA,QACzB;AAEA,iBAAS,UAAU,IAAI;AACrB,qBAAW,QAAQ,EAAE;AAAA,QACvB;AAEA,iBAAS,aAAa,IAAI;AACxB,qBAAW,QAAQ,EAAE;AAAA,QACvB;AAEA,iBAAS,UAAU,IAAI;AAAA,QACvB;AAEA,iBAAS,aAAa,IAAI;AACxB,wBAAc,QAAQ,EAAE;AAAA,QAC1B;AAWA,QAAAA,QAAO,KAAK,MAAM,6HAA6H;AAC/I,QAAAA,QAAO,KAAK,QAAQ,+HAA+H;AACnJ,QAAAA,QAAO,KAAK,OAAO,8HAA8H;AACjJ,QAAAA,QAAO,KAAK,OAAO,8HAA8H;AASjJ,YAAI,kBAAkB;AACtB,YAAI,uBAAuB;AAC3B,YAAI,wBAAwB;AAC5B,YAAI,wBAAwB,CAAC;AAE7B,iBAAS,uBAAuB,IAAI;AAClC,cAAI,OAAO;AACX,iBAAO,GAAG;AACR,gBAAI,CAAC,sBAAsB,EAAE,EAAG,QAAO;AACvC,iBAAK,OAAO,KAAK,OAAO;AAAA,UAC1B;AAAA,QACF;AAEA,iBAAS,iBAAiB,IAAI;AAC5B;AAEA,iBAAO,wBAAwB,IAAI,eAAe;AAElD,cAAI,IAAI;AACN,YAAAA,QAAO,CAAC,sBAAsB,EAAE,CAAC;AACjC,kCAAsB,EAAE,IAAI;AAC5B,gBAAI,yBAAyB,QAAQ,OAAO,eAAe,aAAa;AAEtE,qCAAuB,YAAY,MAAM;AACvC,oBAAI,OAAO;AACT,gCAAc,oBAAoB;AAClC,yCAAuB;AACvB;AAAA,gBACF;AACA,oBAAI,QAAQ;AACZ,yBAAS,OAAO,uBAAuB;AACrC,sBAAI,CAAC,OAAO;AACV,4BAAQ;AACR,wBAAI,oCAAoC;AAAA,kBAC1C;AACA,sBAAI,eAAe,GAAG,EAAE;AAAA,gBAC1B;AACA,oBAAI,OAAO;AACT,sBAAI,eAAe;AAAA,gBACrB;AAAA,cACF,GAAG,GAAK;AAAA,YACV;AAAA,UACF,OAAO;AACL,gBAAI,0CAA0C;AAAA,UAChD;AAAA,QACF;AAEA,iBAAS,oBAAoB,IAAI;AAC/B;AAEA,iBAAO,wBAAwB,IAAI,eAAe;AAElD,cAAI,IAAI;AACN,YAAAA,QAAO,sBAAsB,EAAE,CAAC;AAChC,mBAAO,sBAAsB,EAAE;AAAA,UACjC,OAAO;AACL,gBAAI,4CAA4C;AAAA,UAClD;AACA,cAAI,mBAAmB,GAAG;AACxB,gBAAI,yBAAyB,MAAM;AACjC,4BAAc,oBAAoB;AAClC,qCAAuB;AAAA,YACzB;AACA,gBAAI,uBAAuB;AACzB,kBAAI,WAAW;AACf,sCAAwB;AACxB,uBAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAGA,iBAAS,MAAM,MAAM;AACnB,iBAAO,SAAS,IAAI,IAAI;AAExB,iBAAO,aAAa,OAAO;AAG3B,cAAI,IAAI;AAER,kBAAQ;AACR,uBAAa;AAgBb,cAAI,IAAI,IAAI,YAAY,aAAa,IAAI;AAEzC,6BAAmB,CAAC;AAIpB,gBAAM;AAAA,QACR;AAMA,YAAI,gBAAgB;AAMpB,YAAI,YAAY,CAAC,aAAa,SAAS,WAAW,aAAa;AAM/D,YAAI,YAAY,CAAC,aAAa,SAAS,WAAW,SAAS;AAE3D,iBAAS,oBAAoB,MAAM;AACjC,iBAAO,WAAW;AAChB,YAAAA,QAAO,oBAAoB,qBAAqB,IAAI,yCAAyC;AAC7F,gBAAI,IAAI,YAAY,IAAI;AACxB,YAAAA,QAAO,GAAG,8BAA8B,IAAI,cAAc;AAC1D,mBAAO,EAAE,MAAM,MAAM,SAAS;AAAA,UAChC;AAAA,QACF;AAIA,YAAI;AACF,yBAAiB;AACjB,YAAI,CAAC,UAAU,cAAc,GAAG;AAC9B,2BAAiB,WAAW,cAAc;AAAA,QAC5C;AAEF,iBAAS,cAAc,MAAM;AAC3B,cAAI,QAAQ,kBAAkB,YAAY;AACxC,mBAAO,IAAI,WAAW,UAAU;AAAA,UAClC;AACA,cAAI,YAAY;AACd,mBAAO,WAAW,IAAI;AAAA,UACxB;AACA,gBAAM;AAAA,QACR;AAEA,iBAAS,iBAAiB,YAAY;AAMpC,cAAI,CAAC,eACG,sBAAsB,wBAAwB;AACpD,gBAAI,OAAO,SAAS,YAClB;AACA,qBAAO,MAAM,YAAY,EAAE,aAAa,cAAc,CAAC,EAAE,KAAK,CAAC,aAAa;AAC1E,oBAAI,CAAC,SAAS,IAAI,GAAG;AACnB,wBAAM,uCAAuC,UAAU;AAAA,gBACzD;AACA,uBAAO,SAAS,aAAa,EAAE;AAAA,cACjC,CAAC,EAAE,MAAM,MAAM,cAAc,UAAU,CAAC;AAAA,YAC1C;AAAA,UACF;AAGA,iBAAO,QAAQ,QAAQ,EAAE,KAAK,MAAM,cAAc,UAAU,CAAC;AAAA,QAC/D;AAEA,iBAAS,uBAAuB,YAAY,SAAS,UAAU;AAC7D,iBAAO,iBAAiB,UAAU,EAAE,KAAK,CAAC,WAAW;AACnD,mBAAO,YAAY,YAAY,QAAQ,OAAO;AAAA,UAChD,CAAC,EAAE,KAAK,CAAC,aAAa;AACpB,mBAAO;AAAA,UACT,CAAC,EAAE,KAAK,UAAU,CAAC,WAAW;AAC5B,gBAAI,0CAA0C,MAAM,EAAE;AAGtD,gBAAI,UAAU,cAAc,GAAG;AAC7B,kBAAI,qCAAqC,cAAc,gMAAgM;AAAA,YACzP;AACA,kBAAM,MAAM;AAAA,UACd,CAAC;AAAA,QACH;AAEA,iBAAS,iBAAiB,QAAQ,YAAY,SAAS,UAAU;AAC/D,cAAI,CAAC,UACD,OAAO,YAAY,wBAAwB,cAC3C,CAAC,UAAU,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOrB,CAAC,uBACD,OAAO,SAAS,YAAY;AAC9B,mBAAO,MAAM,YAAY,EAAE,aAAa,cAAc,CAAC,EAAE,KAAK,CAAC,aAAa;AAM1E,kBAAI,SAAS,YAAY,qBAAqB,UAAU,OAAO;AAE/D,qBAAO,OAAO;AAAA,gBACZ;AAAA,gBACA,SAAS,QAAQ;AAGf,sBAAI,kCAAkC,MAAM,EAAE;AAC9C,sBAAI,2CAA2C;AAC/C,yBAAO,uBAAuB,YAAY,SAAS,QAAQ;AAAA,gBAC7D;AAAA,cAAC;AAAA,YACL,CAAC;AAAA,UACH;AACA,iBAAO,uBAAuB,YAAY,SAAS,QAAQ;AAAA,QAC7D;AAIA,iBAAS,aAAa;AAEpB,cAAI,OAAO;AAAA,YACT,OAAO;AAAA,YACP,0BAA0B;AAAA,UAC5B;AAKA,mBAAS,gBAAgB,UAAUW,SAAQ;AACzC,0BAAc,SAAS;AAIvB,wBAAY,YAAY,2BAA2B;AAEnD,YAAAX,QAAO,WAAW,iCAAiC;AAEnD,sBAAU,YAAY,mBAAmB,CAAC;AAE1C,gCAAoB,kBAAkB;AACtC,mBAAO;AAAA,UACT;AAEA,2BAAiB,kBAAkB;AAMnC,cAAI,aAAa;AACjB,mBAAS,2BAA2B,QAAQ;AAG1C,YAAAA,QAAO,WAAW,YAAY,kHAAkH;AAChJ,yBAAa;AAGb,4BAAgB,OAAO,UAAU,CAAC;AAAA,UACpC;AAQA,cAAI,OAAO,iBAAiB,GAAG;AAE7B,gBAAI;AACF,qBAAO,OAAO,iBAAiB,EAAE,MAAM,eAAe;AAAA,YACxD,SAAQ,GAAG;AACT,kBAAI,sDAAsD,CAAC,EAAE;AAE3D,iCAAmB,CAAC;AAAA,YACxB;AAAA,UACF;AAGA,2BAAiB,YAAY,gBAAgB,MAAM,0BAA0B,EAAE,MAAM,kBAAkB;AACvG,iBAAO,CAAC;AAAA,QACV;AAGA,iBAAS,iBAAiB,MAAM,SAAS,YAAU,MAAM;AACvD,cAAI,CAAC,OAAO,yBAAyB,QAAQ,IAAI,GAAG;AAClD,mBAAO,eAAe,QAAQ,MAAM;AAAA,cAClC,cAAc;AAAA,cACd,MAAM;AACJ,oBAAI,QAAQ,YAAY,oIAAoI;AAC5J,sBAAM,YAAY,IAAI,6BAA6B,OAAO,OAAO,KAAK;AAAA,cAExE;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,iBAAS,kBAAkB,MAAM;AAC/B,cAAI,OAAO,yBAAyB,QAAQ,IAAI,GAAG;AACjD,kBAAM,YAAY,IAAI,yBAAyB,IAAI,2CAA2C;AAAA,UAChG;AAAA,QACF;AAGA,iBAAS,4BAA4B,MAAM;AACzC,iBAAO,SAAS,mBACT,SAAS,uBACT,SAAS,4BACT,SAAS,eACT,SAAS;AAAA,UAET,SAAS,uBACT,SAAS,qBACT,SAAS;AAAA,QAClB;AAEA,iBAAS,cAAc,KAAK,KAAK;AAC/B,cAAI,OAAO,eAAe,aAAa;AACrC,mBAAO,eAAe,YAAY,KAAK;AAAA,cACrC,cAAc;AAAA,cACd,MAAM;AACJ,yBAAS,KAAK,GAAG,2CAA2C,GAAG,EAAE;AACjE,uBAAO;AAAA,cACT;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,sBAAc,UAAU,8CAA8C;AACtE,sBAAc,OAAO,gCAAgC;AAErD,iBAAS,qBAAqB,KAAK;AACjC,cAAI,OAAO,eAAe,eAAe,CAAC,OAAO,yBAAyB,YAAY,GAAG,GAAG;AAC1F,mBAAO,eAAe,YAAY,KAAK;AAAA,cACrC,cAAc;AAAA,cACd,MAAM;AAGJ,oBAAI,MAAM,KAAK,GAAG;AAIlB,oBAAI,gBAAgB;AACpB,oBAAI,CAAC,cAAc,WAAW,GAAG,GAAG;AAClC,kCAAgB,MAAM;AAAA,gBACxB;AACA,uBAAO,8CAA8C,aAAa;AAClE,oBAAI,4BAA4B,GAAG,GAAG;AACpC,yBAAO;AAAA,gBACT;AACA,yBAAS,GAAG;AACZ,uBAAO;AAAA,cACT;AAAA,YACF,CAAC;AAAA,UACH;AAGA,kCAAwB,GAAG;AAAA,QAC7B;AAEA,iBAAS,wBAAwB,KAAK;AACpC,cAAI,CAAC,OAAO,yBAAyB,QAAQ,GAAG,GAAG;AACjD,mBAAO,eAAe,QAAQ,KAAK;AAAA,cACjC,cAAc;AAAA,cACd,MAAM;AACJ,oBAAI,MAAM,IAAI,GAAG;AACjB,oBAAI,4BAA4B,GAAG,GAAG;AACpC,yBAAO;AAAA,gBACT;AACA,sBAAM,GAAG;AAAA,cACX;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAGA,iBAAS,IAAI,MAAM;AAGjB,kBAAQ,KAAK,MAAM,SAAS,SAAS;AAAA,QACvC;AAIA,YAAI,aAAa;AAAA,UACf,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,OAAO;AAAE,gBAAI,OAAO,WAAW,gBAAgB,OAAO,gBAAgB,OAAO,wBAAwB,QAAW;AAAE,qBAAO;AAAA,YAAG;AAAE,gBAAI,OAAO,OAAO,cAAe,aAAa;AAAE,qBAAO,YAAY,EAAE,gBAAgB,EAAE;AAAG,qBAAO,UAAU,cAAc,CAAC;AAAG,qBAAO,UAAU,YAAY,WAAW;AAAI,qBAAO,UAAU,YAAY,UAAU;AAAI,qBAAO,UAAU,YAAY,SAAS;AAAI,qBAAO,UAAU,eAAe,CAAC;AAAG,qBAAO,UAAU,aAAa,UAAU;AAAI,qBAAO,UAAU,aAAa,UAAU;AAAI,wBAAU,UAAU,CAAC;AAAG,wBAAU,eAAe,SAAS,QAAQ;AAAE,yBAAS,UAAU,GAAG,UAAU,UAAU,QAAQ,QAAQ,EAAE,SAAS;AAAE,sBAAI,UAAU,QAAQ,OAAO,KAAK,MAAM;AAAE,8BAAU,QAAQ,OAAO,IAAI;AAAQ,2BAAO;AAAA,kBAAS;AAAA,gBAAE;AAAE,0BAAU,QAAQ,KAAK,MAAM;AAAG,uBAAO,UAAU,QAAQ,SAAS;AAAA,cAAG;AAAG,wBAAU,0BAA0B,SAAS,aAAa;AAAE,0BAAU,QAAQ,WAAW,IAAI;AAAM,uBAAO,UAAU,QAAQ,SAAS,GAAG;AAAE,sBAAI,UAAU,QAAQ,UAAU,QAAQ,SAAO,CAAC,KAAK,MAAM;AAAE,8BAAU,QAAQ,IAAI;AAAA,kBAAG,OAAO;AAAE;AAAA,kBAAO;AAAA,gBAAE;AAAA,cAAE;AAAG,wBAAU,iBAAiB,SAAS,QAAQ;AAAE,yBAAS,UAAU,GAAG,UAAU,UAAU,QAAQ,QAAQ,EAAE,SAAS;AAAE,sBAAI,UAAU,QAAQ,OAAO,KAAK,QAAQ;AAAE,2BAAO,UAAU,wBAAwB,OAAO;AAAA,kBAAG;AAAA,gBAAE;AAAA,cAAE;AAAG,wBAAU,sBAAsB,SAAS,aAAa;AAAE,uBAAO,UAAU,QAAQ,WAAW;AAAA,cAAG;AAAG,wBAAU,qBAAsB,2BAAU;AAAE,uBAAO,CAAC,cAAc,YAAY,OAAO;AAAA,cAAG,EAAG;AAAG,wBAAU,SAAS,WAAW;AAAE,yBAAQC,KAAI,GAAGA,KAAI,UAAU,QAAQ,QAAQ,EAAEA,IAAG;AAAE,sBAAI,SAAS,UAAU,QAAQA,EAAC;AAAG,sBAAI,UAAU,QAAQ,OAAO,YAAY,QAAQ,OAAO,UAAU,GAAI;AAAE,2BAAO,SAAS,OAAO;AAAA,kBAAG;AAAA,gBAAE;AAAE,0BAAU,mBAAmB,IAAI,SAAS,YAAY;AAAE,2BAAS,oBAAoB,YAAY,UAAU,QAAQ,IAAI;AAAA,gBAAG,CAAC;AAAA,cAAG;AAAG,wBAAU,mBAAmB,IAAI,SAAS,YAAY;AAAE,yBAAS,iBAAiB,YAAY,UAAU,QAAQ,IAAI;AAAA,cAAG,CAAC;AAAA,YAAG;AAAE,mBAAO,UAAU,kBAAkB;AAAG,mBAAO;AAAA,UAAG;AAAA,UACt+D,SAAS,MAAM;AAAE,gBAAI,OAAO,OAAO,cAAe,aAAa;AAAE,qBAAO,UAAU,kBAAkB;AAAG,kBAAI,OAAO,UAAU,mBAAmB,GAAG;AAAE,uBAAO,OAAO;AAAA,cAAW;AAAA,YAAE;AAAA,UAAE;AAAA,UACjL,SAAS,MAAM;AAAE,mBAAQ,UAAU,iBAAiB,UAAa,UAAU,aAAa,iBAAiB;AAAA,UAAY;AAAA,UACrH,SAAS,MAAM;AAAE,gBAAI;AAAE,kBAAI,OAAO,KAAK,OAAO,gBAAgB,OAAO,oBAAoB;AAAG,kBAAI,aAAa,KAAK;AAAY,mBAAK,MAAM;AAAG,qBAAO;AAAA,YAAY,SAAQ,GAAG;AAAE,qBAAO;AAAA,YAAG;AAAA,UAAE;AAAA,UACxL,SAAS,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO;AAAE,gBAAI,aAAa;AAAI,gBAAI,WAAW;AAAI,gBAAI,aAAa;AAAI,gBAAI,aAAa;AAAI,gBAAI,sBAAsB;AAAI,gBAAI,UAAU;AAAI,gBAAI,OAAO,OAAO,cAAe,aAAa;AAAE,qBAAO;AAAA,YAAI;AAAE,gBAAI,SAAS,CAAC;AAAG,gBAAI,sBAAsB,CAAC;AAAG,gBAAI,cAAc,OAAO,UAAU,YAAY,UAAU;AAAE,kCAAoB,aAAa;AAAA,YAAY;AAAE,mBAAO,WAAW,KAAK,OAAO,gBAAgB,OAAO,oBAAoB,mBAAmB;AAAG,mBAAO,SAAS,QAAQ;AAAG,mBAAO,QAAQ,OAAO,UAAU,aAAa;AAAS,gBAAI,iBAAiB;AAAG,gBAAI,kBAAkB;AAAU,gBAAI,cAAc,OAAO,UAAU,YAAY,UAAU;AAAE,+BAAiB;AAAA,YAAU;AAAE,mBAAO,aAAa,OAAO,SAAS,sBAAsB,YAAY,gBAAgB,eAAe;AAAG,mBAAO,WAAW,iBAAiB,SAAS,GAAG;AAAE,kBAAI,OAAO,0BAA0B,QAAQ,OAAO,uBAAuB,UAAU,GAAG;AAAE,uBAAO,yBAAyB,IAAI,aAAa,OAAO,QAAQ,QAAQ,qBAAqB,aAAa,QAAQ;AAAA,cAAG;AAAE,kBAAI,cAAc,UAAU,YAAY,WAAW,cAAc,UAAU,YAAY,QAAQ;AAAE,yBAAS,WAAW,GAAG,WAAW,UAAU,YAAY,GAAG;AAAE,sBAAI,cAAc,EAAE,YAAY,eAAe,QAAQ;AAAG,sBAAI,qBAAqB,OAAO;AAAwB,2BAAS,SAAS,GAAG,SAAS,YAAY,UAAU,GAAG;AAAE,uCAAmB,SAAO,WAAW,QAAQ,IAAI,YAAY,MAAM;AAAA,kBAAG;AAAA,gBAAE;AAAE,gEAAgD,SAAS,YAAY,mBAAmB;AAAA,cAAG;AAAE,kBAAI,cAAc,UAAU,YAAY,YAAY,cAAc,UAAU,YAAY,QAAQ;AAAE,iEAAiD,SAAS,YAAY,mBAAmB;AAAG,yBAAS,WAAW,GAAG,WAAW,EAAE,aAAa,kBAAkB,EAAE,UAAU;AAAE,sBAAI,eAAe,EAAE,aAAa,eAAe,QAAQ;AAAG,sBAAI,qBAAqB,OAAO;AAAwB,2BAAS,SAAS,GAAG,SAAS,YAAY,UAAU,GAAG;AAAE,iCAAa,MAAM,IAAI,mBAAmB,SAAO,WAAW,QAAQ;AAAA,kBAAG;AAAA,gBAAE;AAAA,cAAE,OAAO;AAAE,yBAAS,WAAW,GAAG,WAAW,EAAE,aAAa,kBAAkB,EAAE,UAAU;AAAE,oBAAE,aAAa,eAAe,QAAQ,EAAE,KAAK,CAAG;AAAA,gBAAG;AAAA,cAAE;AAAA,YAAE;AAAG,gBAAI,cAAc,UAAU,YAAY,WAAW,cAAc,UAAU,YAAY,QAAQ;AAAE,wBAAU,aAAa,aAAa,EAAC,OAAM,MAAM,OAAM,MAAK,CAAC,EAAG,KAAK,SAAS,QAAQ;AAAE,uBAAO,aAAa,OAAO,SAAS,wBAAwB,MAAM;AAAG,uBAAO,WAAW,QAAQ,OAAO,UAAU;AAAG,uBAAO,WAAW,QAAQ,OAAO,SAAS,WAAW;AAAA,cAAG,CAAC,EAAG,MAAM,SAAS,OAAO;AAAE,wBAAQ,IAAI,+BAA+B,KAAK;AAAA,cAAG,CAAC;AAAA,YAAG;AAAE,gBAAI,cAAc,UAAU,YAAY,UAAU;AAAE,qBAAO,WAAW,QAAQ,OAAO,SAAS,WAAW;AAAA,YAAG;AAAE,mBAAO,UAAU,aAAa,MAAM;AAAA,UAAG;AAAA,UAClwF,QAAS,CAAC,OAAO;AAAE,mBAAO,UAAU,oBAAoB,EAAE,EAAE,SAAS;AAAA,UAAY;AAAA,UACjF,SAAS,CAAC,OAAO;AAAE,gBAAI,SAAS,UAAU,oBAAoB,EAAE;AAAG,gBAAI,OAAO,eAAe,QAAW;AAAE,qBAAO,WAAW,iBAAiB,SAAS,GAAG;AAAA,cAAC;AAAG,qBAAO,WAAW,WAAW;AAAG,qBAAO,aAAa;AAAA,YAAW;AAAE,gBAAI,OAAO,eAAe,QAAW;AAAE,qBAAO,WAAW,WAAW;AAAG,qBAAO,aAAa;AAAA,YAAW;AAAE,mBAAO,SAAS,MAAM;AAAG,mBAAO,WAAW;AAAA,UAAW;AAAA,UAC5X,SAAS,CAAC,OAAO;AAAE,sBAAU,wBAAwB,EAAE;AAAA,UAAG;AAAA,UAC1D,SAAS,CAAC,OAAO;AAAE,gBAAI,SAAS,UAAU,oBAAoB,EAAE;AAAG,mBAAO,SAAS,OAAO;AAAG,mBAAO,QAAQ,UAAU,aAAa;AAAA,UAAS;AAAA,UAC5I,SAAS,CAAC,OAAO;AAAE,gBAAI,SAAS,UAAU,oBAAoB,EAAE;AAAG,mBAAO,SAAS,QAAQ;AAAG,mBAAO,QAAQ,UAAU,aAAa;AAAA,UAAS;AAAA,UAC7I,SAAS,MAAM;AAAE,mBAAO,CAAC,CAAC,WAAW;AAAA,UAAsB;AAAA,UAC3D,SAAS,MAAM;AAAE,mBAAO,MAAM;AAAA,UAAO;AAAA,QACtC;AACA,iBAAS,yBAAyB;AAAE,iBAAO,OAAO,WAAW,eAAe,OAAO,kBAAkB;AAAA,QAAM;AAC3G,iBAAS,8BAA8B;AAAE,cAAI,OAAO,WAAW,eAAe,OAAO,kBAAkB;AAAE,mBAAO,gBAAgB,OAAO,gBAAgB;AAAA,UAAG;AAAE,iBAAO;AAAA,QAAM;AACzK,iBAAS,gBAAgB,OAAM,cAAc;AAAE,gBAAM,SAAS,MAAM,QAAQ,YAAY;AAAG,gBAAM,KAAK,OAAO;AAAK,aAAG,YAAY,GAAG,YAAY,GAAG,SAAS,KAAK,CAAC;AAAG,aAAG,WAAW,GAAG,YAAY,GAAG,GAAG,MAAM,GAAG,MAAM,GAAG,eAAe,MAAM;AAAA,QAAG;AAClP,iBAAS,oBAAoB;AAAE,iBAAO,OAAO,WAAW,cAAc,gBAAgB,OAAO,SAAS,QAAQ,IAAI,gBAAgB,EAAE;AAAA,QAAE;AACtI,iBAAS,QAAQ,KAAI,OAAO;AAAE,cAAI,SAAS,aAAa,GAAG;AAAG,cAAI,WAAW,aAAa,KAAK;AAAG,uBAAa,QAAQ,QAAQ,QAAQ;AAAA,QAAG;AAC1I,iBAAS,QAAQ,KAAK;AAAE,cAAI,SAAS,aAAa,GAAG;AAAG,cAAI,WAAW,aAAa,QAAQ,MAAM;AAAG,cAAI,YAAY,MAAM;AAAE,mBAAO;AAAA,UAAM;AAAE,iBAAO,gBAAgB,QAAQ;AAAA,QAAG;AAC9K,iBAAS,wBAAwB;AAAE,iBAAO,OAAO,iBAAiB;AAAA,QAAa;AAC/E,iBAAS,UAAU,KAAK;AAAE,cAAI,SAAS,aAAa,GAAG;AAAG,uBAAa,WAAW,MAAM;AAAA,QAAG;AAMzF,iBAAS,WAAW,QAAQ;AACxB,eAAK,OAAO;AACZ,eAAK,UAAU,gCAAgC,MAAM;AACrD,eAAK,SAAS;AAAA,QAChB;AAEF,YAAI,uBAAuB,CAAC,cAAc;AACtC,iBAAO,UAAU,SAAS,GAAG;AAE3B,sBAAU,MAAM,EAAE,MAAM;AAAA,UAC1B;AAAA,QACF;AAOF,iBAAS,SAAS,KAAKW,QAAO,MAAM;AAClC,cAAIA,MAAK,SAAS,GAAG,EAAG,CAAAA,QAAO;AAC/B,kBAAQA,OAAM;AAAA,YACZ,KAAK;AAAM,qBAAO,MAAQ,OAAM,CAAE;AAAA,YAClC,KAAK;AAAM,qBAAO,MAAQ,OAAM,CAAE;AAAA,YAClC,KAAK;AAAO,qBAAO,OAAS,OAAM,CAAE;AAAA,YACpC,KAAK;AAAO,qBAAO,OAAS,OAAM,CAAE;AAAA,YACpC,KAAK;AAAO,qBAAO,OAAS,OAAM,CAAE;AAAA,YACpC,KAAK;AAAS,qBAAO,QAAU,OAAM,CAAE;AAAA,YACvC,KAAK;AAAU,qBAAO,QAAU,OAAM,CAAE;AAAA,YACxC,KAAK;AAAK,qBAAO,QAAU,OAAM,CAAE;AAAA,YACnC;AAAS,oBAAM,8BAA8BA,KAAI,EAAE;AAAA,UACrD;AAAA,QACF;AAEA,YAAI,gBAAgB,OAAO,eAAe,KAAK;AAE/C,YAAI,cAAc,CAAC,QAAQ;AACvB,UAAAZ,QAAO,OAAO,QAAQ,QAAQ;AAE9B,mBAAS;AACT,iBAAO,OAAO,IAAI,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AAAA,QAChD;AAQF,iBAAS,SAAS,KAAK,OAAOY,QAAO,MAAM;AACzC,cAAIA,MAAK,SAAS,GAAG,EAAG,CAAAA,QAAO;AAC/B,kBAAQA,OAAM;AAAA,YACZ,KAAK;AAAM,oBAAQ,OAAM,CAAE,IAAI;AAAO;AAAA,YACtC,KAAK;AAAM,oBAAQ,OAAM,CAAE,IAAI;AAAO;AAAA,YACtC,KAAK;AAAO,qBAAS,OAAM,CAAE,IAAI;AAAO;AAAA,YACxC,KAAK;AAAO,qBAAS,OAAM,CAAE,IAAI;AAAO;AAAA,YACxC,KAAK;AAAO,qBAAS,OAAM,CAAE,IAAI,OAAO,KAAK;AAAG;AAAA,YAChD,KAAK;AAAS,sBAAU,OAAM,CAAE,IAAI;AAAO;AAAA,YAC3C,KAAK;AAAU,sBAAU,OAAM,CAAE,IAAI;AAAO;AAAA,YAC5C,KAAK;AAAK,sBAAU,OAAM,CAAE,IAAI;AAAO;AAAA,YACvC;AAAS,oBAAM,8BAA8BA,KAAI,EAAE;AAAA,UACrD;AAAA,QACF;AAEA,YAAI,WAAW,CAAC,SAAS;AACrB,mBAAS,UAAU,CAAC;AACpB,cAAI,CAAC,SAAS,MAAM,IAAI,GAAG;AACzB,qBAAS,MAAM,IAAI,IAAI;AACvB,gBAAI,oBAAqB,QAAO,cAAc;AAC9C,gBAAI,IAAI;AAAA,UACV;AAAA,QACF;AAEF,YAAI,cAAc,OAAO,eAAe,cAAc,IAAI,YAAY,MAAM,IAAI;AAWhF,YAAI,oBAAoB,CAAC,aAAa,KAAK,mBAAmB;AAC1D,cAAI,SAAS,MAAM;AACnB,cAAI,SAAS;AAMb,iBAAO,YAAY,MAAM,KAAK,EAAE,UAAU,QAAS,GAAE;AAErD,cAAI,SAAS,MAAM,MAAM,YAAY,UAAU,aAAa;AAC1D,mBAAO,YAAY,OAAO,YAAY,SAAS,KAAK,MAAM,CAAC;AAAA,UAC7D;AACA,cAAI,MAAM;AAGV,iBAAO,MAAM,QAAQ;AAKnB,gBAAI,KAAK,YAAY,KAAK;AAC1B,gBAAI,EAAE,KAAK,MAAO;AAAE,qBAAO,OAAO,aAAa,EAAE;AAAG;AAAA,YAAU;AAC9D,gBAAI,KAAK,YAAY,KAAK,IAAI;AAC9B,iBAAK,KAAK,QAAS,KAAM;AAAE,qBAAO,OAAO,cAAe,KAAK,OAAO,IAAK,EAAE;AAAG;AAAA,YAAU;AACxF,gBAAI,KAAK,YAAY,KAAK,IAAI;AAC9B,iBAAK,KAAK,QAAS,KAAM;AACvB,oBAAO,KAAK,OAAO,KAAO,MAAM,IAAK;AAAA,YACvC,OAAO;AACL,mBAAK,KAAK,QAAS,IAAM,UAAS,gCAAgC,YAAY,EAAE,IAAI,+EAA+E;AACnK,oBAAO,KAAK,MAAM,KAAO,MAAM,KAAO,MAAM,IAAM,YAAY,KAAK,IAAI;AAAA,YACzE;AAEA,gBAAI,KAAK,OAAS;AAChB,qBAAO,OAAO,aAAa,EAAE;AAAA,YAC/B,OAAO;AACL,kBAAI,KAAK,KAAK;AACd,qBAAO,OAAO,aAAa,QAAU,MAAM,IAAK,QAAU,KAAK,IAAM;AAAA,YACvE;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAiBF,YAAI,eAAe,CAAC,KAAK,mBAAmB;AACxC,UAAAZ,QAAO,OAAO,OAAO,UAAU,sCAAsC,OAAO,GAAG,GAAG;AAClF,iBAAO,MAAM,kBAAkB,QAAQ,KAAK,cAAc,IAAI;AAAA,QAChE;AACF,YAAI,iBAAiB,CAAC,WAAW,UAAU,MAAM,SAAS;AACtD,gBAAM,qBAAqB,aAAa,SAAS,CAAC,WAAW,CAAC,WAAW,aAAa,QAAQ,IAAI,oBAAoB,MAAM,OAAO,aAAa,IAAI,IAAI,kBAAkB,CAAC;AAAA,QAC7K;AAEF,YAAI,kBAAmB,CAAC;AAGxB,YAAI,yBAAyB;AAC7B,YAAI,qBAAqB,CAAC,QAAQ;AAC9B,cAAI,OAAO,IAAI,cAAc,GAAG;AAChC,cAAI,CAAC,KAAK,WAAW,GAAG;AACtB,iBAAK,WAAW,IAAI;AACpB;AAAA,UACF;AACA,eAAK,aAAa,KAAK;AACvB,0BAAgB,KAAK,IAAI;AACzB,8CAAoC,KAAK,MAAM;AAC/C,iBAAO,KAAK,kBAAkB;AAAA,QAChC;AAGF,YAAI,gBAAgB;AAGpB,YAAI,mBAAmB,MAAM;AAEzB,oBAAU,GAAG,CAAC;AACd,UAAAA,QAAO,gBAAgB,SAAS,CAAC;AAEjC,cAAI,OAAO,gBAAgB,IAAI;AAE/B,8CAAoC,KAAK,MAAM;AAC/C,0BAAgB;AAAA,QAClB;AAAA,QAGF,MAAM,cAAc;AAAA;AAAA,UAEhB,YAAY,QAAQ;AAClB,iBAAK,SAAS;AACd,iBAAK,MAAM,SAAS;AAAA,UACtB;AAAA,UAEA,SAASY,OAAM;AACb,oBAAW,KAAK,MAAM,KAAK,CAAE,IAAIA;AAAA,UACnC;AAAA,UAEA,WAAW;AACT,mBAAO,QAAW,KAAK,MAAM,KAAK,CAAE;AAAA,UACtC;AAAA,UAEA,eAAe,YAAY;AACzB,oBAAW,KAAK,MAAM,KAAK,CAAE,IAAI;AAAA,UACnC;AAAA,UAEA,iBAAiB;AACf,mBAAO,QAAW,KAAK,MAAM,KAAK,CAAE;AAAA,UACtC;AAAA,UAEA,WAAW,QAAQ;AACjB,qBAAS,SAAS,IAAI;AACtB,kBAAS,KAAK,MAAM,MAAM,CAAE,IAAI;AAAA,UAClC;AAAA,UAEA,aAAa;AACX,mBAAO,MAAS,KAAK,MAAM,MAAM,CAAE,KAAK;AAAA,UAC1C;AAAA,UAEA,aAAa,UAAU;AACrB,uBAAW,WAAW,IAAI;AAC1B,kBAAS,KAAK,MAAM,MAAM,CAAE,IAAI;AAAA,UAClC;AAAA,UAEA,eAAe;AACb,mBAAO,MAAS,KAAK,MAAM,MAAM,CAAE,KAAK;AAAA,UAC1C;AAAA;AAAA,UAGA,KAAKA,OAAM,YAAY;AACrB,iBAAK,iBAAiB,CAAC;AACvB,iBAAK,SAASA,KAAI;AAClB,iBAAK,eAAe,UAAU;AAAA,UAChC;AAAA,UAEA,iBAAiB,aAAa;AAC5B,oBAAW,KAAK,MAAM,MAAM,CAAE,IAAI;AAAA,UACpC;AAAA,UAEA,mBAAmB;AACjB,mBAAO,QAAW,KAAK,MAAM,MAAM,CAAE;AAAA,UACvC;AAAA;AAAA;AAAA;AAAA;AAAA,UAMA,oBAAoB;AAGlB,gBAAI,YAAY,uBAAuB,KAAK,SAAS,CAAC;AACtD,gBAAI,WAAW;AACb,qBAAO,QAAU,KAAK,UAAS,CAAE;AAAA,YACnC;AACA,gBAAI,WAAW,KAAK,iBAAiB;AACrC,gBAAI,aAAa,EAAG,QAAO;AAC3B,mBAAO,KAAK;AAAA,UACd;AAAA,QACF;AAEF,YAAI,qBAAqB,CAAC,QAAQ;AAC9B,cAAI,CAAC,eAAe;AAClB,4BAAgB;AAAA,UAClB;AACA,UAAAZ,QAAO,OAAO,sJAAsJ;AAAA,QACtK;AAGF,YAAI,oBAAoB,CAAC,SAAS;AAC9B,cAAI,SACF;AACF,cAAI,CAAC,QAAQ;AAEX,wBAAY,CAAC;AACb,mBAAO;AAAA,UACT;AACA,cAAI,OAAO,IAAI,cAAc,MAAM;AACnC,eAAK,iBAAiB,MAAM;AAC5B,cAAI,aAAa,KAAK,SAAS;AAC/B,cAAI,CAAC,YAAY;AAEf,wBAAY,CAAC;AACb,mBAAO;AAAA,UACT;AAOA,mBAAS,OAAO,MAAM;AACpB,gBAAI,aAAa,KAAK,GAAG;AAEzB,gBAAI,eAAe,KAAK,eAAe,YAAY;AAEjD;AAAA,YACF;AACA,gBAAI,oBAAoB,KAAK,MAAM;AACnC,gBAAI,iBAAiB,YAAY,YAAY,iBAAiB,GAAG;AAC/D,0BAAY,UAAU;AACtB,qBAAO;AAAA,YACT;AAAA,UACF;AACA,sBAAY,UAAU;AACtB,iBAAO;AAAA,QACT;AACF,YAAI,+BAA+B,MAAM,kBAAkB,CAAC,CAAC;AAE7D,YAAI,+BAA+B,CAAC,SAAS,kBAAkB,CAAC,IAAI,CAAC;AAIrE,YAAI,eAAe,CAAC,KAAKY,OAAM,eAAe;AAC1C,cAAI,OAAO,IAAI,cAAc,GAAG;AAEhC,eAAK,KAAKA,OAAM,UAAU;AAC1B,0BAAgB;AAChB;AACA,UAAAZ,QAAO,OAAO,sJAAsJ;AAAA,QACtK;AAGF,YAAI,OAAO;AAAA,UACX,OAAM,CAAC,SAAS,KAAK,OAAO,CAAC,MAAM;AAAA,UACnC,WAAU,CAAC,aAAa;AAClB,gBAAI,cAAc;AAClB,mBAAO,YAAY,KAAK,QAAQ,EAAE,MAAM,CAAC;AAAA,UAC3C;AAAA,UACJ,gBAAe,CAAC,OAAO,mBAAmB;AAEpC,gBAAI,KAAK;AACT,qBAASC,KAAI,MAAM,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAC1C,kBAAI,OAAO,MAAMA,EAAC;AAClB,kBAAI,SAAS,KAAK;AAChB,sBAAM,OAAOA,IAAG,CAAC;AAAA,cACnB,WAAW,SAAS,MAAM;AACxB,sBAAM,OAAOA,IAAG,CAAC;AACjB;AAAA,cACF,WAAW,IAAI;AACb,sBAAM,OAAOA,IAAG,CAAC;AACjB;AAAA,cACF;AAAA,YACF;AAEA,gBAAI,gBAAgB;AAClB,qBAAO,IAAI,MAAM;AACf,sBAAM,QAAQ,IAAI;AAAA,cACpB;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,WAAU,CAAC,SAAS;AACd,gBAAI,aAAa,KAAK,MAAM,IAAI,GAC5B,gBAAgB,KAAK,OAAO,EAAE,MAAM;AAExC,mBAAO,KAAK,eAAe,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,GAAG;AACpF,gBAAI,CAAC,QAAQ,CAAC,YAAY;AACxB,qBAAO;AAAA,YACT;AACA,gBAAI,QAAQ,eAAe;AACzB,sBAAQ;AAAA,YACV;AACA,oBAAQ,aAAa,MAAM,MAAM;AAAA,UACnC;AAAA,UACJ,SAAQ,CAAC,SAAS;AACZ,gBAAI,SAAS,KAAK,UAAU,IAAI,GAC5B,OAAO,OAAO,CAAC,GACf,MAAM,OAAO,CAAC;AAClB,gBAAI,CAAC,QAAQ,CAAC,KAAK;AAEjB,qBAAO;AAAA,YACT;AACA,gBAAI,KAAK;AAEP,oBAAM,IAAI,OAAO,GAAG,IAAI,SAAS,CAAC;AAAA,YACpC;AACA,mBAAO,OAAO;AAAA,UAChB;AAAA,UACJ,UAAS,CAAC,SAAS;AAEb,gBAAI,SAAS,IAAK,QAAO;AACzB,mBAAO,KAAK,UAAU,IAAI;AAC1B,mBAAO,KAAK,QAAQ,OAAO,EAAE;AAC7B,gBAAI,YAAY,KAAK,YAAY,GAAG;AACpC,gBAAI,cAAc,GAAI,QAAO;AAC7B,mBAAO,KAAK,OAAO,YAAU,CAAC;AAAA,UAChC;AAAA,UACJ,MAAK,WAAW;AACV,gBAAI,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS;AAChD,mBAAO,KAAK,UAAU,MAAM,KAAK,GAAG,CAAC;AAAA,UACvC;AAAA,UACJ,OAAM,CAAC,GAAG,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC;AAAA,QAC1C;AAEA,YAAI,iBAAiB,MAAM;AACvB,cAAI,OAAO,UAAU,YAAY,OAAO,OAAO,iBAAiB,KAAK,YAAY;AAE/E,mBAAO,CAAC,SAAS,OAAO,gBAAgB,IAAI;AAAA,UAC9C,WACI,qBAAqB;AAEvB,gBAAI;AACF,kBAAI,gBAAgB;AACpB,kBAAI,iBAAiB,cAAc,gBAAgB;AACnD,kBAAI,gBAAgB;AAElB,uBAAO,CAAC,SAAS,cAAc,gBAAgB,EAAE,IAAI;AAAA,cACvD;AAEA,kBAAI,cAAc,cAAc,aAAa;AAC7C,qBAAO,CAAC,UACN,KAAK,IAAI,YAAY,KAAK,UAAU,CAAC;AAAA,cAErC;AAAA,YAEJ,SAAS,GAAG;AAAA,YAEZ;AAAA,UACF;AAEA,gBAAM,2RAA2R;AAAA,QACnS;AACF,YAAI,aAAa,CAAC,SAAS;AAEvB,kBAAQ,aAAa,eAAe,GAAG,IAAI;AAAA,QAC7C;AAIF,YAAI,UAAU;AAAA,UACd,SAAQ,WAAW;AACb,gBAAI,eAAe,IACjB,mBAAmB;AACrB,qBAASA,KAAI,UAAU,SAAS,GAAGA,MAAK,MAAM,CAAC,kBAAkBA,MAAK;AACpE,kBAAI,OAAQA,MAAK,IAAK,UAAUA,EAAC,IAAI,GAAG,IAAI;AAE5C,kBAAI,OAAO,QAAQ,UAAU;AAC3B,sBAAM,IAAI,UAAU,2CAA2C;AAAA,cACjE,WAAW,CAAC,MAAM;AAChB,uBAAO;AAAA,cACT;AACA,6BAAe,OAAO,MAAM;AAC5B,iCAAmB,KAAK,MAAM,IAAI;AAAA,YACpC;AAGA,2BAAe,KAAK,eAAe,aAAa,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,GAAG;AAC1G,oBAAS,mBAAmB,MAAM,MAAM,gBAAiB;AAAA,UAC3D;AAAA,UACJ,UAAS,CAAC,MAAM,OAAO;AACjB,mBAAO,QAAQ,QAAQ,IAAI,EAAE,OAAO,CAAC;AACrC,iBAAK,QAAQ,QAAQ,EAAE,EAAE,OAAO,CAAC;AACjC,qBAAS,KAAK,KAAK;AACjB,kBAAI,QAAQ;AACZ,qBAAO,QAAQ,IAAI,QAAQ,SAAS;AAClC,oBAAI,IAAI,KAAK,MAAM,GAAI;AAAA,cACzB;AACA,kBAAI,MAAM,IAAI,SAAS;AACvB,qBAAO,OAAO,GAAG,OAAO;AACtB,oBAAI,IAAI,GAAG,MAAM,GAAI;AAAA,cACvB;AACA,kBAAI,QAAQ,IAAK,QAAO,CAAC;AACzB,qBAAO,IAAI,MAAM,OAAO,MAAM,QAAQ,CAAC;AAAA,YACzC;AACA,gBAAI,YAAY,KAAK,KAAK,MAAM,GAAG,CAAC;AACpC,gBAAI,UAAU,KAAK,GAAG,MAAM,GAAG,CAAC;AAChC,gBAAI,SAAS,KAAK,IAAI,UAAU,QAAQ,QAAQ,MAAM;AACtD,gBAAI,kBAAkB;AACtB,qBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,kBAAI,UAAUA,EAAC,MAAM,QAAQA,EAAC,GAAG;AAC/B,kCAAkBA;AAClB;AAAA,cACF;AAAA,YACF;AACA,gBAAI,cAAc,CAAC;AACnB,qBAASA,KAAI,iBAAiBA,KAAI,UAAU,QAAQA,MAAK;AACvD,0BAAY,KAAK,IAAI;AAAA,YACvB;AACA,0BAAc,YAAY,OAAO,QAAQ,MAAM,eAAe,CAAC;AAC/D,mBAAO,YAAY,KAAK,GAAG;AAAA,UAC7B;AAAA,QACJ;AAIA,YAAI,0BAA0B,CAAC;AAE/B,YAAI,kBAAkB,CAAC,QAAQ;AAC3B,cAAI,MAAM;AACV,mBAASA,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AAKnC,gBAAI,IAAI,IAAI,WAAWA,EAAC;AACxB,gBAAI,KAAK,KAAM;AACb;AAAA,YACF,WAAW,KAAK,MAAO;AACrB,qBAAO;AAAA,YACT,WAAW,KAAK,SAAU,KAAK,OAAQ;AACrC,qBAAO;AAAG,gBAAEA;AAAA,YACd,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,oBAAoB,CAAC,KAAK,MAAM,QAAQ,oBAAoB;AAC5D,UAAAD,QAAO,OAAO,QAAQ,UAAU,2CAA2C,OAAO,GAAG,GAAG;AAGxF,cAAI,EAAE,kBAAkB;AACtB,mBAAO;AAET,cAAI,WAAW;AACf,cAAI,SAAS,SAAS,kBAAkB;AACxC,mBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AAQnC,gBAAI,IAAI,IAAI,WAAWA,EAAC;AACxB,gBAAI,KAAK,SAAU,KAAK,OAAQ;AAC9B,kBAAI,KAAK,IAAI,WAAW,EAAEA,EAAC;AAC3B,kBAAI,UAAY,IAAI,SAAU,MAAO,KAAK;AAAA,YAC5C;AACA,gBAAI,KAAK,KAAM;AACb,kBAAI,UAAU,OAAQ;AACtB,mBAAK,QAAQ,IAAI;AAAA,YACnB,WAAW,KAAK,MAAO;AACrB,kBAAI,SAAS,KAAK,OAAQ;AAC1B,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAQ,IAAI;AAAA,YAC/B,WAAW,KAAK,OAAQ;AACtB,kBAAI,SAAS,KAAK,OAAQ;AAC1B,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAS,KAAK,IAAK;AACpC,mBAAK,QAAQ,IAAI,MAAQ,IAAI;AAAA,YAC/B,OAAO;AACL,kBAAI,SAAS,KAAK,OAAQ;AAC1B,kBAAI,IAAI,QAAU,UAAS,gCAAgC,YAAY,CAAC,IAAI,wIAAwI;AACpN,mBAAK,QAAQ,IAAI,MAAQ,KAAK;AAC9B,mBAAK,QAAQ,IAAI,MAAS,KAAK,KAAM;AACrC,mBAAK,QAAQ,IAAI,MAAS,KAAK,IAAK;AACpC,mBAAK,QAAQ,IAAI,MAAQ,IAAI;AAAA,YAC/B;AAAA,UACF;AAEA,eAAK,MAAM,IAAI;AACf,iBAAO,SAAS;AAAA,QAClB;AAEF,iBAAS,mBAAmB,SAAS,aAAa,QAAQ;AACxD,cAAI,MAAM,SAAS,IAAI,SAAS,gBAAgB,OAAO,IAAE;AACzD,cAAI,UAAU,IAAI,MAAM,GAAG;AAC3B,cAAI,kBAAkB,kBAAkB,SAAS,SAAS,GAAG,QAAQ,MAAM;AAC3E,cAAI,YAAa,SAAQ,SAAS;AAClC,iBAAO;AAAA,QACT;AACA,YAAI,mBAAmB,MAAM;AACzB,cAAI,CAAC,wBAAwB,QAAQ;AACnC,gBAAI,SAAS;AACb,gBAAI,qBAAqB;AAEvB,kBAAI,UAAU;AACd,kBAAI,MAAM,OAAO,MAAM,OAAO;AAC9B,kBAAI,YAAY;AAShB,kBAAI,KAAK,QAAQ,MAAM;AAEvB,kBAAI;AACF,4BAAY,GAAG,SAAS,IAAI,GAAG;AAAA,cACjC,SAAQ,GAAG;AAGT,oBAAI,EAAE,SAAS,EAAE,SAAS,KAAK,EAAG,aAAY;AAAA,oBACzC,OAAM;AAAA,cACb;AAEA,kBAAI,YAAY,GAAG;AACjB,yBAAS,IAAI,MAAM,GAAG,SAAS,EAAE,SAAS,OAAO;AAAA,cACnD,OAAO;AACL,yBAAS;AAAA,cACX;AAAA,YACF,WACI,OAAO,UAAU,eACnB,OAAO,OAAO,UAAU,YAAY;AAEpC,uBAAS,OAAO,OAAO,SAAS;AAChC,kBAAI,WAAW,MAAM;AACnB,0BAAU;AAAA,cACZ;AAAA,YACF,WAAW,OAAO,YAAY,YAAY;AAExC,uBAAS,SAAS;AAClB,kBAAI,WAAW,MAAM;AACnB,0BAAU;AAAA,cACZ;AAAA,YACF;AACA,gBAAI,CAAC,QAAQ;AACX,qBAAO;AAAA,YACT;AACA,sCAA0B,mBAAmB,QAAQ,IAAI;AAAA,UAC3D;AACA,iBAAO,wBAAwB,MAAM;AAAA,QACvC;AACF,YAAI,MAAM;AAAA,UACV,MAAK,CAAC;AAAA,UACN,OAAO;AAAA,UASH;AAAA,UACJ,WAAW;AAAA,UAUP;AAAA,UACJ,SAAS,KAAK,KAAK;AACb,gBAAI,KAAK,GAAG,IAAI,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,GAAG,IAAS;AAClD,eAAG,eAAe,KAAK,IAAI,UAAU;AAAA,UACvC;AAAA,UACJ,YAAW;AAAA,YACX,KAAK,QAAQ;AACL,kBAAI,MAAM,IAAI,KAAK,OAAO,KAAK,IAAI;AACnC,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,qBAAO,MAAM;AACb,qBAAO,WAAW;AAAA,YACpB;AAAA,YACN,MAAM,QAAQ;AAEN,qBAAO,IAAI,IAAI,MAAM,OAAO,GAAG;AAAA,YACjC;AAAA,YACN,MAAM,QAAQ;AACN,qBAAO,IAAI,IAAI,MAAM,OAAO,GAAG;AAAA,YACjC;AAAA,YACN,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,KAAmB;AAChD,kBAAI,CAAC,OAAO,OAAO,CAAC,OAAO,IAAI,IAAI,UAAU;AAC3C,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,kBAAI,YAAY;AAChB,uBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,oBAAI;AACJ,oBAAI;AACF,2BAAS,OAAO,IAAI,IAAI,SAAS,OAAO,GAAG;AAAA,gBAC7C,SAAS,GAAG;AACV,wBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,gBAC5B;AACA,oBAAI,WAAW,UAAa,cAAc,GAAG;AAC3C,wBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,gBAC3B;AACA,oBAAI,WAAW,QAAQ,WAAW,OAAW;AAC7C;AACA,uBAAO,SAAOA,EAAC,IAAI;AAAA,cACrB;AACA,kBAAI,WAAW;AACb,uBAAO,KAAK,YAAY,KAAK,IAAI;AAAA,cACnC;AACA,qBAAO;AAAA,YACT;AAAA,YACN,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACnC,kBAAI,CAAC,OAAO,OAAO,CAAC,OAAO,IAAI,IAAI,UAAU;AAC3C,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,kBAAI;AACF,yBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,yBAAO,IAAI,IAAI,SAAS,OAAO,KAAK,OAAO,SAAOA,EAAC,CAAC;AAAA,gBACtD;AAAA,cACF,SAAS,GAAG;AACV,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,kBAAI,QAAQ;AACV,uBAAO,KAAK,YAAY,KAAK,IAAI;AAAA,cACnC;AACA,qBAAOA;AAAA,YACT;AAAA,UACN;AAAA,UACA,iBAAgB;AAAA,YAChB,SAAS,KAAK;AACN,qBAAO,iBAAiB;AAAA,YAC1B;AAAA,YACN,SAAS,KAAK,KAAK;AACX,kBAAI,QAAQ,QAAQ,QAAQ,IAAI;AAC9B,oBAAI,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACpC,oBAAI,SAAS,CAAC;AAAA,cAChB,OAAO;AACL,oBAAI,OAAO,EAAG,KAAI,OAAO,KAAK,GAAG;AAAA,cACnC;AAAA,YACF;AAAA,YACN,MAAM,KAAK;AACH,kBAAI,IAAI,UAAU,IAAI,OAAO,SAAS,GAAG;AACvC,oBAAI,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACpC,oBAAI,SAAS,CAAC;AAAA,cAChB;AAAA,YACF;AAAA,YACN,aAAa,KAAK;AAEV,qBAAO;AAAA,gBACL,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,SAAS;AAAA,gBACT,MAAM;AAAA,kBACJ;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAClE;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAClE;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,kBAAM;AAAA,gBAC5C;AAAA,cACF;AAAA,YACF;AAAA,YACN,aAAa,KAAK,kBAAkB,MAAM;AAElC,qBAAO;AAAA,YACT;AAAA,YACN,iBAAiB,KAAK;AACd,qBAAO,CAAC,IAAI,EAAE;AAAA,YAChB;AAAA,UACN;AAAA,UACA,kBAAiB;AAAA,YACjB,SAAS,KAAK,KAAK;AACX,kBAAI,QAAQ,QAAQ,QAAQ,IAAI;AAC9B,oBAAI,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACpC,oBAAI,SAAS,CAAC;AAAA,cAChB,OAAO;AACL,oBAAI,OAAO,EAAG,KAAI,OAAO,KAAK,GAAG;AAAA,cACnC;AAAA,YACF;AAAA,YACN,MAAM,KAAK;AACH,kBAAI,IAAI,UAAU,IAAI,OAAO,SAAS,GAAG;AACvC,oBAAI,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACpC,oBAAI,SAAS,CAAC;AAAA,cAChB;AAAA,YACF;AAAA,UACN;AAAA,QACA;AAGA,YAAI,aAAa,CAAC,SAAS,SAAS;AAChC,iBAAO,KAAK,GAAG,SAAS,UAAU,IAAI;AACtC,iBAAO;AAAA,QACT;AAEF,YAAI,cAAc,CAAC,MAAM,cAAc;AACnC,UAAAD,QAAO,WAAW,gCAAgC;AAClD,iBAAO,KAAK,KAAK,OAAO,SAAS,IAAI;AAAA,QACvC;AACF,YAAI,YAAY,CAAC,SAAS;AACtB,iBAAO,YAAY,MAAM,KAAK;AAC9B,cAAI,MAAM,6BAA6B,OAAO,IAAI;AAClD,cAAI,CAAC,IAAK,QAAO;AACjB,iBAAO,WAAW,KAAK,IAAI;AAAA,QAC7B;AACF,YAAI,QAAQ;AAAA,UACZ,WAAU;AAAA,UACV,MAAM,OAAO;AACP,mBAAO,MAAM,WAAW,MAAM,KAAK,QAAQ,KAAgB,CAAC;AAAA,UAC9D;AAAA,UACJ,WAAW,QAAQ,MAAM,MAAM,KAAK;AAC9B,gBAAI,GAAG,SAAS,IAAI,KAAK,GAAG,OAAO,IAAI,GAAG;AAExC,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,kBAAM,cAAc;AAAA,cAClB,KAAK;AAAA,gBACH,MAAM;AAAA,kBACJ,SAAS,MAAM,SAAS;AAAA,kBACxB,SAAS,MAAM,SAAS;AAAA,kBACxB,QAAQ,MAAM,SAAS;AAAA,kBACvB,OAAO,MAAM,SAAS;AAAA,kBACtB,QAAQ,MAAM,SAAS;AAAA,kBACvB,QAAQ,MAAM,SAAS;AAAA,kBACvB,OAAO,MAAM,SAAS;AAAA,kBACtB,SAAS,MAAM,SAAS;AAAA,kBACxB,SAAS,MAAM,SAAS;AAAA,gBAC1B;AAAA,gBACA,QAAQ;AAAA,kBACN,QAAQ,MAAM,WAAW;AAAA,gBAC3B;AAAA,cACF;AAAA,cACA,MAAM;AAAA,gBACJ,MAAM;AAAA,kBACJ,SAAS,MAAM,SAAS;AAAA,kBACxB,SAAS,MAAM,SAAS;AAAA,gBAC1B;AAAA,gBACA,QAAQ;AAAA,kBACN,QAAQ,MAAM,WAAW;AAAA,kBACzB,MAAM,MAAM,WAAW;AAAA,kBACvB,OAAO,MAAM,WAAW;AAAA,kBACxB,UAAU,MAAM,WAAW;AAAA,kBAC3B,MAAM,MAAM,WAAW;AAAA,kBACvB,OAAO,MAAM,WAAW;AAAA,gBAC1B;AAAA,cACF;AAAA,cACA,MAAM;AAAA,gBACJ,MAAM;AAAA,kBACJ,SAAS,MAAM,SAAS;AAAA,kBACxB,SAAS,MAAM,SAAS;AAAA,kBACxB,UAAU,MAAM,SAAS;AAAA,gBAC3B;AAAA,gBACA,QAAQ,CAAC;AAAA,cACX;AAAA,cACA,QAAQ;AAAA,gBACN,MAAM;AAAA,kBACJ,SAAS,MAAM,SAAS;AAAA,kBACxB,SAAS,MAAM,SAAS;AAAA,gBAC1B;AAAA,gBACA,QAAQ,GAAG;AAAA,cACb;AAAA,YACF;AACA,gBAAI,OAAO,GAAG,WAAW,QAAQ,MAAM,MAAM,GAAG;AAChD,gBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,mBAAK,WAAW,MAAM,UAAU,IAAI;AACpC,mBAAK,aAAa,MAAM,UAAU,IAAI;AACtC,mBAAK,WAAW,CAAC;AAAA,YACnB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,mBAAK,WAAW,MAAM,UAAU,KAAK;AACrC,mBAAK,aAAa,MAAM,UAAU,KAAK;AACvC,mBAAK,YAAY;AAIjB,mBAAK,WAAW;AAAA,YAClB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,mBAAK,WAAW,MAAM,UAAU,KAAK;AACrC,mBAAK,aAAa,MAAM,UAAU,KAAK;AAAA,YACzC,WAAW,GAAG,SAAS,KAAK,IAAI,GAAG;AACjC,mBAAK,WAAW,MAAM,UAAU,OAAO;AACvC,mBAAK,aAAa,MAAM,UAAU,OAAO;AAAA,YAC3C;AACA,iBAAK,YAAY,KAAK,IAAI;AAE1B,gBAAI,QAAQ;AACV,qBAAO,SAAS,IAAI,IAAI;AACxB,qBAAO,YAAY,KAAK;AAAA,YAC1B;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,wBAAwB,MAAM;AACxB,gBAAI,CAAC,KAAK,SAAU,QAAO,IAAI,WAAW,CAAC;AAC3C,gBAAI,KAAK,SAAS,SAAU,QAAO,KAAK,SAAS,SAAS,GAAG,KAAK,SAAS;AAC3E,mBAAO,IAAI,WAAW,KAAK,QAAQ;AAAA,UACrC;AAAA,UACJ,kBAAkB,MAAM,aAAa;AAC/B,gBAAI,eAAe,KAAK,WAAW,KAAK,SAAS,SAAS;AAC1D,gBAAI,gBAAgB,YAAa;AAIjC,gBAAI,wBAAwB,OAAO;AACnC,0BAAc,KAAK,IAAI,aAAc,gBAAgB,eAAe,wBAAwB,IAAM,WAAY,CAAC;AAC/G,gBAAI,gBAAgB,EAAG,eAAc,KAAK,IAAI,aAAa,GAAG;AAC9D,gBAAI,cAAc,KAAK;AACvB,iBAAK,WAAW,IAAI,WAAW,WAAW;AAC1C,gBAAI,KAAK,YAAY,EAAG,MAAK,SAAS,IAAI,YAAY,SAAS,GAAG,KAAK,SAAS,GAAG,CAAC;AAAA,UACtF;AAAA,UACJ,kBAAkB,MAAM,SAAS;AAC3B,gBAAI,KAAK,aAAa,QAAS;AAC/B,gBAAI,WAAW,GAAG;AAChB,mBAAK,WAAW;AAChB,mBAAK,YAAY;AAAA,YACnB,OAAO;AACL,kBAAI,cAAc,KAAK;AACvB,mBAAK,WAAW,IAAI,WAAW,OAAO;AACtC,kBAAI,aAAa;AACf,qBAAK,SAAS,IAAI,YAAY,SAAS,GAAG,KAAK,IAAI,SAAS,KAAK,SAAS,CAAC,CAAC;AAAA,cAC9E;AACA,mBAAK,YAAY;AAAA,YACnB;AAAA,UACF;AAAA,UACJ,UAAS;AAAA,YACT,QAAQ,MAAM;AACN,kBAAI,OAAO,CAAC;AAEZ,mBAAK,MAAM,GAAG,SAAS,KAAK,IAAI,IAAI,KAAK,KAAK;AAC9C,mBAAK,MAAM,KAAK;AAChB,mBAAK,OAAO,KAAK;AACjB,mBAAK,QAAQ;AACb,mBAAK,MAAM;AACX,mBAAK,MAAM;AACX,mBAAK,OAAO,KAAK;AACjB,kBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,qBAAK,OAAO;AAAA,cACd,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,qBAAK,OAAO,KAAK;AAAA,cACnB,WAAW,GAAG,OAAO,KAAK,IAAI,GAAG;AAC/B,qBAAK,OAAO,KAAK,KAAK;AAAA,cACxB,OAAO;AACL,qBAAK,OAAO;AAAA,cACd;AACA,mBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AACpC,mBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AACpC,mBAAK,QAAQ,IAAI,KAAK,KAAK,SAAS;AAGpC,mBAAK,UAAU;AACf,mBAAK,SAAS,KAAK,KAAK,KAAK,OAAO,KAAK,OAAO;AAChD,qBAAO;AAAA,YACT;AAAA,YACN,QAAQ,MAAM,MAAM;AACZ,kBAAI,KAAK,SAAS,QAAW;AAC3B,qBAAK,OAAO,KAAK;AAAA,cACnB;AACA,kBAAI,KAAK,cAAc,QAAW;AAChC,qBAAK,YAAY,KAAK;AAAA,cACxB;AACA,kBAAI,KAAK,SAAS,QAAW;AAC3B,sBAAM,kBAAkB,MAAM,KAAK,IAAI;AAAA,cACzC;AAAA,YACF;AAAA,YACN,OAAO,QAAQ,MAAM;AACb,oBAAM,GAAG,cAAc,EAAE;AAAA,YAC3B;AAAA,YACN,MAAM,QAAQ,MAAM,MAAM,KAAK;AACvB,qBAAO,MAAM,WAAW,QAAQ,MAAM,MAAM,GAAG;AAAA,YACjD;AAAA,YACN,OAAO,UAAU,SAAS,UAAU;AAE5B,kBAAI,GAAG,MAAM,SAAS,IAAI,GAAG;AAC3B,oBAAI;AACJ,oBAAI;AACF,6BAAW,GAAG,WAAW,SAAS,QAAQ;AAAA,gBAC5C,SAAS,GAAG;AAAA,gBACZ;AACA,oBAAI,UAAU;AACZ,2BAASC,MAAK,SAAS,UAAU;AAC/B,0BAAM,IAAI,GAAG,WAAW,EAAE;AAAA,kBAC5B;AAAA,gBACF;AAAA,cACF;AAEA,qBAAO,SAAS,OAAO,SAAS,SAAS,IAAI;AAC7C,uBAAS,OAAO,YAAY,KAAK,IAAI;AACrC,uBAAS,OAAO;AAChB,sBAAQ,SAAS,QAAQ,IAAI;AAC7B,sBAAQ,YAAY,SAAS,OAAO;AACpC,uBAAS,SAAS;AAAA,YACpB;AAAA,YACN,OAAO,QAAQ,MAAM;AACb,qBAAO,OAAO,SAAS,IAAI;AAC3B,qBAAO,YAAY,KAAK,IAAI;AAAA,YAC9B;AAAA,YACN,MAAM,QAAQ,MAAM;AACZ,kBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,uBAASA,MAAK,KAAK,UAAU;AAC3B,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,qBAAO,OAAO,SAAS,IAAI;AAC3B,qBAAO,YAAY,KAAK,IAAI;AAAA,YAC9B;AAAA,YACN,QAAQ,MAAM;AACN,kBAAI,UAAU,CAAC,KAAK,IAAI;AACxB,uBAAS,OAAO,OAAO,KAAK,KAAK,QAAQ,GAAG;AAC1C,wBAAQ,KAAK,GAAG;AAAA,cAClB;AACA,qBAAO;AAAA,YACT;AAAA,YACN,QAAQ,QAAQ,SAAS,SAAS;AAC1B,kBAAI,OAAO,MAAM,WAAW,QAAQ,SAAS,MAAiB,OAAO,CAAC;AACtE,mBAAK,OAAO;AACZ,qBAAO;AAAA,YACT;AAAA,YACN,SAAS,MAAM;AACP,kBAAI,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG;AACzB,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,qBAAO,KAAK;AAAA,YACd;AAAA,UACN;AAAA,UACA,YAAW;AAAA,YACX,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AACvC,kBAAI,WAAW,OAAO,KAAK;AAC3B,kBAAI,YAAY,OAAO,KAAK,UAAW,QAAO;AAC9C,kBAAI,OAAO,KAAK,IAAI,OAAO,KAAK,YAAY,UAAU,MAAM;AAC5D,cAAAD,QAAO,QAAQ,CAAC;AAChB,kBAAI,OAAO,KAAK,SAAS,UAAU;AACjC,uBAAO,IAAI,SAAS,SAAS,UAAU,WAAW,IAAI,GAAG,MAAM;AAAA,cACjE,OAAO;AACL,yBAASC,KAAI,GAAGA,KAAI,MAAMA,KAAK,QAAO,SAASA,EAAC,IAAI,SAAS,WAAWA,EAAC;AAAA,cAC3E;AACA,qBAAO;AAAA,YACT;AAAA,YACN,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ;AAEhD,cAAAD,QAAO,EAAE,kBAAkB,YAAY;AAKvC,kBAAI,OAAO,WAAW,MAAM,QAAQ;AAClC,yBAAS;AAAA,cACX;AAEA,kBAAI,CAAC,OAAQ,QAAO;AACpB,kBAAI,OAAO,OAAO;AAClB,mBAAK,YAAY,KAAK,IAAI;AAE1B,kBAAI,OAAO,aAAa,CAAC,KAAK,YAAY,KAAK,SAAS,WAAW;AACjE,oBAAI,QAAQ;AACV,kBAAAA,QAAO,aAAa,GAAG,qDAAqD;AAC5E,uBAAK,WAAW,OAAO,SAAS,QAAQ,SAAS,MAAM;AACvD,uBAAK,YAAY;AACjB,yBAAO;AAAA,gBACT,WAAW,KAAK,cAAc,KAAK,aAAa,GAAG;AACjD,uBAAK,WAAW,OAAO,MAAM,QAAQ,SAAS,MAAM;AACpD,uBAAK,YAAY;AACjB,yBAAO;AAAA,gBACT,WAAW,WAAW,UAAU,KAAK,WAAW;AAC9C,uBAAK,SAAS,IAAI,OAAO,SAAS,QAAQ,SAAS,MAAM,GAAG,QAAQ;AACpE,yBAAO;AAAA,gBACT;AAAA,cACF;AAGA,oBAAM,kBAAkB,MAAM,WAAS,MAAM;AAC7C,kBAAI,KAAK,SAAS,YAAY,OAAO,UAAU;AAE7C,qBAAK,SAAS,IAAI,OAAO,SAAS,QAAQ,SAAS,MAAM,GAAG,QAAQ;AAAA,cACtE,OAAO;AACL,yBAASC,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAChC,uBAAK,SAAS,WAAWA,EAAC,IAAI,OAAO,SAASA,EAAC;AAAA,gBAChD;AAAA,cACF;AACA,mBAAK,YAAY,KAAK,IAAI,KAAK,WAAW,WAAW,MAAM;AAC3D,qBAAO;AAAA,YACT;AAAA,YACN,OAAO,QAAQ,QAAQ,QAAQ;AACvB,kBAAI,WAAW;AACf,kBAAI,WAAW,GAAG;AAChB,4BAAY,OAAO;AAAA,cACrB,WAAW,WAAW,GAAG;AACvB,oBAAI,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAC/B,8BAAY,OAAO,KAAK;AAAA,gBAC1B;AAAA,cACF;AACA,kBAAI,WAAW,GAAG;AAChB,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,qBAAO;AAAA,YACT;AAAA,YACN,SAAS,QAAQ,QAAQ,QAAQ;AACzB,oBAAM,kBAAkB,OAAO,MAAM,SAAS,MAAM;AACpD,qBAAO,KAAK,YAAY,KAAK,IAAI,OAAO,KAAK,WAAW,SAAS,MAAM;AAAA,YACzE;AAAA,YACN,KAAK,QAAQ,QAAQ,UAAU,MAAM,OAAO;AACpC,kBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAChC,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,kBAAI;AACJ,kBAAI;AACJ,kBAAI,WAAW,OAAO,KAAK;AAE3B,kBAAI,EAAE,QAAQ,MAAM,SAAS,WAAW,MAAM,QAAQ;AAGpD,4BAAY;AACZ,sBAAM,SAAS;AAAA,cACjB,OAAO;AAEL,oBAAI,WAAW,KAAK,WAAW,SAAS,SAAS,QAAQ;AACvD,sBAAI,SAAS,UAAU;AACrB,+BAAW,SAAS,SAAS,UAAU,WAAW,MAAM;AAAA,kBAC1D,OAAO;AACL,+BAAW,MAAM,UAAU,MAAM,KAAK,UAAU,UAAU,WAAW,MAAM;AAAA,kBAC7E;AAAA,gBACF;AACA,4BAAY;AACZ,sBAAM,UAAU,MAAM;AACtB,oBAAI,CAAC,KAAK;AACR,wBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,gBAC5B;AACA,sBAAM,IAAI,UAAU,GAAG;AAAA,cACzB;AACA,qBAAO,EAAE,KAAK,UAAU;AAAA,YAC1B;AAAA,YACN,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,WAAW;AACzC,oBAAM,WAAW,MAAM,QAAQ,QAAQ,GAAG,QAAQ,QAAQ,KAAK;AAE/D,qBAAO;AAAA,YACT;AAAA,UACN;AAAA,QACA;AAGA,YAAI,YAAY,CAAC,KAAK,QAAQ,SAAS,aAAa;AAChD,cAAI,MAAM,CAAC,WAAW,uBAAuB,MAAM,GAAG,EAAE,IAAI;AAC5D,oBAAU,KAAK,CAAC,gBAAgB;AAC9B,YAAAD,QAAO,aAAa,sBAAsB,GAAG,4BAA4B;AACzE,mBAAO,IAAI,WAAW,WAAW,CAAC;AAClC,gBAAI,IAAK,qBAAoB,GAAG;AAAA,UAClC,GAAG,CAAC,UAAU;AACZ,gBAAI,SAAS;AACX,sBAAQ;AAAA,YACV,OAAO;AACL,oBAAM,sBAAsB,GAAG;AAAA,YACjC;AAAA,UACF,CAAC;AACD,cAAI,IAAK,kBAAiB,GAAG;AAAA,QAC/B;AAGF,YAAI,oBAAoB,CAAC,QAAQ,MAAM,UAAU,SAAS,UAAU,WAAW;AAC3E,aAAG,eAAe,QAAQ,MAAM,UAAU,SAAS,UAAU,MAAM;AAAA,QACrE;AAEF,YAAI,iBAAiB,OAAO,gBAAgB,KAAK,CAAC;AAClD,YAAI,4BAA4B,CAAC,WAAW,UAAU,QAAQ,YAAY;AAEtE,cAAI,OAAO,WAAW,YAAa,SAAQ,KAAK;AAEhD,cAAI,UAAU;AACd,yBAAe,QAAQ,CAAC,WAAW;AACjC,gBAAI,QAAS;AACb,gBAAI,OAAO,WAAW,EAAE,QAAQ,GAAG;AACjC,qBAAO,QAAQ,EAAE,WAAW,UAAU,QAAQ,OAAO;AACrD,wBAAU;AAAA,YACZ;AAAA,UACF,CAAC;AACD,iBAAO;AAAA,QACT;AACF,YAAI,yBAAyB,CAAC,QAAQ,MAAM,KAAK,SAAS,UAAU,QAAQ,SAAS,gBAAgB,QAAQ,cAAc;AAGvH,cAAI,WAAW,OAAO,QAAQ,QAAQ,KAAK,MAAM,QAAQ,IAAI,CAAC,IAAI;AAClE,cAAI,MAAM,uBAAuB,MAAM,QAAQ,EAAE;AACjD,mBAAS,YAAY,WAAW;AAC9B,qBAAS,OAAOa,YAAW;AACzB,0BAAY;AACZ,kBAAI,CAAC,gBAAgB;AACnB,kCAAkB,QAAQ,MAAMA,YAAW,SAAS,UAAU,MAAM;AAAA,cACtE;AACA,uBAAS;AACT,kCAAoB,GAAG;AAAA,YACzB;AACA,gBAAI,0BAA0B,WAAW,UAAU,QAAQ,MAAM;AAC/D,wBAAU;AACV,kCAAoB,GAAG;AAAA,YACzB,CAAC,GAAG;AACF;AAAA,YACF;AACA,mBAAO,SAAS;AAAA,UAClB;AACA,2BAAiB,GAAG;AACpB,cAAI,OAAO,OAAO,UAAU;AAC1B,sBAAU,KAAK,aAAa,OAAO;AAAA,UACrC,OAAO;AACL,wBAAY,GAAG;AAAA,UACjB;AAAA,QACF;AAEF,YAAI,uBAAuB,CAAC,QAAQ;AAChC,cAAI,YAAY;AAAA,YACd,KAAK;AAAA,YACL,MAAM;AAAA,YACN,KAAK,MAAM,KAAK;AAAA,YAChB,MAAM,MAAM,KAAK;AAAA,YACjB,KAAK,OAAO,KAAK;AAAA,YACjB,MAAM,OAAO,KAAK;AAAA,UACpB;AACA,cAAI,QAAQ,UAAU,GAAG;AACzB,cAAI,OAAO,SAAS,aAAa;AAC/B,kBAAM,IAAI,MAAM,2BAA2B,GAAG,EAAE;AAAA,UAClD;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,aAAa,CAAC,SAAS,aAAa;AACpC,cAAI,OAAO;AACX,cAAI,QAAS,SAAQ,MAAM;AAC3B,cAAI,SAAU,SAAQ;AACtB,iBAAO;AAAA,QACT;AAKF,YAAI,iBAAiB;AAAA,UACrcAAc;AAAA,UACd,SAAS;AAAA,UACT,UAAU;AAAA,UACV,SAAS;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA,UACP,SAAS;AAAA,UACT,SAAS;AAAA,UACT,WAAW;AAAA,UACX,SAAS;AAAA,UACT,UAAU;AAAA,UACV,UAAU;AAAA,UACV,eAAe;AAAA,UACfaAAa;AAAA,UACb,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,SAAS;AAAA,UACT,SAAS;AAAA,UACT,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,SAAS;AAAA,UACT,UAAU;AAAA,UACV,aAAa;AAAA,UACb,WAAW;AAAA,UACX,WAAW;AAAA,UACX,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,WAAW;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,WAAW;AAAA,UACX,YAAY;AAAA,UACZ,UAAU;AAAA,UACV,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,SAAS;AAAA,UACT,cAAc;AAAA,UACd,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,WAAW;AAAA,UACX,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,YAAY;AAAA,UACZ,eAAe;AAAA,UACf,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,gBAAgB;AAAA,UAChB,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,eAAe;AAAA,UACf,YAAY;AAAA,UACZ,gBAAgB;AAAA,UAChB,YAAY;AAAA,UACZ,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,UACnB,iBAAiB;AAAA,UACjB,aAAa;AAAA,UACb,WAAW;AAAA,UACX,YAAY;AAAA,UACZ,gBAAgB;AAAA,UAChB,UAAU;AAAA,UACV,UAAU;AAAA,UACV,UAAU;AAAA,UACV,WAAW;AAAA,UACX,aAAa;AAAA,UACb,UAAU;AAAA,UACV,aAAa;AAAA,UACb,aAAa;AAAA,UACb,mBAAmB;AAAA,UACnB,cAAc;AAAA,UACd,YAAY;AAAA,QACd;AACF,YAAI,KAAK;AAAA,UACT,MAAK;AAAA,UACL,QAAO,CAAC;AAAA,UACR,SAAQ,CACR;AAAA,UACA,SAAQ,CAAC;AAAA,UACT,WAAU;AAAA,UACV,WAAU;AAAA,UACV,aAAY;AAAA,UACZ,aAAY;AAAA,UACZ,mBAAkB;AAAA,UAClB,YAAW,cAAc,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOzB,YAAY,OAAO;AACjB,oBAAM,eAAe,KAAK,CAAC;AAG3B,mBAAK,OAAO;AACZ,mBAAK,QAAQ;AACb,uBAAS,OAAO,aAAa;AAC3B,oBAAI,YAAY,GAAG,MAAM,OAAO;AAC9B,uBAAK,OAAO;AACZ;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UACJ,eAAc,CACd;AAAA,UACA,aAAY;AAAA,UACZ,gBAAe;AAAA,UACf,WAAW,MAAM,OAAO,CAAC,GAAG;AACtB,mBAAO,QAAQ,QAAQ,IAAI;AAE3B,gBAAI,CAAC,KAAM,QAAO,EAAE,MAAM,IAAI,MAAM,KAAK;AAEzC,gBAAI,WAAW;AAAA,cACb,cAAc;AAAA,cACd,eAAe;AAAA,YACjB;AACA,mBAAO,OAAO,OAAO,UAAU,IAAI;AAEnC,gBAAI,KAAK,gBAAgB,GAAG;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAGA,gBAAI,QAAQ,KAAK,MAAM,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAG7C,gBAAI,UAAU,GAAG;AACjB,gBAAI,eAAe;AAEnB,qBAASZ,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,kBAAI,SAAUA,OAAM,MAAM,SAAO;AACjC,kBAAI,UAAU,KAAK,QAAQ;AAEzB;AAAA,cACF;AAEA,wBAAU,GAAG,WAAW,SAAS,MAAMA,EAAC,CAAC;AACzC,6BAAe,KAAK,MAAM,cAAc,MAAMA,EAAC,CAAC;AAGhD,kBAAI,GAAG,aAAa,OAAO,GAAG;AAC5B,oBAAI,CAAC,UAAW,UAAU,KAAK,cAAe;AAC5C,4BAAU,QAAQ,QAAQ;AAAA,gBAC5B;AAAA,cACF;AAIA,kBAAI,CAAC,UAAU,KAAK,QAAQ;AAC1B,oBAAI,QAAQ;AACZ,uBAAO,GAAG,OAAO,QAAQ,IAAI,GAAG;AAC9B,sBAAI,OAAO,GAAG,SAAS,YAAY;AACnC,iCAAe,QAAQ,QAAQ,KAAK,QAAQ,YAAY,GAAG,IAAI;AAE/D,sBAAI,SAAS,GAAG,WAAW,cAAc,EAAE,eAAe,KAAK,gBAAgB,EAAE,CAAC;AAClF,4BAAU,OAAO;AAEjB,sBAAI,UAAU,IAAI;AAChB,0BAAM,IAAI,GAAG,WAAW,EAAE;AAAA,kBAC5B;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAEA,mBAAO,EAAE,MAAM,cAAc,MAAM,QAAQ;AAAA,UAC7C;AAAA,UACJ,QAAQ,MAAM;AACR,gBAAI;AACJ,mBAAO,MAAM;AACX,kBAAI,GAAG,OAAO,IAAI,GAAG;AACnB,oBAAI,QAAQ,KAAK,MAAM;AACvB,oBAAI,CAAC,KAAM,QAAO;AAClB,uBAAO,MAAM,MAAM,SAAO,CAAC,MAAM,MAAM,GAAG,KAAK,IAAI,IAAI,KAAK,QAAQ;AAAA,cACtE;AACA,qBAAO,OAAO,GAAG,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK;AAC5C,qBAAO,KAAK;AAAA,YACd;AAAA,UACF;AAAA,UACJ,SAAS,UAAU,MAAM;AACnB,gBAAI,OAAO;AAEX,qBAASA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,sBAAS,QAAQ,KAAK,OAAO,KAAK,WAAWA,EAAC,IAAK;AAAA,YACrD;AACA,oBAAS,WAAW,SAAU,KAAK,GAAG,UAAU;AAAA,UAClD;AAAA,UACJ,YAAY,MAAM;AACZ,gBAAI,OAAO,GAAG,SAAS,KAAK,OAAO,IAAI,KAAK,IAAI;AAChD,iBAAK,YAAY,GAAG,UAAU,IAAI;AAClC,eAAG,UAAU,IAAI,IAAI;AAAA,UACvB;AAAA,UACJ,eAAe,MAAM;AACf,gBAAI,OAAO,GAAG,SAAS,KAAK,OAAO,IAAI,KAAK,IAAI;AAChD,gBAAI,GAAG,UAAU,IAAI,MAAM,MAAM;AAC/B,iBAAG,UAAU,IAAI,IAAI,KAAK;AAAA,YAC5B,OAAO;AACL,kBAAI,UAAU,GAAG,UAAU,IAAI;AAC/B,qBAAO,SAAS;AACd,oBAAI,QAAQ,cAAc,MAAM;AAC9B,0BAAQ,YAAY,KAAK;AACzB;AAAA,gBACF;AACA,0BAAU,QAAQ;AAAA,cACpB;AAAA,YACF;AAAA,UACF;AAAA,UACJ,WAAW,QAAQ,MAAM;AACnB,gBAAI,UAAU,GAAG,UAAU,MAAM;AACjC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,OAAO,GAAG,SAAS,OAAO,IAAI,IAAI;AACtC,qBAAS,OAAO,GAAG,UAAU,IAAI,GAAG,MAAM,OAAO,KAAK,WAAW;AAC/D,kBAAI,WAAW,KAAK;AACpB,kBAAI,KAAK,OAAO,OAAO,OAAO,MAAM,aAAa,MAAM;AACrD,uBAAO;AAAA,cACT;AAAA,YACF;AAEA,mBAAO,GAAG,OAAO,QAAQ,IAAI;AAAA,UAC/B;AAAA,UACJ,WAAW,QAAQ,MAAM,MAAM,MAAM;AAC/B,YAAAD,QAAO,OAAO,UAAU,QAAQ;AAChC,gBAAI,OAAO,IAAI,GAAG,OAAO,QAAQ,MAAM,MAAM,IAAI;AAEjD,eAAG,YAAY,IAAI;AAEnB,mBAAO;AAAA,UACT;AAAA,UACJ,YAAY,MAAM;AACZ,eAAG,eAAe,IAAI;AAAA,UACxB;AAAA,UACJ,OAAO,MAAM;AACP,mBAAO,SAAS,KAAK;AAAA,UACvB;AAAA,UACJ,aAAa,MAAM;AACb,mBAAO,CAAC,CAAC,KAAK;AAAA,UAChB;AAAA,UACJ,OAAO,MAAM;AACP,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,MAAM,MAAM;AACN,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,OAAO,MAAM;AACP,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,SAAS,MAAM;AACT,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,SAAS,MAAM;AACT,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,OAAO,MAAM;AACP,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,SAAS,MAAM;AACT,oBAAQ,OAAO,WAAW;AAAA,UAC5B;AAAA,UACJ,wBAAwB,MAAM;AACxB,gBAAI,QAAQ,CAAC,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC;AACrC,gBAAK,OAAO,KAAM;AAChB,uBAAS;AAAA,YACX;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,gBAAgB,MAAM,OAAO;AACvB,gBAAI,GAAG,mBAAmB;AACxB,qBAAO;AAAA,YACT;AAEA,gBAAI,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,MAAM;AAC7C,qBAAO;AAAA,YACT,WAAW,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,MAAM;AACpD,qBAAO;AAAA,YACT,WAAW,MAAM,SAAS,GAAG,KAAK,EAAE,KAAK,OAAO,KAAK;AACnD,qBAAO;AAAA,YACT;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,UAAU,KAAK;AACT,gBAAI,CAAC,GAAG,MAAM,IAAI,IAAI,EAAG,QAAO;AAChC,gBAAI,UAAU,GAAG,gBAAgB,KAAK,GAAG;AACzC,gBAAI,QAAS,QAAO;AACpB,gBAAI,CAAC,IAAI,SAAS,OAAQ,QAAO;AACjC,mBAAO;AAAA,UACT;AAAA,UACJ,UAAU,KAAK,MAAM;AACf,gBAAI;AACF,kBAAI,OAAO,GAAG,WAAW,KAAK,IAAI;AAClC,qBAAO;AAAA,YACT,SAAS,GAAG;AAAA,YACZ;AACA,mBAAO,GAAG,gBAAgB,KAAK,IAAI;AAAA,UACrC;AAAA,UACJ,UAAU,KAAK,MAAM,OAAO;AACtB,gBAAI;AACJ,gBAAI;AACF,qBAAO,GAAG,WAAW,KAAK,IAAI;AAAA,YAChC,SAAS,GAAG;AACV,qBAAO,EAAE;AAAA,YACX;AACA,gBAAI,UAAU,GAAG,gBAAgB,KAAK,IAAI;AAC1C,gBAAI,SAAS;AACX,qBAAO;AAAA,YACT;AACA,gBAAI,OAAO;AACT,kBAAI,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AACxB,uBAAO;AAAA,cACT;AACA,kBAAI,GAAG,OAAO,IAAI,KAAK,GAAG,QAAQ,IAAI,MAAM,GAAG,IAAI,GAAG;AACpD,uBAAO;AAAA,cACT;AAAA,YACF,OAAO;AACL,kBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,uBAAO;AAAA,cACT;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,QAAQ,MAAM,OAAO;AACf,gBAAI,CAAC,MAAM;AACT,qBAAO;AAAA,YACT;AACA,gBAAI,GAAG,OAAO,KAAK,IAAI,GAAG;AACxB,qBAAO;AAAA,YACT,WAAW,GAAG,MAAM,KAAK,IAAI,GAAG;AAC9B,kBAAI,GAAG,wBAAwB,KAAK,MAAM;AAAA,cACrC,QAAQ,KAAM;AACjB,uBAAO;AAAA,cACT;AAAA,YACF;AACA,mBAAO,GAAG,gBAAgB,MAAM,GAAG,wBAAwB,KAAK,CAAC;AAAA,UACnE;AAAA,UACJ,cAAa;AAAA,UACb,SAAS;AACH,qBAAS,KAAK,GAAG,MAAM,GAAG,cAAc,MAAM;AAC5C,kBAAI,CAAC,GAAG,QAAQ,EAAE,GAAG;AACnB,uBAAO;AAAA,cACT;AAAA,YACF;AACA,kBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,UAC5B;AAAA,UACJ,iBAAiB,IAAI;AACf,gBAAI,SAAS,GAAG,UAAU,EAAE;AAC5B,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,WAAU,CAAC,OAAO,GAAG,QAAQ,EAAE;AAAA,UAC/B,aAAa,QAAQ,KAAK,IAAI;AACxB,gBAAI,CAAC,GAAG,UAAU;AAChB,iBAAG;AAAA,cAA+B,WAAW;AAC3C,qBAAK,SAAS,CAAE;AAAA,cAClB;AACA,iBAAG,SAAS,YAAY,CAAC;AACzB,qBAAO,iBAAiB,GAAG,SAAS,WAAW;AAAA,gBAC7C,QAAQ;AAAA;AAAA,kBAEN,MAAM;AAAE,2BAAO,KAAK;AAAA,kBAAM;AAAA;AAAA,kBAE1B,IAAI,KAAK;AAAE,yBAAK,OAAO;AAAA,kBAAK;AAAA,gBAC9B;AAAA,gBACA,QAAQ;AAAA;AAAA,kBAEN,MAAM;AAAE,4BAAQ,KAAK,QAAQ,aAAa;AAAA,kBAAG;AAAA,gBAC/C;AAAA,gBACA,SAAS;AAAA;AAAA,kBAEP,MAAM;AAAE,4BAAQ,KAAK,QAAQ,aAAa;AAAA,kBAAG;AAAA,gBAC/C;AAAA,gBACA,UAAU;AAAA;AAAA,kBAER,MAAM;AAAE,2BAAQ,KAAK,QAAQ;AAAA,kBAAO;AAAA,gBACtC;AAAA,gBACA,OAAO;AAAA;AAAA,kBAEL,MAAM;AAAE,2BAAO,KAAK,OAAO;AAAA,kBAAO;AAAA;AAAA,kBAElC,IAAI,KAAK;AAAE,yBAAK,OAAO,QAAQ;AAAA,kBAAK;AAAA,gBACtC;AAAA,gBACA,UAAW;AAAA;AAAA,kBAET,MAAM;AAAE,2BAAO,KAAK,OAAO;AAAA,kBAAU;AAAA;AAAA,kBAErC,IAAI,KAAK;AAAE,yBAAK,OAAO,WAAW;AAAA,kBAAK;AAAA,gBACzC;AAAA,cACF,CAAC;AAAA,YACH;AAEA,qBAAS,OAAO,OAAO,IAAI,GAAG,SAAS,GAAG,MAAM;AAChD,gBAAI,MAAM,IAAI;AACZ,mBAAK,GAAG,OAAO;AAAA,YACjB;AACA,mBAAO,KAAK;AACZ,eAAG,QAAQ,EAAE,IAAI;AACjB,mBAAO;AAAA,UACT;AAAA,UACJ,YAAY,IAAI;AACV,eAAG,QAAQ,EAAE,IAAI;AAAA,UACnB;AAAA,UACJ,mBAAkB;AAAA,YAClB,KAAK,QAAQ;AACL,kBAAI,SAAS,GAAG,UAAU,OAAO,KAAK,IAAI;AAE1C,qBAAO,aAAa,OAAO;AAE3B,qBAAO,WAAW,OAAO,MAAM;AAAA,YACjC;AAAA,YACN,SAAS;AACD,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAAA,UACN;AAAA,UACA,OAAM,CAAC,QAAU,OAAQ;AAAA,UACzB,OAAM,CAAC,QAAU,MAAO;AAAA,UACxB,SAAQ,CAAC,IAAI,OAAS,MAAO,IAAK;AAAA,UAClC,eAAe,KAAK,KAAK;AACnB,eAAG,QAAQ,GAAG,IAAI,EAAE,YAAY,IAAI;AAAA,UACtC;AAAA,UACJ,WAAU,CAAC,QAAQ,GAAG,QAAQ,GAAG;AAAA,UACjC,UAAU,OAAO;AACX,gBAAI,SAAS,CAAC;AACd,gBAAI,QAAQ,CAAC,KAAK;AAElB,mBAAO,MAAM,QAAQ;AACnB,kBAAI,IAAI,MAAM,IAAI;AAElB,qBAAO,KAAK,CAAC;AAEb,oBAAM,KAAK,MAAM,OAAO,EAAE,MAAM;AAAA,YAClC;AAEA,mBAAO;AAAA,UACT;AAAA,UACJ,OAAO,UAAU,UAAU;AACrB,gBAAI,OAAO,YAAY,YAAY;AACjC,yBAAW;AACX,yBAAW;AAAA,YACb;AAEA,eAAG;AAEH,gBAAI,GAAG,iBAAiB,GAAG;AACzB,kBAAI,YAAY,GAAG,cAAc,yEAAyE;AAAA,YAC5G;AAEA,gBAAI,SAAS,GAAG,UAAU,GAAG,KAAK,KAAK;AACvC,gBAAI,YAAY;AAEhB,qBAAS,WAAW,SAAS;AAC3B,cAAAA,QAAO,GAAG,iBAAiB,CAAC;AAC5B,iBAAG;AACH,qBAAO,SAAS,OAAO;AAAA,YACzB;AAEA,qBAAS,KAAK,SAAS;AACrB,kBAAI,SAAS;AACX,oBAAI,CAAC,KAAK,SAAS;AACjB,uBAAK,UAAU;AACf,yBAAO,WAAW,OAAO;AAAA,gBAC3B;AACA;AAAA,cACF;AACA,kBAAI,EAAE,aAAa,OAAO,QAAQ;AAChC,2BAAW,IAAI;AAAA,cACjB;AAAA,YACF;AAAC;AAGD,mBAAO,QAAQ,CAAC,UAAU;AACxB,kBAAI,CAAC,MAAM,KAAK,QAAQ;AACtB,uBAAO,KAAK,IAAI;AAAA,cAClB;AACA,oBAAM,KAAK,OAAO,OAAO,UAAU,IAAI;AAAA,YACzC,CAAC;AAAA,UACH;AAAA,UACJ,MAAMY,OAAM,MAAM,YAAY;AACxB,gBAAI,OAAOA,SAAQ,UAAU;AAG3B,oBAAMA;AAAA,YACR;AACA,gBAAI,OAAO,eAAe;AAC1B,gBAAI,SAAS,CAAC;AACd,gBAAI;AAEJ,gBAAI,QAAQ,GAAG,MAAM;AACnB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B,WAAW,CAAC,QAAQ,CAAC,QAAQ;AAC3B,kBAAI,SAAS,GAAG,WAAW,YAAY,EAAE,cAAc,MAAM,CAAC;AAE9D,2BAAa,OAAO;AACpB,qBAAO,OAAO;AAEd,kBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AAEA,kBAAI,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AACxB,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AAAA,YACF;AAEA,gBAAI,QAAQ;AAAA,cACV,MAAAA;AAAA,cACA;AAAA,cACA;AAAA,cACA,QAAQ,CAAC;AAAA,YACX;AAGA,gBAAI,YAAYA,MAAK,MAAM,KAAK;AAChC,sBAAU,QAAQ;AAClB,kBAAM,OAAO;AAEb,gBAAI,MAAM;AACR,iBAAG,OAAO;AAAA,YACZ,WAAW,MAAM;AAEf,mBAAK,UAAU;AAGf,kBAAI,KAAK,OAAO;AACd,qBAAK,MAAM,OAAO,KAAK,KAAK;AAAA,cAC9B;AAAA,YACF;AAEA,mBAAO;AAAA,UACT;AAAA,UACJ,QAAQ,YAAY;AACd,gBAAI,SAAS,GAAG,WAAW,YAAY,EAAE,cAAc,MAAM,CAAC;AAE9D,gBAAI,CAAC,GAAG,aAAa,OAAO,IAAI,GAAG;AACjC,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAGA,gBAAI,OAAO,OAAO;AAClB,gBAAI,QAAQ,KAAK;AACjB,gBAAI,SAAS,GAAG,UAAU,KAAK;AAE/B,mBAAO,KAAK,GAAG,SAAS,EAAE,QAAQ,CAAC,SAAS;AAC1C,kBAAI,UAAU,GAAG,UAAU,IAAI;AAE/B,qBAAO,SAAS;AACd,oBAAI,OAAO,QAAQ;AAEnB,oBAAI,OAAO,SAAS,QAAQ,KAAK,GAAG;AAClC,qBAAG,YAAY,OAAO;AAAA,gBACxB;AAEA,0BAAU;AAAA,cACZ;AAAA,YACF,CAAC;AAGD,iBAAK,UAAU;AAGf,gBAAI,MAAM,KAAK,MAAM,OAAO,QAAQ,KAAK;AACzC,YAAAZ,QAAO,QAAQ,EAAE;AACjB,iBAAK,MAAM,OAAO,OAAO,KAAK,CAAC;AAAA,UACjC;AAAA,UACJ,OAAO,QAAQ,MAAM;AACf,mBAAO,OAAO,SAAS,OAAO,QAAQ,IAAI;AAAA,UAC5C;AAAA,UACJ,MAAM,MAAM,MAAM,KAAK;AACjB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,CAAC,QAAQ,SAAS,OAAO,SAAS,MAAM;AAC1C,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,GAAG,UAAU,QAAQ,IAAI;AACvC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,OAAO,SAAS,MAAM,QAAQ,MAAM,MAAM,GAAG;AAAA,UACtD;AAAA,UACJ,OAAO,MAAM,MAAM;AACb,mBAAO,SAAS,SAAY,OAAO;AACnC,oBAAQ;AACR,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;AAAA,UAC/B;AAAA,UACJ,MAAM,MAAM,MAAM;AACZ,mBAAO,SAAS,SAAY,OAAO;AACnC,oBAAQ,MAAM;AACd,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;AAAA,UAC/B;AAAA,UACJ,UAAU,MAAM,MAAM;AAChB,gBAAI,OAAO,KAAK,MAAM,GAAG;AACzB,gBAAI,IAAI;AACR,qBAASC,KAAI,GAAGA,KAAI,KAAK,QAAQ,EAAEA,IAAG;AACpC,kBAAI,CAAC,KAAKA,EAAC,EAAG;AACd,mBAAK,MAAM,KAAKA,EAAC;AACjB,kBAAI;AACF,mBAAG,MAAM,GAAG,IAAI;AAAA,cAClB,SAAQ,GAAG;AACT,oBAAI,EAAE,SAAS,GAAI,OAAM;AAAA,cAC3B;AAAA,YACF;AAAA,UACF;AAAA,UACJ,MAAM,MAAM,MAAM,KAAK;AACjB,gBAAI,OAAO,OAAO,aAAa;AAC7B,oBAAM;AACN,qBAAO;AAAA,YACT;AACA,oBAAQ;AACR,mBAAO,GAAG,MAAM,MAAM,MAAM,GAAG;AAAA,UACjC;AAAA,UACJ,QAAQ,SAAS,SAAS;AACpB,gBAAI,CAAC,QAAQ,QAAQ,OAAO,GAAG;AAC7B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,SAAS,GAAG,WAAW,SAAS,EAAE,QAAQ,KAAK,CAAC;AACpD,gBAAI,SAAS,OAAO;AACpB,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,KAAK,SAAS,OAAO;AACnC,gBAAI,UAAU,GAAG,UAAU,QAAQ,OAAO;AAC1C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,SAAS;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,OAAO,SAAS,QAAQ,QAAQ,SAAS,OAAO;AAAA,UACzD;AAAA,UACJ,OAAO,UAAU,UAAU;AACrB,gBAAI,cAAc,KAAK,QAAQ,QAAQ;AACvC,gBAAI,cAAc,KAAK,QAAQ,QAAQ;AACvC,gBAAI,WAAW,KAAK,SAAS,QAAQ;AACrC,gBAAI,WAAW,KAAK,SAAS,QAAQ;AAErC,gBAAI,QAAQ,SAAS;AAGrB,qBAAS,GAAG,WAAW,UAAU,EAAE,QAAQ,KAAK,CAAC;AACjD,sBAAU,OAAO;AACjB,qBAAS,GAAG,WAAW,UAAU,EAAE,QAAQ,KAAK,CAAC;AACjD,sBAAU,OAAO;AAEjB,gBAAI,CAAC,WAAW,CAAC,QAAS,OAAM,IAAI,GAAG,WAAW,EAAE;AAEpD,gBAAI,QAAQ,UAAU,QAAQ,OAAO;AACnC,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAEA,gBAAI,WAAW,GAAG,WAAW,SAAS,QAAQ;AAE9C,gBAAI,WAAW,QAAQ,SAAS,UAAU,WAAW;AACrD,gBAAI,SAAS,OAAO,CAAC,MAAM,KAAK;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAEA,uBAAW,QAAQ,SAAS,UAAU,WAAW;AACjD,gBAAI,SAAS,OAAO,CAAC,MAAM,KAAK;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAEA,gBAAI;AACJ,gBAAI;AACF,yBAAW,GAAG,WAAW,SAAS,QAAQ;AAAA,YAC5C,SAAS,GAAG;AAAA,YAEZ;AAEA,gBAAI,aAAa,UAAU;AACzB;AAAA,YACF;AAEA,gBAAI,QAAQ,GAAG,MAAM,SAAS,IAAI;AAClC,gBAAI,UAAU,GAAG,UAAU,SAAS,UAAU,KAAK;AACnD,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AAGA,sBAAU,WACR,GAAG,UAAU,SAAS,UAAU,KAAK,IACrC,GAAG,UAAU,SAAS,QAAQ;AAChC,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,CAAC,QAAQ,SAAS,QAAQ;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,aAAa,QAAQ,KAAM,YAAY,GAAG,aAAa,QAAQ,GAAI;AACxE,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAEA,gBAAI,YAAY,SAAS;AACvB,wBAAU,GAAG,gBAAgB,SAAS,GAAG;AACzC,kBAAI,SAAS;AACX,sBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,cACjC;AAAA,YACF;AAEA,eAAG,eAAe,QAAQ;AAE1B,gBAAI;AACF,sBAAQ,SAAS,OAAO,UAAU,SAAS,QAAQ;AAAA,YACrD,SAAS,GAAG;AACV,oBAAM;AAAA,YACR,UAAE;AAGA,iBAAG,YAAY,QAAQ;AAAA,YACzB;AAAA,UACF;AAAA,UACJ,MAAM,MAAM;AACN,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,gBAAI,UAAU,GAAG,UAAU,QAAQ,MAAM,IAAI;AAC7C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,OAAO;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,SAAS,MAAM,QAAQ,IAAI;AAClC,eAAG,YAAY,IAAI;AAAA,UACrB;AAAA,UACJ,QAAQ,MAAM;AACR,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,KAAK,SAAS,QAAQ,IAAI;AAAA,UACnC;AAAA,UACJ,OAAO,MAAM;AACP,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,SAAS,OAAO;AACpB,gBAAI,CAAC,QAAQ;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,gBAAI,OAAO,GAAG,WAAW,QAAQ,IAAI;AACrC,gBAAI,UAAU,GAAG,UAAU,QAAQ,MAAM,KAAK;AAC9C,gBAAI,SAAS;AAIX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,gBAAI,CAAC,OAAO,SAAS,QAAQ;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,aAAa,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,SAAS,OAAO,QAAQ,IAAI;AACnC,eAAG,YAAY,IAAI;AAAA,UACrB;AAAA,UACJ,SAAS,MAAM;AACT,gBAAI,SAAS,GAAG,WAAW,IAAI;AAC/B,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,KAAK,SAAS,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,QAAQ,QAAQ,GAAG,QAAQ,KAAK,MAAM,GAAG,KAAK,SAAS,SAAS,IAAI,CAAC;AAAA,UAC9E;AAAA,UACJ,KAAK,MAAM,YAAY;AACjB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,gBAAI,OAAO,OAAO;AAClB,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,KAAK,SAAS,QAAQ,IAAI;AAAA,UACnC;AAAA,UACJ,MAAM,MAAM;AACN,mBAAO,GAAG,KAAK,MAAM,IAAI;AAAA,UAC3B;AAAA,UACJ,MAAM,MAAM,MAAM,YAAY;AACxB,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,qBAAO,OAAO;AAAA,YAChB,OAAO;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,iBAAK,SAAS,QAAQ,MAAM;AAAA,cAC1B,MAAO,OAAO,OAAS,KAAK,OAAO,CAAC;AAAA,cACpC,WAAW,KAAK,IAAI;AAAA,YACtB,CAAC;AAAA,UACH;AAAA,UACJ,OAAO,MAAM,MAAM;AACb,eAAG,MAAM,MAAM,MAAM,IAAI;AAAA,UAC3B;AAAA,UACJ,OAAO,IAAI,MAAM;AACX,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,eAAG,MAAM,OAAO,MAAM,IAAI;AAAA,UAC5B;AAAA,UACJ,MAAM,MAAM,KAAK,KAAK,YAAY;AAC5B,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC;AACxD,qBAAO,OAAO;AAAA,YAChB,OAAO;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,iBAAK,SAAS,QAAQ,MAAM;AAAA,cAC1B,WAAW,KAAK,IAAI;AAAA;AAAA,YAEtB,CAAC;AAAA,UACH;AAAA,UACJ,OAAO,MAAM,KAAK,KAAK;AACjB,eAAG,MAAM,MAAM,KAAK,KAAK,IAAI;AAAA,UAC/B;AAAA,UACJ,OAAO,IAAI,KAAK,KAAK;AACf,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,eAAG,MAAM,OAAO,MAAM,KAAK,GAAG;AAAA,UAChC;AAAA,UACJ,SAAS,MAAM,KAAK;AACd,gBAAI,MAAM,GAAG;AACX,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,qBAAO,OAAO;AAAA,YAChB,OAAO;AACL,qBAAO;AAAA,YACT;AACA,gBAAI,CAAC,KAAK,SAAS,SAAS;AAC1B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,MAAM,KAAK,IAAI,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,GAAG,OAAO,KAAK,IAAI,GAAG;AACzB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,GAAG,gBAAgB,MAAM,GAAG;AAC1C,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,iBAAK,SAAS,QAAQ,MAAM;AAAA,cAC1B,MAAM;AAAA,cACN,WAAW,KAAK,IAAI;AAAA,YACtB,CAAC;AAAA,UACH;AAAA,UACJ,UAAU,IAAI,KAAK;AACb,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,eAAG,SAAS,OAAO,MAAM,GAAG;AAAA,UAC9B;AAAA,UACJ,MAAM,MAAM,OAAO,OAAO;AACpB,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,OAAO;AAClB,iBAAK,SAAS,QAAQ,MAAM;AAAA,cAC1B,WAAW,KAAK,IAAI,OAAO,KAAK;AAAA,YAClC,CAAC;AAAA,UACH;AAAA,UACJ,KAAK,MAAM,OAAO,MAAM;AAClB,gBAAI,SAAS,IAAI;AACf,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,oBAAQ,OAAO,SAAS,WAAW,qBAAqB,KAAK,IAAI;AACjE,mBAAO,OAAO,QAAQ,cAAc,MAAiB;AACrD,gBAAK,QAAQ,IAAK;AAChB,qBAAQ,OAAO,OAAQ;AAAA,YACzB,OAAO;AACL,qBAAO;AAAA,YACT;AACA,gBAAI;AACJ,gBAAI,OAAO,QAAQ,UAAU;AAC3B,qBAAO;AAAA,YACT,OAAO;AACL,qBAAO,KAAK,UAAU,IAAI;AAC1B,kBAAI;AACF,oBAAI,SAAS,GAAG,WAAW,MAAM;AAAA,kBAC/B,QAAQ,EAAE,QAAQ;AAAA,gBACpB,CAAC;AACD,uBAAO,OAAO;AAAA,cAChB,SAAS,GAAG;AAAA,cAEZ;AAAA,YACF;AAEA,gBAAI,UAAU;AACd,gBAAK,QAAQ,IAAK;AAChB,kBAAI,MAAM;AAER,oBAAK,QAAQ,KAAM;AACjB,wBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,gBAC5B;AAAA,cACF,OAAO;AAEL,uBAAO,GAAG,MAAM,MAAM,MAAM,CAAC;AAC7B,0BAAU;AAAA,cACZ;AAAA,YACF;AACA,gBAAI,CAAC,MAAM;AACT,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAEA,gBAAI,GAAG,SAAS,KAAK,IAAI,GAAG;AAC1B,uBAAS,CAAC;AAAA,YACZ;AAEA,gBAAK,QAAQ,SAAU,CAAC,GAAG,MAAM,KAAK,IAAI,GAAG;AAC3C,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AAIA,gBAAI,CAAC,SAAS;AACZ,kBAAI,UAAU,GAAG,QAAQ,MAAM,KAAK;AACpC,kBAAI,SAAS;AACX,sBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,cACjC;AAAA,YACF;AAEA,gBAAK,QAAQ,OAAQ,CAAC,SAAS;AAC7B,iBAAG,SAAS,MAAM,CAAC;AAAA,YACrB;AAEA,qBAAS,EAAE,MAAM,MAAM;AAGvB,gBAAI,SAAS,GAAG,aAAa;AAAA,cAC3B;AAAA,cACA,MAAM,GAAG,QAAQ,IAAI;AAAA;AAAA,cACrB;AAAA,cACA,UAAU;AAAA,cACV,UAAU;AAAA,cACV,YAAY,KAAK;AAAA;AAAA,cAEjB,UAAU,CAAC;AAAA,cACX,OAAO;AAAA,YACT,CAAC;AAED,gBAAI,OAAO,WAAW,MAAM;AAC1B,qBAAO,WAAW,KAAK,MAAM;AAAA,YAC/B;AACA,gBAAI,OAAO,cAAc,KAAK,EAAE,QAAQ,IAAI;AAC1C,kBAAI,CAAC,GAAG,UAAW,IAAG,YAAY,CAAC;AACnC,kBAAI,EAAE,QAAQ,GAAG,YAAY;AAC3B,mBAAG,UAAU,IAAI,IAAI;AAAA,cACvB;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,MAAM,QAAQ;AACR,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,OAAO,SAAU,QAAO,WAAW;AACvC,gBAAI;AACF,kBAAI,OAAO,WAAW,OAAO;AAC3B,uBAAO,WAAW,MAAM,MAAM;AAAA,cAChC;AAAA,YACF,SAAS,GAAG;AACV,oBAAM;AAAA,YACR,UAAE;AACA,iBAAG,YAAY,OAAO,EAAE;AAAA,YAC1B;AACA,mBAAO,KAAK;AAAA,UACd;AAAA,UACJ,SAAS,QAAQ;AACX,mBAAO,OAAO,OAAO;AAAA,UACvB;AAAA,UACJ,OAAO,QAAQ,QAAQ,QAAQ;AACzB,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,CAAC,OAAO,YAAY,CAAC,OAAO,WAAW,QAAQ;AACjD,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,KAAK,UAAU,KAAK,UAAU,GAAG;AAC7C,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,WAAW,OAAO,WAAW,OAAO,QAAQ,QAAQ,MAAM;AACjE,mBAAO,WAAW,CAAC;AACnB,mBAAO,OAAO;AAAA,UAChB;AAAA,UACJ,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AACzC,YAAAD,QAAO,UAAU,CAAC;AAClB,gBAAI,SAAS,KAAK,WAAW,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,MAAM;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,OAAO,YAAY;AACjC,gBAAI,CAAC,SAAS;AACZ,yBAAW,OAAO;AAAA,YACpB,WAAW,CAAC,OAAO,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,YAAY,OAAO,WAAW,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;AAC/E,gBAAI,CAAC,QAAS,QAAO,YAAY;AACjC,mBAAO;AAAA,UACT;AAAA,UACJ,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ;AAClD,YAAAA,QAAO,UAAU,CAAC;AAClB,gBAAI,SAAS,KAAK,WAAW,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC9B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,OAAO,YAAY,OAAO,QAAQ,MAAM;AAE1C,iBAAG,OAAO,QAAQ,GAAG,CAAC;AAAA,YACxB;AACA,gBAAI,UAAU,OAAO,YAAY;AACjC,gBAAI,CAAC,SAAS;AACZ,yBAAW,OAAO;AAAA,YACpB,WAAW,CAAC,OAAO,UAAU;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,eAAe,OAAO,WAAW,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,MAAM;AAC3F,gBAAI,CAAC,QAAS,QAAO,YAAY;AACjC,mBAAO;AAAA,UACT;AAAA,UACJ,SAAS,QAAQ,QAAQ,QAAQ;AAC3B,gBAAI,GAAG,SAAS,MAAM,GAAG;AACvB,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,SAAS,KAAK,UAAU,GAAG;AAC7B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,KAAK,CAAC,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC/D,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,OAAO,WAAW,UAAU;AAC/B,oBAAM,IAAI,GAAG,WAAW,GAAG;AAAA,YAC7B;AACA,mBAAO,WAAW,SAAS,QAAQ,QAAQ,MAAM;AAAA,UACnD;AAAA,UACJ,KAAK,QAAQ,QAAQ,UAAU,MAAM,OAAO;AAOtC,iBAAK,OAAO,OAAO,MACX,QAAQ,OAAO,MACf,OAAO,QAAQ,aAAa,GAAG;AACrC,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,iBAAK,OAAO,QAAQ,aAAa,GAAG;AAClC,oBAAM,IAAI,GAAG,WAAW,CAAC;AAAA,YAC3B;AACA,gBAAI,CAAC,OAAO,WAAW,MAAM;AAC3B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,OAAO,WAAW,KAAK,QAAQ,QAAQ,UAAU,MAAM,KAAK;AAAA,UACrE;AAAA,UACJ,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,WAAW;AAC3C,YAAAA,QAAO,UAAU,CAAC;AAClB,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,qBAAO;AAAA,YACT;AACA,mBAAO,OAAO,WAAW,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,SAAS;AAAA,UAC1E;AAAA,UACJ,QAAO,CAAC,WAAW;AAAA,UACnB,MAAM,QAAQ,KAAK,KAAK;AAClB,gBAAI,CAAC,OAAO,WAAW,OAAO;AAC5B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,mBAAO,OAAO,WAAW,MAAM,QAAQ,KAAK,GAAG;AAAA,UACjD;AAAA,UACJ,SAAS,MAAM,OAAO,CAAC,GAAG;AACpB,iBAAK,QAAQ,KAAK,SAAS;AAC3B,iBAAK,WAAW,KAAK,YAAY;AACjC,gBAAI,KAAK,aAAa,UAAU,KAAK,aAAa,UAAU;AAC1D,oBAAM,IAAI,MAAM,0BAA0B,KAAK,QAAQ,GAAG;AAAA,YAC5D;AACA,gBAAI;AACJ,gBAAI,SAAS,GAAG,KAAK,MAAM,KAAK,KAAK;AACrC,gBAAI,OAAO,GAAG,KAAK,IAAI;AACvB,gBAAI,SAAS,KAAK;AAClB,gBAAI,MAAM,IAAI,WAAW,MAAM;AAC/B,eAAG,KAAK,QAAQ,KAAK,GAAG,QAAQ,CAAC;AACjC,gBAAI,KAAK,aAAa,QAAQ;AAC5B,oBAAM,kBAAkB,KAAK,CAAC;AAAA,YAChC,WAAW,KAAK,aAAa,UAAU;AACrC,oBAAM;AAAA,YACR;AACA,eAAG,MAAM,MAAM;AACf,mBAAO;AAAA,UACT;AAAA,UACJ,UAAU,MAAM,MAAM,OAAO,CAAC,GAAG;AAC3B,iBAAK,QAAQ,KAAK,SAAS;AAC3B,gBAAI,SAAS,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK,IAAI;AAChD,gBAAI,OAAO,QAAQ,UAAU;AAC3B,kBAAI,MAAM,IAAI,WAAW,gBAAgB,IAAI,IAAE,CAAC;AAChD,kBAAI,iBAAiB,kBAAkB,MAAM,KAAK,GAAG,IAAI,MAAM;AAC/D,iBAAG,MAAM,QAAQ,KAAK,GAAG,gBAAgB,QAAW,KAAK,MAAM;AAAA,YACjE,WAAW,YAAY,OAAO,IAAI,GAAG;AACnC,iBAAG,MAAM,QAAQ,MAAM,GAAG,KAAK,YAAY,QAAW,KAAK,MAAM;AAAA,YACnE,OAAO;AACL,oBAAM,IAAI,MAAM,uBAAuB;AAAA,YACzC;AACA,eAAG,MAAM,MAAM;AAAA,UACjB;AAAA,UACJ,KAAI,MAAM,GAAG;AAAA,UACb,MAAM,MAAM;AACN,gBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,gBAAI,OAAO,SAAS,MAAM;AACxB,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,CAAC,GAAG,MAAM,OAAO,KAAK,IAAI,GAAG;AAC/B,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,UAAU,GAAG,gBAAgB,OAAO,MAAM,GAAG;AACjD,gBAAI,SAAS;AACX,oBAAM,IAAI,GAAG,WAAW,OAAO;AAAA,YACjC;AACA,eAAG,cAAc,OAAO;AAAA,UAC1B;AAAA,UACJ,2BAA2B;AACrB,eAAG,MAAM,MAAM;AACf,eAAG,MAAM,OAAO;AAChB,eAAG,MAAM,gBAAgB;AAAA,UAC3B;AAAA,UACJ,uBAAuB;AAEjB,eAAG,MAAM,MAAM;AAEf,eAAG,eAAe,GAAG,QAAQ,GAAG,CAAC,GAAG;AAAA,cAClC,MAAM,MAAM;AAAA,cACZ,OAAO,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,YAClD,CAAC;AACD,eAAG,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,CAAC;AAItC,gBAAI,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,eAAe;AAClD,gBAAI,SAAS,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,gBAAgB;AACnD,eAAG,MAAM,YAAY,GAAG,QAAQ,GAAG,CAAC,CAAC;AACrC,eAAG,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,CAAC;AAGtC,gBAAI,eAAe,IAAI,WAAW,IAAI,GAAG,aAAa;AACtD,gBAAI,aAAa,MAAM;AACrB,kBAAI,eAAe,GAAG;AACpB,6BAAa,WAAW,YAAY,EAAE;AAAA,cACxC;AACA,qBAAO,aAAa,EAAE,UAAU;AAAA,YAClC;AACA,eAAG,aAAa,QAAQ,UAAU,UAAU;AAC5C,eAAG,aAAa,QAAQ,WAAW,UAAU;AAG7C,eAAG,MAAM,UAAU;AACnB,eAAG,MAAM,cAAc;AAAA,UACzB;AAAA,UACJ,2BAA2B;AAGrB,eAAG,MAAM,OAAO;AAChB,gBAAI,YAAY,GAAG,MAAM,YAAY;AACrC,eAAG,MAAM,eAAe;AACxB,eAAG,MAAM;AAAA,cACP,QAAQ;AACN,oBAAI,OAAO,GAAG,WAAW,WAAW,MAAM,QAAQ,KAAgB,EAAE;AACpE,qBAAK,WAAW;AAAA,kBACd,OAAO,QAAQ,MAAM;AACnB,wBAAI,KAAK,CAAC;AACV,wBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,wBAAI,MAAM;AAAA,sBACR,QAAQ;AAAA,sBACR,OAAO,EAAE,YAAY,OAAO;AAAA,sBAC5B,UAAU,EAAE,UAAU,MAAM,OAAO,KAAK;AAAA,oBAC1C;AACA,wBAAI,SAAS;AACb,2BAAO;AAAA,kBACT;AAAA,gBACF;AACA,uBAAO;AAAA,cACT;AAAA,YACF,GAAG,CAAC,GAAG,eAAe;AAAA,UACxB;AAAA,UACJ,wBAAwB;AASlB,gBAAI,OAAO,OAAO,GAAG;AACnB,iBAAG,aAAa,QAAQ,SAAS,OAAO,OAAO,CAAC;AAAA,YAClD,OAAO;AACL,iBAAG,QAAQ,YAAY,YAAY;AAAA,YACrC;AACA,gBAAI,OAAO,QAAQ,GAAG;AACpB,iBAAG,aAAa,QAAQ,UAAU,MAAM,OAAO,QAAQ,CAAC;AAAA,YAC1D,OAAO;AACL,iBAAG,QAAQ,YAAY,aAAa;AAAA,YACtC;AACA,gBAAI,OAAO,QAAQ,GAAG;AACpB,iBAAG,aAAa,QAAQ,UAAU,MAAM,OAAO,QAAQ,CAAC;AAAA,YAC1D,OAAO;AACL,iBAAG,QAAQ,aAAa,aAAa;AAAA,YACvC;AAGA,gBAAI,QAAQ,GAAG,KAAK,cAAc,CAAC;AACnC,gBAAI,SAAS,GAAG,KAAK,eAAe,CAAC;AACrC,gBAAI,SAAS,GAAG,KAAK,eAAe,CAAC;AACrC,YAAAA,QAAO,MAAM,OAAO,GAAG,6BAA6B,MAAM,EAAE,GAAG;AAC/D,YAAAA,QAAO,OAAO,OAAO,GAAG,8BAA8B,OAAO,EAAE,GAAG;AAClE,YAAAA,QAAO,OAAO,OAAO,GAAG,8BAA8B,OAAO,EAAE,GAAG;AAAA,UACpE;AAAA,UACJ,aAAa;AAEP,aAAC,EAAE,EAAE,QAAQ,CAAC,SAAS;AACrB,iBAAG,cAAc,IAAI,IAAI,IAAI,GAAG,WAAW,IAAI;AAC/C,iBAAG,cAAc,IAAI,EAAE,QAAQ;AAAA,YACjC,CAAC;AAED,eAAG,YAAY,IAAI,MAAM,IAAI;AAE7B,eAAG,MAAM,OAAO,CAAC,GAAG,GAAG;AAEvB,eAAG,yBAAyB;AAC5B,eAAG,qBAAqB;AACxB,eAAG,yBAAyB;AAE5B,eAAG,cAAc;AAAA,cACf,SAAS;AAAA,YACX;AAAA,UACF;AAAA,UACJ,KAAK,OAAO,QAAQ,OAAO;AACrB,YAAAA,QAAO,CAAC,GAAG,KAAK,aAAa,8KAA8K;AAC3M,eAAG,KAAK,cAAc;AAGtB,mBAAO,OAAO,IAAI,SAAS,OAAO,OAAO;AACzC,mBAAO,QAAQ,IAAI,UAAU,OAAO,QAAQ;AAC5C,mBAAO,QAAQ,IAAI,SAAS,OAAO,QAAQ;AAE3C,eAAG,sBAAsB;AAAA,UAC3B;AAAA,UACJ,OAAO;AACD,eAAG,KAAK,cAAc;AAEtB,oBAAQ,CAAC;AAET,qBAASC,KAAI,GAAGA,KAAI,GAAG,QAAQ,QAAQA,MAAK;AAC1C,kBAAI,SAAS,GAAG,QAAQA,EAAC;AACzB,kBAAI,CAAC,QAAQ;AACX;AAAA,cACF;AACA,iBAAG,MAAM,MAAM;AAAA,YACjB;AAAA,UACF;AAAA,UACJ,WAAW,MAAM,qBAAqB;AAChC,gBAAI,MAAM,GAAG,YAAY,MAAM,mBAAmB;AAClD,gBAAI,CAAC,IAAI,QAAQ;AACf,qBAAO;AAAA,YACT;AACA,mBAAO,IAAI;AAAA,UACb;AAAA,UACJ,YAAY,MAAM,qBAAqB;AAEjC,gBAAI;AACF,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,oBAAoB,CAAC;AACjE,qBAAO,OAAO;AAAA,YAChB,SAAS,GAAG;AAAA,YACZ;AACA,gBAAI,MAAM;AAAA,cACR,QAAQ;AAAA,cAAO,QAAQ;AAAA,cAAO,OAAO;AAAA,cAAG,MAAM;AAAA,cAAM,MAAM;AAAA,cAAM,QAAQ;AAAA,cACxE,cAAc;AAAA,cAAO,YAAY;AAAA,cAAM,cAAc;AAAA,YACvD;AACA,gBAAI;AACF,kBAAI,SAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,KAAK,CAAC;AACjD,kBAAI,eAAe;AACnB,kBAAI,aAAa,OAAO;AACxB,kBAAI,eAAe,OAAO;AAC1B,kBAAI,OAAO,KAAK,SAAS,IAAI;AAC7B,uBAAS,GAAG,WAAW,MAAM,EAAE,QAAQ,CAAC,oBAAoB,CAAC;AAC7D,kBAAI,SAAS;AACb,kBAAI,OAAO,OAAO;AAClB,kBAAI,SAAS,OAAO;AACpB,kBAAI,OAAO,OAAO,KAAK;AACvB,kBAAI,SAAS,OAAO,SAAS;AAAA,YAC/B,SAAS,GAAG;AACV,kBAAI,QAAQ,EAAE;AAAA,YAChB;AAAC;AACD,mBAAO;AAAA,UACT;AAAA,UACJ,WAAW,QAAQ,MAAM,SAAS,UAAU;AACtC,qBAAS,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;AAC/D,gBAAI,QAAQ,KAAK,MAAM,GAAG,EAAE,QAAQ;AACpC,mBAAO,MAAM,QAAQ;AACnB,kBAAI,OAAO,MAAM,IAAI;AACrB,kBAAI,CAAC,KAAM;AACX,kBAAI,UAAU,KAAK,MAAM,QAAQ,IAAI;AACrC,kBAAI;AACF,mBAAG,MAAM,OAAO;AAAA,cAClB,SAAS,GAAG;AAAA,cAEZ;AACA,uBAAS;AAAA,YACX;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,WAAW,QAAQ,MAAM,YAAY,SAAS,UAAU;AAClD,gBAAI,OAAO,KAAK,MAAM,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM,GAAG,IAAI;AACnF,gBAAI,OAAO,WAAW,SAAS,QAAQ;AACvC,mBAAO,GAAG,OAAO,MAAM,IAAI;AAAA,UAC7B;AAAA,UACJ,eAAe,QAAQ,MAAM,MAAM,SAAS,UAAU,QAAQ;AACxD,gBAAI,OAAO;AACX,gBAAI,QAAQ;AACV,uBAAS,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM;AAC/D,qBAAO,OAAO,KAAK,MAAM,QAAQ,IAAI,IAAI;AAAA,YAC3C;AACA,gBAAI,OAAO,WAAW,SAAS,QAAQ;AACvC,gBAAI,OAAO,GAAG,OAAO,MAAM,IAAI;AAC/B,gBAAI,MAAM;AACR,kBAAI,OAAO,QAAQ,UAAU;AAC3B,oBAAI,MAAM,IAAI,MAAM,KAAK,MAAM;AAC/B,yBAASA,KAAI,GAAG,MAAM,KAAK,QAAQA,KAAI,KAAK,EAAEA,GAAG,KAAIA,EAAC,IAAI,KAAK,WAAWA,EAAC;AAC3E,uBAAO;AAAA,cACT;AAEA,iBAAG,MAAM,MAAM,OAAO,GAAG;AACzB,kBAAI,SAAS,GAAG,KAAK,MAAM,GAAG;AAC9B,iBAAG,MAAM,QAAQ,MAAM,GAAG,KAAK,QAAQ,GAAG,MAAM;AAChD,iBAAG,MAAM,MAAM;AACf,iBAAG,MAAM,MAAM,IAAI;AAAA,YACrB;AAAA,UACF;AAAA,UACJ,aAAa,QAAQ,MAAM,OAAO,QAAQ;AACpC,gBAAI,OAAO,KAAK,MAAM,OAAO,UAAU,WAAW,SAAS,GAAG,QAAQ,MAAM,GAAG,IAAI;AACnF,gBAAI,OAAO,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;AACvC,gBAAI,CAAC,GAAG,aAAa,MAAO,IAAG,aAAa,QAAQ;AACpD,gBAAI,MAAM,GAAG,QAAQ,GAAG,aAAa,SAAS,CAAC;AAG/C,eAAG,eAAe,KAAK;AAAA,cACrB,KAAK,QAAQ;AACX,uBAAO,WAAW;AAAA,cACpB;AAAA,cACA,MAAM,QAAQ;AAEZ,oBAAI,QAAQ,QAAQ,QAAQ;AAC1B,yBAAO,EAAE;AAAA,gBACX;AAAA,cACF;AAAA,cACA,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,KAAmB;AACtD,oBAAI,YAAY;AAChB,yBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,sBAAI;AACJ,sBAAI;AACF,6BAAS,MAAM;AAAA,kBACjB,SAAS,GAAG;AACV,0BAAM,IAAI,GAAG,WAAW,EAAE;AAAA,kBAC5B;AACA,sBAAI,WAAW,UAAa,cAAc,GAAG;AAC3C,0BAAM,IAAI,GAAG,WAAW,CAAC;AAAA,kBAC3B;AACA,sBAAI,WAAW,QAAQ,WAAW,OAAW;AAC7C;AACA,yBAAO,SAAOA,EAAC,IAAI;AAAA,gBACrB;AACA,oBAAI,WAAW;AACb,yBAAO,KAAK,YAAY,KAAK,IAAI;AAAA,gBACnC;AACA,uBAAO;AAAA,cACT;AAAA,cACA,MAAM,QAAQ,QAAQ,QAAQ,QAAQ,KAAK;AACzC,yBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,sBAAI;AACF,2BAAO,OAAO,SAAOA,EAAC,CAAC;AAAA,kBACzB,SAAS,GAAG;AACV,0BAAM,IAAI,GAAG,WAAW,EAAE;AAAA,kBAC5B;AAAA,gBACF;AACA,oBAAI,QAAQ;AACV,yBAAO,KAAK,YAAY,KAAK,IAAI;AAAA,gBACnC;AACA,uBAAOA;AAAA,cACT;AAAA,YACF,CAAC;AACD,mBAAO,GAAG,MAAM,MAAM,MAAM,GAAG;AAAA,UACjC;AAAA,UACJ,cAAc,KAAK;AACb,gBAAI,IAAI,YAAY,IAAI,YAAY,IAAI,QAAQ,IAAI,SAAU,QAAO;AACrE,gBAAI,OAAO,kBAAkB,aAAa;AACxC,oBAAM,IAAI,MAAM,kMAAkM;AAAA,YACpN,WAAW,OAAO;AAEhB,kBAAI;AAGF,oBAAI,WAAW,mBAAmB,MAAM,IAAI,GAAG,GAAG,IAAI;AACtD,oBAAI,YAAY,IAAI,SAAS;AAAA,cAC/B,SAAS,GAAG;AACV,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AAAA,YACF,OAAO;AACL,oBAAM,IAAI,MAAM,+CAA+C;AAAA,YACjE;AAAA,UACF;AAAA,UACJ,eAAe,QAAQ,MAAM,KAAK,SAAS,UAAU;AAG/C,qBAAS,iBAAiB;AACxB,mBAAK,cAAc;AACnB,mBAAK,SAAS,CAAC;AAAA,YACjB;AACA,2BAAe,UAAU;AAAA,YAA2B,SAAS,mBAAmB,KAAK;AACnF,kBAAI,MAAM,KAAK,SAAO,KAAK,MAAM,GAAG;AAClC,uBAAO;AAAA,cACT;AACA,kBAAI,cAAc,MAAM,KAAK;AAC7B,kBAAI,WAAY,MAAM,KAAK,YAAW;AACtC,qBAAO,KAAK,OAAO,QAAQ,EAAE,WAAW;AAAA,YAC1C;AACA,2BAAe,UAAU,gBAAgB,SAAS,6BAA6Ba,SAAQ;AACrF,mBAAK,SAASA;AAAA,YAChB;AACA,2BAAe,UAAU,cAAc,SAAS,6BAA6B;AAE3E,kBAAI,MAAM,IAAI,eAAe;AAC7B,kBAAI,KAAK,QAAQ,KAAK,KAAK;AAC3B,kBAAI,KAAK,IAAI;AACb,kBAAI,EAAE,IAAI,UAAU,OAAO,IAAI,SAAS,OAAO,IAAI,WAAW,KAAM,OAAM,IAAI,MAAM,mBAAmB,MAAM,eAAe,IAAI,MAAM;AACtI,kBAAI,aAAa,OAAO,IAAI,kBAAkB,gBAAgB,CAAC;AAC/D,kBAAI;AACJ,kBAAI,kBAAkB,SAAS,IAAI,kBAAkB,eAAe,MAAM,WAAW;AACrF,kBAAI,YAAY,SAAS,IAAI,kBAAkB,kBAAkB,MAAM,WAAW;AAElF,kBAAI,YAAY,OAAK;AAErB,kBAAI,CAAC,eAAgB,aAAY;AAGjC,kBAAI,QAAQ,CAAC,MAAM,OAAO;AACxB,oBAAI,OAAO,GAAI,OAAM,IAAI,MAAM,oBAAoB,OAAO,OAAO,KAAK,0BAA0B;AAChG,oBAAI,KAAK,aAAW,EAAG,OAAM,IAAI,MAAM,UAAU,aAAa,qCAAqC;AAGnG,oBAAIC,OAAM,IAAI,eAAe;AAC7B,gBAAAA,KAAI,KAAK,OAAO,KAAK,KAAK;AAC1B,oBAAI,eAAe,UAAW,CAAAA,KAAI,iBAAiB,SAAS,WAAW,OAAO,MAAM,EAAE;AAGtF,gBAAAA,KAAI,eAAe;AACnB,oBAAIA,KAAI,kBAAkB;AACxB,kBAAAA,KAAI,iBAAiB,oCAAoC;AAAA,gBAC3D;AAEA,gBAAAA,KAAI,KAAK,IAAI;AACb,oBAAI,EAAEA,KAAI,UAAU,OAAOA,KAAI,SAAS,OAAOA,KAAI,WAAW,KAAM,OAAM,IAAI,MAAM,mBAAmB,MAAM,eAAeA,KAAI,MAAM;AACtI,oBAAIA,KAAI,aAAa,QAAW;AAC9B,yBAAO,IAAI;AAAA;AAAA,oBAAuCA,KAAI,YAAY,CAAC;AAAA,kBAAE;AAAA,gBACvE;AACA,uBAAO,mBAAmBA,KAAI,gBAAgB,IAAI,IAAI;AAAA,cACxD;AACA,kBAAIC,aAAY;AAChB,cAAAA,WAAU,cAAc,CAAC,aAAa;AACpC,oBAAI,QAAQ,WAAW;AACvB,oBAAI,OAAO,WAAS,KAAK,YAAY;AACrC,sBAAM,KAAK,IAAI,KAAK,aAAW,CAAC;AAChC,oBAAI,OAAOA,WAAU,OAAO,QAAQ,KAAK,aAAa;AACpD,kBAAAA,WAAU,OAAO,QAAQ,IAAI,MAAM,OAAO,GAAG;AAAA,gBAC/C;AACA,oBAAI,OAAOA,WAAU,OAAO,QAAQ,KAAK,YAAa,OAAM,IAAI,MAAM,eAAe;AACrF,uBAAOA,WAAU,OAAO,QAAQ;AAAA,cAClC,CAAC;AAED,kBAAI,YAAY,CAAC,YAAY;AAE3B,4BAAY,aAAa;AACzB,6BAAa,KAAK,OAAO,CAAC,EAAE;AAC5B,4BAAY;AACZ,oBAAI,6EAA6E;AAAA,cACnF;AAEA,mBAAK,UAAU;AACf,mBAAK,aAAa;AAClB,mBAAK,cAAc;AAAA,YACrB;AACA,gBAAI,OAAO,kBAAkB,aAAa;AACxC,kBAAI,CAAC,sBAAuB,OAAM;AAClC,kBAAI,YAAY,IAAI,eAAe;AACnC,qBAAO,iBAAiB,WAAW;AAAA,gBACjC,QAAQ;AAAA,kBACN;AAAA;AAAA,oBAA0B,WAAW;AACnC,0BAAI,CAAC,KAAK,aAAa;AACrB,6BAAK,YAAY;AAAA,sBACnB;AACA,6BAAO,KAAK;AAAA,oBACd;AAAA;AAAA,gBACF;AAAA,gBACA,WAAW;AAAA,kBACT;AAAA;AAAA,oBAA0B,WAAW;AACnC,0BAAI,CAAC,KAAK,aAAa;AACrB,6BAAK,YAAY;AAAA,sBACnB;AACA,6BAAO,KAAK;AAAA,oBACd;AAAA;AAAA,gBACF;AAAA,cACF,CAAC;AAED,kBAAI,aAAa,EAAE,UAAU,OAAO,UAAU,UAAU;AAAA,YAC1D,OAAO;AACL,kBAAI,aAAa,EAAE,UAAU,OAAO,IAAS;AAAA,YAC/C;AAEA,gBAAI,OAAO,GAAG,WAAW,QAAQ,MAAM,YAAY,SAAS,QAAQ;AAIpE,gBAAI,WAAW,UAAU;AACvB,mBAAK,WAAW,WAAW;AAAA,YAC7B,WAAW,WAAW,KAAK;AACzB,mBAAK,WAAW;AAChB,mBAAK,MAAM,WAAW;AAAA,YACxB;AAEA,mBAAO,iBAAiB,MAAM;AAAA,cAC5B,WAAW;AAAA,gBACT;AAAA;AAAA,kBAA2B,WAAW;AAAE,2BAAO,KAAK,SAAS;AAAA,kBAAQ;AAAA;AAAA,cACvE;AAAA,YACF,CAAC;AAED,gBAAI,aAAa,CAAC;AAClB,gBAAI,OAAO,OAAO,KAAK,KAAK,UAAU;AACtC,iBAAK,QAAQ,CAAC,QAAQ;AACpB,kBAAI,KAAK,KAAK,WAAW,GAAG;AAC5B,yBAAW,GAAG,IAAI,SAAS,oBAAoB;AAC7C,mBAAG,cAAc,IAAI;AACrB,uBAAO,GAAG,MAAM,MAAM,SAAS;AAAA,cACjC;AAAA,YACF,CAAC;AACD,qBAAS,YAAY,QAAQ,QAAQ,QAAQ,QAAQ,UAAU;AAC7D,kBAAI,WAAW,OAAO,KAAK;AAC3B,kBAAI,YAAY,SAAS;AACvB,uBAAO;AACT,kBAAI,OAAO,KAAK,IAAI,SAAS,SAAS,UAAU,MAAM;AACtD,cAAAhB,QAAO,QAAQ,CAAC;AAChB,kBAAI,SAAS,OAAO;AAClB,yBAASC,KAAI,GAAGA,KAAI,MAAMA,MAAK;AAC7B,yBAAO,SAASA,EAAC,IAAI,SAAS,WAAWA,EAAC;AAAA,gBAC5C;AAAA,cACF,OAAO;AACL,yBAASA,KAAI,GAAGA,KAAI,MAAMA,MAAK;AAC7B,yBAAO,SAASA,EAAC,IAAI,SAAS,IAAI,WAAWA,EAAC;AAAA,gBAChD;AAAA,cACF;AACA,qBAAO;AAAA,YACT;AAEA,uBAAW,OAAO,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,aAAa;AAC9D,iBAAG,cAAc,IAAI;AACrB,qBAAO,YAAY,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;AAAA,YAC7D;AAEA,uBAAW,OAAO,CAAC,QAAQ,QAAQ,UAAU,MAAM,UAAU;AAC3D,iBAAG,cAAc,IAAI;AACrB,kBAAI,MAAM,UAAU,MAAM;AAC1B,kBAAI,CAAC,KAAK;AACR,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,cAC5B;AACA,0BAAY,QAAQ,OAAO,KAAK,QAAQ,QAAQ;AAChD,qBAAO,EAAE,KAAK,WAAW,KAAK;AAAA,YAChC;AACA,iBAAK,aAAa;AAClB,mBAAO;AAAA,UACT;AAAA,UACJ,eAAe;AACT,kBAAM,+DAA+D;AAAA,UACvE;AAAA,UACJ,eAAe;AACT,kBAAM,wDAAwD;AAAA,UAChE;AAAA,UACJ,aAAa;AACP,kBAAM,wDAAwD;AAAA,UAChE;AAAA,UACJ,WAAW;AACL,kBAAM,qDAAqD;AAAA,UAC7D;AAAA,UACJ,YAAY;AACN,kBAAM,oEAAoE;AAAA,UAC5E;AAAA,UACJ,kBAAkB;AACZ,kBAAM,iEAAiE;AAAA,UACzE;AAAA,QACJ;AAEA,YAAI,WAAW;AAAA,UACf,kBAAiB;AAAA,UACjB,YAAY,OAAO,MAAM,YAAY;AAC/B,gBAAI,KAAK,MAAM,IAAI,GAAG;AACpB,qBAAO;AAAA,YACT;AAEA,gBAAI;AACJ,gBAAI,UAAU,MAAM;AAClB,oBAAM,GAAG,IAAI;AAAA,YACf,OAAO;AACL,kBAAI,YAAY,SAAS,gBAAgB,KAAK;AAC9C,oBAAM,UAAU;AAAA,YAClB;AACA,gBAAI,KAAK,UAAU,GAAG;AACpB,kBAAI,CAAC,YAAY;AACf,sBAAM,IAAI,GAAG,WAAW,EAAE;AAAE;AAAA,cAC9B;AACA,qBAAO;AAAA,YACT;AACA,mBAAO,KAAK,MAAM,KAAK,IAAI;AAAA,UAC7B;AAAA,UACJ,OAAO,MAAM,MAAM,KAAK;AAClB,gBAAI,OAAO,KAAK,IAAI;AACpB,mBAAS,OAAM,CAAE,IAAI,KAAK;AAC1B,mBAAU,MAAM,KAAK,CAAE,IAAI,KAAK;AAChC,oBAAW,MAAM,KAAK,CAAE,IAAI,KAAK;AACjC,mBAAU,MAAM,MAAM,CAAE,IAAI,KAAK;AACjC,mBAAU,MAAM,MAAM,CAAE,IAAI,KAAK;AACjC,mBAAU,MAAM,MAAM,CAAE,IAAI,KAAK;AACjC,mBAAU,MAAM,MAAM,CAAE,IAAI,OAAO,KAAK,IAAI;AAC5C,mBAAU,MAAM,MAAM,CAAE,IAAI;AAC5B,mBAAU,MAAM,MAAM,CAAE,IAAI,KAAK;AACjC,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,gBAAI,QAAQ,KAAK,MAAM,QAAQ;AAC/B,mBAAU,MAAM,MAAM,CAAE,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AAC3D,oBAAW,MAAM,MAAM,CAAE,IAAK,QAAQ,MAAQ;AAC9C,mBAAU,MAAM,MAAM,CAAE,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AAC3D,oBAAW,MAAM,MAAM,CAAE,IAAK,QAAQ,MAAQ;AAC9C,mBAAU,MAAM,MAAM,CAAE,IAAI,OAAO,KAAK,MAAM,QAAQ,GAAI,CAAC;AAC3D,oBAAW,MAAM,MAAM,CAAE,IAAK,QAAQ,MAAQ;AAC9C,mBAAU,MAAM,MAAM,CAAE,IAAI,OAAO,KAAK,GAAG;AAC3C,mBAAO;AAAA,UACT;AAAA,UACJ,QAAQ,MAAM,QAAQ,KAAK,OAAO,QAAQ;AACpC,gBAAI,CAAC,GAAG,OAAO,OAAO,KAAK,IAAI,GAAG;AAChC,oBAAM,IAAI,GAAG,WAAW,EAAE;AAAA,YAC5B;AACA,gBAAI,QAAQ,GAAG;AAEb,qBAAO;AAAA,YACT;AACA,gBAAI,SAAS,OAAO,MAAM,MAAM,OAAO,GAAG;AAC1C,eAAG,MAAM,QAAQ,QAAQ,QAAQ,KAAK,KAAK;AAAA,UAC7C;AAAA,UACJ,SAAQ;AAAA,UACR,MAAM;AACA,YAAAD,QAAO,SAAS,WAAW,MAAS;AAEpC,gBAAI,MAAM,OAAS,CAAC,SAAS,WAAU,CAAE;AACzC,qBAAS,WAAW;AACpB,mBAAO;AAAA,UACT;AAAA,UACJ,OAAO;AAAE,mBAAO,SAAS,IAAI;AAAA,UAAE;AAAA,UAC/B,OAAO,KAAK;AACN,gBAAI,MAAM,aAAa,GAAG;AAC1B,mBAAO;AAAA,UACT;AAAA,UACJ,gBAAgB,IAAI;AACd,gBAAI,SAAS,GAAG,iBAAiB,EAAE;AACnC,mBAAO;AAAA,UACT;AAAA,QACJ;AACA,iBAAS,iBAAiB,MAAM,MAAM;AACtC,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,eAAG,MAAM,MAAM,IAAI;AACnB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,kBAAkB,IAAI,MAAM;AACrC,cAAI;AAEA,eAAG,OAAO,IAAI,IAAI;AAClB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,mBAAmB,IAAI,KAAK,SAAS;AAC9C,mBAAS,UAAU;AACnB,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,oBAAQ,KAAK;AAAA,cACX,KAAK,GAAG;AACN,oBAAI,MAAM,SAAS,IAAI;AACvB,oBAAI,MAAM,GAAG;AACX,yBAAO;AAAA,gBACT;AACA,uBAAO,GAAG,QAAQ,GAAG,GAAG;AACtB;AAAA,gBACF;AACA,oBAAI;AACJ,4BAAY,GAAG,aAAa,QAAQ,GAAG;AACvC,uBAAO,UAAU;AAAA,cACnB;AAAA,cACA,KAAK;AAAA,cACL,KAAK;AACH,uBAAO;AAAA,cACT,KAAK;AACH,uBAAO,OAAO;AAAA,cAChB,KAAK,GAAG;AACN,oBAAI,MAAM,SAAS,IAAI;AACvB,uBAAO,SAAS;AAChB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,IAAI;AACP,oBAAI,MAAM,SAAS,KAAK;AACxB,oBAAI,SAAS;AAEb,uBAAU,MAAM,UAAU,CAAE,IAAI;AAChC,uBAAO;AAAA,cACT;AAAA,cACA,KAAK;AAAA,cACL,KAAK;AACH,uBAAO;AAAA,YACX;AACA,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,mBAAmB,IAAI,KAAK;AACrC,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,mBAAO,SAAS,OAAO,GAAG,MAAM,OAAO,MAAM,GAAG;AAAA,UAClD,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,iBAAiB,IAAI,IAAI,SAAS;AAC3C,mBAAS,UAAU;AACnB,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,oBAAQ,IAAI;AAAA,cACV,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,cAAc;AAC/B,sBAAI,UAAU,OAAO,IAAI,IAAI,aAAa,MAAM;AAChD,sBAAI,OAAO,SAAS,KAAK;AACzB,yBAAS,QAAO,CAAE,IAAI,QAAQ,WAAW;AACzC,yBAAU,OAAO,KAAK,CAAE,IAAI,QAAQ,WAAW;AAC/C,yBAAU,OAAO,KAAK,CAAE,IAAI,QAAQ,WAAW;AAC/C,yBAAU,OAAO,MAAM,CAAE,IAAI,QAAQ,WAAW;AAChD,2BAASC,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,0BAAS,OAAOA,KAAI,MAAM,CAAE,IAAI,QAAQ,KAAKA,EAAC,KAAK;AAAA,kBACrD;AACA,yBAAO;AAAA,gBACT;AACA,uBAAO;AAAA,cACT;AAAA,cACA,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,cAAc;AAC/B,sBAAI,OAAO,SAAS,KAAK;AACzB,sBAAI,UAAU,OAAS,QAAO,CAAE;AAChC,sBAAI,UAAU,OAAU,OAAO,KAAK,CAAE;AACtC,sBAAI,UAAU,OAAU,OAAO,KAAK,CAAE;AACtC,sBAAI,UAAU,OAAU,OAAO,MAAM,CAAE;AACvC,sBAAI,OAAO,CAAC;AACZ,2BAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,yBAAK,KAAK,MAAS,OAAOA,KAAI,MAAM,CAAE,CAAC;AAAA,kBACzC;AACA,yBAAO,OAAO,IAAI,IAAI,aAAa,OAAO,KAAK,IAAI,EAAE,SAAS,SAAS,SAAS,SAAS,KAAK,CAAC;AAAA,gBACjG;AACA,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,SAAS,KAAK;AACzB,uBAAS,QAAO,CAAE,IAAI;AACtB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AACV,oBAAI,OAAO,SAAS,KAAK;AACzB,uBAAO,GAAG,MAAM,QAAQ,IAAI,IAAI;AAAA,cAClC;AAAA,cACA,KAAK,OAAO;AAGV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,oBAAI,OAAO,IAAI,IAAI,kBAAkB;AACnC,sBAAI,UAAU,OAAO,IAAI,IAAI,iBAAiB,OAAO,GAAG;AACxD,sBAAI,OAAO,SAAS,KAAK;AACzB,yBAAS,QAAO,CAAE,IAAI,QAAQ,CAAC;AAC/B,yBAAU,OAAO,KAAK,CAAE,IAAI,QAAQ,CAAC;AAAA,gBACvC;AACA,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AAIV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;AAAA,cACT;AAAA,cACA,KAAK,OAAO;AACV,oBAAI,CAAC,OAAO,IAAK,QAAO;AACxB,uBAAO;AAAA,cACT;AAAA,cACA;AAAS,uBAAO;AAAA,YAClB;AAAA,UACF,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,mBAAmB,MAAM,KAAK;AACvC,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,OAAO,GAAG,OAAO,MAAM,GAAG;AAAA,UAC5C,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,sBAAsB,OAAO,MAAM,KAAK,OAAO;AACxD,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,gBAAI,WAAW,QAAQ;AACvB,gBAAI,aAAa,QAAQ;AACzB,oBAAQ,QAAS,CAAC;AAClB,YAAAD,QAAO,CAAC,OAAO,0CAA0C,KAAK,EAAE;AAChE,mBAAO,SAAS,YAAY,OAAO,MAAM,UAAU;AACnD,mBAAO,SAAS,OAAO,WAAW,GAAG,QAAQ,GAAG,MAAM,MAAM,GAAG;AAAA,UACjE,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,kBAAkB,OAAO,MAAM,OAAO,SAAS;AACxD,mBAAS,UAAU;AACnB,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAI,OAAO,UAAU,SAAS,IAAI,IAAI;AACtC,mBAAO,GAAG,KAAK,MAAM,OAAO,IAAI,EAAE;AAAA,UACpC,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,oBAAoB,UAAU,SAAS,UAAU,SAAS;AACnE,cAAI;AAEA,sBAAU,SAAS,OAAO,OAAO;AACjC,sBAAU,SAAS,OAAO,OAAO;AACjC,sBAAU,SAAS,YAAY,UAAU,OAAO;AAChD,sBAAU,SAAS,YAAY,UAAU,OAAO;AAChD,eAAG,OAAO,SAAS,OAAO;AAC1B,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,iBAAiB,MAAM;AAChC,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,eAAG,MAAM,IAAI;AACb,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,kBAAkB,MAAM,KAAK;AACtC,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,OAAO,GAAG,MAAM,MAAM,GAAG;AAAA,UAC3C,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,iBAAS,oBAAoB,OAAO,MAAM,OAAO;AACjD,cAAI;AAEA,mBAAO,SAAS,OAAO,IAAI;AAC3B,mBAAO,SAAS,YAAY,OAAO,IAAI;AACvC,gBAAI,UAAU,GAAG;AACf,iBAAG,OAAO,IAAI;AAAA,YAChB,WAAW,UAAU,KAAK;AACxB,iBAAG,MAAM,IAAI;AAAA,YACf,OAAO;AACL,oBAAM,kCAAkC;AAAA,YAC1C;AACA,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AAAA,QACA;AAEA,YAAI,qBAAqB,CACzB;AAEA,YAAI,iBAAiB,CAAC,gBAAgB;AAClC,iBAAO,YAAY,QAAQ;AACzB,gBAAI,MAAM,YAAY,IAAI;AAC1B,gBAAI,MAAM,YAAY,IAAI;AAC1B,gBAAI,GAAG;AAAA,UACT;AAAA,QACF;AAGF,iBAAS,2BAA2B,SAAS;AACzC,iBAAO,KAAK,cAAc,EAAE,OAAS,WAAU,CAAE,CAAC;AAAA,QACpD;AAEF,YAAI,uBAAuB,CAC3B;AAEA,YAAI,kBAAkB,CACtB;AAEA,YAAI,mBAAmB,CACvB;AAEA,YAAI;AACJ,YAAI,qBAAqB,CAAC,YAAY;AAAE,gBAAM,IAAI,cAAc,OAAO;AAAA,QAAG;AAC1E,YAAI,gCAAgC,CAAC,SAAS,gBAAgB,sBAAsB;AAChF,kBAAQ,QAAQ,SAASY,OAAM;AAC3B,6BAAiBA,KAAI,IAAI;AAAA,UAC7B,CAAC;AAED,mBAAS,WAAWK,iBAAgB;AAChC,gBAAI,mBAAmB,kBAAkBA,eAAc;AACvD,gBAAI,iBAAiB,WAAW,QAAQ,QAAQ;AAC5C,iCAAmB,iCAAiC;AAAA,YACxD;AACA,qBAAShB,KAAI,GAAGA,KAAI,QAAQ,QAAQ,EAAEA,IAAG;AACrC,2BAAa,QAAQA,EAAC,GAAG,iBAAiBA,EAAC,CAAC;AAAA,YAChD;AAAA,UACJ;AAEA,cAAI,iBAAiB,IAAI,MAAM,eAAe,MAAM;AACpD,cAAI,oBAAoB,CAAC;AACzB,cAAI,aAAa;AACjB,yBAAe,QAAQ,CAAC,IAAIA,OAAM;AAChC,gBAAI,gBAAgB,eAAe,EAAE,GAAG;AACtC,6BAAeA,EAAC,IAAI,gBAAgB,EAAE;AAAA,YACxC,OAAO;AACL,gCAAkB,KAAK,EAAE;AACzB,kBAAI,CAAC,qBAAqB,eAAe,EAAE,GAAG;AAC5C,qCAAqB,EAAE,IAAI,CAAC;AAAA,cAC9B;AACA,mCAAqB,EAAE,EAAE,KAAK,MAAM;AAClC,+BAAeA,EAAC,IAAI,gBAAgB,EAAE;AACtC,kBAAE;AACF,oBAAI,eAAe,kBAAkB,QAAQ;AAC3C,6BAAW,cAAc;AAAA,gBAC3B;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF,CAAC;AACD,cAAI,MAAM,kBAAkB,QAAQ;AAClC,uBAAW,cAAc;AAAA,UAC3B;AAAA,QACF;AACF,YAAI,gCAAgC,CAAC,iBAAiB;AAClD,cAAI,MAAM,mBAAmB,YAAY;AACzC,iBAAO,mBAAmB,YAAY;AACtC,cAAI,WAAW,IAAI;AACnB,cAAI,iBAAiB,SAAS;AAC9B,cAAI,eAAe,SAAS,IAAI,CAAC,QAAQ,IAAI,gBAAgB,EACjD,OAAO,SAAS,IAAI,CAAC,QAAQ,IAAI,kBAAkB,CAAC;AAEhE,cAAI,iBAAiB,IAAI;AACzB,cAAI,gBAAgB,IAAI;AAExB,wCAA8B,CAAC,YAAY,GAAG,cAAc,SAASiB,eAAc;AACjF,qBAAS,QAAQ,CAAC,KAAKjB,OAAM;AAC3B,kBAAI,mBAAmBiB,cAAajB,EAAC;AACrC,kBAAIa,UAAS,IAAI;AACjB,kBAAI,gBAAgB,IAAI;AACxB,kBAAI,qBAAqBI,cAAajB,KAAI,cAAc;AACxD,kBAAIkB,UAAS,IAAI;AACjB,kBAAI,gBAAgB,IAAI;AACxB,kBAAI,OAAO,CAAC,QAAQ,iBAAiB,cAAc,EAAEL,QAAO,eAAe,GAAG,CAAC;AAC/E,kBAAI,QAAQ,CAAC,KAAK,MAAM;AACtB,oBAAI,cAAc,CAAC;AACnB,gBAAAK,QAAO,eAAe,KAAK,mBAAmB,YAAY,EAAE,aAAa,CAAC,CAAC;AAC3E,+BAAe,WAAW;AAAA,cAC5B;AAAA,YACF,CAAC;AAED,mBAAO,CAAC;AAAA,cACN,MAAM,IAAI;AAAA,cACV,gBAAgB,CAAC,QAAQ;AACvB,oBAAI,KAAK,IAAI,MAAM,cAAc;AACjC,yBAASlB,KAAI,GAAGA,KAAI,gBAAgB,EAAEA,IAAG;AACvC,qBAAGA,EAAC,IAAI,SAASA,EAAC,EAAE,KAAK,GAAG;AAAA,gBAC9B;AACA,8BAAc,GAAG;AACjB,uBAAO;AAAA,cACT;AAAA,cACA,cAAc,CAAC,aAAa,MAAM;AAChC,oBAAI,mBAAmB,EAAE,QAAQ;AAC/B,wBAAM,IAAI,UAAU,0CAA0C,IAAI,IAAI,cAAc,cAAc,YAAY,EAAE,MAAM,EAAE;AAAA,gBAC1H;AACA,oBAAI,MAAM,eAAe;AACzB,yBAASA,KAAI,GAAGA,KAAI,gBAAgB,EAAEA,IAAG;AACvC,2BAASA,EAAC,EAAE,MAAM,KAAK,EAAEA,EAAC,CAAC;AAAA,gBAC7B;AACA,oBAAI,gBAAgB,MAAM;AACxB,8BAAY,KAAK,eAAe,GAAG;AAAA,gBACrC;AACA,uBAAO;AAAA,cACT;AAAA,cACA,kBAAkB;AAAA,cAClB,wBAAwB;AAAA,cACxB,oBAAoB;AAAA,YACtB,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAEF,YAAI,sBAAsB,CAC1B;AAIA,YAAI,iCAAiC,CAAC,eAAe;AACjD,cAAI,MAAM,oBAAoB,UAAU;AACxC,iBAAO,oBAAoB,UAAU;AAErC,cAAI,iBAAiB,IAAI;AACzB,cAAI,gBAAgB,IAAI;AACxB,cAAI,eAAe,IAAI;AACvB,cAAI,aAAa,aAAa,IAAI,CAAC,UAAU,MAAM,gBAAgB,EACzD,OAAO,aAAa,IAAI,CAAC,UAAU,MAAM,kBAAkB,CAAC;AACtE,wCAA8B,CAAC,UAAU,GAAG,YAAY,CAACmB,gBAAe;AACtE,gBAAI,SAAS,CAAC;AACd,yBAAa,QAAQ,CAAC,OAAOnB,OAAM;AACjC,kBAAI,YAAY,MAAM;AACtB,kBAAI,mBAAmBmB,YAAWnB,EAAC;AACnC,kBAAIa,UAAS,MAAM;AACnB,kBAAI,gBAAgB,MAAM;AAC1B,kBAAI,qBAAqBM,YAAWnB,KAAI,aAAa,MAAM;AAC3D,kBAAIkB,UAAS,MAAM;AACnB,kBAAI,gBAAgB,MAAM;AAC1B,qBAAO,SAAS,IAAI;AAAA,gBAClB,MAAM,CAAC,QAAQ,iBAAiB,cAAc,EAAEL,QAAO,eAAe,GAAG,CAAC;AAAA,gBAC1E,OAAO,CAAC,KAAK,MAAM;AACjB,sBAAI,cAAc,CAAC;AACnB,kBAAAK,QAAO,eAAe,KAAK,mBAAmB,YAAY,EAAE,aAAa,CAAC,CAAC;AAC3E,iCAAe,WAAW;AAAA,gBAC5B;AAAA,cACF;AAAA,YACF,CAAC;AAED,mBAAO,CAAC;AAAA,cACN,MAAM,IAAI;AAAA,cACV,gBAAgB,CAAC,QAAQ;AACvB,oBAAI,KAAK,CAAC;AACV,yBAASlB,MAAK,QAAQ;AACpB,qBAAGA,EAAC,IAAI,OAAOA,EAAC,EAAE,KAAK,GAAG;AAAA,gBAC5B;AACA,8BAAc,GAAG;AACjB,uBAAO;AAAA,cACT;AAAA,cACA,cAAc,CAAC,aAAa,MAAM;AAGhC,yBAAS,aAAa,QAAQ;AAC5B,sBAAI,EAAE,aAAa,IAAI;AACrB,0BAAM,IAAI,UAAU,mBAAmB,SAAS,GAAG;AAAA,kBACrD;AAAA,gBACF;AACA,oBAAI,MAAM,eAAe;AACzB,qBAAK,aAAa,QAAQ;AACxB,yBAAO,SAAS,EAAE,MAAM,KAAK,EAAE,SAAS,CAAC;AAAA,gBAC3C;AACA,oBAAI,gBAAgB,MAAM;AACxB,8BAAY,KAAK,eAAe,GAAG;AAAA,gBACrC;AACA,uBAAO;AAAA,cACT;AAAA,cACA,kBAAkB;AAAA,cAClB,wBAAwB;AAAA,cACxB,oBAAoB;AAAA,YACtB,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAEF,YAAI,aAAa,CAAC,MAAM;AACpB,cAAI,MAAM,MAAM;AACZ,mBAAO;AAAA,UACX;AACA,cAAI,IAAI,OAAO;AACf,cAAI,MAAM,YAAY,MAAM,WAAW,MAAM,YAAY;AACrD,mBAAO,EAAE,SAAS;AAAA,UACtB,OAAO;AACH,mBAAO,KAAK;AAAA,UAChB;AAAA,QACF;AAEF,YAAI,wBAAwB,MAAM;AAC9B,cAAI,QAAQ,IAAI,MAAM,GAAG;AACzB,mBAASA,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC1B,kBAAMA,EAAC,IAAI,OAAO,aAAaA,EAAC;AAAA,UACpC;AACA,6BAAmB;AAAA,QACrB;AACF,YAAI;AACJ,YAAI,mBAAmB,CAAC,QAAQ;AAC5B,cAAI,MAAM;AACV,cAAI,IAAI;AACR,iBAAO,OAAO,CAAC,GAAG;AACd,mBAAO,iBAAiB,OAAO,GAAG,CAAC;AAAA,UACvC;AACA,iBAAO;AAAA,QACT;AAKF,YAAI;AACJ,YAAI,oBAAoB,CAAC,YAAY;AAAE,gBAAM,IAAI,aAAa,OAAO;AAAA,QAAG;AAGxE,iBAAS,mBAAmB,SAAS,oBAAoB,UAAU,CAAC,GAAG;AACnE,cAAI,OAAO,mBAAmB;AAC9B,cAAI,CAAC,SAAS;AACZ,8BAAkB,SAAS,IAAI,+CAA+C;AAAA,UAChF;AACA,cAAI,gBAAgB,eAAe,OAAO,GAAG;AAC3C,gBAAI,QAAQ,8BAA8B;AACxC;AAAA,YACF,OAAO;AACL,gCAAkB,yBAAyB,IAAI,SAAS;AAAA,YAC1D;AAAA,UACF;AAEA,0BAAgB,OAAO,IAAI;AAC3B,iBAAO,iBAAiB,OAAO;AAE/B,cAAI,qBAAqB,eAAe,OAAO,GAAG;AAChD,gBAAI,YAAY,qBAAqB,OAAO;AAC5C,mBAAO,qBAAqB,OAAO;AACnC,sBAAU,QAAQ,CAAC,OAAO,GAAG,CAAC;AAAA,UAChC;AAAA,QACF;AAEF,iBAAS,aAAa,SAAS,oBAAoB,UAAU,CAAC,GAAG;AAC7D,cAAI,EAAE,oBAAoB,qBAAqB;AAC7C,kBAAM,IAAI,UAAU,yDAAyD;AAAA,UAC/E;AACA,iBAAO,mBAAmB,SAAS,oBAAoB,OAAO;AAAA,QAChE;AAEF,YAAI,8BAA8B,CAAC,MAAM,OAAO,WAAW;AAEvD,kBAAQ,OAAO;AAAA,YACX,KAAK;AAAG,qBAAO,SACX,CAAC,YAAY,MAAQ,WAAU,CAAE,IACjC,CAAC,YAAY,OAAS,WAAU,CAAE;AAAA,YACtC,KAAK;AAAG,qBAAO,SACX,CAAC,YAAY,OAAS,WAAU,CAAE,IAClC,CAAC,YAAY,QAAU,WAAU,CAAE;AAAA,YACvC,KAAK;AAAG,qBAAO,SACX,CAAC,YAAY,OAAS,WAAU,CAAE,IAClC,CAAC,YAAY,QAAU,WAAU,CAAE;AAAA,YACvC,KAAK;AAAG,qBAAO,SACX,CAAC,YAAY,OAAS,WAAU,CAAE,IAClC,CAAC,YAAY,QAAU,WAAU,CAAE;AAAA,YACvC;AACI,oBAAM,IAAI,UAAU,0BAA0B,KAAK,MAAM,IAAI,EAAE;AAAA,UACvE;AAAA,QACF;AAEF,YAAI,2BAA2B,CAAC,eAAe,MAAM,MAAM,UAAU,aAAa;AAC9E,iBAAO,iBAAiB,IAAI;AAE5B,cAAI,iBAAkB,KAAK,QAAQ,GAAG,KAAK;AAG3C,cAAI,gBAAgB;AAClB,wBAAY,MAAM,OAAO;AAAA,UAC3B;AAEA,uBAAa,eAAe;AAAA,YAC1B;AAAA,YACA,gBAAgB,CAAC,UAAU;AAAA,YAC3B,cAAc,SAAS,aAAa,OAAO;AACzC,kBAAI,OAAO,SAAS,YAAY,OAAO,SAAS,UAAU;AACxD,sBAAM,IAAI,UAAU,mBAAmB,WAAW,KAAK,CAAC,QAAQ,KAAK,IAAI,EAAE;AAAA,cAC7E;AACA,kBAAI,OAAO,SAAS,UAAU;AAC5B,wBAAQ,OAAO,KAAK;AAAA,cACtB;AACA,kBAAI,QAAQ,YAAY,QAAQ,UAAU;AACxC,sBAAM,IAAI,UAAU,qBAAqB,WAAW,KAAK,CAAC,wDAAwD,IAAI,wCAAwC,QAAQ,KAAK,QAAQ,IAAI;AAAA,cACzL;AACA,qBAAO;AAAA,YACT;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB,4BAA4B,MAAM,MAAM,CAAC,cAAc;AAAA,YAC/E,oBAAoB;AAAA;AAAA,UACtB,CAAC;AAAA,QACH;AAIF,YAAI,sBAAsB;AAE1B,YAAI,yBAAyB,CAAC,SAAS,MAAM,WAAW,eAAe;AACnE,iBAAO,iBAAiB,IAAI;AAC5B,uBAAa,SAAS;AAAA,YAClB;AAAA,YACA,gBAAgB,SAAS,IAAI;AAGzB,qBAAO,CAAC,CAAC;AAAA,YACb;AAAA,YACA,cAAc,SAAS,aAAa,GAAG;AACnC,qBAAO,IAAI,YAAY;AAAA,YAC3B;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB,SAAS,SAAS;AACtC,qBAAO,KAAK,cAAc,EAAE,OAAO,OAAO,CAAC;AAAA,YAC/C;AAAA,YACA,oBAAoB;AAAA;AAAA,UACxB,CAAC;AAAA,QACH;AAIF,YAAI,6BAA6B,CAAC,MAAM;AACpC,iBAAO;AAAA,YACL,OAAO,EAAE;AAAA,YACT,iBAAiB,EAAE;AAAA,YACnB,yBAAyB,EAAE;AAAA,YAC3B,KAAK,EAAE;AAAA,YACP,SAAS,EAAE;AAAA,YACX,UAAU,EAAE;AAAA,YACZ,cAAc,EAAE;AAAA,UAClB;AAAA,QACF;AAEF,YAAI,8BAA8B,CAAC,QAAQ;AACvC,mBAAS,oBAAoB,QAAQ;AACnC,mBAAO,OAAO,GAAG,QAAQ,gBAAgB;AAAA,UAC3C;AACA,4BAAkB,oBAAoB,GAAG,IAAI,2BAA2B;AAAA,QAC1E;AAEF,YAAI,uBAAuB;AAE3B,YAAI,kBAAkB,CAAC,WAAW;AAAA,QAAC;AAEnC,YAAI,gBAAgB,CAAC,OAAO;AACxB,cAAI,GAAG,UAAU;AACf,eAAG,aAAa,cAAc,GAAG,QAAQ;AAAA,UAC3C,OAAO;AACL,eAAG,QAAQ,gBAAgB,cAAc,GAAG,GAAG;AAAA,UACjD;AAAA,QACF;AACF,YAAI,qBAAqB,CAAC,OAAO;AAC7B,aAAG,MAAM,SAAS;AAClB,cAAI,WAAW,MAAM,GAAG,MAAM;AAC9B,cAAI,UAAU;AACZ,0BAAc,EAAE;AAAA,UAClB;AAAA,QACF;AAEF,YAAI,kBAAkB,CAAC,KAAK,UAAU,iBAAiB;AACnD,cAAI,aAAa,cAAc;AAC7B,mBAAO;AAAA,UACT;AACA,cAAI,WAAc,aAAa,WAAW;AACxC,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,gBAAgB,KAAK,UAAU,aAAa,SAAS;AAC9D,cAAI,OAAO,MAAM;AACf,mBAAO;AAAA,UACT;AACA,iBAAO,aAAa,SAAS,EAAE;AAAA,QACjC;AAEF,YAAI,qBAAqB,CACzB;AAEA,YAAI,4BAA4B,MAAM,OAAO,KAAK,mBAAmB,EAAE;AAEvE,YAAI,4BAA4B,MAAM;AAClC,cAAI,KAAK,CAAC;AACV,mBAAS,KAAK,qBAAqB;AACjC,gBAAI,oBAAoB,eAAe,CAAC,GAAG;AACzC,iBAAG,KAAK,oBAAoB,CAAC,CAAC;AAAA,YAChC;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,gBAAgB,CAAC;AACrB,YAAI,sBAAsB,MAAM;AAC5B,iBAAO,cAAc,QAAQ;AAC3B,gBAAI,MAAM,cAAc,IAAI;AAC5B,gBAAI,GAAG,kBAAkB;AACzB,gBAAI,QAAQ,EAAE;AAAA,UAChB;AAAA,QACF;AAEF,YAAI;AAGJ,YAAI,mBAAmB,CAAC,OAAO;AAC3B,0BAAgB;AAChB,cAAI,cAAc,UAAU,eAAe;AACzC,0BAAc,mBAAmB;AAAA,UACnC;AAAA,QACF;AACF,YAAI,cAAc,MAAM;AACpB,iBAAO,2BAA2B,IAAI;AACtC,iBAAO,2BAA2B,IAAI;AACtC,iBAAO,qBAAqB,IAAI;AAChC,iBAAO,kBAAkB,IAAI;AAAA,QAC/B;AACF,YAAI,sBAAsB,CAC1B;AAEA,YAAI,mBAAmB,CAAC,QAAQ,QAAQ;AACpC,cAAI,QAAQ,QAAW;AACnB,8BAAkB,6BAA6B;AAAA,UACnD;AACA,iBAAO,OAAO,WAAW;AACrB,kBAAM,OAAO,OAAO,GAAG;AACvB,qBAAS,OAAO;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AACF,YAAI,uBAAuB,CAAC,QAAQ,QAAQ;AACxC,gBAAM,iBAAiB,QAAQ,GAAG;AAClC,iBAAO,oBAAoB,GAAG;AAAA,QAChC;AAGF,YAAI,kBAAkB,CAAC,WAAW,WAAW;AACzC,cAAI,CAAC,OAAO,WAAW,CAAC,OAAO,KAAK;AAClC,+BAAmB,0CAA0C;AAAA,UAC/D;AACA,cAAI,kBAAkB,CAAC,CAAC,OAAO;AAC/B,cAAI,cAAc,CAAC,CAAC,OAAO;AAC3B,cAAI,oBAAoB,aAAa;AACnC,+BAAmB,kDAAkD;AAAA,UACvE;AACA,iBAAO,QAAQ,EAAE,OAAO,EAAE;AAC1B,iBAAO,gBAAgB,OAAO,OAAO,WAAW;AAAA,YAC9C,IAAI;AAAA,cACF,OAAO;AAAA,cACP,UAAU;AAAA,YACZ;AAAA,UACF,CAAC,CAAC;AAAA,QACJ;AAEF,iBAAS,+BAA+B,KAAK;AAIzC,cAAI,aAAa,KAAK,WAAW,GAAG;AACpC,cAAI,CAAC,YAAY;AACf,iBAAK,WAAW,GAAG;AACnB,mBAAO;AAAA,UACT;AAEA,cAAI,qBAAqB,qBAAqB,KAAK,iBAAiB,UAAU;AAC9E,cAAI,WAAc,oBAAoB;AAEpC,gBAAI,MAAM,mBAAmB,GAAG,MAAM,OAAO;AAC3C,iCAAmB,GAAG,MAAM;AAC5B,iCAAmB,GAAG,WAAW;AACjC,qBAAO,mBAAmB,OAAO,EAAE;AAAA,YACrC,OAAO;AAGL,kBAAI,KAAK,mBAAmB,OAAO,EAAE;AACrC,mBAAK,WAAW,GAAG;AACnB,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,mBAAS,oBAAoB;AAC3B,gBAAI,KAAK,gBAAgB;AACvB,qBAAO,gBAAgB,KAAK,gBAAgB,mBAAmB;AAAA,gBAC7D,SAAS,KAAK;AAAA,gBACd,KAAK;AAAA,gBACL,cAAc;AAAA,gBACd,UAAU;AAAA,cACZ,CAAC;AAAA,YACH,OAAO;AACL,qBAAO,gBAAgB,KAAK,gBAAgB,mBAAmB;AAAA,gBAC7D,SAAS;AAAA,gBACT;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF;AAEA,cAAI,aAAa,KAAK,gBAAgB,cAAc,UAAU;AAC9D,cAAI,0BAA0B,mBAAmB,UAAU;AAC3D,cAAI,CAAC,yBAAyB;AAC5B,mBAAO,kBAAkB,KAAK,IAAI;AAAA,UACpC;AAEA,cAAI;AACJ,cAAI,KAAK,SAAS;AAChB,qBAAS,wBAAwB;AAAA,UACnC,OAAO;AACL,qBAAS,wBAAwB;AAAA,UACnC;AACA,cAAI,KAAK;AAAA,YACL;AAAA,YACA,KAAK;AAAA,YACL,OAAO;AAAA,UAAe;AAC1B,cAAI,OAAO,MAAM;AACf,mBAAO,kBAAkB,KAAK,IAAI;AAAA,UACpC;AACA,cAAI,KAAK,gBAAgB;AACvB,mBAAO,gBAAgB,OAAO,gBAAgB,mBAAmB;AAAA,cAC/D,SAAS;AAAA,cACT,KAAK;AAAA,cACL,cAAc;AAAA,cACd,UAAU;AAAA,YACZ,CAAC;AAAA,UACH,OAAO;AACL,mBAAO,gBAAgB,OAAO,gBAAgB,mBAAmB;AAAA,cAC/D,SAAS;AAAA,cACT,KAAK;AAAA,YACP,CAAC;AAAA,UACH;AAAA,QACF;AACF,YAAI,kBAAkB,CAAC,WAAW;AAC9B,cAAI,gBAAgB,OAAO,sBAAsB;AAC/C,8BAAkB,CAACoB,YAAWA;AAC9B,mBAAO;AAAA,UACT;AAKA,iCAAuB,IAAI,qBAAqB,CAAC,SAAS;AACxD,oBAAQ,KAAK,KAAK,YAAY,MAAM,QAAQ,YAAY,EAAE,CAAC;AAC3D,+BAAmB,KAAK,EAAE;AAAA,UAC5B,CAAC;AACD,4BAAkB,CAACA,YAAW;AAC5B,gBAAI,KAAKA,QAAO;AAChB,gBAAI,cAAc,CAAC,CAAC,GAAG;AACvB,gBAAI,aAAa;AAEf,kBAAI,OAAO,EAAE,GAAO;AAKpB,kBAAI,MAAM,GAAG,QAAQ;AACrB,mBAAK,cAAc,IAAI,MAAM,sCAAsC,IAAI,IAAI,KAAK,YAAY,GAAG,GAAG,CAAC;AAAA;AAAA;AAAA,qBAG7E;AACtB,kBAAI,uBAAuB,OAAO;AAChC,sBAAM,kBAAkB,KAAK,aAAa,8BAA8B;AAAA,cAC1E;AACA,mCAAqB,SAASA,SAAQ,MAAMA,OAAM;AAAA,YACpD;AACA,mBAAOA;AAAA,UACT;AACA,4BAAkB,CAACA,YAAW,qBAAqB,WAAWA,OAAM;AACpE,iBAAO,gBAAgB,MAAM;AAAA,QAC/B;AAIF,YAAI,mBAAmB,MAAM;AACzB,iBAAO,OAAO,YAAY,WAAW;AAAA,YACnC,YAAY,OAAO;AACjB,kBAAI,EAAE,gBAAgB,cAAc;AAClC,uBAAO;AAAA,cACT;AACA,kBAAI,EAAE,iBAAiB,cAAc;AACnC,uBAAO;AAAA,cACT;AAEA,kBAAI,YAAY,KAAK,GAAG,QAAQ;AAChC,kBAAI,OAAO,KAAK,GAAG;AACnB,oBAAM;AAAA,cAA4B,MAAM;AACxC,kBAAI,aAAa,MAAM,GAAG,QAAQ;AAClC,kBAAI,QAAQ,MAAM,GAAG;AAErB,qBAAO,UAAU,WAAW;AAC1B,uBAAO,UAAU,OAAO,IAAI;AAC5B,4BAAY,UAAU;AAAA,cACxB;AAEA,qBAAO,WAAW,WAAW;AAC3B,wBAAQ,WAAW,OAAO,KAAK;AAC/B,6BAAa,WAAW;AAAA,cAC1B;AAEA,qBAAO,cAAc,cAAc,SAAS;AAAA,YAC9C;AAAA,YAEA,UAAU;AACR,kBAAI,CAAC,KAAK,GAAG,KAAK;AAChB,4CAA4B,IAAI;AAAA,cAClC;AAEA,kBAAI,KAAK,GAAG,yBAAyB;AACnC,qBAAK,GAAG,MAAM,SAAS;AACvB,uBAAO;AAAA,cACT,OAAO;AACL,oBAAI,QAAQ,gBAAgB,OAAO,OAAO,OAAO,eAAe,IAAI,GAAG;AAAA,kBACrE,IAAI;AAAA,oBACF,OAAO,2BAA2B,KAAK,EAAE;AAAA,kBAC3C;AAAA,gBACF,CAAC,CAAC;AAEF,sBAAM,GAAG,MAAM,SAAS;AACxB,sBAAM,GAAG,kBAAkB;AAC3B,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,YAEA,WAAW;AACT,kBAAI,CAAC,KAAK,GAAG,KAAK;AAChB,4CAA4B,IAAI;AAAA,cAClC;AAEA,kBAAI,KAAK,GAAG,mBAAmB,CAAC,KAAK,GAAG,yBAAyB;AAC/D,kCAAkB,uCAAuC;AAAA,cAC3D;AAEA,8BAAgB,IAAI;AACpB,iCAAmB,KAAK,EAAE;AAE1B,kBAAI,CAAC,KAAK,GAAG,yBAAyB;AACpC,qBAAK,GAAG,WAAW;AACnB,qBAAK,GAAG,MAAM;AAAA,cAChB;AAAA,YACF;AAAA,YAEA,cAAc;AACZ,qBAAO,CAAC,KAAK,GAAG;AAAA,YAClB;AAAA,YAEA,gBAAgB;AACd,kBAAI,CAAC,KAAK,GAAG,KAAK;AAChB,4CAA4B,IAAI;AAAA,cAClC;AACA,kBAAI,KAAK,GAAG,mBAAmB,CAAC,KAAK,GAAG,yBAAyB;AAC/D,kCAAkB,uCAAuC;AAAA,cAC3D;AACA,4BAAc,KAAK,IAAI;AACvB,kBAAI,cAAc,WAAW,KAAK,eAAe;AAC/C,8BAAc,mBAAmB;AAAA,cACnC;AACA,mBAAK,GAAG,kBAAkB;AAC1B,qBAAO;AAAA,YACT;AAAA,UACF,CAAC;AAAA,QACH;AAEF,iBAAS,cAAc;AAAA,QACrB;AAEF,YAAI,sBAAsB,CAAC,MAAM,SAAS,OAAO,eAAe,MAAM,QAAQ;AAAA,UAC1E,OAAO;AAAA,QACT,CAAC;AAGH,YAAI,sBAAsB,CAAC,OAAO,YAAY,cAAc;AACxD,cAAI,WAAc,MAAM,UAAU,EAAE,eAAe;AACjD,gBAAI,WAAW,MAAM,UAAU;AAE/B,kBAAM,UAAU,IAAI,WAAW;AAE7B,kBAAI,CAAC,MAAM,UAAU,EAAE,cAAc,eAAe,UAAU,MAAM,GAAG;AACnE,kCAAkB,aAAa,SAAS,iDAAiD,UAAU,MAAM,uBAAuB,MAAM,UAAU,EAAE,aAAa,IAAI;AAAA,cACvK;AACA,qBAAO,MAAM,UAAU,EAAE,cAAc,UAAU,MAAM,EAAE,MAAM,MAAM,SAAS;AAAA,YAChF;AAEA,kBAAM,UAAU,EAAE,gBAAgB,CAAC;AACnC,kBAAM,UAAU,EAAE,cAAc,SAAS,QAAQ,IAAI;AAAA,UACvD;AAAA,QACF;AAGF,YAAI,qBAAqB,CAAC,MAAM,OAAO,iBAAiB;AACpD,cAAI,OAAO,eAAe,IAAI,GAAG;AAC/B,gBAAI,WAAc,gBAAiB,WAAc,OAAO,IAAI,EAAE,iBAAiB,WAAc,OAAO,IAAI,EAAE,cAAc,YAAY,GAAI;AACtI,gCAAkB,gCAAgC,IAAI,SAAS;AAAA,YACjE;AAIA,gCAAoB,QAAQ,MAAM,IAAI;AACtC,gBAAI,OAAO,eAAe,YAAY,GAAG;AACvC,gCAAkB,uFAAuF,YAAY,IAAI;AAAA,YAC3H;AAEA,mBAAO,IAAI,EAAE,cAAc,YAAY,IAAI;AAAA,UAC7C,OACK;AACH,mBAAO,IAAI,IAAI;AACf,gBAAI,WAAc,cAAc;AAC9B,qBAAO,IAAI,EAAE,eAAe;AAAA,YAC9B;AAAA,UACF;AAAA,QACF;AAEF,YAAI,SAAS;AAEb,YAAI,SAAS;AACb,YAAI,wBAAwB,CAAC,SAAS;AAClC,cAAI,WAAc,MAAM;AACtB,mBAAO;AAAA,UACT;AACA,iBAAO,KAAK,QAAQ,kBAAkB,GAAG;AACzC,cAAI,IAAI,KAAK,WAAW,CAAC;AACzB,cAAI,KAAK,UAAU,KAAK,QAAQ;AAC9B,mBAAO,IAAI,IAAI;AAAA,UACjB;AACA,iBAAO;AAAA,QACT;AAIF,iBAAS,gBAAgB,MACI,aACA,mBACA,eACA,WACA,eACA,QACA,UAAU;AACnC,eAAK,OAAO;AACZ,eAAK,cAAc;AACnB,eAAK,oBAAoB;AACzB,eAAK,gBAAgB;AACrB,eAAK,YAAY;AACjB,eAAK,gBAAgB;AACrB,eAAK,SAAS;AACd,eAAK,WAAW;AAChB,eAAK,uBAAuB,CAAC;AAAA,QAC/B;AAGF,YAAI,gBAAgB,CAAC,KAAK,UAAU,iBAAiB;AACjD,iBAAO,aAAa,cAAc;AAChC,gBAAI,CAAC,SAAS,QAAQ;AACpB,gCAAkB,gCAAgC,aAAa,IAAI,wBAAwB,SAAS,IAAI,EAAE;AAAA,YAC5G;AACA,kBAAM,SAAS,OAAO,GAAG;AACzB,uBAAW,SAAS;AAAA,UACtB;AACA,iBAAO;AAAA,QACT;AAEF,iBAAS,oCAAoC,aAAa,QAAQ;AAC9D,cAAI,WAAW,MAAM;AACnB,gBAAI,KAAK,aAAa;AACpB,gCAAkB,uBAAuB,KAAK,IAAI,EAAE;AAAA,YACtD;AACA,mBAAO;AAAA,UACT;AAEA,cAAI,CAAC,OAAO,IAAI;AACd,8BAAkB,gBAAgB,WAAW,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;AAAA,UAC3E;AACA,cAAI,CAAC,OAAO,GAAG,KAAK;AAClB,8BAAkB,mDAAmD,KAAK,IAAI,EAAE;AAAA,UAClF;AACA,cAAI,cAAc,OAAO,GAAG,QAAQ;AACpC,cAAI,MAAM,cAAc,OAAO,GAAG,KAAK,aAAa,KAAK,eAAe;AACxE,iBAAO;AAAA,QACT;AAIF,iBAAS,yBAAyB,aAAa,QAAQ;AACnD,cAAI;AACJ,cAAI,WAAW,MAAM;AACnB,gBAAI,KAAK,aAAa;AACpB,gCAAkB,uBAAuB,KAAK,IAAI,EAAE;AAAA,YACtD;AAEA,gBAAI,KAAK,gBAAgB;AACvB,oBAAM,KAAK,eAAe;AAC1B,kBAAI,gBAAgB,MAAM;AACxB,4BAAY,KAAK,KAAK,eAAe,GAAG;AAAA,cAC1C;AACA,qBAAO;AAAA,YACT,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,cAAI,CAAC,UAAU,CAAC,OAAO,IAAI;AACzB,8BAAkB,gBAAgB,WAAW,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;AAAA,UAC3E;AACA,cAAI,CAAC,OAAO,GAAG,KAAK;AAClB,8BAAkB,mDAAmD,KAAK,IAAI,EAAE;AAAA,UAClF;AACA,cAAI,CAAC,KAAK,WAAW,OAAO,GAAG,QAAQ,SAAS;AAC9C,8BAAkB,mCAAoC,OAAO,GAAG,eAAe,OAAO,GAAG,aAAa,OAAO,OAAO,GAAG,QAAQ,IAAK,sBAAsB,KAAK,IAAI,EAAE;AAAA,UACvK;AACA,cAAI,cAAc,OAAO,GAAG,QAAQ;AACpC,gBAAM,cAAc,OAAO,GAAG,KAAK,aAAa,KAAK,eAAe;AAEpE,cAAI,KAAK,gBAAgB;AAIvB,gBAAI,WAAc,OAAO,GAAG,UAAU;AACpC,gCAAkB,iDAAiD;AAAA,YACrE;AAEA,oBAAQ,KAAK,eAAe;AAAA,cAC1B,KAAK;AAEH,oBAAI,OAAO,GAAG,iBAAiB,MAAM;AACnC,wBAAM,OAAO,GAAG;AAAA,gBAClB,OAAO;AACL,oCAAkB,mCAAoC,OAAO,GAAG,eAAe,OAAO,GAAG,aAAa,OAAO,OAAO,GAAG,QAAQ,IAAK,sBAAsB,KAAK,IAAI,EAAE;AAAA,gBACvK;AACA;AAAA,cAEF,KAAK;AACH,sBAAM,OAAO,GAAG;AAChB;AAAA,cAEF,KAAK;AACH,oBAAI,OAAO,GAAG,iBAAiB,MAAM;AACnC,wBAAM,OAAO,GAAG;AAAA,gBAClB,OAAO;AACL,sBAAI,eAAe,OAAO,OAAO,EAAE;AACnC,wBAAM,KAAK;AAAA,oBACT;AAAA,oBACA,MAAM,SAAS,MAAM,aAAa,QAAQ,EAAE,CAAC;AAAA,kBAC/C;AACA,sBAAI,gBAAgB,MAAM;AACxB,gCAAY,KAAK,KAAK,eAAe,GAAG;AAAA,kBAC1C;AAAA,gBACF;AACA;AAAA,cAEF;AACE,kCAAkB,6BAA6B;AAAA,YACnD;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAIF,iBAAS,uCAAuC,aAAa,QAAQ;AACjE,cAAI,WAAW,MAAM;AACnB,gBAAI,KAAK,aAAa;AACpB,gCAAkB,uBAAuB,KAAK,IAAI,EAAE;AAAA,YACtD;AACA,mBAAO;AAAA,UACT;AAEA,cAAI,CAAC,OAAO,IAAI;AACd,8BAAkB,gBAAgB,WAAW,MAAM,CAAC,UAAU,KAAK,IAAI,EAAE;AAAA,UAC3E;AACA,cAAI,CAAC,OAAO,GAAG,KAAK;AAClB,8BAAkB,mDAAmD,KAAK,IAAI,EAAE;AAAA,UAClF;AACA,cAAI,OAAO,GAAG,QAAQ,SAAS;AAC3B,8BAAkB,mCAAmC,OAAO,GAAG,QAAQ,IAAI,sBAAsB,KAAK,IAAI,EAAE;AAAA,UAChH;AACA,cAAI,cAAc,OAAO,GAAG,QAAQ;AACpC,cAAI,MAAM,cAAc,OAAO,GAAG,KAAK,aAAa,KAAK,eAAe;AACxE,iBAAO;AAAA,QACT;AAIF,iBAAS,YAAY,SAAS;AAC1B,iBAAO,KAAK,cAAc,EAAE,QAAU,WAAU,CAAE,CAAC;AAAA,QACrD;AAGF,YAAI,yBAAyB,MAAM;AAC/B,iBAAO,OAAO,kBAAkB,WAAW;AAAA,YACzC,WAAW,KAAK;AACd,kBAAI,KAAK,eAAe;AACtB,sBAAM,KAAK,cAAc,GAAG;AAAA,cAC9B;AACA,qBAAO;AAAA,YACT;AAAA,YACA,WAAW,KAAK;AACd,mBAAK,gBAAgB,GAAG;AAAA,YAC1B;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB;AAAA,YACxB,gBAAgB;AAAA,UAClB,CAAC;AAAA,QACH;AASF,iBAAS,kBACL,MACA,iBACA,aACA,SAGA,gBACA,aACA,eACA,eACA,gBACA,UACA,eACA;AACA,eAAK,OAAO;AACZ,eAAK,kBAAkB;AACvB,eAAK,cAAc;AACnB,eAAK,UAAU;AAGf,eAAK,iBAAiB;AACtB,eAAK,cAAc;AACnB,eAAK,gBAAgB;AACrB,eAAK,gBAAgB;AACrB,eAAK,iBAAiB;AACtB,eAAK,WAAW;AAChB,eAAK,gBAAgB;AAErB,cAAI,CAAC,kBAAkB,gBAAgB,cAAc,QAAW;AAC9D,gBAAI,SAAS;AACX,mBAAK,YAAY,IAAI;AACrB,mBAAK,qBAAqB;AAAA,YAC5B,OAAO;AACL,mBAAK,YAAY,IAAI;AACrB,mBAAK,qBAAqB;AAAA,YAC5B;AAAA,UACF,OAAO;AACL,iBAAK,YAAY,IAAI;AAAA,UAKvB;AAAA,QACF;AAGF,YAAI,sBAAsB,CAAC,MAAM,OAAO,iBAAiB;AACrD,cAAI,CAAC,OAAO,eAAe,IAAI,GAAG;AAChC,+BAAmB,qCAAqC;AAAA,UAC1D;AAEA,cAAI,WAAc,OAAO,IAAI,EAAE,iBAAiB,WAAc,cAAc;AAC1E,mBAAO,IAAI,EAAE,cAAc,YAAY,IAAI;AAAA,UAC7C,OACK;AACH,mBAAO,IAAI,IAAI;AACf,mBAAO,IAAI,EAAE,WAAW;AAAA,UAC1B;AAAA,QACF;AAIF,YAAI,kBAAkB,CAAC;AAEvB,YAAI;AACJ,YAAI,oBAAoB,CAAC,YAAY;AACjC,cAAI,OAAO,gBAAgB,OAAO;AAClC,cAAI,CAAC,MAAM;AACT,gBAAI,WAAW,gBAAgB,OAAQ,iBAAgB,SAAS,UAAU;AAC1E,4BAAgB,OAAO,IAAI,OAAO,UAAU,IAAI,OAAO;AAAA,UACzD;AACA,UAAArB,QAAO,UAAU,IAAI,OAAO,KAAK,MAAM,4DAA4D;AACnG,iBAAO;AAAA,QACT;AACF,YAAI,0BAA0B,CAAC,WAAW,gBAAgB;AACtD,sBAAY,iBAAiB,SAAS;AAEtC,mBAAS,gBAAgB;AACvB,mBAAO,kBAAkB,WAAW;AAAA,UACtC;AAEA,cAAI,KAAK,cAAc;AACvB,cAAI,OAAO,MAAM,YAAY;AACzB,8BAAkB,2CAA2C,SAAS,KAAK,WAAW,EAAE;AAAA,UAC5F;AACA,iBAAO;AAAA,QACT;AAIF,YAAI,cAAc,CAAC,eAAe,cAAc;AAC5C,cAAI,aAAa,oBAAoB,WAAW,SAAS,SAAS;AAChE,iBAAK,OAAO;AACZ,iBAAK,UAAU;AAEf,gBAAI,QAAS,IAAI,MAAM,OAAO,EAAG;AACjC,gBAAI,UAAU,QAAW;AACvB,mBAAK,QAAQ,KAAK,SAAS,IAAI,OAC3B,MAAM,QAAQ,sBAAsB,EAAE;AAAA,YAC5C;AAAA,UACF,CAAC;AACD,qBAAW,YAAY,OAAO,OAAO,cAAc,SAAS;AAC5D,qBAAW,UAAU,cAAc;AACnC,qBAAW,UAAU,WAAW,WAAW;AACzC,gBAAI,KAAK,YAAY,QAAW;AAC9B,qBAAO,KAAK;AAAA,YACd,OAAO;AACL,qBAAO,GAAG,KAAK,IAAI,KAAK,KAAK,OAAO;AAAA,YACtC;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AACF,YAAI;AAIJ,YAAI,cAAc,CAACY,UAAS;AACxB,cAAI,MAAM,eAAeA,KAAI;AAC7B,cAAI,KAAK,iBAAiB,GAAG;AAC7B,gBAAM,GAAG;AACT,iBAAO;AAAA,QACT;AACF,YAAI,wBAAwB,CAAC,SAAS,UAAU;AAC5C,cAAI,eAAe,CAAC;AACpB,cAAI,OAAO,CAAC;AACZ,mBAAS,MAAMA,OAAM;AACnB,gBAAI,KAAKA,KAAI,GAAG;AACd;AAAA,YACF;AACA,gBAAI,gBAAgBA,KAAI,GAAG;AACzB;AAAA,YACF;AACA,gBAAI,iBAAiBA,KAAI,GAAG;AAC1B,+BAAiBA,KAAI,EAAE,QAAQ,KAAK;AACpC;AAAA,YACF;AACA,yBAAa,KAAKA,KAAI;AACtB,iBAAKA,KAAI,IAAI;AAAA,UACf;AACA,gBAAM,QAAQ,KAAK;AAEnB,gBAAM,IAAI,iBAAiB,GAAG,OAAO,OAAO,aAAa,IAAI,WAAW,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AAAA,QACxF;AAEF,YAAI,0BAA0B,CAAC,SACJ,gBACA,qBACA,kBACA,wBACA,eACA,iBACA,QACA,mBACA,UACA,MACA,qBACA,kBAAkB;AACzC,iBAAO,iBAAiB,IAAI;AAC5B,0BAAgB,wBAAwB,wBAAwB,aAAa;AAC7E,qBAAW,wBAAwB,iBAAiB,MAAM;AAC1D,uBAAa,wBAAwB,mBAAmB,QAAQ;AAChE,0BAAgB,wBAAwB,qBAAqB,aAAa;AAC1E,cAAI,oBAAoB,sBAAsB,IAAI;AAElD,6BAAmB,mBAAmB,WAAW;AAE/C,kCAAsB,oBAAoB,IAAI,yBAAyB,CAAC,gBAAgB,CAAC;AAAA,UAC3F,CAAC;AAED;AAAA,YACE,CAAC,SAAS,gBAAgB,mBAAmB;AAAA,YAC7C,mBAAmB,CAAC,gBAAgB,IAAI,CAAC;AAAA,YACzC,SAAS,MAAM;AACb,qBAAO,KAAK,CAAC;AAEb,kBAAI;AACJ,kBAAI;AACJ,kBAAI,kBAAkB;AACpB,4BAAY,KAAK;AACjB,gCAAgB,UAAU;AAAA,cAC5B,OAAO;AACL,gCAAgB,YAAY;AAAA,cAC9B;AAEA,kBAAI,cAAc,oBAAoB,MAAM,WAAW;AACrD,oBAAI,OAAO,eAAe,IAAI,MAAM,mBAAmB;AACrD,wBAAM,IAAI,aAAa,4BAA4B,IAAI;AAAA,gBACzD;AACA,oBAAI,WAAc,gBAAgB,kBAAkB;AAClD,wBAAM,IAAI,aAAa,OAAO,gCAAgC;AAAA,gBAChE;AACA,oBAAI,OAAO,gBAAgB,iBAAiB,UAAU,MAAM;AAC5D,oBAAI,WAAc,MAAM;AACtB,wBAAM,IAAI,aAAa,2BAA2B,IAAI,uCAAuC,UAAU,MAAM,iBAAiB,OAAO,KAAK,gBAAgB,gBAAgB,EAAE,SAAS,CAAC,uBAAuB;AAAA,gBAC/M;AACA,uBAAO,KAAK,MAAM,MAAM,SAAS;AAAA,cACnC,CAAC;AAED,kBAAI,oBAAoB,OAAO,OAAO,eAAe;AAAA,gBACnD,aAAa,EAAE,OAAO,YAAY;AAAA,cACpC,CAAC;AAED,0BAAY,YAAY;AAExB,kBAAI,kBAAkB,IAAI;AAAA,gBAAgB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cAAQ;AAElD,kBAAI,gBAAgB,WAAW;AAE7B,gCAAgB,UAAU,qBAAqB,CAAC;AAEhD,gCAAgB,UAAU,iBAAiB,KAAK,eAAe;AAAA,cACjE;AAEA,kBAAI,qBAAqB,IAAI;AAAA,gBAAkB;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cAAK;AAEpD,kBAAI,mBAAmB,IAAI;AAAA,gBAAkB,OAAO;AAAA,gBACP;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cAAK;AAElD,kBAAI,wBAAwB,IAAI;AAAA,gBAAkB,OAAO;AAAA,gBACP;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cAAK;AAEvD,iCAAmB,OAAO,IAAI;AAAA,gBAC5B,aAAa;AAAA,gBACb,kBAAkB;AAAA,cACpB;AAEA,kCAAoB,mBAAmB,WAAW;AAElD,qBAAO,CAAC,oBAAoB,kBAAkB,qBAAqB;AAAA,YACrE;AAAA,UACF;AAAA,QACF;AAEF,YAAI,sBAAsB,CAAC,OAAO,iBAAiB;AAC/C,cAAIJ,SAAQ,CAAC;AACb,mBAASP,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAG5B,YAAAO,OAAM,KAAK,QAAW,eAAeP,KAAI,KAAK,CAAE,CAAC;AAAA,UACrD;AACA,iBAAOO;AAAA,QACT;AAUF,iBAAS,oBAAoB,UAAU;AACnC,mBAASP,KAAI,GAAGA,KAAI,SAAS,QAAQ,EAAEA,IAAG;AACxC,gBAAI,SAASA,EAAC,MAAM,QAAQ,SAASA,EAAC,EAAE,uBAAuB,QAAW;AACxE,qBAAO;AAAA,YACT;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AACF,iBAAS,qBAAqB,WAAW,UAAU,WAAW,gBAAgB,eAA+B,SAAS;AAUlH,cAAI,WAAW,SAAS;AAExB,cAAI,WAAW,GAAG;AAChB,8BAAkB,gFAAgF;AAAA,UACpG;AAEA,UAAAD,QAAO,CAAC,SAAS,8CAA8C;AAE/D,cAAI,oBAAqB,SAAS,CAAC,MAAM,QAAQ,cAAc;AAU/D,cAAI,uBAAuB,oBAAoB,QAAQ;AAEvD,cAAI,UAAW,SAAS,CAAC,EAAE,SAAS;AAEpC,cAAI,mBAAmB,WAAW;AAClC,cAAI,YAAY,IAAI,MAAM,gBAAgB;AAC1C,cAAI,kBAAkB,CAAC;AACvB,cAAI,cAAc,CAAC;AACnB,cAAI,YAAY,WAAW;AACzB,gBAAI,UAAU,WAAW,kBAAkB;AACzC,gCAAkB,YAAY,SAAS,gBAAgB,UAAU,MAAM,wBAAwB,gBAAgB,EAAE;AAAA,YACnH;AACA,wBAAY,SAAS;AACrB,gBAAI;AACJ,4BAAgB,SAAS,oBAAoB,IAAI;AACjD,4BAAgB,CAAC,IAAI;AACrB,gBAAI,mBAAmB;AACrB,0BAAY,SAAS,CAAC,EAAE,YAAY,EAAE,aAAa,IAAI;AACvD,8BAAgB,CAAC,IAAI;AAAA,YACvB;AACA,qBAASC,KAAI,GAAGA,KAAI,kBAAkB,EAAEA,IAAG;AACzC,wBAAUA,EAAC,IAAI,SAASA,KAAI,CAAC,EAAE,YAAY,EAAE,aAAa,UAAUA,EAAC,CAAC;AACtE,8BAAgB,KAAK,UAAUA,EAAC,CAAC;AAAA,YACnC;AAEA,gBAAI,KAAK,eAAe,MAAM,MAAM,eAAe;AAEnD,qBAAS,OAAOqB,KAAI;AAClB,kBAAI,sBAAsB;AACxB,+BAAe,WAAW;AAAA,cAC5B,OAAO;AACL,yBAASrB,KAAI,oBAAoB,IAAI,GAAGA,KAAI,SAAS,QAAQA,MAAK;AAChE,sBAAI,QAAQA,OAAM,IAAI,YAAY,UAAUA,KAAI,CAAC;AACjD,sBAAI,SAASA,EAAC,EAAE,uBAAuB,MAAM;AAC3C,6BAASA,EAAC,EAAE,mBAAmB,KAAK;AAAA,kBACtC;AAAA,gBACF;AAAA,cACF;AAEA,kBAAI,SAAS;AACX,uBAAO,SAAS,CAAC,EAAE,cAAc,EAAEqB,GAAE;AAAA,cACvC;AAAA,YACF;AAEA,mBAAO,OAAO,EAAE;AAAA,UAClB;AACA,iBAAO,oBAAoB,WAAW,SAAS;AAAA,QACjD;AACF,YAAI,sCAAsC,CACtC,cACA,UACA,iBACA,kBACA,SACA,mBACG;AACH,UAAAtB,QAAO,WAAW,CAAC;AACnB,cAAI,cAAc,oBAAoB,UAAU,eAAe;AAC/D,oBAAU,wBAAwB,kBAAkB,OAAO;AAC3D,cAAI,OAAO,CAAC,cAAc;AAC1B,cAAI,cAAc,CAAC;AAEnB,wCAA8B,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,WAAW;AACpE,wBAAY,UAAU,CAAC;AACvB,gBAAI,YAAY,eAAe,UAAU,IAAI;AAE7C,gBAAI,WAAc,UAAU,gBAAgB,kBAAkB;AAC5D,wBAAU,gBAAgB,mBAAmB,CAAC;AAAA,YAChD;AACA,gBAAI,WAAc,UAAU,gBAAgB,iBAAiB,WAAW,CAAC,GAAG;AAC1E,oBAAM,IAAI,aAAa,8EAA8E,WAAS,CAAC,gBAAgB,UAAU,IAAI,qGAAqG;AAAA,YACpP;AACA,sBAAU,gBAAgB,iBAAiB,WAAW,CAAC,IAAI,MAAM;AAC/D,oCAAsB,oBAAoB,UAAU,IAAI,yBAAyB,WAAW;AAAA,YAC9F;AAEA,0CAA8B,CAAC,GAAG,aAAa,CAAC,aAAa;AAE3D,uBAAS,OAAO,GAAG,GAAG,IAAI;AAC1B,wBAAU,gBAAgB,iBAAiB,WAAW,CAAC,IAAI,qBAAqB,WAAW,UAAU,MAAM,SAAS,cAAc;AAClI,qBAAO,CAAC;AAAA,YACV,CAAC;AACD,mBAAO,CAAC;AAAA,UACV,CAAC;AAAA,QACH;AAQF,YAAI,kBAAkB,CAAC,cAAc;AACjC,sBAAY,UAAU,KAAK;AAC3B,gBAAM,YAAY,UAAU,QAAQ,GAAG;AACvC,cAAI,cAAc,IAAI;AACpB,YAAAA,QAAO,UAAU,UAAU,SAAS,CAAC,KAAK,KAAK,8CAA8C;AAC7F,mBAAO,UAAU,OAAO,GAAG,SAAS;AAAA,UACtC,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF;AACF,YAAI,mCAAmC,CAAC,cACJ,YACA,UACA,iBACA,kBACA,YACA,SACA,eACA,YAAY;AAC5C,cAAI,cAAc,oBAAoB,UAAU,eAAe;AAC/D,uBAAa,iBAAiB,UAAU;AACxC,uBAAa,gBAAgB,UAAU;AACvC,uBAAa,wBAAwB,kBAAkB,UAAU;AAEjE,wCAA8B,CAAC,GAAG,CAAC,YAAY,GAAG,SAAS,WAAW;AACpE,wBAAY,UAAU,CAAC;AACvB,gBAAI,YAAY,GAAG,UAAU,IAAI,IAAI,UAAU;AAE/C,gBAAI,WAAW,WAAW,IAAI,GAAG;AAC/B,2BAAa,OAAO,WAAW,UAAU,CAAC,CAAC;AAAA,YAC7C;AAEA,gBAAI,eAAe;AACjB,wBAAU,gBAAgB,qBAAqB,KAAK,UAAU;AAAA,YAChE;AAEA,qBAAS,sBAAsB;AAC7B,oCAAsB,eAAe,SAAS,yBAAyB,WAAW;AAAA,YACpF;AAEA,gBAAI,QAAQ,UAAU,gBAAgB;AACtC,gBAAI,SAAS,MAAM,UAAU;AAC7B,gBAAI,WAAc,UAAW,WAAc,OAAO,iBAAiB,OAAO,cAAc,UAAU,QAAQ,OAAO,aAAa,WAAW,GAAI;AAG3I,kCAAoB,WAAW,WAAW;AAC1C,kCAAoB,YAAY,UAAU;AAC1C,oBAAM,UAAU,IAAI;AAAA,YACtB,OAAO;AAGL,kCAAoB,OAAO,YAAY,SAAS;AAChD,oBAAM,UAAU,EAAE,cAAc,WAAW,CAAC,IAAI;AAAA,YAClD;AAEA,0CAA8B,CAAC,GAAG,aAAa,SAAS,UAAU;AAChE,kBAAI,iBAAiB,qBAAqB,WAAW,UAAU,WAAW,YAAY,SAAS,OAAO;AAItG,kBAAI,WAAc,MAAM,UAAU,EAAE,eAAe;AAEjD,+BAAe,WAAW,WAAW;AACrC,sBAAM,UAAU,IAAI;AAAA,cACtB,OAAO;AACL,sBAAM,UAAU,EAAE,cAAc,WAAW,CAAC,IAAI;AAAA,cAClD;AAEA,qBAAO,CAAC;AAAA,YACV,CAAC;AACD,mBAAO,CAAC;AAAA,UACV,CAAC;AAAA,QACH;AAAA,QAGF,MAAM,gBAAgB;AAAA,UAClB,cAAc;AAIZ,iBAAK,YAAY,CAAC,MAAS;AAC3B,iBAAK,WAAW,CAAC;AAAA,UACnB;AAAA,UACA,IAAI,IAAI;AACN,YAAAA,QAAO,KAAK,UAAU,EAAE,MAAM,QAAW,mBAAmB,EAAE,EAAE;AAChE,mBAAO,KAAK,UAAU,EAAE;AAAA,UAC1B;AAAA,UACA,IAAI,IAAI;AACN,mBAAO,KAAK,UAAU,EAAE,MAAM;AAAA,UAChC;AAAA,UACA,SAAS,QAAQ;AACf,gBAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,UAAU;AAC/C,iBAAK,UAAU,EAAE,IAAI;AACrB,mBAAO;AAAA,UACT;AAAA,UACA,KAAK,IAAI;AACP,YAAAA,QAAO,KAAK,UAAU,EAAE,MAAM,MAAS;AAGvC,iBAAK,UAAU,EAAE,IAAI;AACrB,iBAAK,SAAS,KAAK,EAAE;AAAA,UACvB;AAAA,QACF;AACF,YAAI,gBAAgB,IAAI,gBAAgB;AAAE;AAC1C,YAAI,iBAAiB,CAAC,WAAW;AAC7B,cAAI,UAAU,cAAc,YAAY,MAAM,EAAE,cAAc,IAAI,MAAM,EAAE,UAAU;AAClF,0BAAc,KAAK,MAAM;AAAA,UAC3B;AAAA,QACF;AAIF,YAAI,sBAAsB,MAAM;AAC5B,cAAI,QAAQ;AACZ,mBAASC,KAAI,cAAc,UAAUA,KAAI,cAAc,UAAU,QAAQ,EAAEA,IAAG;AAC5E,gBAAI,cAAc,UAAUA,EAAC,MAAM,QAAW;AAC5C,gBAAE;AAAA,YACJ;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,aAAa,MAAM;AAGnB,wBAAc,UAAU;AAAA,YACtB,EAAC,OAAO,OAAS;AAAA,YACjB,EAAC,OAAO,KAAI;AAAA,YACZ,EAAC,OAAO,KAAI;AAAA,YACZ,EAAC,OAAO,MAAK;AAAA,UACf;AACA,iBAAO;AAAA,YAAO;AAAA;AAAA,YAA6C,EAAE,UAAU,cAAc,UAAU,OAAO;AAAA,UAAC,GACvG,OAAO,qBAAqB,IAAI;AAAA,QAClC;AACF,YAAI,QAAQ;AAAA,UACZ,SAAQ,CAAC,WAAW;AACd,gBAAI,CAAC,QAAQ;AACT,gCAAkB,sCAAsC,MAAM;AAAA,YAClE;AACA,mBAAO,cAAc,IAAI,MAAM,EAAE;AAAA,UACnC;AAAA,UACJ,UAAS,CAAC,UAAU;AACd,oBAAQ,OAAO;AAAA,cACb,KAAK;AAAW,uBAAO;AAAA,cACvB,KAAK;AAAM,uBAAO;AAAA,cAClB,KAAK;AAAM,uBAAO;AAAA,cAClB,KAAK;AAAO,uBAAO;AAAA,cACnB,SAAQ;AACN,uBAAO,cAAc,SAAS,EAAC,UAAU,GAAG,MAAY,CAAC;AAAA,cAC3D;AAAA,YACF;AAAA,UACF;AAAA,QACJ;AAGA,YAAI,YAAY;AAAA,UACZ,MAAM;AAAA,UACN,gBAAgB,CAAC,WAAW;AAC1B,gBAAI,KAAK,MAAM,QAAQ,MAAM;AAC7B,2BAAe,MAAM;AACrB,mBAAO;AAAA,UACT;AAAA,UACA,cAAc,CAAC,aAAa,UAAU,MAAM,SAAS,KAAK;AAAA,UAC1D,kBAAkB;AAAA,UAClB,wBAAwB;AAAA,UACxB,oBAAoB;AAAA;AAAA;AAAA;AAAA,QAItB;AACF,YAAI,0BAA0B,CAAC,YAAY,aAAa,SAAS,SAAS;AAG1E,YAAI,2BAA2B,CAAC,MAAM,OAAO,WAAW;AACpD,kBAAQ,OAAO;AAAA,YACX,KAAK;AAAG,qBAAO,SACX,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,MAAQ,WAAU,CAAE,CAAC;AAAA,cAAE,IACvE,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,OAAS,WAAU,CAAE,CAAC;AAAA,cAAE;AAAA,YAC5E,KAAK;AAAG,qBAAO,SACX,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,OAAS,WAAU,CAAE,CAAC;AAAA,cAAE,IACxE,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,QAAU,WAAU,CAAE,CAAC;AAAA,cAAE;AAAA,YAC7E,KAAK;AAAG,qBAAO,SACX,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,OAAS,WAAU,CAAE,CAAC;AAAA,cAAE,IACxE,SAAS,SAAS;AAAE,uBAAO,KAAK,cAAc,EAAE,QAAU,WAAU,CAAE,CAAC;AAAA,cAAE;AAAA,YAC7E;AACI,oBAAM,IAAI,UAAU,0BAA0B,KAAK,MAAM,IAAI,EAAE;AAAA,UACvE;AAAA,QACF;AAIF,YAAI,yBAAyB,CAAC,SAAS,MAAM,MAAM,aAAa;AAC5D,iBAAO,iBAAiB,IAAI;AAE5B,mBAAS,OAAO;AAAA,UAAC;AACjB,eAAK,SAAS,CAAC;AAEf,uBAAa,SAAS;AAAA,YACpB;AAAA,YACA,aAAa;AAAA,YACb,gBAAgB,SAAS,GAAG;AAC1B,qBAAO,KAAK,YAAY,OAAO,CAAC;AAAA,YAClC;AAAA,YACA,cAAc,CAAC,aAAa,MAAM,EAAE;AAAA,YACpC,kBAAkB;AAAA,YAClB,wBAAwB,yBAAyB,MAAM,MAAM,QAAQ;AAAA,YACrE,oBAAoB;AAAA,UACtB,CAAC;AACD,6BAAmB,MAAM,IAAI;AAAA,QAC/B;AAMF,YAAI,wBAAwB,CAAC,SAAS,cAAc;AAChD,cAAI,OAAO,gBAAgB,OAAO;AAClC,cAAI,WAAc,MAAM;AACpB,8BAAkB,YAAY,uBAAuB,YAAY,OAAO,CAAC;AAAA,UAC7E;AACA,iBAAO;AAAA,QACT;AACF,YAAI,+BAA+B,CAAC,aAAa,MAAM,cAAc;AACjE,cAAI,WAAW,sBAAsB,aAAa,MAAM;AACxD,iBAAO,iBAAiB,IAAI;AAE5B,cAAI,OAAO,SAAS;AAEpB,cAAI,QAAQ,OAAO,OAAO,SAAS,YAAY,WAAW;AAAA,YACxD,OAAO,EAAC,OAAO,UAAS;AAAA,YACxB,aAAa,EAAC,OAAO,oBAAoB,GAAG,SAAS,IAAI,IAAI,IAAI,IAAI,WAAW;AAAA,YAAC,CAAC,EAAC;AAAA,UACrF,CAAC;AACD,eAAK,OAAO,SAAS,IAAI;AACzB,eAAK,IAAI,IAAI;AAAA,QACf;AAGF,YAAI,4BAA4B,CAAC,MAAM,UAAU;AAC7C,kBAAQ,OAAO;AAAA,YACX,KAAK;AAAG,qBAAO,SAAS,SAAS;AAC7B,uBAAO,KAAK,cAAc,EAAE,QAAU,WAAU,CAAE,CAAC;AAAA,cACvD;AAAA,YACA,KAAK;AAAG,qBAAO,SAAS,SAAS;AAC7B,uBAAO,KAAK,cAAc,EAAE,QAAU,WAAU,CAAE,CAAC;AAAA,cACvD;AAAA,YACA;AACI,oBAAM,IAAI,UAAU,wBAAwB,KAAK,MAAM,IAAI,EAAE;AAAA,UACrE;AAAA,QACF;AAGF,YAAI,0BAA0B,CAAC,SAAS,MAAM,SAAS;AACnD,iBAAO,iBAAiB,IAAI;AAC5B,uBAAa,SAAS;AAAA,YACpB;AAAA,YACA,gBAAgB,CAAC,UAAU;AAAA,YAC3B,cAAc,CAAC,aAAa,UAAU;AACpC,kBAAI,OAAO,SAAS,YAAY,OAAO,SAAS,WAAW;AACzD,sBAAM,IAAI,UAAU,kBAAkB,WAAW,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE;AAAA,cAC3E;AAGA,qBAAO;AAAA,YACT;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB,0BAA0B,MAAM,IAAI;AAAA,YAC5D,oBAAoB;AAAA;AAAA,UACtB,CAAC;AAAA,QACH;AAUF,YAAI,6BAA6B,CAAC,MAAM,UAAU,iBAAiB,WAAW,YAAY,IAAI,YAAY;AACtG,cAAI,WAAW,oBAAoB,UAAU,eAAe;AAC5D,iBAAO,iBAAiB,IAAI;AAC5B,iBAAO,gBAAgB,IAAI;AAE3B,uBAAa,wBAAwB,WAAW,UAAU;AAE1D,6BAAmB,MAAM,WAAW;AAClC,kCAAsB,eAAe,IAAI,yBAAyB,QAAQ;AAAA,UAC5E,GAAG,WAAW,CAAC;AAEf,wCAA8B,CAAC,GAAG,UAAU,SAASsB,WAAU;AAC7D,gBAAI,mBAAmB;AAAA,cAACA,UAAS,CAAC;AAAA,cAAsB;AAAA;AAAA,YAAyB,EAAE;AAAA,cAAOA,UAAS,MAAM,CAAC;AAAA;AAAA,YAAqB;AAC/H,gCAAoB,MAAM,qBAAqB,MAAM,kBAAkB,MAA2B,YAAY,IAAI,OAAO,GAAG,WAAW,CAAC;AACxI,mBAAO,CAAC;AAAA,UACV,CAAC;AAAA,QACH;AAMF,YAAI,4BAA4B,CAAC,eAAe,MAAM,MAAM,UAAU,aAAa;AAC/E,iBAAO,iBAAiB,IAAI;AAG5B,cAAI,aAAa,IAAI;AACnB,uBAAW;AAAA,UACb;AAEA,cAAI,eAAe,CAAC,UAAU;AAE9B,cAAI,aAAa,GAAG;AAClB,gBAAI,WAAW,KAAK,IAAE;AACtB,2BAAe,CAAC,UAAW,SAAS,aAAc;AAAA,UACpD;AAEA,cAAI,iBAAkB,KAAK,SAAS,UAAU;AAC9C,cAAI,kBAAkB,CAAC,OAAO,eAAe;AAC3C,gBAAI,OAAO,SAAS,YAAY,OAAO,SAAS,WAAW;AACzD,oBAAM,IAAI,UAAU,mBAAmB,WAAW,KAAK,CAAC,QAAQ,UAAU,EAAE;AAAA,YAC9E;AACA,gBAAI,QAAQ,YAAY,QAAQ,UAAU;AACxC,oBAAM,IAAI,UAAU,qBAAqB,WAAW,KAAK,CAAC,wDAAwD,IAAI,wCAAwC,QAAQ,KAAK,QAAQ,IAAI;AAAA,YACzL;AAAA,UACF;AACA,cAAI;AACJ,cAAI,gBAAgB;AAClB,yBAAa,SAAS,aAAa,OAAO;AACxC,8BAAgB,OAAO,KAAK,IAAI;AAChC,qBAAO,UAAU;AAAA,YACnB;AAAA,UACF,OAAO;AACL,yBAAa,SAAS,aAAa,OAAO;AACxC,8BAAgB,OAAO,KAAK,IAAI;AAGhC,qBAAO;AAAA,YACT;AAAA,UACF;AACA,uBAAa,eAAe;AAAA,YAC1B;AAAA,YACA,gBAAgB;AAAA,YAChB,cAAc;AAAA,YACd,kBAAkB;AAAA,YAClB,wBAAwB,4BAA4B,MAAM,MAAM,aAAa,CAAC;AAAA,YAC9E,oBAAoB;AAAA;AAAA,UACtB,CAAC;AAAA,QACH;AAGF,YAAI,gCAAgC,CAAC,SAAS,eAAe,SAAS;AAClE,cAAI,cAAc;AAAA,YAChB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAEA,cAAI,KAAK,YAAY,aAAa;AAElC,mBAAS,iBAAiB,QAAQ;AAChC,gBAAI,OAAO,QAAU,UAAS,CAAE;AAChC,gBAAI,OAAO,QAAW,SAAS,KAAK,CAAE;AACtC,mBAAO,IAAI,GAAG,MAAM,QAAQ,MAAM,IAAI;AAAA,UACxC;AAEA,iBAAO,iBAAiB,IAAI;AAC5B,uBAAa,SAAS;AAAA,YACpB;AAAA,YACA,gBAAgB;AAAA,YAChB,kBAAkB;AAAA,YAClB,wBAAwB;AAAA,UAC1B,GAAG;AAAA,YACD,8BAA8B;AAAA,UAChC,CAAC;AAAA,QACH;AAIF,YAAI,8BAA8B,CAAC,SACJ,gBACA,MACA,eACA,qBACA,eACA,sBACA,gBACA,gBACA,UACA,qBACA,kBAAkB;AAC7C,iBAAO,iBAAiB,IAAI;AAC5B,0BAAgB,wBAAwB,qBAAqB,aAAa;AAC1E,2BAAiB,wBAAwB,sBAAsB,cAAc;AAC7E,qBAAW,wBAAwB,gBAAgB,QAAQ;AAC3D,0BAAgB,wBAAwB,qBAAqB,aAAa;AAE1E,wCAA8B,CAAC,OAAO,GAAG,CAAC,cAAc,GAAG,SAAS,aAAa;AAC/E,0BAAc,YAAY,CAAC;AAE3B,gBAAI,oBAAoB,IAAI;AAAA,cAAkB;AAAA,cACA,YAAY;AAAA,cACZ;AAAA,cACA;AAAA;AAAA,cAEA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YAAa;AAC3D,mBAAO,CAAC,iBAAiB;AAAA,UAC3B,CAAC;AAAA,QACH;AAMF,YAAI,eAAe,CAAC,KAAK,QAAQ,oBAAoB;AACjD,UAAAvB,QAAO,OAAO,mBAAmB,UAAU,2HAA2H;AACtK,iBAAO,kBAAkB,KAAK,QAAQ,QAAQ,eAAe;AAAA,QAC/D;AAKF,YAAI,+BAA+B,CAAC,SAAS,SAAS;AAClD,iBAAO,iBAAiB,IAAI;AAC5B,cAAI,kBAED,SAAS;AAEZ,uBAAa,SAAS;AAAA,YACpB;AAAA;AAAA;AAAA,YAGA,eAAe,OAAO;AACpB,kBAAI,SAAS,QAAU,SAAQ,CAAE;AACjC,kBAAI,UAAU,QAAQ;AAEtB,kBAAI;AACJ,kBAAI,iBAAiB;AACnB,oBAAI,iBAAiB;AAErB,yBAASC,KAAI,GAAGA,MAAK,QAAQ,EAAEA,IAAG;AAChC,sBAAI,iBAAiB,UAAUA;AAC/B,sBAAIA,MAAK,UAAU,OAAO,cAAc,KAAK,GAAG;AAC9C,wBAAI,UAAU,iBAAiB;AAC/B,wBAAI,gBAAgB,aAAa,gBAAgB,OAAO;AACxD,wBAAI,QAAQ,QAAW;AACrB,4BAAM;AAAA,oBACR,OAAO;AACL,6BAAO,OAAO,aAAa,CAAC;AAC5B,6BAAO;AAAA,oBACT;AACA,qCAAiB,iBAAiB;AAAA,kBACpC;AAAA,gBACF;AAAA,cACF,OAAO;AACL,oBAAI,IAAI,IAAI,MAAM,MAAM;AACxB,yBAASA,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,oBAAEA,EAAC,IAAI,OAAO,aAAa,OAAO,UAAUA,EAAC,CAAC;AAAA,gBAChD;AACA,sBAAM,EAAE,KAAK,EAAE;AAAA,cACjB;AAEA,oBAAM,KAAK;AAEX,qBAAO;AAAA,YACT;AAAA,YACA,aAAa,aAAa,OAAO;AAC/B,kBAAI,iBAAiB,aAAa;AAChC,wBAAQ,IAAI,WAAW,KAAK;AAAA,cAC9B;AAEA,kBAAI;AACJ,kBAAI,sBAAuB,OAAO,SAAS;AAE3C,kBAAI,EAAE,uBAAuB,iBAAiB,cAAc,iBAAiB,qBAAqB,iBAAiB,YAAY;AAC7H,kCAAkB,uCAAuC;AAAA,cAC3D;AACA,kBAAI,mBAAmB,qBAAqB;AAC1C,yBAAS,gBAAgB,KAAK;AAAA,cAChC,OAAO;AACL,yBAAS,MAAM;AAAA,cACjB;AAGA,kBAAI,OAAO,QAAQ,IAAI,SAAS,CAAC;AACjC,kBAAI,MAAM,OAAO;AACjB,sBAAU,QAAO,CAAE,IAAI;AACvB,kBAAI,mBAAmB,qBAAqB;AAC1C,6BAAa,OAAO,KAAK,SAAS,CAAC;AAAA,cACrC,OAAO;AACL,oBAAI,qBAAqB;AACvB,2BAASA,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,wBAAI,WAAW,MAAM,WAAWA,EAAC;AACjC,wBAAI,WAAW,KAAK;AAClB,4BAAM,GAAG;AACT,wCAAkB,wDAAwD;AAAA,oBAC5E;AACA,2BAAO,MAAMA,EAAC,IAAI;AAAA,kBACpB;AAAA,gBACF,OAAO;AACL,2BAASA,KAAI,GAAGA,KAAI,QAAQ,EAAEA,IAAG;AAC/B,2BAAO,MAAMA,EAAC,IAAI,MAAMA,EAAC;AAAA,kBAC3B;AAAA,gBACF;AAAA,cACF;AAEA,kBAAI,gBAAgB,MAAM;AACxB,4BAAY,KAAK,OAAO,IAAI;AAAA,cAC9B;AACA,qBAAO;AAAA,YACT;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB;AAAA,YACxB,mBAAmB,KAAK;AACtB,oBAAM,GAAG;AAAA,YACX;AAAA,UACF,CAAC;AAAA,QACH;AAKF,YAAI,eAAe,OAAO,eAAe,cAAc,IAAI,YAAY,UAAU,IAAI;AAAU;AAC/F,YAAI,gBAAgB,CAAC,KAAK,mBAAmB;AACzC,UAAAD,QAAO,MAAM,KAAK,GAAG,+DAA+D;AACpF,cAAI,SAAS;AAKb,cAAI,MAAM,UAAU;AACpB,cAAI,SAAS,MAAM,iBAAiB;AAGpC,iBAAO,EAAE,OAAO,WAAW,QAAQ,GAAG,EAAG,GAAE;AAC3C,mBAAS,OAAO;AAEhB,cAAI,SAAS,MAAM,MAAM;AACvB,mBAAO,aAAa,OAAO,OAAO,SAAS,KAAK,MAAM,CAAC;AAGzD,cAAI,MAAM;AAKV,mBAASC,KAAI,GAAG,EAAEA,MAAK,iBAAiB,IAAI,EAAEA,IAAG;AAC/C,gBAAI,WAAW,OAAU,MAAMA,KAAE,KAAK,CAAE;AACxC,gBAAI,YAAY,EAAG;AAGnB,mBAAO,OAAO,aAAa,QAAQ;AAAA,UACrC;AAEA,iBAAO;AAAA,QACT;AAEF,YAAI,gBAAgB,CAAC,KAAK,QAAQ,oBAAoB;AAClD,UAAAD,QAAO,SAAS,KAAK,GAAG,+DAA+D;AACvF,UAAAA,QAAO,OAAO,mBAAmB,UAAU,4HAA4H;AAEvK,8BAAoB;AACpB,cAAI,kBAAkB,EAAG,QAAO;AAChC,6BAAmB;AACnB,cAAI,WAAW;AACf,cAAI,kBAAmB,kBAAkB,IAAI,SAAO,IAAM,kBAAkB,IAAK,IAAI;AACrF,mBAASC,KAAI,GAAGA,KAAI,iBAAiB,EAAEA,IAAG;AAExC,gBAAI,WAAW,IAAI,WAAWA,EAAC;AAC/B,mBAAS,UAAS,CAAE,IAAI;AACxB,sBAAU;AAAA,UACZ;AAEA,iBAAS,UAAS,CAAE,IAAI;AACxB,iBAAO,SAAS;AAAA,QAClB;AAEF,YAAI,mBAAmB,CAAC,QAAQ;AAC5B,iBAAO,IAAI,SAAO;AAAA,QACpB;AAEF,YAAI,gBAAgB,CAAC,KAAK,mBAAmB;AACzC,UAAAD,QAAO,MAAM,KAAK,GAAG,gEAAgE;AACrF,cAAIC,KAAI;AAER,cAAI,MAAM;AAGV,iBAAO,EAAEA,MAAK,iBAAiB,IAAI;AACjC,gBAAI,QAAQ,OAAU,MAAMA,KAAE,KAAK,CAAE;AACrC,gBAAI,SAAS,EAAG;AAChB,cAAEA;AAGF,gBAAI,SAAS,OAAS;AACpB,kBAAI,KAAK,QAAQ;AACjB,qBAAO,OAAO,aAAa,QAAU,MAAM,IAAK,QAAU,KAAK,IAAM;AAAA,YACvE,OAAO;AACL,qBAAO,OAAO,aAAa,KAAK;AAAA,YAClC;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,gBAAgB,CAAC,KAAK,QAAQ,oBAAoB;AAClD,UAAAD,QAAO,SAAS,KAAK,GAAG,gEAAgE;AACxF,UAAAA,QAAO,OAAO,mBAAmB,UAAU,4HAA4H;AAEvK,8BAAoB;AACpB,cAAI,kBAAkB,EAAG,QAAO;AAChC,cAAI,WAAW;AACf,cAAI,SAAS,WAAW,kBAAkB;AAC1C,mBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AAGnC,gBAAI,WAAW,IAAI,WAAWA,EAAC;AAC/B,gBAAI,YAAY,SAAU,YAAY,OAAQ;AAC5C,kBAAI,iBAAiB,IAAI,WAAW,EAAEA,EAAC;AACvC,yBAAW,UAAY,WAAW,SAAU,MAAO,iBAAiB;AAAA,YACtE;AACA,mBAAS,UAAS,CAAE,IAAI;AACxB,sBAAU;AACV,gBAAI,SAAS,IAAI,OAAQ;AAAA,UAC3B;AAEA,iBAAS,UAAS,CAAE,IAAI;AACxB,iBAAO,SAAS;AAAA,QAClB;AAEF,YAAI,mBAAmB,CAAC,QAAQ;AAC5B,cAAI,MAAM;AACV,mBAASA,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AAGnC,gBAAI,WAAW,IAAI,WAAWA,EAAC;AAC/B,gBAAI,YAAY,SAAU,YAAY,MAAQ,GAAEA;AAChD,mBAAO;AAAA,UACT;AAEA,iBAAO;AAAA,QACT;AACF,YAAI,gCAAgC,CAAC,SAAS,UAAU,SAAS;AAC7D,iBAAO,iBAAiB,IAAI;AAC5B,cAAI,cAAc,cAAc,SAAS,gBAAgB;AACzD,cAAI,aAAa,GAAG;AAClB,2BAAe;AACf,2BAAe;AACf,6BAAiB;AACjB,sBAAU,MAAM;AAChB,oBAAQ;AAAA,UACV,WAAW,aAAa,GAAG;AACzB,2BAAe;AACf,2BAAe;AACf,6BAAiB;AACjB,sBAAU,MAAM;AAChB,oBAAQ;AAAA,UACV;AACA,uBAAa,SAAS;AAAA,YACpB;AAAA,YACA,gBAAgB,CAAC,UAAU;AAEzB,kBAAI,SAAS,QAAU,SAAQ,CAAE;AACjC,kBAAIuB,QAAO,QAAQ;AACnB,kBAAI;AAEJ,kBAAI,iBAAiB,QAAQ;AAE7B,uBAASvB,KAAI,GAAGA,MAAK,QAAQ,EAAEA,IAAG;AAChC,oBAAI,iBAAiB,QAAQ,IAAIA,KAAI;AACrC,oBAAIA,MAAK,UAAUuB,MAAK,kBAAkB,KAAK,KAAK,GAAG;AACrD,sBAAI,eAAe,iBAAiB;AACpC,sBAAI,gBAAgB,aAAa,gBAAgB,YAAY;AAC7D,sBAAI,QAAQ,QAAW;AACrB,0BAAM;AAAA,kBACR,OAAO;AACL,2BAAO,OAAO,aAAa,CAAC;AAC5B,2BAAO;AAAA,kBACT;AACA,mCAAiB,iBAAiB;AAAA,gBACpC;AAAA,cACF;AAEA,oBAAM,KAAK;AAEX,qBAAO;AAAA,YACT;AAAA,YACA,cAAc,CAAC,aAAa,UAAU;AACpC,kBAAI,EAAE,OAAO,SAAS,WAAW;AAC/B,kCAAkB,6CAA6C,IAAI,EAAE;AAAA,cACvE;AAGA,kBAAI,SAAS,eAAe,KAAK;AACjC,kBAAI,MAAM,QAAQ,IAAI,SAAS,QAAQ;AACvC,sBAAU,OAAM,CAAE,IAAI,UAAU;AAEhC,2BAAa,OAAO,MAAM,GAAG,SAAS,QAAQ;AAE9C,kBAAI,gBAAgB,MAAM;AACxB,4BAAY,KAAK,OAAO,GAAG;AAAA,cAC7B;AACA,qBAAO;AAAA,YACT;AAAA,YACA,kBAAkB;AAAA,YAClB,wBAAwB;AAAA,YACxB,mBAAmB,KAAK;AACtB,oBAAM,GAAG;AAAA,YACX;AAAA,UACF,CAAC;AAAA,QACH;AAIF,YAAI,gCAAgC,CAChC,SACA,MACA,sBACA,gBACA,qBACA,kBACG;AACH,6BAAmB,OAAO,IAAI;AAAA,YAC5B,MAAM,iBAAiB,IAAI;AAAA,YAC3B,gBAAgB,wBAAwB,sBAAsB,cAAc;AAAA,YAC5E,eAAe,wBAAwB,qBAAqB,aAAa;AAAA,YACzE,UAAU,CAAC;AAAA,UACb;AAAA,QACF;AAGF,YAAI,wCAAwC,CACxC,cACA,kBACA,iBACAV,SACA,eACA,oBACA,iBACAK,SACA,kBACG;AACH,6BAAmB,YAAY,EAAE,SAAS,KAAK;AAAA,YAC7C;AAAA,YACA,QAAQ,wBAAwB,iBAAiBL,OAAM;AAAA,YACvD;AAAA,YACA;AAAA,YACA,QAAQ,wBAAwB,iBAAiBK,OAAM;AAAA,YACvD;AAAA,UACF,CAAC;AAAA,QACH;AAIF,YAAI,iCAAiC,CACjC,SACA,MACA,sBACA,gBACA,qBACA,kBACG;AACH,8BAAoB,OAAO,IAAI;AAAA,YAC7B,MAAM,iBAAiB,IAAI;AAAA,YAC3B,gBAAgB,wBAAwB,sBAAsB,cAAc;AAAA,YAC5E,eAAe,wBAAwB,qBAAqB,aAAa;AAAA,YACzE,QAAQ,CAAC;AAAA,UACX;AAAA,QACF;AAIF,YAAI,uCAAuC,CACvC,YACA,WACA,kBACA,iBACAL,SACA,eACA,oBACA,iBACAK,SACA,kBACG;AACH,8BAAoB,UAAU,EAAE,OAAO,KAAK;AAAA,YAC1C,WAAW,iBAAiB,SAAS;AAAA,YACrC;AAAA,YACA,QAAQ,wBAAwB,iBAAiBL,OAAM;AAAA,YACvD;AAAA,YACA;AAAA,YACA,QAAQ,wBAAwB,iBAAiBK,OAAM;AAAA,YACvD;AAAA,UACF,CAAC;AAAA,QACH;AAGF,YAAI,yBAAyB,CAAC,SAAS,SAAS;AAC5C,iBAAO,iBAAiB,IAAI;AAC5B,uBAAa,SAAS;AAAA,YACpB,QAAQ;AAAA;AAAA,YACR;AAAA,YACA,kBAAkB;AAAA,YAClB,gBAAgB,MAAM;AAAA;AAAA,YAEtB,cAAc,CAAC,aAAa,MAAM;AAAA,UACpC,CAAC;AAAA,QACH;AAEF,YAAI,iBAAiB;AACrB,YAAI,oCAAoC,MAAM;AAE9C,YAAI,6BAA6B,MAAM;AACnC,gBAAM;AAAA,QACR;AAIF,YAAI,oBAAoB,CAAC,YAAY,gBAAgB,WAAW;AAC5D,cAAI,cAAc,CAAC;AACnB,cAAI,SAAS,WAAW,YAAY,EAAE,aAAa,MAAM;AACzD,cAAI,YAAY,QAAQ;AAEtB,oBAAU,kBAAiB,CAAE,IAAI,MAAM,SAAS,WAAW;AAAA,UAC7D;AACA,iBAAO;AAAA,QACT;AACF,YAAI,aAAa,CAAC,QAAQ,YAAY,mBAAmB;AACrD,mBAAS,MAAM,QAAQ,MAAM;AAC7B,uBAAa,sBAAsB,YAAY,WAAW;AAC1D,iBAAO,kBAAkB,YAAY,gBAAgB,MAAM;AAAA,QAC7D;AAEF,YAAI,sBAAsB,CAAC;AAE3B,YAAI,eAAe,CAAC,QAAQ,QAAQ,gBAAgB,SAAS;AACzD,mBAAS,oBAAoB,MAAM;AACnC,mBAAS,MAAM,QAAQ,MAAM;AAC7B,iBAAO,OAAO,MAAM,QAAQ,gBAAgB,IAAI;AAAA,QAClD;AAEF,YAAI,gBAAgB,CACpB;AAEA,YAAI,oBAAoB,CAAC,YAAY;AACjC,cAAI,SAAS,cAAc,OAAO;AAClC,cAAI,WAAW,QAAW;AACxB,mBAAO,iBAAiB,OAAO;AAAA,UACjC;AACA,iBAAO;AAAA,QACT;AAGF,YAAI,sBAAsB,CAAC,QAAQ,WAAW,YAAY,gBAAgB,SAAS;AAC/E,mBAAS,oBAAoB,MAAM;AACnC,sBAAY,MAAM,QAAQ,SAAS;AACnC,uBAAa,kBAAkB,UAAU;AACzC,iBAAO,OAAO,WAAW,UAAU,UAAU,GAAG,gBAAgB,IAAI;AAAA,QACtE;AAGF,YAAI,iBAAiB,CAAC,OAAO,WAAW;AACpC,kBAAQ,MAAM,QAAQ,KAAK;AAC3B,mBAAS,MAAM,QAAQ,MAAM;AAC7B,iBAAO,SAAS;AAAA,QAClB;AAIF,YAAI,mBAAmB,MAAM;AACzB,cAAI,OAAO,cAAc,UAAU;AACjC,mBAAO;AAAA,UACT;AACA,mBAAS,WAAW,KAAK;AACvB,gBAAI,qBAAqB,IAAI;AAC7B,gBAAI,UAAU,OAAO,uBAAuB,YAAY,IAAI,qBAAqB,KAAK;AACtF,gBAAI,CAAC,SAAS;AACZ,qBAAO,IAAI,qBAAqB;AAAA,YAClC;AACA,mBAAO;AAAA,UACT;AACA,cAAI,OAAO,uBAAuB,UAAU;AAC1C,mBAAO;AAAA,UACT;AACA,cAAI,OAAO,UAAU,YAAY,WAAW,MAAM,GAAG;AACnD,kCAAsB;AAAA,UACxB,WAAW,OAAO,QAAQ,YAAY,WAAW,IAAI,GAAG;AACtD,kCAAsB;AAAA,UACxB;AACA,cAAI,OAAO,uBAAuB,UAAU;AAC1C,mBAAO;AAAA,UACT;AACA,gBAAM,MAAM,8BAA8B;AAAA,QAC5C;AACF,YAAI,qBAAqB,CAAC,SAAS;AAC/B,cAAI,SAAO,GAAG;AACZ,mBAAO,MAAM,SAAS,iBAAiB,CAAC;AAAA,UAC1C,OAAO;AACL,mBAAO,kBAAkB,IAAI;AAC7B,mBAAO,MAAM,SAAS,iBAAiB,EAAE,IAAI,CAAC;AAAA,UAChD;AAAA,QACF;AAEF,YAAI,wBAAwB,CAAC,WAAW;AACpC,cAAI,KAAK,oBAAoB;AAC7B,8BAAoB,KAAK,MAAM;AAC/B,iBAAO;AAAA,QACT;AAEF,YAAI,oBAAoB,CAAC,UAAU,aAAa;AAC5C,cAAI,IAAI,IAAI,MAAM,QAAQ;AAC1B,mBAASlB,KAAI,GAAGA,KAAI,UAAU,EAAEA,IAAG;AACjC,cAAEA,EAAC,IAAI;AAAA,cAAsB,QAAW,WAAWA,KAAI,KAAK,CAAE;AAAA,cACjC,eAAeA;AAAA,YAAC;AAAA,UAC/C;AACA,iBAAO;AAAA,QACT;AAGF,YAAI,mBAAmB,QAAQ;AAE/B,YAAI,4BAA4B,CAAC,UAAU,UAAU,SAAS;AAC1D,cAAI,QAAQ,kBAAkB,UAAU,QAAQ;AAChD,cAAI,UAAU,MAAM,MAAM;AAC1B;AAEA,cAAI,OAAO,IAAI,MAAM,QAAQ;AAC7B,cAAI,kBAAkB,CAAC,KAAK,MAAM,gBAAgB,SAAS;AACzD,gBAAI,SAAS;AACb,qBAASA,KAAI,GAAGA,KAAI,UAAU,EAAEA,IAAG;AACjC,mBAAKA,EAAC,IAAI,MAAMA,EAAC,EAAE,sBAAsB,EAAE,OAAO,MAAM;AACxD,wBAAU,MAAMA,EAAC,EAAE,gBAAgB;AAAA,YACrC;AACA,gBAAI,KAAK;AAAA,YAA2B,IAAI,iBAAiB,MAAM,IAAI,IAAI,KAAK,MAAM,KAAK,IAAI;AAC3F,mBAAO,kBAAkB,SAAS,gBAAgB,EAAE;AAAA,UACtD;AACA,cAAI,eAAe,iBAAiB,MAAM,IAAI,OAAK,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,QAAQ,QAAQ,IAAI;AACzF,iBAAO,sBAAsB,oBAAoB,cAAc,eAAe,CAAC;AAAA,QACjF;AAEF,YAAI,uBAAuB,CAAC,QAAQ,QAAQ;AACxC,mBAAS,MAAM,QAAQ,MAAM;AAC7B,gBAAM,MAAM,QAAQ,GAAG;AACvB,iBAAO,MAAM,SAAS,OAAO,GAAG,CAAC;AAAA,QACnC;AAEF,YAAI,iBAAiB,CAAC,WAAW;AAC7B,cAAI,SAAS,GAAG;AACd,0BAAc,IAAI,MAAM,EAAE,YAAY;AAAA,UACxC;AAAA,QACF;AAEF,YAAI,qBAAqB,CAACwB,SAAQ,gBAAgB;AAC9C,UAAAA,UAAS,MAAM,QAAQA,OAAM;AAC7B,wBAAc,MAAM,QAAQ,WAAW;AACvC,iBAAOA,mBAAkB;AAAA,QAC3B;AAEF,YAAI,oBAAoB,CAAC,WAAW;AAChC,mBAAS,MAAM,QAAQ,MAAM;AAC7B,iBAAO,OAAO,UAAU;AAAA,QAC1B;AAEF,YAAI,oBAAoB,CAAC,WAAW;AAChC,mBAAS,MAAM,QAAQ,MAAM;AAC7B,iBAAO,OAAO,UAAU;AAAA,QAC1B;AAEF,YAAI,oBAAoB,MAAM,MAAM,SAAS,CAAC,CAAC;AAG/C,YAAI,sBAAsB,CAAC,MAAM,MAAM,SAAS,kBAAkB,CAAC,CAAC;AAEpE,YAAI,qBAAqB,MAAM,MAAM,SAAS,CAAC,CAAC;AAIhD,YAAI,0BAA0B,CAAC,WAAW;AACtC,cAAI,cAAc,MAAM,QAAQ,MAAM;AACtC,yBAAe,WAAW;AAC1B,yBAAe,MAAM;AAAA,QACvB;AAEF,YAAI,uBAAuB,CAAC,QAAQ,KAAK,UAAU;AAC/C,mBAAS,MAAM,QAAQ,MAAM;AAC7B,gBAAM,MAAM,QAAQ,GAAG;AACvB,kBAAQ,MAAM,QAAQ,KAAK;AAC3B,iBAAO,GAAG,IAAI;AAAA,QAChB;AAGF,YAAI,qBAAqB,CAACb,OAAM,QAAQ;AACpC,UAAAA,QAAO,sBAAsBA,OAAM,mBAAmB;AACtD,cAAI,IAAIA,MAAK,sBAAsB,EAAE,GAAG;AACxC,iBAAO,MAAM,SAAS,CAAC;AAAA,QACzB;AAEF,YAAI,gBAAgB,CAACa,YAAW;AAC5B,UAAAA,UAAS,MAAM,QAAQA,OAAM;AAC7B,gBAAMA;AAAA,QACR;AAEF,YAAI,iBAAiB,CAAC,WAAW;AAC7B,mBAAS,MAAM,QAAQ,MAAM;AAC7B,iBAAO,MAAM,SAAS,OAAO,MAAM;AAAA,QACrC;AAEF,YAAI,YAAY;AAEhB,YAAI,YAAY;AAChB,YAAI,qBAAqB,CAAC,QAAS,MAAM,aAAa,MAAM,YAAa,MAAM,OAAO,GAAG;AACzF,iBAAS,YAAY,MAAM,OAAO;AAChC,iBAAO,mBAAmB,IAAI;AAAE;AAG9B,cAAI,OAAO,IAAI,KAAK,OAAO,GAAI;AAC/B,iBAAS,SAAQ,CAAE,IAAI,KAAK,cAAc;AAC1C,iBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,cAAc;AAChD,iBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,YAAY;AAC9C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,WAAW;AAC9C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,YAAY;AAC/C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,eAAe,IAAE;AACpD,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,UAAU;AAC7C,cAAI,QAAQ,KAAK,IAAI,KAAK,eAAe,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5D,cAAI,QAAS,KAAK,QAAQ,IAAI,UAAU,MAAO,KAAK,KAAK,MAAK;AAC9D,iBAAU,QAAQ,MAAM,CAAE,IAAI;AAChC;AAAA,QACF;AAEA,YAAI,aAAa,CAAC,SAAS,OAAK,MAAM,MAAM,OAAK,QAAQ,KAAK,OAAK,QAAQ;AAE3E,YAAI,6BAA6B,CAAC,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG;AAE5E,YAAI,gCAAgC,CAAC,GAAE,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG;AAC/E,YAAI,eAAe,CAAC,SAAS;AACzB,cAAI,OAAO,WAAW,KAAK,YAAY,CAAC;AACxC,cAAI,sBAAuB,OAAO,6BAA6B;AAC/D,cAAI,OAAO,oBAAoB,KAAK,SAAS,CAAC,IAAI,KAAK,QAAQ,IAAI;AAEnE,iBAAO;AAAA,QACT;AAEF,iBAAS,eAAe,MAAM,OAAO;AACnC,iBAAO,mBAAmB,IAAI;AAAE;AAG9B,cAAI,OAAO,IAAI,KAAK,OAAK,GAAI;AAC7B,iBAAS,SAAQ,CAAE,IAAI,KAAK,WAAW;AACvC,iBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,WAAW;AAC7C,iBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,SAAS;AAC3C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,QAAQ;AAC3C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,SAAS;AAC5C,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,YAAY,IAAE;AACjD,iBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,OAAO;AAE1C,cAAI,OAAO,aAAa,IAAI,IAAE;AAC9B,iBAAU,QAAQ,MAAM,CAAE,IAAI;AAC9B,iBAAU,QAAQ,MAAM,CAAE,IAAI,EAAE,KAAK,kBAAkB,IAAI;AAG3D,cAAI,QAAQ,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC;AAC7C,cAAI,eAAe,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC,EAAE,kBAAkB;AACxE,cAAI,eAAe,MAAM,kBAAkB;AAC3C,cAAI,OAAO,gBAAgB,gBAAgB,KAAK,kBAAkB,KAAK,KAAK,IAAI,cAAc,YAAY,KAAG;AAC7G,iBAAU,QAAQ,MAAM,CAAE,IAAI;AAChC;AAAA,QACF;AAGA,YAAI,cAAc,SAAS,OAAO;AAEhC,cAAI,OAAO,MAAM;AACf,gBAAI,OAAO,IAAI;AAAA,cAAK,OAAU,QAAQ,MAAM,CAAE,IAAI;AAAA,cAC9B,OAAU,QAAQ,MAAM,CAAE;AAAA,cAC1B,OAAU,QAAQ,MAAM,CAAE;AAAA,cAC1B,OAAU,QAAQ,KAAK,CAAE;AAAA,cACzB,OAAU,QAAQ,KAAK,CAAE;AAAA,cACzB,OAAS,SAAQ,CAAE;AAAA,cACnB;AAAA,YAAC;AAKrB,gBAAI,MAAM,OAAU,QAAQ,MAAM,CAAE;AACpC,gBAAI,gBAAgB,KAAK,kBAAkB;AAC3C,gBAAI,QAAQ,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC;AAC7C,gBAAI,eAAe,IAAI,KAAK,KAAK,YAAY,GAAG,GAAG,CAAC,EAAE,kBAAkB;AACxE,gBAAI,eAAe,MAAM,kBAAkB;AAC3C,gBAAI,YAAY,KAAK,IAAI,cAAc,YAAY;AACnD,gBAAI,MAAM,GAAG;AAEX,qBAAU,QAAQ,MAAM,CAAE,IAAI,OAAO,gBAAgB,gBAAgB,aAAa,aAAa;AAAA,YACjG,WAAY,MAAM,MAAO,aAAa,gBAAgB;AACpD,kBAAI,eAAe,KAAK,IAAI,cAAc,YAAY;AACtD,kBAAI,aAAa,MAAM,IAAI,YAAY;AAEvC,mBAAK,QAAQ,KAAK,QAAQ,KAAK,aAAa,iBAAe,GAAK;AAAA,YAClE;AAEA,mBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,OAAO;AAC1C,gBAAI,OAAO,aAAa,IAAI,IAAE;AAC9B,mBAAU,QAAQ,MAAM,CAAE,IAAI;AAE9B,mBAAS,SAAQ,CAAE,IAAI,KAAK,WAAW;AACvC,mBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,WAAW;AAC7C,mBAAU,QAAQ,KAAK,CAAE,IAAI,KAAK,SAAS;AAC3C,mBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,QAAQ;AAC3C,mBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,SAAS;AAC5C,mBAAU,QAAQ,MAAM,CAAE,IAAI,KAAK,QAAQ;AAE3C,gBAAI,SAAS,KAAK,QAAQ;AAC1B,gBAAI,MAAM,MAAM,GAAG;AACjB,qBAAO;AAAA,YACT;AAEA,mBAAO,SAAS;AAAA,UACjB,GAAG;AACJ,iBAAO,OAAO,GAAG;AAAA,QACnB;AAOA,iBAAS,UAAU,KAAK,MAAM,OAAO,IAAI,QAAQ,WAAW,MAAM;AAChE,mBAAS,mBAAmB,MAAM;AAAE;AAGtC,cAAI;AAEA,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,GAAG,KAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK;AAClD,gBAAI,MAAM,IAAI;AACd,mBAAS,aAAY,CAAE,IAAI,IAAI;AAC/B,oBAAU,QAAO,CAAE,IAAI;AACvB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AACA;AAAA,QACA;AAGA,iBAAS,YAAY,MAAM,KAAK,MAAM,OAAO,IAAI,QAAQ;AACvD,mBAAS,mBAAmB,MAAM;AAAE;AAGtC,cAAI;AAEA,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,OAAO,GAAG;AACZ,uBAAS,QAAQ,MAAM,QAAQ,KAAK,OAAO,MAAM;AAAA,YACnD;AACA,eAAG,OAAO,MAAM;AAAA,UAElB,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,CAAC,EAAE;AAAA,UACZ;AACA;AAAA,QACA;AAIA,YAAI,kBAAkB,CAAC,QAAQ;AAC3B,cAAI,OAAO,gBAAgB,GAAG,IAAI;AAClC,cAAI,MAAM,QAAQ,IAAI;AACtB,cAAI,IAAK,cAAa,KAAK,KAAK,IAAI;AACpC,iBAAO;AAAA,QACT;AACF,YAAI,aAAa,CAAC,UAAU,UAAU,WAAW;AAE7C,cAAI,eAAc,oBAAI,KAAK,GAAE,YAAY;AACzC,cAAI,SAAS,IAAI,KAAK,aAAa,GAAG,CAAC;AACvC,cAAI,SAAS,IAAI,KAAK,aAAa,GAAG,CAAC;AACvC,cAAI,eAAe,OAAO,kBAAkB;AAC5C,cAAI,eAAe,OAAO,kBAAkB;AAK5C,cAAI,oBAAoB,KAAK,IAAI,cAAc,YAAY;AAO3D,kBAAU,YAAW,CAAE,IAAI,oBAAoB;AAE/C,iBAAS,YAAW,CAAE,IAAI,OAAO,gBAAgB,YAAY;AAE7D,mBAAS,YAAY,MAAM;AACzB,gBAAI,QAAQ,KAAK,aAAa,EAAE,MAAM,mBAAmB;AACzD,mBAAO,QAAQ,MAAM,CAAC,IAAI;AAAA,UAC5B;AAAC;AACD,cAAI,aAAa,YAAY,MAAM;AACnC,cAAI,aAAa,YAAY,MAAM;AACnC,cAAI,gBAAgB,gBAAgB,UAAU;AAC9C,cAAI,gBAAgB,gBAAgB,UAAU;AAC9C,cAAI,eAAe,cAAc;AAE/B,oBAAU,UAAS,CAAE,IAAI;AACzB,oBAAW,SAAS,KAAK,CAAE,IAAI;AAAA,UACjC,OAAO;AACL,oBAAU,UAAS,CAAE,IAAI;AACzB,oBAAW,SAAS,KAAK,CAAE,IAAI;AAAA,UACjC;AAAA,QACF;AAEF,YAAI,SAAS,MAAM;AACf,gBAAM,4BAA4B;AAAA,QACpC;AAEF,YAAI,mCAAmC,CAAC,MAAM,UAAU;AACpD,kBAAQ,SAAS,aAAa;AAC9B,kBAAQ,SAAS,cAAc;AAE/B,cAAI,CAAC,QAAQ,SAAS,MAAM;AAC1B,gBAAI,4JAA4J;AAChK,mBAAO;AAAA,UACT;AAEA,cAAI,CAAC,QAAQ,SAAS,SAAS;AAE7B,oBAAQ,SAAS,UAAU;AAAA,UAC7B;AACA,cAAI,QAAQ,GAAG;AACb,oBAAQ,SAAS,YAAY,SAAS,wCAAwC;AAC5E,kBAAI,oBAAoB,KAAK,IAAI,GAAG,QAAQ,SAAS,gBAAgB,QAAQ,oBAAoB,CAAC,IAAE;AACpG,yBAAW,QAAQ,SAAS,QAAQ,iBAAiB;AAAA,YACvD;AACA,oBAAQ,SAAS,SAAS;AAAA,UAC5B,WAAW,QAAQ,GAAG;AACpB,oBAAQ,SAAS,YAAY,SAAS,iCAAiC;AACrE,sBAAQ,sBAAsB,QAAQ,SAAS,MAAM;AAAA,YACvD;AACA,oBAAQ,SAAS,SAAS;AAAA,UAC5B,WAAW,QAAQ,GAAG;AACpB,gBAAI,OAAO,QAAQ,gBAAgB,aAAa;AAC9C,kBAAI,OAAO,gBAAgB,aAAa;AAEtC,oBAAI,gBAAgB,CAAC;AACrB,oBAAI,8BAA8B;AAElC,oBAAI,sCAAsC,CAAC,UAAU;AAGnD,sBAAI,MAAM,SAAS,+BAA+B,MAAM,KAAK,WAAW,6BAA6B;AACnG,0BAAM,gBAAgB;AACtB,kCAAc,MAAM,EAAE;AAAA,kBACxB;AAAA,gBACF;AACA,iCAAiB,WAAW,qCAAqC,IAAI;AACrE,wBAAQ;AAAA,gBAAmE,SAAS,8BAA8B,MAAM;AACtH,gCAAc,KAAK,IAAI;AACvB,sBAAI,uBAAuB;AACzB,wBAAI,OAAO,eAAe,MAAM,OAAW,QAAO,eAAe,IAAI,CAAC;AACtE,2BAAO,eAAe,EAAE,KAAK,IAAI;AACjC,gCAAY,EAAC,QAAQ,4BAA2B,CAAC;AAAA,kBACnD,MAAO,aAAY,6BAA6B,GAAG;AAAA,gBACrD;AAAA,cACF,OAAO;AACL,wBAAQ,eAAe;AAAA,cACzB;AAAA,YACF;AACA,oBAAQ,SAAS,YAAY,SAAS,0CAA0C;AAC9E,sBAAQ,aAAa,QAAQ,SAAS,MAAM;AAAA,YAC9C;AACA,oBAAQ,SAAS,SAAS;AAAA,UAC5B;AACA,iBAAO;AAAA,QACT;AAEF,YAAI;AAIA,8BAAsB,MAAM,YAAY,IAAI;AAChD;AAOA,YAAI,cAAc,CAAC,sBAAsB,KAAK,sBAAsB,KAAK,gBAAgB;AACrF,UAAAzB,QAAO,CAAC,QAAQ,SAAS,MAAM,6LAA6L;AAE5N,kBAAQ,SAAS,OAAO;AACxB,kBAAQ,SAAS,MAAM;AAWvB,cAAI,kBAAkB,MAAM,QAAQ,SAAS,0BAA0B;AACvE,mBAAS,iBAAiB;AACxB,gBAAI,iBAAiB,QAAQ,SAAS,0BAA0B;AAE9D,qBAAO;AAAA,YACT;AACA,mBAAO;AAAA,UACT;AAOA,kBAAQ,SAAS,UAAU;AAC3B,kBAAQ,SAAS,SAAS,SAAS,0BAA0B;AAC3D,gBAAI,MAAO;AACX,gBAAI,QAAQ,SAAS,MAAM,SAAS,GAAG;AACrC,kBAAI,QAAQ,KAAK,IAAI;AACrB,kBAAI,UAAU,QAAQ,SAAS,MAAM,MAAM;AAC3C,sBAAQ,KAAK,QAAQ,GAAG;AACxB,kBAAI,QAAQ,SAAS,mBAAmB;AACtC,oBAAI,YAAY,QAAQ,SAAS;AACjC,oBAAI,OAAO,YAAU,KAAK,IAAI,YAAU,IAAI,KAAK,MAAM,SAAS;AAChE,oBAAI,QAAQ,SAAS;AACnB,0BAAQ,SAAS,oBAAoB;AAAA,gBACvC,OAAO;AAEL,yBAAO,OAAO;AACd,0BAAQ,SAAS,qBAAqB,IAAE,YAAY,QAAM;AAAA,gBAC5D;AAAA,cACF;AACA,sBAAQ,SAAS,aAAa;AAG9B,kBAAI,CAAC,eAAe,EAAG;AAEvB,yBAAW,QAAQ,SAAS,QAAQ,CAAC;AACrC;AAAA,YACF;AAGA,gBAAI,CAAC,eAAe,EAAG;AAGvB,oBAAQ,SAAS,qBAAqB,QAAQ,SAAS,qBAAqB,IAAI;AAChF,gBAAI,QAAQ,SAAS,cAAc,KAAK,QAAQ,SAAS,cAAc,KAAK,QAAQ,SAAS,qBAAqB,QAAQ,SAAS,eAAe,GAAG;AAEnJ,sBAAQ,SAAS,UAAU;AAC3B;AAAA,YACF,WAAW,QAAQ,SAAS,cAAc,GAAG;AAC3C,sBAAQ,SAAS,gBAAgB,oBAAoB;AAAA,YACvD;AAKA,gBAAI,QAAQ,SAAS,WAAW,aAAa,OAAO,KAAK;AACvD,uBAAS,0OAA0O;AACnP,sBAAQ,SAAS,SAAS;AAAA,YAC5B;AAEA,oBAAQ,SAAS,QAAQ,oBAAoB;AAE7C,6BAAiB;AAGjB,gBAAI,CAAC,eAAe,EAAG;AAMvB,gBAAI,OAAO,OAAO,SAAU,KAAI,OAAO,oBAAoB;AAE3D,oBAAQ,SAAS,UAAU;AAAA,UAC7B;AAEA,cAAI,CAAC,aAAa;AAChB,gBAAI,OAAO,MAAM,GAAG;AAClB,+CAAiC,GAAG,MAAS,GAAG;AAAA,YAClD,OAAO;AAEL,+CAAiC,GAAG,CAAC;AAAA,YACvC;AAEA,oBAAQ,SAAS,UAAU;AAAA,UAC7B;AAEA,cAAI,sBAAsB;AACxB,kBAAM;AAAA,UACR;AAAA,QACF;AAEF,YAAI,kBAAkB,CAAC,MAAM;AAMzB,cAAI,aAAa,cAAc,KAAK,UAAU;AAC5C,mBAAO;AAAA,UACT;AACA,2BAAiB;AACjB,cAAI,aAAa,YAAY,cAAc;AACzC,gBAAI,8BAA8B,KAAK,GAAG;AACxC,kBAAI,wFAAwF;AAAA,YAC9F;AAAA,UACF;AACA,gBAAM,GAAG,CAAC;AAAA,QACZ;AAGF,YAAI,0BAA0B;AAC9B,YAAI,mBAAmB,MAAM,iBAAiB,0BAA0B;AACxE,YAAI,aAAa,CAAC,SAAS;AACvB,uBAAa;AACb,cAAI,CAAC,iBAAiB,GAAG;AACvB,mBAAO,QAAQ,IAAI,IAAI;AACvB,oBAAQ;AAAA,UACV;AACA,gBAAM,MAAM,IAAI,WAAW,IAAI,CAAC;AAAA,QAClC;AAIF,YAAI,SAAS,CAAC,QAAQ,aAAa;AAC/B,uBAAa;AAEb,gCAAsB;AAGtB,cAAI,iBAAiB,KAAK,CAAC,UAAU;AACnC,gBAAI,MAAM,gCAAgC,MAAM,6CAA6C,uBAAuB;AACpH,+BAAmB,GAAG;AACtB,gBAAI,GAAG;AAAA,UACT;AAEA,qBAAW,MAAM;AAAA,QACnB;AACF,YAAI,QAAQ;AAGZ,YAAI,YAAY,MAAM;AAClB,cAAI,CAAC,iBAAiB,GAAG;AACvB,gBAAI;AACF,oBAAM,UAAU;AAAA,YAClB,SAAS,GAAG;AACV,8BAAgB,CAAC;AAAA,YACnB;AAAA,UACF;AAAA,QACF;AACF,YAAI,mBAAmB,CAAC,SAAS;AAC7B,cAAI,OAAO;AACT,gBAAI,iFAAiF;AACrF;AAAA,UACF;AACA,cAAI;AACF,iBAAK;AACL,sBAAU;AAAA,UACZ,SAAS,GAAG;AACV,4BAAgB,CAAC;AAAA,UACnB;AAAA,QACF;AAGF,YAAI,iBAAiB,CAAC,MAAM,YAAY;AAEpC,iBAAO,WAAW,MAAM;AAEtB,6BAAiB,IAAI;AAAA,UACvB,GAAG,OAAO;AAAA,QACZ;AAKF,YAAI,UAAU;AAAA,UACd,UAAS;AAAA,YACT,SAAQ;AAAA,YACR,WAAU;AAAA,YACV,QAAO;AAAA,YACP,0BAAyB;AAAA,YACzB,MAAK;AAAA,YACL,KAAI;AAAA,YACJ,YAAW;AAAA,YACX,aAAY;AAAA,YACZ,oBAAmB;AAAA,YACnB,OAAM,CAAC;AAAA,YACP,QAAQ;AACA,sBAAQ,SAAS,YAAY;AAE7B,sBAAQ,SAAS;AAAA,YACnB;AAAA,YACN,SAAS;AACD,sBAAQ,SAAS;AACjB,kBAAI,aAAa,QAAQ,SAAS;AAClC,kBAAI,cAAc,QAAQ,SAAS;AACnC,kBAAI,OAAO,QAAQ,SAAS;AAC5B,sBAAQ,SAAS,OAAO;AAExB,0BAAY,MAAM,GAAG,OAAO,QAAQ,SAAS,KAAK,IAAI;AACtD,+CAAiC,YAAY,WAAW;AACxD,sBAAQ,SAAS,UAAU;AAAA,YAC7B;AAAA,YACN,eAAe;AACP,kBAAI,OAAO,WAAW,GAAG;AACvB,oBAAI,UAAU,OAAO,eAAe,KAAK;AACzC,oBAAI,YAAY,QAAQ,SAAS;AACjC,oBAAI,WAAW,QAAQ,SAAS;AAChC,oBAAI,WAAW;AACb,sBAAI,YAAY,UAAU;AACxB,2BAAO,WAAW,EAAE,UAAU,QAAQ,WAAW,aAAa,MAAM,WAAW,GAAG;AAAA,kBACpF,OAAO;AACL,2BAAO,WAAW,EAAE,OAAO;AAAA,kBAC7B;AAAA,gBACF,OAAO;AACL,yBAAO,WAAW,EAAE,EAAE;AAAA,gBACxB;AAAA,cACF;AAAA,YACF;AAAA,YACN,QAAQ,MAAM;AACN,kBAAI,MAAO;AACX,kBAAI,OAAO,aAAa,GAAG;AACzB,oBAAI,SAAS,OAAO,aAAa,EAAE;AACnC,oBAAI,WAAW,OAAO;AACpB;AAAA,gBACF;AAAA,cACF;AACA,+BAAiB,IAAI;AACrB,qBAAO,cAAc,IAAI;AAAA,YAC3B;AAAA,UACN;AAAA,UACA,cAAa;AAAA,UACb,aAAY;AAAA,UACZ,+BAA8B,CAAC;AAAA,UAC/B,SAAQ,CAAC;AAAA,UACT,OAAO;AACD,gBAAI,QAAQ,QAAS;AACrB,oBAAQ,UAAU;AAUlB,gBAAI,cAAc,CAAC;AACnB,wBAAY,WAAW,IAAI,SAAS,sBAAsB,MAAM;AAC9D,qBAAO,CAAC,OAAO,mBAAmB,yBAAyB,KAAK,IAAI;AAAA,YACtE;AACA,wBAAY,QAAQ,IAAI,SAAS,mBAAmB,WAAW,MAAM,QAAQ,SAAS;AACpF,kBAAI,IAAI,IAAI,KAAK,CAAC,SAAS,GAAG,EAAE,MAAM,QAAQ,YAAY,IAAI,EAAE,CAAC;AACjE,kBAAI,EAAE,SAAS,UAAU,QAAQ;AAE/B,oBAAI,IAAI,KAAK,CAAE,IAAI,WAAW,SAAS,EAAG,MAAM,GAAG,EAAE,MAAM,QAAQ,YAAY,IAAI,EAAE,CAAC;AAAA,cACxF;AACA,kBAAI,MAAM,IAAI,gBAAgB,CAAC;AAC/B,cAAAA,QAAO,OAAO,OAAO,UAAU,+CAA+C;AAC9E,kBAAI,MAAM,IAAI,MAAM;AACpB,kBAAI,SAAS,MAAM;AACjB,gBAAAA,QAAO,IAAI,UAAU,SAAS,IAAI,uBAAuB;AACzD,oBAAI0B;AAAA;AAAA,kBAA4C,SAAS,cAAc,QAAQ;AAAA;AAC/E,gBAAAA,QAAO,QAAQ,IAAI;AACnB,gBAAAA,QAAO,SAAS,IAAI;AACpB,oBAAI,MAAMA,QAAO,WAAW,IAAI;AAChC,oBAAI,UAAU,KAAK,GAAG,CAAC;AACvB,gCAAgB,IAAI,IAAIA;AACxB,oBAAI,gBAAgB,GAAG;AACvB,yBAAS,SAAS;AAAA,cACpB;AACA,kBAAI,UAAU,CAAC,UAAU;AACvB,oBAAI,SAAS,GAAG,uBAAuB;AACvC,0BAAU;AAAA,cACZ;AACA,kBAAI,MAAM;AAAA,YACZ;AACA,2BAAe,KAAK,WAAW;AAE/B,gBAAI,cAAc,CAAC;AACnB,wBAAY,WAAW,IAAI,SAAS,sBAAsB,MAAM;AAC9D,qBAAO,CAAC,OAAO,mBAAmB,KAAK,OAAO,EAAE,KAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,QAAQ,EAAE;AAAA,YACzF;AACA,wBAAY,QAAQ,IAAI,SAAS,mBAAmB,WAAW,MAAM,QAAQ,SAAS;AACpF,kBAAI,OAAO;AACX,uBAAS,OAAOC,QAAO;AACrB,oBAAI,KAAM;AACV,uBAAO;AACP,gCAAgB,IAAI,IAAIA;AACxB,yBAAS,SAAS;AAAA,cACpB;AACA,uBAAS,OAAO;AACd,oBAAI,KAAM;AACV,uBAAO;AACP,gCAAgB,IAAI,IAAI,IAAI,MAAM;AAClC,0BAAU;AAAA,cACZ;AACA,kBAAI,IAAI,IAAI,KAAK,CAAC,SAAS,GAAG,EAAE,MAAM,QAAQ,YAAY,IAAI,EAAE,CAAC;AACjE,kBAAI,MAAM,IAAI,gBAAgB,CAAC;AAC/B,cAAA3B,QAAO,OAAO,OAAO,UAAU,+CAA+C;AAC9E,kBAAI,QAAQ,IAAI,MAAM;AACtB,oBAAM,iBAAiB,kBAAkB,MAAM,OAAO,KAAK,GAAG,KAAK;AACnE,oBAAM,UAAU,SAAS,cAAc,OAAO;AAC5C,oBAAI,KAAM;AACV,oBAAI,iDAAiD,IAAI,iCAAiC;AAC1F,yBAAS,SAAS,MAAM;AACtB,sBAAI,OAAO;AACX,sBAAI,MAAM;AACV,sBAAI,MAAM;AACV,sBAAI,WAAW;AACf,sBAAI,WAAW;AACf,2BAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,+BAAY,YAAY,IAAK,KAAKA,EAAC;AACnC,gCAAY;AACZ,2BAAO,YAAY,GAAG;AACpB,0BAAI,OAAQ,YAAa,WAAS,IAAM;AACxC,kCAAY;AACZ,6BAAO,KAAK,IAAI;AAAA,oBAClB;AAAA,kBACF;AACA,sBAAI,YAAY,GAAG;AACjB,2BAAO,MAAM,WAAS,MAAM,CAAC;AAC7B,2BAAO,MAAM;AAAA,kBACf,WAAW,YAAY,GAAG;AACxB,2BAAO,MAAM,WAAS,OAAQ,CAAC;AAC/B,2BAAO;AAAA,kBACT;AACA,yBAAO;AAAA,gBACT;AACA,sBAAM,MAAM,kBAAkB,KAAK,OAAO,EAAE,IAAI,aAAa,SAAS,SAAS;AAC/E,uBAAO,KAAK;AAAA,cACd;AACA,oBAAM,MAAM;AAEZ,6BAAe,MAAM;AACnB,uBAAO,KAAK;AAAA,cACd,GAAG,GAAK;AAAA,YACV;AACA,2BAAe,KAAK,WAAW;AAI/B,qBAAS,oBAAoB;AAC3B,sBAAQ,cAAc,SAAS,oBAAoB,MAAM,OAAO,QAAQ,KAClD,SAAS,uBAAuB,MAAM,OAAO,QAAQ,KACrD,SAAS,0BAA0B,MAAM,OAAO,QAAQ,KACxD,SAAS,sBAAsB,MAAM,OAAO,QAAQ;AAAA,YAC5E;AACA,gBAAI,SAAS,OAAO,QAAQ;AAC5B,gBAAI,QAAQ;AAIV,qBAAO,qBAAqB,OAAO,oBAAoB,KAC3B,OAAO,uBAAuB,KAC9B,OAAO,0BAA0B,KACjC,OAAO,sBAAsB,MAC5B,MAAM;AAAA,cAAC;AACpC,qBAAO,kBAAkB,SAAS,iBAAiB,KAC1B,SAAS,oBAAoB,KAC7B,SAAS,uBAAuB,KAChC,SAAS,mBAAmB,MAC3B,MAAM;AAAA,cAAC;AACjC,qBAAO,kBAAkB,OAAO,gBAAgB,KAAK,QAAQ;AAE7D,uBAAS,iBAAiB,qBAAqB,mBAAmB,KAAK;AACvE,uBAAS,iBAAiB,wBAAwB,mBAAmB,KAAK;AAC1E,uBAAS,iBAAiB,2BAA2B,mBAAmB,KAAK;AAC7E,uBAAS,iBAAiB,uBAAuB,mBAAmB,KAAK;AAEzE,kBAAI,OAAO,oBAAoB,GAAG;AAChC,uBAAO,iBAAiB,SAAS,CAAC,OAAO;AACvC,sBAAI,CAAC,QAAQ,eAAe,OAAO,QAAQ,EAAE,oBAAoB;AAC/D,2BAAO,QAAQ,EAAE,mBAAmB;AACpC,uBAAG,eAAe;AAAA,kBACpB;AAAA,gBACF,GAAG,KAAK;AAAA,cACV;AAAA,YACF;AAAA,UACF;AAAA,UACJ,cAA+C,QAAQ,UAAU,aAAa,wBAAwB;AAChG,gBAAI,YAAY,OAAO,OAAO,UAAU,OAAO,OAAQ,QAAO,OAAO;AAErE,gBAAI;AACJ,gBAAI;AACJ,gBAAI,UAAU;AAEZ,kBAAI,oBAAoB;AAAA,gBACtB,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,cAAe,OAAO,0BAA0B,cAAe,IAAI;AAAA,cACrE;AAEA,kBAAI,wBAAwB;AAC1B,yBAAS,aAAa,wBAAwB;AAC5C,oCAAkB,SAAS,IAAI,uBAAuB,SAAS;AAAA,gBACjE;AAAA,cACF;AAKA,kBAAI,OAAO,MAAM,aAAa;AAC5B,gCAAgB,GAAG,cAAc,QAAQ,iBAAiB;AAC1D,oBAAI,eAAe;AACjB,wBAAM,GAAG,WAAW,aAAa,EAAE;AAAA,gBACrC;AAAA,cACF;AAAA,YACF,OAAO;AACL,oBAAM,OAAO,WAAW,IAAI;AAAA,YAC9B;AAEA,gBAAI,CAAC,IAAK,QAAO;AAEjB,gBAAI,aAAa;AACf,kBAAI,CAAC,SAAU,CAAAD,QAAO,OAAO,SAAS,aAAa,0FAA0F;AAE7I,qBAAO,MAAM;AACb,kBAAI,SAAU,IAAG,mBAAmB,aAAa;AACjD,qBAAO,WAAW;AAClB,sBAAQ,8BAA8B,QAAQ,CAAC,aAAa,SAAS,CAAC;AACtE,sBAAQ,KAAK;AAAA,YACf;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,eAAe,QAAQ,UAAU,aAAa;AAAA,UAAC;AAAA,UAC/C,6BAA4B;AAAA,UAC5B,aAAY;AAAA,UACZ,cAAa;AAAA,UACb,kBAAkB,aAAa,cAAc;AACvC,oBAAQ,cAAc;AACtB,oBAAQ,eAAe;AACvB,gBAAI,OAAO,QAAQ,eAAe,YAAa,SAAQ,cAAc;AACrE,gBAAI,OAAO,QAAQ,gBAAgB,YAAa,SAAQ,eAAe;AAEvE,gBAAI,SAAS,OAAO,QAAQ;AAC5B,qBAAS,mBAAmB;AAC1B,sBAAQ,eAAe;AACvB,kBAAI4B,mBAAkB,OAAO;AAC7B,mBAAK,SAAS,mBAAmB,KAAK,SAAS,sBAAsB,KAChE,SAAS,qBAAqB,KAAK,SAAS,yBAAyB,KACrE,SAAS,gCAAgC,OAAOA,kBAAiB;AACpE,uBAAO,iBAAiB,QAAQ;AAChC,oBAAI,QAAQ,YAAa,QAAO,mBAAmB;AACnD,wBAAQ,eAAe;AACvB,oBAAI,QAAQ,cAAc;AACxB,0BAAQ,wBAAwB;AAAA,gBAClC,OAAO;AACL,0BAAQ,uBAAuB,MAAM;AAAA,gBACvC;AAAA,cACF,OAAO;AAEL,gBAAAA,iBAAgB,WAAW,aAAa,QAAQA,gBAAe;AAC/D,gBAAAA,iBAAgB,WAAW,YAAYA,gBAAe;AAEtD,oBAAI,QAAQ,cAAc;AACxB,0BAAQ,sBAAsB;AAAA,gBAChC,OAAO;AACL,0BAAQ,uBAAuB,MAAM;AAAA,gBACvC;AAAA,cACF;AACA,qBAAO,cAAc,IAAI,QAAQ,YAAY;AAC7C,qBAAO,cAAc,IAAI,QAAQ,YAAY;AAAA,YAC/C;AAEA,gBAAI,CAAC,QAAQ,6BAA6B;AACxC,sBAAQ,8BAA8B;AACtC,uBAAS,iBAAiB,oBAAoB,kBAAkB,KAAK;AACrE,uBAAS,iBAAiB,uBAAuB,kBAAkB,KAAK;AACxE,uBAAS,iBAAiB,0BAA0B,kBAAkB,KAAK;AAC3E,uBAAS,iBAAiB,sBAAsB,kBAAkB,KAAK;AAAA,YACzE;AAGA,gBAAI,kBAAkB,SAAS,cAAc,KAAK;AAClD,mBAAO,WAAW,aAAa,iBAAiB,MAAM;AACtD,4BAAgB,YAAY,MAAM;AAGlC,4BAAgB,oBAAoB,gBAAgB,mBAAmB,KACnC,gBAAgB,sBAAsB,KACtC,gBAAgB,qBAAqB,MACrC,gBAAgB,yBAAyB,IAAI,MAAM,gBAAgB,yBAAyB,EAAE,QAAQ,sBAAsB,CAAC,IAAI,UACjI,gBAAgB,yBAAyB,IAAI,MAAM,gBAAgB,yBAAyB,EAAE,QAAQ,sBAAsB,CAAC,IAAI;AAErK,4BAAgB,kBAAkB;AAAA,UACpC;AAAA,UACJ,oBAAoB;AACd,kBAAM,8FAA8F;AAAA,UACtG;AAAA,UACJ,iBAAiB;AAIX,gBAAI,CAAC,QAAQ,cAAc;AACzB,qBAAO;AAAA,YACT;AAEA,gBAAI,MAAM,SAAS,gBAAgB,KACzB,SAAS,kBAAkB,KAC3B,SAAS,qBAAqB,KAC9B,SAAS,kBAAkB,KAC3B,SAAS,wBAAwB,MACtC,MAAM;AAAA,YAAC;AACZ,gBAAI,MAAM,UAAU,CAAC,CAAC;AACtB,mBAAO;AAAA,UACT;AAAA,UACJ,SAAQ;AAAA,UACR,0BAA0B,MAAM;AAE1B,gBAAI,MAAM,KAAK,IAAI;AACnB,gBAAI,QAAQ,YAAY,GAAG;AACzB,sBAAQ,UAAU,MAAM,MAAK;AAAA,YAC/B,OAAO;AACL,qBAAO,MAAM,KAAK,QAAQ,SAAS;AACjC,wBAAQ,WAAW,MAAK;AAAA,cAC1B;AAAA,YACF;AACA,gBAAI,QAAQ,KAAK,IAAI,QAAQ,UAAU,KAAK,CAAC;AAC7C,uBAAW,MAAM,KAAK;AAAA,UACxB;AAAA,UACJ,sBAAsB,MAAM;AACtB,gBAAI,OAAO,yBAAyB,YAAY;AAC9C,oCAAsB,IAAI;AAC1B;AAAA,YACF;AACA,gBAAI,MAAM,QAAQ;AAClB,gBAAI,IAAI;AAAA,UACV;AAAA,UACJ,eAAe,MAAM,SAAS;AAIxB,mBAAO,eAAe,MAAM,OAAO;AAAA,UACrC;AAAA,UACJ,0BAA0B,MAAM;AAE1B,mBAAO,QAAQ,sBAAsB,MAAM;AAEzC,+BAAiB,IAAI;AAAA,YACvB,CAAC;AAAA,UACH;AAAA,UACJ,YAAY,MAAM;AACZ,mBAAO;AAAA,cACL,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,cACP,OAAO;AAAA,YACT,EAAE,KAAK,OAAO,KAAK,YAAY,GAAG,IAAE,CAAC,CAAC;AAAA,UACxC;AAAA,UACJ,aAAa,MAAM;AACb,mBAAO,iBAAiB,UAAU,cAAc,KACxB,UAAU,iBAAiB;AACnD,mBAAO,aAAa,IAAI;AAAA,UAC1B;AAAA,UACJ,aAAa,OAAO;AACd,mBAAO,MAAM,WAAW,KACjB,MAAM,cAAc,KACpB,MAAM,iBAAiB,KACvB;AAAA,UACT;AAAA,UACJ,aAAa,OAAO;AACd,mBAAO,MAAM,WAAW,KACjB,MAAM,cAAc,KACpB,MAAM,iBAAiB,KACvB;AAAA,UACT;AAAA,UACJ,mBAAmB,OAAO;AACpB,gBAAI,QAAQ;AACZ,oBAAQ,MAAM,MAAM;AAAA,cAClB,KAAK;AAEH,wBAAQ,MAAM,SAAS;AACvB;AAAA,cACF,KAAK;AAEH,wBAAQ,MAAM,aAAa;AAC3B;AAAA,cACF,KAAK;AACH,wBAAQ,MAAM;AACd,wBAAQ,MAAM,WAAW;AAAA,kBACvB,KAAK;AAEH,6BAAS;AACT;AAAA,kBACF,KAAK;AAEH,6BAAS;AACT;AAAA,kBACF,KAAK;AAEH,6BAAS;AACT;AAAA,kBACF;AACE,0BAAM,0CAA0C,MAAM;AAAA,gBAC1D;AACA;AAAA,cACF;AACE,sBAAM,qCAAqC,MAAM;AAAA,YACrD;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,QAAO;AAAA,UACP,QAAO;AAAA,UACP,gBAAe;AAAA,UACf,gBAAe;AAAA,UACf,SAAQ,CACR;AAAA,UACA,aAAY,CACZ;AAAA,UACA,qBAAqB,OAAO,OAAO;AAG7B,gBAAI,OAAO,OAAO,QAAQ,EAAE,sBAAsB;AAClD,gBAAI,KAAK,OAAO,QAAQ,EAAE;AAC1B,gBAAI,KAAK,OAAO,QAAQ,EAAE;AAK1B,gBAAI,UAAY,OAAO,OAAO,WAAW,cAAe,OAAO,UAAU,OAAO;AAChF,gBAAI,UAAY,OAAO,OAAO,WAAW,cAAe,OAAO,UAAU,OAAO;AAGhF,YAAA5B,QAAQ,OAAO,WAAW,eAAiB,OAAO,WAAW,aAAc,oEAAoE;AAC/I,gBAAI,YAAY,SAAS,UAAU,KAAK;AACxC,gBAAI,YAAY,SAAS,UAAU,KAAK;AAKxC,wBAAY,aAAa,KAAK,KAAK;AACnC,wBAAY,aAAa,KAAK,KAAK;AAEnC,mBAAO,EAAE,GAAG,WAAW,GAAG,UAAU;AAAA,UACtC;AAAA,UACJ,eAAe,OAAO,OAAO;AACvB,kBAAM,EAAC,GAAG,EAAC,IAAI,QAAQ,qBAAqB,OAAO,KAAK;AACxD,oBAAQ,iBAAiB,IAAI,QAAQ;AACrC,oBAAQ,iBAAiB,IAAI,QAAQ;AACrC,oBAAQ,SAAS;AACjB,oBAAQ,SAAS;AAAA,UACnB;AAAA,UACJ,oBAAoB,OAAO;AACrB,gBAAI,QAAQ,aAAa;AAIvB,kBAAI,MAAM,QAAQ,eACb,kBAAkB,OAAQ;AAC7B,wBAAQ,iBAAiB,QAAQ,iBAAiB;AAAA,cACpD,OAAO;AACL,wBAAQ,iBAAiB,QAAQ,aAAa,KAAK;AACnD,wBAAQ,iBAAiB,QAAQ,aAAa,KAAK;AAAA,cACrD;AAGA,kBAAI,OAAO,OAAO,aAAa;AAC7B,wBAAQ,SAAS,IAAI,SAAS,QAAQ;AACtC,wBAAQ,SAAS,IAAI,SAAS,QAAQ;AAAA,cACxC,OAAO;AAGL,wBAAQ,UAAU,QAAQ;AAC1B,wBAAQ,UAAU,QAAQ;AAAA,cAC5B;AAAA,YACF,OAAO;AACL,kBAAI,MAAM,SAAS,gBAAgB,MAAM,SAAS,cAAc,MAAM,SAAS,aAAa;AAC1F,oBAAI,QAAQ,MAAM;AAClB,oBAAI,UAAU,QAAW;AACvB;AAAA,gBAEF;AACA,oBAAI,SAAS,QAAQ,qBAAqB,MAAM,OAAO,MAAM,KAAK;AAElE,oBAAI,MAAM,SAAS,cAAc;AAC/B,0BAAQ,YAAY,MAAM,UAAU,IAAI;AACxC,0BAAQ,QAAQ,MAAM,UAAU,IAAI;AAAA,gBACtC,WAAW,MAAM,SAAS,cAAc,MAAM,SAAS,aAAa;AAClE,sBAAI,OAAO,QAAQ,QAAQ,MAAM,UAAU;AAC3C,2BAAS;AACT,0BAAQ,YAAY,MAAM,UAAU,IAAI;AACxC,0BAAQ,QAAQ,MAAM,UAAU,IAAI;AAAA,gBACtC;AACA;AAAA,cACF;AAEA,sBAAQ,eAAe,MAAM,OAAO,MAAM,KAAK;AAAA,YACjD;AAAA,UACF;AAAA,UACJ,iBAAgB,CAAC;AAAA,UACjB,wBAAwB;AAClB,gBAAI,SAAS,OAAO,QAAQ;AAC5B,oBAAQ,gBAAgB,QAAQ,CAAC,aAAa,SAAS,OAAO,OAAO,OAAO,MAAM,CAAC;AAAA,UACrF;AAAA,UACJ,cAAc,OAAO,QAAQ,WAAW;AAClC,gBAAI,SAAS,OAAO,QAAQ;AAC5B,oBAAQ,uBAAuB,QAAQ,OAAO,MAAM;AACpD,gBAAI,CAAC,UAAW,SAAQ,sBAAsB;AAAA,UAChD;AAAA,UACJ,eAAc;AAAA,UACd,gBAAe;AAAA,UACf,0BAA0B;AAEpB,gBAAI,OAAO,OAAO,aAAa;AAC7B,kBAAI,QAAQ,QAAU,IAAI,UAAS,CAAE;AACrC,sBAAQ,QAAQ;AAChB,qBAAS,IAAI,UAAS,CAAE,IAAI;AAAA,YAC9B;AACA,oBAAQ,uBAAuB,OAAO,QAAQ,CAAC;AAC/C,oBAAQ,sBAAsB;AAAA,UAChC;AAAA,UACJ,wBAAwB;AAElB,gBAAI,OAAO,OAAO,aAAa;AAC7B,kBAAI,QAAQ,QAAU,IAAI,UAAS,CAAE;AACrC,sBAAQ,QAAQ,CAAC;AACjB,qBAAS,IAAI,UAAS,CAAE,IAAI;AAAA,YAC9B;AACA,oBAAQ,uBAAuB,OAAO,QAAQ,CAAC;AAC/C,oBAAQ,sBAAsB;AAAA,UAChC;AAAA,UACJ,uBAAuB,QAAQ,SAAS,SAAS;AAC3C,gBAAI,WAAW,SAAS;AACtB,qBAAO,cAAc;AACrB,qBAAO,eAAe;AAAA,YACxB,OAAO;AACL,wBAAU,OAAO;AACjB,wBAAU,OAAO;AAAA,YACnB;AACA,gBAAI,IAAI;AACR,gBAAI,IAAI;AACR,gBAAI,OAAO,mBAAmB,KAAK,OAAO,mBAAmB,IAAI,GAAG;AAClE,kBAAI,IAAE,IAAI,OAAO,mBAAmB,GAAG;AACrC,oBAAI,KAAK,MAAM,IAAI,OAAO,mBAAmB,CAAC;AAAA,cAChD,OAAO;AACL,oBAAI,KAAK,MAAM,IAAI,OAAO,mBAAmB,CAAC;AAAA,cAChD;AAAA,YACF;AACA,iBAAM,SAAS,mBAAmB,KAAK,SAAS,sBAAsB,KACjE,SAAS,qBAAqB,KAAK,SAAS,yBAAyB,KACrE,SAAS,gCAAgC,OAAO,OAAO,cAAgB,OAAO,UAAU,aAAc;AACxG,kBAAI,SAAS,KAAK,IAAI,OAAO,QAAQ,GAAG,OAAO,SAAS,CAAC;AACzD,kBAAI,KAAK,MAAM,IAAI,MAAM;AACzB,kBAAI,KAAK,MAAM,IAAI,MAAM;AAAA,YAC5B;AACA,gBAAI,QAAQ,cAAc;AACxB,kBAAI,OAAO,SAAU,EAAG,QAAO,QAAS;AACxC,kBAAI,OAAO,UAAU,EAAG,QAAO,SAAS;AACxC,kBAAI,OAAO,OAAO,SAAS,aAAa;AACtC,uBAAO,MAAM,eAAgB,OAAO;AACpC,uBAAO,MAAM,eAAe,QAAQ;AAAA,cACtC;AAAA,YACF,OAAO;AACL,kBAAI,OAAO,SAAU,QAAS,QAAO,QAAS;AAC9C,kBAAI,OAAO,UAAU,QAAS,QAAO,SAAS;AAC9C,kBAAI,OAAO,OAAO,SAAS,aAAa;AACtC,oBAAI,KAAK,WAAW,KAAK,SAAS;AAChC,yBAAO,MAAM,YAAa,SAAS,IAAI,MAAM,WAAW;AACxD,yBAAO,MAAM,YAAY,UAAU,IAAI,MAAM,WAAW;AAAA,gBAC1D,OAAO;AACL,yBAAO,MAAM,eAAgB,OAAO;AACpC,yBAAO,MAAM,eAAe,QAAQ;AAAA,gBACtC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACJ;AAEA,YAAI,MAAM;AAAA,UACV,WAAU;AAAA,UACV,2BAA0B;AAAA,UAC1B,gBAAe;AAAA,UACf,oBAAmB;AAAA,UACnB,oBAAmB;AAAA,UACnB,mBAAkB;AAAA,YAClB,OAAM;AAAA,YACN,OAAM;AAAA,YACN,SAAQ;AAAA,YACR,WAAU;AAAA,UACV;AAAA,UACA,aAAY,CACZ;AAAA,UACA,aAAa,MAAM;AACb,gBAAI,YAAY;AAAA,UAClB;AAAA,UACJ,aAAa,SAAS,YAAY,QAAQ,aAAa,YAAY;AAC7D,gBAAI,WAAW,MAAO;AACpB,kBAAI;AAAA,gBAAa;AAAA;AAAA,cAA4B;AAC7C,qBAAO;AAAA,YACT;AAEA,gBAAI,YAAY;AAEd,yBAAS;AACP,oBAAI,QAAQ,OAAS,cAAa,CAAE;AACpC,oBAAI,SAAS,OAA2B;AACtC,sBAAI,YAAY,OAAU,aAAa,KAAK,CAAE;AAC9C,sBAAI,kBAAkB,QAAS,YAAY;AAAA,gBAC7C,WAAW,SAAS,OAA2B;AAC7C,sBAAI,YAAY,OAAU,aAAa,KAAK,CAAE;AAC9C,sBAAI,kBAAkB,QAAS,YAAY;AAAA,gBAC7C,WAAW,SAAS,OAA6B;AAC/C,sBAAI,cAAc,OAAU,aAAa,KAAK,CAAE;AAChD,sBAAI,kBAAkB,UAAW,cAAc;AAAA,gBACjD,WAAW,SAAS,OAAwB;AAC1C,sBAAI,UAAU,OAAU,aAAa,KAAK,CAAE;AAC5C,sBAAI,kBAAkB,YAAa,UAAU;AAAA,gBAC/C,WAAW,SAAS,OAA+B;AACjD,sBAAI,UAAU,OAAU,aAAa,KAAK,CAAE;AAC5C,sBAAI,kBAAkB,YAAa,WAAW;AAAA,gBAChD,WAAW,SAAS,OAA2C;AAC7D,sBAAI,oBAAoB,OAAU,aAAa,KAAK,CAAE;AACtD,sBAAI,kBAAkB,aAAc,qBAAqB;AAAA,gBAC3D,WAAW,SAAS,OAAqB;AACrC;AAAA,gBACJ;AACA,8BAAc;AAAA,cAChB;AAAA,YACF;AAEA,iBAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,YAAY;AAC5C,kBAAI;AAAA,gBAAa;AAAA;AAAA,cAA8B;AAC/C,qBAAO;AAAA,YACT;AACA,gBAAI,YAAY;AACd,qBAAS,cAAa,CAAE,IAAI;AAAA,YAC9B;AACA,gBAAI,UAAU,cAAc,GAAG;AAC7B,sBAAU,UAAS,CAAE,IAAI;AAAA,YAC3B;AAEA,gBAAI;AAAA,cAAa;AAAA;AAAA,YAAwB;AACzC,mBAAO;AAAA,UACT;AAAA,QACJ;AACA,YAAI,mBAAmB,CAAC,SAAS,aAAa,SAAS,aAAa,eAAe;AAC/E,iBAAO,IAAI,aAAa,SAAS,aAAa,SAAS,aAAa,UAAU;AAAA,QAChF;AAGF,YAAI,KAAK;AAAA,UACT,SAAQ;AAAA,UACR,SAAQ,CAAC;AAAA,UACT,UAAS,CAAC;AAAA,UACV,cAAa,CAAC;AAAA,UACd,eAAc,CAAC;AAAA,UACf,UAAS,CAAC;AAAA,UACV,SAAQ,CAAC;AAAA,UACT,MAAK,CAAC;AAAA,UACN,UAAS,CAAC;AAAA,UACV,mBAAkB,CAClB;AAAA,UACA,SAAQ,CAAC;AAAA,UACT,UAAS,CAAC;AAAA,UACV,oBAAmB,CAAC;AAAA,UACpB,OAAM,CAAC;AAAA,UACP,aAAY,CACZ;AAAA,UACA,cAAa,CACb;AAAA,UACA,iBAAgB;AAAA,UAChB,aAAY,SAAS,YAAY,WAAW;AACtC,gBAAI,CAAC,GAAG,WAAW;AACjB,iBAAG,YAAY;AAAA,YACjB;AAAA,UACF;AAAA,UACJ,UAAS,CAAC,UAAU;AACd,gBAAI,MAAM,GAAG;AACb,qBAASC,KAAI,MAAM,QAAQA,KAAI,KAAKA,MAAK;AACvC,oBAAMA,EAAC,IAAI;AAAA,YACb;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,WAAU,CAAC,QAAQ,OAAOQ,SAAQ,WAAW;AACvC,gBAAI,SAAS;AACb,qBAASR,KAAI,GAAGA,KAAI,OAAO,EAAEA,IAAG;AAC9B,kBAAI,MAAM,SAAS,QAAW,SAASA,KAAE,KAAK,CAAE,IAAI;AACpD,wBAAU,aAAa,QAAWQ,UAASR,KAAE,KAAK,CAAE,GAAG,GAAG;AAAA,YAC5D;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,eAAc,CAAkC,QAAQ,2BAA2B;AAW7E,gBAAI,CAAC,OAAO,6BAA6B;AAGvC,kBAAS4B,mBAAT,SAAyB,KAAK,OAAO;AACnC,oBAAI,KAAK,OAAO,4BAA4B,KAAK,KAAK;AACtD,uBAAS,OAAO,WAAa,cAAc,wBAA0B,KAAK;AAAA,cAC5E;AAHS,oCAAAA;AAFT,qBAAO,8BAA8B,OAAO;AAM5C,qBAAO,aAAaA;AAAA,YACtB;AAEA,gBAAI,MACD,uBAAuB,eAAe,IAErC,OAAO,WAAW,UAAU,sBAAsB,IAEnD,OAAO,WAAW,SAAS,sBAAsB;AAIpD,gBAAI,CAAC,IAAK,QAAO;AAEjB,gBAAI,SAAS,GAAG,gBAAgB,KAAK,sBAAsB;AAE3D,mBAAO;AAAA,UACT;AAAA,UACJ,iBAAgB,CAAC,KAAK,2BAA2B;AAE3C,gBAAI,SAAS,GAAG,SAAS,GAAG,QAAQ;AAEpC,gBAAI,UAAU;AAAA,cACZ;AAAA,cACA,YAAY;AAAA,cACZ,SAAS,uBAAuB;AAAA,cAChC,OAAO;AAAA,YACT;AAIA,gBAAI,IAAI,OAAQ,KAAI,OAAO,cAAc;AACzC,eAAG,SAAS,MAAM,IAAI;AAEtB,mBAAO;AAAA,UACT;AAAA,UACJ,oBAAmB,CAAC,kBAAkB;AAGhC,eAAG,iBAAiB,GAAG,SAAS,aAAa;AAE7C,mBAAO,MAAM,QAAQ,GAAG,gBAAgB;AACxC,mBAAO,EAAE,iBAAiB,CAAC;AAAA,UAC7B;AAAA,UACJ,YAAW,CAAC,kBAAkB;AACxB,mBAAO,GAAG,SAAS,aAAa;AAAA,UAClC;AAAA,UACJ,eAAc,CAAC,kBAAkB;AAC3B,gBAAI,GAAG,mBAAmB,GAAG,SAAS,aAAa,GAAG;AACpD,iBAAG,iBAAiB;AAAA,YACtB;AACA,gBAAI,OAAO,YAAY,UAAU;AAG/B,uBAAS,0BAA0B,GAAG,SAAS,aAAa,EAAE,MAAM,MAAM;AAAA,YAC5E;AAGA,gBAAI,GAAG,SAAS,aAAa,KAAK,GAAG,SAAS,aAAa,EAAE,MAAM,QAAQ;AACzE,iBAAG,SAAS,aAAa,EAAE,MAAM,OAAO,cAAc;AAAA,YACxD;AACA,eAAG,SAAS,aAAa,IAAI;AAAA,UAC/B;AAAA,QACJ;AAEA,YAAI,oBAAoB,CAAC,SAAS,QAAQ,KAAK,mBAAmB;AAC9D,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AAIA,cAAI,qBAAqB;AACzB,qBAAS;AACP,gBAAI,QAAQ,OAAS,kBAAiB,CAAE;AACxC,gBAAI,SAAS,OAAuC;AAClD,mCAAqB,OAAU,iBAAiB,KAAK,CAAE;AAAA,YACzD,WAAW,SAAS,OAAqB;AACvC;AAAA,YACF,OAAO;AAEL,kBAAI;AAAA,gBAAa;AAAA;AAAA,cAA4B;AAC7C,qBAAO;AAAA,YACT;AACA,8BAAkB;AAAA,UACpB;AACA,cAAI,qBAAqB,KAAK,qBAAqB,GAAG;AACpD,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA2B;AAC5C,mBAAO;AAAA,UACT;AAEA,cAAI,kBAAkB,eAAe,qBAAqB;AAC1D,cAAI,kBAAkB,eAAe;AAErC,cAAI,UAAU,GAAG,cAAc,OAAO,QAAQ,GAAG,IAAI,iBAAiB;AAEtE,cAAI,IAAI,WAAW,GAAG;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAAwB;AAGzC,eAAG,mBAAmB,IAAI,OAAO;AACjC,mBAAO,WAAW;AAClB,oBAAQ,8BAA8B,QAAQ,SAAS,UAAU;AAAE,uBAAS;AAAA,YAAE,CAAC;AAG/E,eAAG,mBAAmB,IAAI;AAC1B,mBAAO;AAAA,UACT,OAAO;AACL,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA0B;AAC3C,mBAAO;AAAA,UACT;AAAA,QACF;AAEF,YAAI,0BAA0B,CAAC,SAAS,QAAQ,KAAK,gBAAgB;AACjE,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,UAAU,OAAO;AACnB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA2B;AAC5C,mBAAO;AAAA,UACT;AAKA,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,iBAAO;AAAA,QACT;AAGF,YAAI,qBAAqB,CAAC,SAAS,YAAY;AAC3C,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,WAAW,OAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AAEA,aAAG,cAAc,IAAI,OAAO;AAC5B,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,cAAI,IAAI,kBAAkB,SAAS;AACjC,gBAAI,iBAAiB;AAAA,UACvB;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,qBAAqB,CAAC,SAAS,YAAY;AAC3C,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,WAAW,OAAsE;AACnF,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,IAAI,sBAAsB,SAAS;AACrC,gBAAI,qBAAqB;AAAA,UAC3B;AACA,cAAI,IAAI,sBAAsB,SAAS;AACrC,gBAAI,qBAAqB;AAAA,UAC3B;AACA,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,iBAAO;AAAA,QACT;AAEF,YAAI,sBAAsB,CAAC,SAAS,QAAQ,WAAW,UAAU;AAC7D,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,UAAU,OAAO;AACnB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA2B;AAC5C,mBAAO;AAAA,UACT;AACA,cAAI,CAAC,OAAO;AACV,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA8B;AAC/C,mBAAO;AAAA,UACT;AACA,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,kBAAQ,WAAW;AAAA,YACnB,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,QAAQ,KAAK;AAC1D,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,QAAQ,IAAI;AACzD,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,QAAQ,KAAK;AAC1D,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,UAAU,IAAI;AAC3D,qBAAO;AAAA,YACT,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,YAAY,IAAI;AAC7D,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI,IAAI,kBAAkB,YAAY,IAAI;AAC7D,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAAA,YACL,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAAA,YACL,KAAK;AACH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT,KAAK;AAEH,qBAAS,SAAQ,CAAE,IAAI;AACvB,qBAAO;AAAA,YACT;AACE,kBAAI;AAAA,gBAAa;AAAA;AAAA,cAA8B;AAC/C,qBAAO;AAAA,UACT;AAAA,QACF;AAEF,YAAI,iBAAiB,CAAC,sBAAsB;AACxC,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AAIzC,cAAI,qBAAqB,KAA+B,qBAAqB,GAA6B;AACxG,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,eAAe,MAAM,IAAI;AAE7B,YAAI,iBAAiB,CAAC,SAAS,cAAc,iBAAiB;AAC1D,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,cAAc;AAChB,mBAAS,gBAAe,CAAE,IAAI;AAAA,UAChC;AACA,cAAI,cAAc;AAChB,mBAAS,gBAAe,CAAE,IAAI;AAAA,UAChC;AACA,cAAI,4BAA4B;AAChC,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,iBAAO;AAAA,QACT;AAGF,YAAI,kBAAkB,CAAC,SAAS,MAAMC,OAAM,YAAY;AACpD,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AAEA,cAAI,WAAW,KAAK,WAAW,OAAO;AACpC,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAKA,SAAQ,KAAKA,SAAQ,SAAW,QAAQ,KAAK,QAAQ,OAAwD;AAChH,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AAEA,aAAG,mBAAmB,UAAU,IAAI,UAAU,IAAI;AAElD,cAAI,iBAAiB;AACrB,cAAI,qBAAqB;AACzB,cAAI,qBAAqBA;AACzB,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,iBAAO;AAAA,QACT;AAEF,YAAI,kBAAkB,CAAC,KAAK,YAAY;AAEpC,cAAI,CAAC,IAAI,2BAA2B;AAClC,gBAAI;AAAA,cAAa;AAAA;AAAA,YAAgC;AAAA,UACnD,WAAW,CAAC,OAAO,KAAK;AACtB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA2B;AAAA,UAC9C,WAAW,OAAO,IAAI,cAAc,GAAG;AACrC,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA6B;AAAA,UAChD,OAAO;AAKL,gBAAI;AAAA,cAAa;AAAA;AAAA,YAAwB;AACzC,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AAEF,YAAI,gBAAgB,CAAC,YAAY;AAC7B,cAAI,WAAW,MAAO;AACpB,gBAAI;AAAA,cAAa;AAAA;AAAA,YAA4B;AAC7C,mBAAO;AAAA,UACT;AACA,cAAI,iBAAiB;AACrB,cAAI,qBAAqB;AACzB,cAAI,qBAAqB;AACzB,cAAI,4BAA4B;AAChC,cAAI;AAAA,YAAa;AAAA;AAAA,UAAwB;AACzC,iBAAO;AAAA,QACT;AAEF,YAAI,qBAAqB,CAAC;AAC1B,YAAI,gBAAgB,CAAC,QAAQ,QAAQ;AAEjC,UAAA9B,QAAO,MAAM,QAAQ,kBAAkB,CAAC;AAExC,UAAAA,QAAO,MAAM,MAAM,CAAC;AACpB,6BAAmB,SAAS;AAC5B,cAAI;AAGJ,iBAAO,KAAK,OAAO,QAAQ,GAAG;AAC5B,gBAAI,MAAM,OAAO,aAAa,EAAE;AAChC,gBAAI,aAAa,CAAC,KAAK,KAAK,KAAK,GAAG;AAEpC,uBAAW,KAAK,GAAG;AACnB,YAAAA,QAAO,WAAW,SAAS,GAAG,GAAG,qBAAqB,EAAE,KAAK,GAAG,kCAAkC,UAAU,qDAAqD;AAGjK,gBAAI,OAAQ,MAAM;AAClB,oBAAS,MAAM;AACf,mBAAO,QAAS,MAAM,IAAK,IAAI;AAC/B,+BAAmB;AAAA;AAAA,cAEjB,MAAM,MAAM,QAAU,OAAM,CAAE,IAC9B,MAAM,MAAM,OAAS,OAAM,CAAE,IAC7B,MAAM,MACJ,OAAS,OAAM,CAAE,IACjB,QAAU,OAAM,CAAE;AAAA,YACtB;AACA,mBAAO,OAAO,IAAI;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AACF,YAAI,mBAAmB,CAAC,MAAM,QAAQ,WAAW;AAC7C,cAAI,OAAO,cAAc,QAAQ,MAAM;AACvC,UAAAA,QAAO,WAAW,eAAe,IAAI,GAAG,uCAAuC,IAAI,qFAAqF;AACxK,iBAAO,WAAW,IAAI,EAAE,MAAM,MAAM,IAAI;AAAA,QAC1C;AACF,YAAI,4BAA4B,CAAC,MAAM,QAAQ,WAAW;AACtD,iBAAO,iBAAiB,MAAM,QAAQ,MAAM;AAAA,QAC9C;AAEF,YAAI,4BAA4B,CAAC,QAAQ;AACrC,UAAAA,QAAO,OAAO,OAAO,QAAQ;AAC7B,kBAAQ,MAAM,aAAa,GAAG,CAAC;AAAA,QACjC;AAEF,YAAI,0BAA0B,CAAC,QAAQ;AACnC,UAAAA,QAAO,OAAO,OAAO,QAAQ;AAC7B,kBAAQ,IAAI,aAAa,GAAG,CAAC;AAAA,QAC/B;AAEF,YAAI,2BAA2B,CAAC,QAAQ;AACpC,UAAAA,QAAO,OAAO,OAAO,QAAQ;AAC7B,kBAAQ,KAAK,aAAa,GAAG,CAAC;AAAA,QAChC;AAEF,YAAI,uBAAuB,MAAM,KAAK,IAAI;AAE1C,iBAAS,uBAAuB;AAAE;AAAA,QAAS;AAE3C,YAAI,kBAAkB,CAAC,QAAQ,IAAI,aAAa,GAAG,CAAC;AAEpD,YAAI,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,UAKb;AAAA;AACJ,YAAI,2BAA2B,MAAM,WAAW;AAIhD,iBAAS,iBAAiB,IAAI;AAAE,gBAAM,cAAc,EAAE;AAAA,QAAE;AACxD,YAAI,8BAA8B;AAGlC,YAAI,kBAAkB,CAAC,SAAS,WAAW;AACvC,gBAAM,aAAa,GAAG,SAAS,OAAO,GAAG,GAAG,QAAQ,MAAM,CAAC;AAAA,QAC7D;AACF,YAAI,6BAA6B;AAGjC,YAAI,gBAAgB,CAAC,QAAQ,OAAO;AAChC,gBAAM,WAAW,QAAQ,GAAG,QAAQ,EAAE,CAAC;AAAA,QACzC;AACF,YAAI,2BAA2B;AAG/B,YAAI,mBAAmB,CAAC,QAAQ,OAAO;AACnC,gBAAM,sBAAsB,eAAe,EAAE,QAAQ,GAAG,QAAQ,EAAE,CAAC;AAAA,QACrE;AACF,YAAI,8BAA8B;AAGlC,iBAAS,0BAA0B,IAAI;AAAE,gBAAM,uBAAuB,EAAE;AAAA,QAAE;AAC1E,YAAI,uCAAuC;AAI3C,YAAI,wBAAwB,CAAC,SAAS,OAAO,SAAS;AAClD,gBAAM,mBAAmB,GAAG,SAAS,OAAO,GAAG,OAAO,aAAa,IAAI,CAAC;AAAA,QAC1E;AACF,YAAI,mCAAmC;AAGvC,YAAI,gBAAgB,CAAC,QAAQ,WAAW;AAEpC,cAAI,UAAU,OAAiC;AAM7C,kBAAM,gCAAgC;AAAA,UACxC,WAAW,UAAU,OAAmC;AAMtD,kBAAM,kCAAkC;AAAA,UAC1C;AACA,gBAAM,WAAW,QAAQ,GAAG,QAAQ,MAAM,CAAC;AAAA,QAC7C;AACF,YAAI,2BAA2B;AAG/B,YAAI,oBAAoB,CAAC,QAAQ,OAAO,WAAW;AAC/C,gBAAM,eAAe,QAAQ,OAAO,GAAG,QAAQ,MAAM,CAAC;AAAA,QACxD;AACF,YAAI,+BAA+B;AAGnC,YAAI,qBAAqB,CAAC,QAAQ,OAAO,QAAQ,QAAQ,YAAY;AACjE,gBAAM,gBAAgB,QAAQ,OAAO,GAAG,QAAQ,MAAM,GAAG,QAAQ,OAAO;AAAA,QAC1E;AACF,YAAI,gCAAgC;AAGpC,YAAI,qBAAqB,CAAC,QAAQ,gBAAgB;AAE9C,gBAAM,gBAAgB,QAAQ,GAAG,aAAa,WAAW,CAAC;AAAA,QAE5D;AACF,YAAI,gCAAgC;AAGpC,YAAI,sBAAsB,CAAC,QAAQ,iBAAiB;AAChD,gBAAM,iBAAiB,QAAQ,GAAG,cAAc,YAAY,CAAC;AAAA,QAC/D;AACF,YAAI,iCAAiC;AAGrC,YAAI,iBAAiB,CAAC,MAAM,YAAY;AACpC,gBAAM,YAAY,MAAM,GAAG,SAAS,OAAO,CAAC;AAAA,QAC9C;AACF,YAAI,4BAA4B;AAGhC,YAAI,iBAAiB,CAAC,QAAQ,YAAY;AACtC,gBAAM,YAAY,QAAQ,GAAG,SAAS,OAAO,CAAC;AAAA,QAChD;AACF,YAAI,4BAA4B;AAGhC,YAAI,2BAA2B,CAAC,QAAQ,OAAO;AAC3C,gBAAM,sBAAsB,QAAQ,GAAG,mBAAmB,EAAE,CAAC;AAAA,QAC/D;AACF,YAAI,sCAAsC;AAG1C,YAAI,qBAAqB,CAAC,QAAQ;AAC9B,gBAAM,gBAAgB,GAAG,KAAK,GAAG,CAAC;AAAA,QACpC;AACF,YAAI,gCAAgC;AAIpC,YAAI,wBAAwB;AAC5B,YAAI,mCAAmC;AAGvC,iBAAS,cAAc,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,WAAW,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC1E,YAAI,2BAA2B;AAG/B,iBAAS,iBAAiB,IAAI;AAAE,gBAAM,cAAc,EAAE;AAAA,QAAE;AACxD,YAAI,8BAA8B;AAGlC,iBAAS,yBAAyB,IAAI,IAAI;AAAE,gBAAM,sBAAsB,IAAI,EAAE;AAAA,QAAE;AAChF,YAAI,sCAAsC;AAG1C,iBAAS,aAAa,IAAI,IAAI;AAAE,gBAAM,UAAU,IAAI,EAAE;AAAA,QAAE;AACxD,YAAI,0BAA0B;AAG9B,iBAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,kBAAkB,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACxF,YAAI,kCAAkC;AAGtC,iBAAS,mBAAmB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACpI,YAAI,gCAAgC;AAGpC,YAAI,gBAAgB,CAAC,QAAQ,MAAM,MAAM,UAAU;AAE/C,cAAI,GAAG,eAAe,WAAW,GAAG;AAOlC,gBAAI,QAAQ,MAAM;AAChB,oBAAM,WAAW,QAAQ,QAAQ,OAAO,MAAM,IAAI;AAAA,YACpD,OAAO;AACL,oBAAM,WAAW,QAAQ,MAAM,KAAK;AAAA,YACtC;AAAA,UACF,OAAO;AAKL,kBAAM,WAAW,QAAQ,OAAO,OAAO,SAAS,MAAM,OAAK,IAAI,IAAI,MAAM,KAAK;AAAA,UAChF;AAAA,QACF;AACF,YAAI,2BAA2B;AAG/B,YAAI,mBAAmB,CAAC,QAAQ,QAAQ,MAAM,SAAS;AACnD,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,oBAAQ,MAAM,cAAc,QAAQ,QAAQ,QAAQ,MAAM,IAAI;AAC9D;AAAA,UACF;AACA,gBAAM,cAAc,QAAQ,QAAQ,OAAO,SAAS,MAAM,OAAK,IAAI,CAAC;AAAA,QACtE;AACF,YAAI,8BAA8B;AAGlC,iBAAS,0BAA0B,IAAI;AAAE,iBAAO,MAAM,uBAAuB,EAAE;AAAA,QAAE;AACjF,YAAI,uCAAuC;AAG3C,iBAAS,SAAS,IAAI;AAAE,gBAAM,MAAM,EAAE;AAAA,QAAE;AACxC,YAAI,sBAAsB;AAG1B,iBAAS,iBAAiB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,cAAc,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAChF,YAAI,8BAA8B;AAGlC,YAAI,mBAAmB,CAAC,QAAQ,YAAY,UAAU;AAElD,gBAAM,cAAc,QAAQ,YAAY,SAAS,SAAO,CAAC;AAAA,QAC3D;AACF,YAAI,8BAA8B;AAGlC,YAAI,mBAAmB,CAAC,QAAQ,YAAY,UAAU;AAElD,gBAAM,cAAc,QAAQ,YAAY,QAAQ,SAAO,CAAC;AAAA,QAC1D;AACF,YAAI,8BAA8B;AAGlC,YAAI,oBAAoB,CAAC,QAAQ,YAAY,UAAU;AAEnD,gBAAM,eAAe,QAAQ,YAAY,SAAS,SAAO,CAAC;AAAA,QAC5D;AACF,YAAI,+BAA+B;AAGnC,iBAAS,cAAc,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,WAAW,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC1E,YAAI,2BAA2B;AAG/B,iBAAS,eAAe,IAAI;AAAE,gBAAM,WAAW,EAAE;AAAA,QAAE;AACnD,YAAI,4BAA4B;AAGhC,iBAAS,gBAAgB,IAAI;AAAE,gBAAM,aAAa,EAAE;AAAA,QAAE;AACtD,YAAI,6BAA6B;AAGjC,YAAI,oBAAoB,CAAC,MAAM,OAAO,YAAY;AAK9C,oBAAU,OAAO,OAAO;AACxB,iBAAO,MAAM,eAAe,GAAG,MAAM,IAAI,GAAG,OAAO,OAAO;AAAA,QAC5D;AACF,YAAI,+BAA+B;AAGnC,YAAI,eAAe,CAAC,KAAK,OAAO,MAAM,UAAU;AAC5C,gBAAM,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK;AAAA,QACjD;AACF,YAAI,0BAA0B;AAG9B,YAAI,mBAAmB,CAAC,WAAW;AAC/B,gBAAM,cAAc,GAAG,QAAQ,MAAM,CAAC;AAAA,QACxC;AACF,YAAI,8BAA8B;AAGlC,YAAI,0BAA0B,CAAC,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,WAAW,SAAS;AACrG,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,gBAAI,MAAM,mCAAmC,CAAC,WAAW;AACvD,oBAAM,qBAAqB,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,WAAW,IAAI;AAAA,YAClG,OAAO;AACL,oBAAM,qBAAqB,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQ,MAAM,SAAS;AAAA,YAC1G;AACA;AAAA,UACF;AACA,gBAAM,qBAAqB,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,OAAO,OAAO,SAAU,MAAQ,OAAK,SAAU,IAAI,IAAI;AAAA,QAC1I;AACF,YAAI,qCAAqC;AAGzC,YAAI,0BAA0B,CAAC,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,WAAW,SAAS;AAC5G,cAAI,MAAM,iCAAiC;AACzC,kBAAM,qBAAqB,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,WAAW,IAAI;AAAA,UACzG,OAAO;AACL,kBAAM,qBAAqB,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,QAAQ,MAAM,SAAS;AAAA,UACjH;AAAA,QACF;AACF,YAAI,qCAAqC;AAGzC,YAAI,6BAA6B,CAAC,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQ,WAAW,SAAS;AAC1G,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,gBAAI,MAAM,mCAAmC,CAAC,WAAW;AACvD,oBAAM,wBAAwB,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQ,WAAW,IAAI;AAAA,YACvG,OAAO;AACL,oBAAM,wBAAwB,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQ,QAAQ,MAAM,SAAS;AAAA,YAC/G;AACA;AAAA,UACF;AACA,gBAAM,wBAAwB,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQ,OAAO,OAAO,SAAU,MAAQ,OAAK,SAAU,IAAI,IAAI;AAAA,QAC/I;AACF,YAAI,wCAAwC;AAG5C,YAAI,6BAA6B,CAAC,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,WAAW,SAAS;AAC1H,cAAI,MAAM,iCAAiC;AACzC,kBAAM,wBAAwB,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,WAAW,IAAI;AAAA,UACvH,OAAO;AACL,kBAAM,wBAAwB,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQ,QAAQ,MAAM,SAAS;AAAA,UAC/H;AAAA,QACF;AACF,YAAI,wCAAwC;AAG5C,iBAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,kBAAkB,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAChG,YAAI,kCAAkC;AAGtC,iBAAS,kBAAkB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,eAAe,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAClH,YAAI,+BAA+B;AAGnC,iBAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,kBAAkB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACxH,YAAI,kCAAkC;AAGtC,iBAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,kBAAkB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAChI,YAAI,kCAAkC;AAGtC,YAAI,mBAAmB,MAAM;AACzB,cAAI,KAAK,GAAG,SAAS,GAAG,QAAQ;AAChC,cAAI,UAAU,MAAM,cAAc;AAElC,kBAAQ,OAAO;AAGf,kBAAQ,mBAAmB,QAAQ,qBAAqB,QAAQ,4BAA4B;AAC5F,kBAAQ,mBAAmB;AAC3B,aAAG,SAAS,EAAE,IAAI;AAClB,iBAAO;AAAA,QACT;AACF,YAAI,8BAA8B;AAGlC,YAAI,kBAAkB,CAAC,eAAe;AAClC,cAAI,KAAK,GAAG,SAAS,GAAG,OAAO;AAC/B,aAAG,QAAQ,EAAE,IAAI,MAAM,aAAa,UAAU;AAE9C,iBAAO;AAAA,QACT;AACF,YAAI,6BAA6B;AAGjC,iBAAS,YAAY,IAAI;AAAE,gBAAM,SAAS,EAAE;AAAA,QAAE;AAC9C,YAAI,yBAAyB;AAG7B,YAAI,mBAAmB,CAAC,GAAG,YAAY;AACnC,mBAASC,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,UAAUA,KAAE,KAAK,CAAE;AACtC,gBAAI,SAAS,GAAG,QAAQ,EAAE;AAI1B,gBAAI,CAAC,OAAQ;AAEb,kBAAM,aAAa,MAAM;AACzB,mBAAO,OAAO;AACd,eAAG,QAAQ,EAAE,IAAI;AAEjB,gBAAI,MAAM,MAAM,8BAA+B,OAAM,gCAAgC;AACrF,gBAAI,MAAM,MAAM,gCAAiC,OAAM,kCAAkC;AAAA,UAC3F;AAAA,QACF;AACF,YAAI,8BAA8B;AAGlC,YAAI,wBAAwB,CAAC,GAAG,iBAAiB;AAC7C,mBAASA,KAAI,GAAGA,KAAI,GAAG,EAAEA,IAAG;AAC1B,gBAAI,KAAK,OAAU,eAAeA,KAAE,KAAK,CAAE;AAC3C,gBAAI,cAAc,GAAG,aAAa,EAAE;AACpC,gBAAI,CAAC,YAAa;AAClB,kBAAM,kBAAkB,WAAW;AACnC,wBAAY,OAAO;AACnB,eAAG,aAAa,EAAE,IAAI;AAAA,UACxB;AAAA,QACF;AACF,YAAI,mCAAmC;AAGvC,YAAI,mBAAmB,CAAC,OAAO;AAC3B,cAAI,CAAC,GAAI;AACT,cAAI,UAAU,GAAG,SAAS,EAAE;AAC5B,cAAI,CAAC,SAAS;AAGZ,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,gBAAM,cAAc,OAAO;AAC3B,kBAAQ,OAAO;AACf,aAAG,SAAS,EAAE,IAAI;AAAA,QACpB;AACF,YAAI,8BAA8B;AAGlC,YAAI,mBAAmB,CAAC,GAAG,QAAQ;AAC/B,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,MAAMA,KAAE,KAAK,CAAE;AAClC,gBAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,gBAAI,CAAC,MAAO;AACZ,kBAAM,YAAY,KAAK;AACvB,eAAG,QAAQ,EAAE,IAAI;AAAA,UACnB;AAAA,QACF;AACF,YAAI,8BAA8B;AAGlC,YAAI,sBAAsB,CAAC,GAAG,QAAQ;AAClC,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,MAAMA,KAAE,KAAK,CAAE;AAClC,gBAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,gBAAI,CAAC,MAAO;AACZ,kBAAM,sBAAsB,gBAAgB,EAAE,KAAK;AACnD,eAAG,QAAQ,EAAE,IAAI;AAAA,UACnB;AAAA,QACF;AACF,YAAI,iCAAiC;AAGrC,YAAI,yBAAyB,CAAC,GAAG,kBAAkB;AAC/C,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,gBAAgBA,KAAE,KAAK,CAAE;AAC5C,gBAAI,eAAe,GAAG,cAAc,EAAE;AACtC,gBAAI,CAAC,aAAc;AACnB,kBAAM,mBAAmB,YAAY;AACrC,yBAAa,OAAO;AACpB,eAAG,cAAc,EAAE,IAAI;AAAA,UACzB;AAAA,QACF;AACF,YAAI,oCAAoC;AAGxC,YAAI,oBAAoB,CAAC,GAAG,aAAa;AACrC,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,WAAWA,KAAE,KAAK,CAAE;AACvC,gBAAI,UAAU,GAAG,SAAS,EAAE;AAC5B,gBAAI,CAAC,QAAS;AACd,kBAAM,cAAc,OAAO;AAC3B,oBAAQ,OAAO;AACf,eAAG,SAAS,EAAE,IAAI;AAAA,UACpB;AAAA,QACF;AACF,YAAI,+BAA+B;AAGnC,YAAI,kBAAkB,CAAC,OAAO;AAC1B,cAAI,CAAC,GAAI;AACT,cAAI,SAAS,GAAG,QAAQ,EAAE;AAC1B,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,gBAAM,aAAa,MAAM;AACzB,aAAG,QAAQ,EAAE,IAAI;AAAA,QACnB;AACF,YAAI,6BAA6B;AAGjC,YAAI,gBAAgB,CAAC,OAAO;AACxB,cAAI,CAAC,GAAI;AACT,cAAI,OAAO,GAAG,MAAM,EAAE;AACtB,cAAI,CAAC,MAAM;AACT,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,gBAAM,WAAW,IAAI;AACrB,eAAK,OAAO;AACZ,aAAG,MAAM,EAAE,IAAI;AAAA,QACjB;AACF,YAAI,2BAA2B;AAG/B,YAAI,oBAAoB,CAAC,GAAG,aAAa;AACrC,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,WAAWA,KAAE,KAAK,CAAE;AACvC,gBAAI,UAAU,GAAG,SAAS,EAAE;AAG5B,gBAAI,CAAC,QAAS;AACd,kBAAM,cAAc,OAAO;AAC3B,oBAAQ,OAAO;AACf,eAAG,SAAS,EAAE,IAAI;AAAA,UACpB;AAAA,QACF;AACF,YAAI,+BAA+B;AAGnC,YAAI,8BAA8B,CAAC,GAAG,QAAQ;AAC1C,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,MAAMA,KAAE,KAAK,CAAE;AAClC,gBAAI,oBAAoB,GAAG,mBAAmB,EAAE;AAChD,gBAAI,CAAC,kBAAmB;AACxB,kBAAM,wBAAwB,iBAAiB;AAC/C,8BAAkB,OAAO;AACzB,eAAG,mBAAmB,EAAE,IAAI;AAAA,UAC9B;AAAA,QACF;AACF,YAAI,yCAAyC;AAG7C,YAAI,wBAAwB,CAAC,GAAG,SAAS;AACrC,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,KAAK,OAAU,OAAOA,KAAE,KAAK,CAAE;AACnC,kBAAM,kBAAkB,GAAG,KAAK,EAAE,CAAC;AACnC,eAAG,KAAK,EAAE,IAAI;AAAA,UAChB;AAAA,QACF;AACF,YAAI,mCAAmC;AAIvC,YAAI,2BAA2B;AAC/B,YAAI,sCAAsC;AAG1C,iBAAS,aAAa,IAAI;AAAE,gBAAM,UAAU,EAAE;AAAA,QAAE;AAChD,YAAI,0BAA0B;AAG9B,YAAI,eAAe,CAAC,SAAS;AACzB,gBAAM,UAAU,CAAC,CAAC,IAAI;AAAA,QACxB;AACF,YAAI,0BAA0B;AAG9B,iBAAS,eAAe,IAAI,IAAI;AAAE,gBAAM,WAAW,IAAI,EAAE;AAAA,QAAE;AAC3D,YAAI,4BAA4B;AAGhC,YAAI,kBAAkB,CAAC,SAAS,WAAW;AACvC,gBAAM,aAAa,GAAG,SAAS,OAAO,GAAG,GAAG,QAAQ,MAAM,CAAC;AAAA,QAC7D;AACF,YAAI,6BAA6B;AAGjC,iBAAS,WAAW,IAAI;AAAE,gBAAM,QAAQ,EAAE;AAAA,QAAE;AAC5C,YAAI,wBAAwB;AAG5B,YAAI,8BAA8B,CAAC,UAAU;AACzC,gBAAM,yBAAyB,KAAK;AAAA,QACtC;AACF,YAAI,yCAAyC;AAG7C,YAAI,gBAAgB,CAAC,MAAM,OAAO,UAAU;AAExC,gBAAM,WAAW,MAAM,OAAO,KAAK;AAAA,QAErC;AACF,YAAI,2BAA2B;AAG/B,YAAI,yBAAyB,CAAC,MAAM,OAAO,OAAO,cAAc;AAC5D,gBAAM,oBAAoB,MAAM,OAAO,OAAO,SAAS;AAAA,QACzD;AACF,YAAI,oCAAoC;AAIxC,YAAI,8BAA8B;AAClC,YAAI,yCAAyC;AAI7C,YAAI,4BAA4B;AAChC,YAAI,uCAAuC;AAG3C,YAAI,0CAA0C,CAAC,MAAM,OAAO,OAAO,eAAe,iBAAiB;AAC/F,gBAAM,OAAO,sCAAsC,EAAE,MAAM,OAAO,OAAO,eAAe,YAAY;AAAA,QACtG;AACF,YAAI,qDAAqD;AAIzD,YAAI,4BAA4B;AAChC,YAAI,uCAAuC;AAI3C,YAAI,2BAA2B;AAC/B,YAAI,sCAAsC;AAE1C,YAAI,uBAAuB,CAAC;AAG5B,YAAI,iBAAiB,CAAC,GAAG,SAAS;AAE9B,cAAI,WAAW,qBAAqB,CAAC;AACrC,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,qBAASA,EAAC,IAAI,OAAU,OAAOA,KAAE,KAAK,CAAE;AAAA,UAC1C;AAEA,gBAAM,YAAY,QAAQ;AAAA,QAC5B;AACF,YAAI,4BAA4B;AAIhC,YAAI,oBAAoB;AACxB,YAAI,+BAA+B;AAInC,YAAI,sBAAsB;AAC1B,YAAI,iCAAiC;AAGrC,YAAI,kBAAkB,CAAC,MAAM,OAAOW,OAAM,YAAY;AAElD,gBAAM,aAAa,MAAM,OAAOA,OAAM,OAAO;AAAA,QAE/C;AACF,YAAI,6BAA6B;AAGjC,YAAI,2BAA2B,CAAC,MAAM,OAAOA,OAAM,SAAS,cAAc;AACtE,gBAAM,sBAAsB,MAAM,OAAOA,OAAM,SAAS,SAAS;AAAA,QACnE;AACF,YAAI,sCAAsC;AAI1C,YAAI,gCAAgC;AACpC,YAAI,2CAA2C;AAI/C,YAAI,8BAA8B;AAClC,YAAI,yCAAyC;AAG7C,YAAI,sDAAsD,CAAC,MAAM,OAAOA,OAAM,QAAQ,eAAe,YAAY,iBAAiB;AAC9H,gBAAM,OAAO,kDAAkD,EAAE,MAAM,OAAOA,OAAM,QAAQ,eAAe,YAAY,YAAY;AAAA,QACrI;AACF,YAAI,iEAAiE;AAIrE,YAAI,8BAA8B;AAClC,YAAI,yCAAyC;AAI7C,YAAI,6BAA6B;AACjC,YAAI,wCAAwC;AAG5C,YAAI,uBAAuB,CAAC,MAAM,OAAO,KAAK,OAAOA,OAAM,YAAY;AAKnE,0BAAgB,MAAM,OAAOA,OAAM,OAAO;AAAA,QAC5C;AACF,YAAI,kCAAkC;AAGtC,iBAAS,UAAU,IAAI;AAAE,gBAAM,OAAO,EAAE;AAAA,QAAE;AAC1C,YAAI,uBAAuB;AAG3B,YAAI,6BAA6B,CAAC,UAAU;AACxC,gBAAM,wBAAwB,KAAK;AAAA,QACrC;AACF,YAAI,wCAAwC;AAG5C,iBAAS,YAAY,IAAI;AAAE,gBAAM,SAAS,EAAE;AAAA,QAAE;AAC9C,YAAI,yBAAyB;AAG7B,YAAI,iBAAiB,CAAC,WAAW;AAC7B,gBAAM,sBAAsB,aAAa,EAAE,MAAM;AAAA,QACnD;AACF,YAAI,4BAA4B;AAGhC,iBAAS,0BAA0B;AAAE,gBAAM,qBAAqB;AAAA,QAAE;AAClE,YAAI,qCAAqC;AAGzC,YAAI,eAAe,CAAC,WAAW,UAAU;AACrC,cAAI,OAAO,MAAM,UAAU,WAAW,KAAK;AAC3C,cAAI,MAAM;AACR,gBAAI,KAAK,GAAG,SAAS,GAAG,KAAK;AAC7B,iBAAK,OAAO;AACZ,eAAG,MAAM,EAAE,IAAI;AACf,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT;AACF,YAAI,0BAA0B;AAG9B,iBAAS,YAAY;AAAE,gBAAM,OAAO;AAAA,QAAE;AACtC,YAAI,uBAAuB;AAG3B,iBAAS,WAAW;AAAE,gBAAM,MAAM;AAAA,QAAE;AACpC,YAAI,sBAAsB;AAG1B,YAAI,6BAA6B,CAAC,QAAQ,YAAY,oBAAoB,iBAAiB;AACvF,gBAAM;AAAA,YAAwB;AAAA,YAAQ;AAAA,YAAY;AAAA,YACf,GAAG,cAAc,YAAY;AAAA,UAAC;AAAA,QACnE;AACF,YAAI,wCAAwC;AAG5C,YAAI,0BAA0B,CAAC,QAAQ,YAAY,WAAW,SAAS,UAAU;AAC7E,gBAAM;AAAA,YAAqB;AAAA,YAAQ;AAAA,YAAY;AAAA,YACf,GAAG,SAAS,OAAO;AAAA,YAAG;AAAA,UAAK;AAAA,QAC7D;AACF,YAAI,qCAAqC;AAGzC,YAAI,6BAA6B,CAAC,QAAQ,YAAY,SAAS,OAAO,UAAU;AAC5E,gBAAM,wBAAwB,QAAQ,YAAY,GAAG,SAAS,OAAO,GAAG,OAAO,KAAK;AAAA,QACtF;AACF,YAAI,wCAAwC;AAG5C,iBAAS,aAAa,IAAI;AAAE,gBAAM,UAAU,EAAE;AAAA,QAAE;AAChD,YAAI,0BAA0B;AAE9B,YAAI,gBAAgB,CAAC,GAAG,SAAS,gBAAgB,gBACxC;AACL,mBAASX,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,SAAS,MAAM,cAAc,EAAE;AACnC,gBAAI,KAAK,UAAU,GAAG,SAAS,WAAW;AAC1C,gBAAI,QAAQ;AACV,qBAAO,OAAO;AACd,0BAAY,EAAE,IAAI;AAAA,YACpB,OAAO;AACL,iBAAG;AAAA,gBAAY;AAAA;AAAA,cAAgC;AAAA,YACjD;AACA,mBAAU,UAAUA,KAAE,KAAK,CAAE,IAAI;AAAA,UACnC;AAAA,QACF;AAGF,YAAI,gBAAgB,CAAC,GAAG,YAAY;AAChC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAS;AAAA,YAAgB,GAAG;AAAA,UAC3C;AAAA,QACJ;AACF,YAAI,2BAA2B;AAI/B,YAAI,qBAAqB,CAAC,GAAG,QAAQ;AACjC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAK;AAAA,YAAqB,GAAG;AAAA,UAC5C;AAAA,QACJ;AACF,YAAI,gCAAgC;AAGpC,YAAI,gBAAgB,CAAC,GAAG,QAAQ;AAC5B;AAAA,YAAc;AAAA,YAAG;AAAA,YAAK;AAAA,YAAe,GAAG;AAAA,UACtC;AAAA,QACJ;AACF,YAAI,2BAA2B;AAG/B,YAAI,mBAAmB,CAAC,GAAG,QAAQ;AAC/B,mBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,gBAAI,QAAQ,MAAM,sBAAsB,gBAAgB,EAAE;AAC1D,gBAAI,CAAC,OAAO;AACV,iBAAG;AAAA,gBAAY;AAAA;AAAA,cAAgC;AAC/C,qBAAOA,KAAI,EAAG,QAAU,MAAMA,OAAI,KAAK,CAAE,IAAI;AAC7C;AAAA,YACF;AACA,gBAAI,KAAK,GAAG,SAAS,GAAG,OAAO;AAC/B,kBAAM,OAAO;AACb,eAAG,QAAQ,EAAE,IAAI;AACjB,mBAAU,MAAMA,KAAE,KAAK,CAAE,IAAI;AAAA,UAC/B;AAAA,QACF;AACF,YAAI,8BAA8B;AAIlC,YAAI,sBAAsB,CAAC,GAAG,kBAAkB;AAC5C;AAAA,YAAc;AAAA,YAAG;AAAA,YAAe;AAAA,YAAsB,GAAG;AAAA,UACvD;AAAA,QACJ;AACF,YAAI,iCAAiC;AAGrC,YAAI,iBAAiB,CAAC,GAAG,aAAa;AAClC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAU;AAAA,YAAiB,GAAG;AAAA,UAC7C;AAAA,QACJ;AACF,YAAI,4BAA4B;AAIhC,YAAI,iBAAiB,CAAC,GAAG,aAAa;AAClC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAU;AAAA,YAAiB,GAAG;AAAA,UAC7C;AAAA,QACJ;AACF,YAAI,4BAA4B;AAGhC,YAAI,2BAA2B,CAAC,GAAG,QAAQ;AACvC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAK;AAAA,YAA2B,GAAG;AAAA,UAClD;AAAA,QACJ;AACF,YAAI,sCAAsC;AAI1C,iBAAS,mBAAmB,GAAG,QAAQ;AACnC;AAAA,YAAc;AAAA,YAAG;AAAA,YAAQ;AAAA,YAAqB,GAAG;AAAA,UAC/C;AAAA,QACJ;AACF,YAAI,gCAAgC;AAIpC,YAAI,wBAAwB;AAC5B,YAAI,mCAAmC;AAGvC,iBAAS,kBAAkB,IAAI;AAAE,gBAAM,eAAe,EAAE;AAAA,QAAE;AAC1D,YAAI,+BAA+B;AAGnC,YAAI,+BAA+B,CAAC,UAAU,SAAS,OAAO,SAAS,QAAQ,MAAMW,OAAM,SAAS;AAChG,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,OAAO,MAAM,QAAQ,EAAE,SAAS,KAAK;AACzC,cAAI,MAAM;AAER,gBAAI,0BAA0B,QAAQ,aAAa,KAAK,MAAM,MAAM,OAAO;AAC3E,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AACpC,gBAAI,KAAM,QAAS,QAAO,CAAE,IAAI,KAAK;AACrC,gBAAIA,MAAM,QAASA,SAAO,CAAE,IAAI,KAAK;AAAA,UACvC;AAAA,QACF;AAGF,YAAI,qBAAqB,CAAC,SAAS,OAAO,SAAS,QAAQ,MAAMA,OAAM,SAAS;AAC5E,uCAA6B,mBAAmB,SAAS,OAAO,SAAS,QAAQ,MAAMA,OAAM,IAAI;AAAA,QACnG;AACF,YAAI,gCAAgC;AAIpC,YAAI,sBAAsB,CAAC,SAAS,OAAO,SAAS,QAAQ,MAAMA,OAAM,SAAS;AAC7E,uCAA6B,oBAAoB,SAAS,OAAO,SAAS,QAAQ,MAAMA,OAAM,IAAI;AAAA,QACpG;AACF,YAAI,iCAAiC;AAGrC,YAAI,+BAA+B,CAAC,SAAS,mBAAmB,SAAS,QAAQ,qBAAqB;AAClG,oBAAU,GAAG,SAAS,OAAO;AAE7B,cAAI,SAAS,MAAM,0BAA0B,SAAS,iBAAiB;AACvE,cAAI,CAAC,OAAQ;AACb,cAAI,oBAAoB,UAAU,GAAG;AACnC,gBAAI,0BAA0B,aAAa,QAAQ,kBAAkB,OAAO;AAC5E,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,UACtC,OAAO;AACL,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,UACtC;AAAA,QACF;AACF,YAAI,0CAA0C;AAG9C,YAAI,6BAA6B,CAAC,SAAS,mBAAmB,OAAO,WAAW;AAC5E,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,oBAAU,GAAG,SAAS,OAAO;AAE7B,cAAI,SAAS,OAA2C;AACtD,gBAAI,OAAO,MAAM,0BAA0B,SAAS,iBAAiB;AACrE,mBAAS,UAAS,CAAE,IAAI,KAAK,SAAO;AACpC;AAAA,UACF;AAEA,cAAI,SAAS,MAAM,+BAA+B,SAAS,mBAAmB,KAAK;AACnF,cAAI,WAAW,KAAM;AACrB,cAAI,SAAS,OAAoD;AAC/D,qBAASX,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,qBAAU,SAASA,KAAE,KAAK,CAAE,IAAI,OAAOA,EAAC;AAAA,YAC1C;AAAA,UACF,OAAO;AACL,mBAAS,UAAS,CAAE,IAAI;AAAA,UAC1B;AAAA,QACF;AACF,YAAI,wCAAwC;AAG5C,YAAI,yBAAyB,CAAC,SAAS,cAAc,gBAAgB,OAAO,WAAW;AACnF,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,eAAe,KAAK,kBAAkB,GAAG;AAC3C,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,MAAM,CAAC;AACX,mBAASA,KAAI,GAAGA,KAAI,cAAcA,MAAK;AACrC,gBAAI,KAAK,OAAU,iBAAiBA,KAAE,KAAK,CAAE,CAAC;AAAA,UAChD;AAEA,cAAI,SAAS,MAAM,kBAAkB,SAAS,KAAK,KAAK;AACxD,cAAI,CAAC,OAAQ;AAEb,cAAI,MAAM,OAAO;AACjB,mBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC5B,mBAAU,SAASA,KAAE,KAAK,CAAE,IAAI,OAAOA,EAAC;AAAA,UAC1C;AAAA,QACF;AACF,YAAI,oCAAoC;AAGxC,YAAI,wBAAwB,CAAC,SAAS,UAAU,OAAO,YAAY;AAC/D,cAAI,SAAS,MAAM,mBAAmB,GAAG,SAAS,OAAO,CAAC;AAC1D,cAAI,MAAM,OAAO;AACjB,cAAI,MAAM,UAAU;AAClB,kBAAM;AAAA,UACR;AACA,iBAAS,SAAQ,CAAE,IAAI;AACvB,mBAASA,KAAI,GAAGA,KAAI,KAAK,EAAEA,IAAG;AAC5B,gBAAI,KAAK,GAAG,QAAQ,QAAQ,OAAOA,EAAC,CAAC;AACrC,mBAAU,UAAUA,KAAE,KAAK,CAAE,IAAI;AAAA,UACnC;AAAA,QACF;AACF,YAAI,mCAAmC;AAIvC,YAAI,uBAAuB,CAAC,SAAS,SAAS;AAC1C,iBAAO,MAAM,kBAAkB,GAAG,SAAS,OAAO,GAAG,aAAa,IAAI,CAAC;AAAA,QACzE;AACF,YAAI,kCAAkC;AAEtC,YAAI,iBAAiB,CAAC,QAAQ;AAC1B,iBAAO,QAAU,OAAM,CAAE,IAAI,OAAU,MAAM,KAAK,CAAE,IAAI;AAAA,QAC1D;AAEF,YAAI,iBAAiB,CAAC,QAAQ;AAC1B,iBAAO,QAAU,OAAM,CAAE,IAAI,QAAW,MAAM,KAAK,CAAE,IAAI;AAAA,QAC3D;AACF,YAAI,gBAAgB,CAAC,KAAK,QAAQ;AAC9B,kBAAU,OAAM,CAAE,IAAI;AACtB,cAAI,QAAQ,QAAU,OAAM,CAAE;AAC9B,kBAAW,MAAM,KAAK,CAAE,KAAK,MAAM,SAAO;AAC1C,cAAI,eAAgB,OAAO,IAAK,eAAe,GAAG,IAAI,eAAe,GAAG;AACxE,cAAI,SAAW,OAAM;AACrB,cAAI,gBAAgB,IAAK,UAAS,sDAAsD,GAAG,6BAA6B,YAAY,QAAQ,MAAM,CAAC,CAAC,QAAQ,YAAY,QAAQ,SAAO,CAAC,CAAC,CAAC,gCAAgC,YAAY,WAAW;AAAA,QACnP;AAEF,YAAI,mCAAmC,SAAS,KAAK;AAGjD,cAAI,sBAAsB;AAAA;AAAA,YAExB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA;AAAA,YAEA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAEA,kBAAQ,IAAI,uBAAuB,KAAK,CAAC,GAAG,OAAO,SAAO,oBAAoB,SAAS,GAAG,CAAC;AAAA,QAC7F;AAEF,YAAI,qBAAqB,SAAS,sBAAsB;AACpD,cAAI,OAAO,iCAAiC,KAAK;AACjD,iBAAO,KAAK,OAAO,KAAK,IAAI,CAAC,MAAM,QAAQ,CAAC,CAAC;AAC7C,iBAAO;AAAA,QACT;AAEF,YAAI,qBAAqB,CAAC,OAAO,GAAGW,UAAS;AAMzC,cAAI,CAAC,GAAG;AACN,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,MAAM;AACV,kBAAQ,OAAO;AAAA,YACb,KAAK;AACH,oBAAM;AACN;AAAA,YACF,KAAK;AACH,kBAAIA,SAAQ,KAAKA,SAAQ,GAAG;AAC1B,mBAAG,YAAY,IAAK;AAAA,cACtB;AAGA;AAAA,YACF,KAAK;AAAA,YACL,KAAK;AACH,oBAAM;AACN;AAAA,YACF,KAAK;AAKH,kBAAI,UAAU,MAAM;AAAA,gBAAa;AAAA;AAAA,cAAwC;AACzE,oBAAM,UAAU,QAAQ,SAAS;AACjC;AAAA,YAEF,KAAK;AACH,kBAAI,GAAG,eAAe,UAAU,GAAG;AAEjC,mBAAG;AAAA,kBAAY;AAAA;AAAA,gBAAgC;AAC/C;AAAA,cACF;AACA,oBAAM,mBAAmB,EAAE;AAC3B;AAAA,YACF,KAAK;AAAA,YACL,KAAK;AACH,kBAAI,GAAG,eAAe,UAAU,GAAG;AACjC,mBAAG,YAAY,IAAK;AACpB;AAAA,cACF;AACA,oBAAM,SAAS,QAAS,IAAI;AAC5B;AAAA,UACJ;AAEA,cAAI,QAAQ,QAAW;AACrB,gBAAI,SAAS,MAAM,aAAa,KAAK;AACrC,oBAAQ,OAAO,QAAQ;AAAA,cACrB,KAAK;AACH,sBAAM;AACN;AAAA,cACF,KAAK;AACH,sBAAM,SAAS,IAAI;AACnB;AAAA,cACF,KAAK;AACH,mBAAG,YAAY,IAAK;AACpB;AAAA,cACF,KAAK;AACH,oBAAI,WAAW,MAAM;AAInB,0BAAQ,OAAO;AAAA,oBACb,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK;AAAA,oBACL,KAAK,OAAQ;AACX,4BAAM;AACN;AAAA,oBACF;AAAA,oBACA,SAAS;AACP,yBAAG,YAAY,IAAK;AACpB;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF,WAAW,kBAAkB,gBAClB,kBAAkB,eAClB,kBAAkB,cAClB,kBAAkB,OAAO;AAClC,2BAASX,KAAI,GAAGA,KAAI,OAAO,QAAQ,EAAEA,IAAG;AACtC,4BAAQW,OAAM;AAAA,sBACZ,KAAK;AAAG,+BAAU,IAAIX,KAAE,KAAK,CAAE,IAAI,OAAOA,EAAC;AAAG;AAAA,sBAC9C,KAAK;AAAG,gCAAW,IAAIA,KAAE,KAAK,CAAE,IAAI,OAAOA,EAAC;AAAG;AAAA,sBAC/C,KAAK;AAAG,8BAAS,IAAIA,MAAK,CAAE,IAAI,OAAOA,EAAC,IAAI,IAAI;AAAG;AAAA,oBACrD;AAAA,kBACF;AACA;AAAA,gBACF,OAAO;AACL,sBAAI;AACF,0BAAM,OAAO,OAAO;AAAA,kBACtB,SAAQ,GAAG;AACT,uBAAG,YAAY,IAAK;AACpB,wBAAI,2BAA2BW,KAAI,sDAAsD,KAAK,cAAc,CAAC,GAAG;AAChH;AAAA,kBACF;AAAA,gBACF;AACA;AAAA,cACF;AACE,mBAAG,YAAY,IAAK;AACpB,oBAAI,2BAA2BA,KAAI,+BAA+BA,KAAI,KAAK,KAAK,oBAAoB,MAAM,YAAY,OAAO,MAAO,GAAG;AACvI;AAAA,YACJ;AAAA,UACF;AAEA,kBAAQA,OAAM;AAAA,YACZ,KAAK;AAAG,4BAAc,GAAG,GAAG;AAAG;AAAA,YAC/B,KAAK;AAAG,qBAAS,KAAI,CAAE,IAAI;AAAK;AAAA,YAChC,KAAK;AAAK,sBAAU,KAAI,CAAE,IAAI;AAAK;AAAA,YACnC,KAAK;AAAG,oBAAQ,KAAI,CAAE,IAAI,MAAM,IAAI;AAAG;AAAA,UACzC;AAAA,QACF;AAGF,YAAI,iBAAiB,CAAC,OAAO,MAAM,mBAAmB,OAAO,GAAG,CAAC;AACjE,YAAI,4BAA4B;AAGhC,YAAI,4BAA4B,CAAC,QAAQ,OAAO,SAAS;AACrD,cAAI,CAAC,MAAM;AAGT,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,wBAAc,MAAM,MAAM,mBAAmB,QAAQ,KAAK,CAAC;AAAA,QAC7D;AACF,YAAI,uCAAuC;AAG3C,YAAI,0BAA0B,CAAC,QAAQ,OAAO,SAAS;AACnD,cAAI,CAAC,MAAM;AAIT,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,QAAO,CAAE,IAAI,MAAM,mBAAmB,QAAQ,KAAK;AAAA,QAC9D;AACF,YAAI,qCAAqC;AAGzC,YAAI,cAAc,MAAM;AACpB,cAAI,QAAQ,MAAM,SAAS,KAAK,GAAG;AACnC,aAAG,YAAY;AACf,iBAAO;AAAA,QACT;AACF,YAAI,yBAAyB;AAI7B,YAAI,eAAe,CAAC,OAAO,MAAM,mBAAmB,OAAO,GAAG,CAAC;AAC/D,YAAI,0BAA0B;AAG9B,YAAI,yBAAyB,CAAC,SAAS,SAAS;AAC5C,iBAAO,MAAM,oBAAoB,GAAG,SAAS,OAAO,GAAG,aAAa,IAAI,CAAC;AAAA,QAC3E;AACF,YAAI,oCAAoC;AAGxC,YAAI,yCAAyC,CAAC,QAAQ,YAAY,OAAO,WAAW;AAChF,cAAI,SAAS,MAAM,kCAAkC,QAAQ,YAAY,KAAK;AAC9E,cAAI,kBAAkB,qBAClB,kBAAkB,cAAc;AAClC,qBAAS,OAAO,OAAO;AAAA,UACzB;AACA,iBAAS,UAAS,CAAE,IAAI;AAAA,QAC1B;AACF,YAAI,oDAAoD;AAExD,YAAI,4BAA4B,CAAC,QAAQ,OAAO,MAAMA,UAAS;AAC3D,cAAI,CAAC,MAAM;AAGT,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,SAAS,MAAM,oBAAoB,QAAQ,KAAK;AACpD,cAAI;AACJ,kBAAQ,OAAO,QAAQ;AAAA,YACrB,KAAK;AACH,oBAAM,SAAS,IAAI;AACnB;AAAA,YACF,KAAK;AACH,oBAAM;AACN;AAAA,YACF,KAAK;AACH,kBAAI,WAAW,MAAM;AACnB,wBAAQ,QAAQ;AAAA,kBACd,KAAK;AAAA,kBACL,KAAK;AACH,0BAAM;AACN;AAAA,kBACF,SAAS;AACP,uBAAG,YAAY,IAAK;AACpB;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,WAAW,kBAAkB,aAAa;AACxC,sBAAM,OAAO,OAAO;AAAA,cACtB,OAAO;AACL,mBAAG,YAAY,IAAK;AACpB;AAAA,cACF;AACA;AAAA,YACF;AACE,iBAAG,YAAY,IAAK;AACpB;AAAA,UACJ;AAEA,kBAAQA,OAAM;AAAA,YACZ,KAAK;AAAG,4BAAc,MAAM,GAAG;AAAG;AAAA,YAClC,KAAK;AAAG,qBAAS,QAAO,CAAE,IAAI;AAAK;AAAA,YACnC,KAAK;AAAG,sBAAU,QAAO,CAAE,IAAI;AAAK;AAAA,YACpC,KAAK;AAAG,oBAAQ,QAAO,CAAE,IAAI,MAAM,IAAI;AAAG;AAAA,YAC1C;AAAS,oBAAM,2DAA2DA;AAAA,UAC5E;AAAA,QACF;AAEF,YAAI,qBAAqB,CAAC,QAAQ,OAAO,SACrC,0BAA0B,QAAQ,OAAO,MAAM,CAAC;AACpD,YAAI,gCAAgC;AAGpC,YAAI,mBAAmB,CAAC,OAAO,MAAM;AACjC,6BAAmB,OAAO,GAAG,CAAC;AAAA,QAChC;AACF,YAAI,8BAA8B;AAGlC,YAAI,mBAAmB,CAAC,QAAQ,OAAO,SACnC,0BAA0B,QAAQ,OAAO,MAAM,CAAC;AACpD,YAAI,8BAA8B;AAIlC,YAAI,iBAAiB,CAAC,OAAO,MAAM,mBAAmB,OAAO,GAAG,CAAC;AACjE,YAAI,4BAA4B;AAGhC,YAAI,yBAAyB,CAAC,QAAQ,gBAAgB,OAAO,SAAS,WAAW;AAC7E,cAAI,UAAU,GAAG;AACf,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,MAAM,MAAM,2BAA2B,QAAQ,gBAAgB,KAAK;AACxE,cAAI,QAAQ,KAAM;AAClB,mBAASX,KAAI,GAAGA,KAAI,IAAI,UAAUA,KAAI,SAAS,EAAEA,IAAG;AAClD,mBAAU,SAASA,KAAE,KAAK,CAAE,IAAI,IAAIA,EAAC;AAAA,UACvC;AAAA,QACF;AACF,YAAI,oCAAoC;AAGxC,YAAI,sBAAsB,CAAC,SAAS,SAAS,QAAQ,cAAc,WAAW;AAC1E,aAAG;AAAA,YAAY;AAAA;AAAA,UAA6B;AAAA,QAC9C;AACF,YAAI,iCAAiC;AAGrC,YAAI,uBAAuB,CAAC,SAAS,WAAW,QAAQ,YAAY;AAChE,cAAI,MAAM,MAAM,kBAAkB,GAAG,SAAS,OAAO,CAAC;AACtD,cAAI,QAAQ,KAAM,OAAM;AACxB,cAAI,0BAA2B,YAAY,KAAK,UAAW,aAAa,KAAK,SAAS,SAAS,IAAI;AACnG,cAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,QACtC;AACF,YAAI,kCAAkC;AAGtC,YAAI,kBAAkB,CAAC,SAAS,OAAO,MAAM;AACzC,cAAI,CAAC,GAAG;AAIN,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AAEA,cAAI,WAAW,GAAG,SAAS;AACzB,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AAEA,oBAAU,GAAG,SAAS,OAAO;AAE7B,cAAI,SAAS,OAAQ;AACnB,gBAAI,MAAM,MAAM,kBAAkB,OAAO;AACzC,gBAAI,QAAQ,KAAM,OAAM;AACxB,mBAAS,KAAI,CAAE,IAAI,IAAI,SAAS;AAAA,UAClC,WAAW,SAAS,OAA2C;AAC7D,gBAAI,CAAC,QAAQ,kBAAkB;AAC7B,uBAASA,KAAI,GAAGA,KAAI,MAAM;AAAA,gBAAoB;AAAA,gBAAS;AAAA;AAAA,cAA4B,GAAG,EAAEA,IAAG;AACzF,wBAAQ,mBAAmB,KAAK,IAAI,QAAQ,kBAAkB,MAAM,iBAAiB,SAASA,EAAC,EAAE,KAAK,SAAO,CAAC;AAAA,cAChH;AAAA,YACF;AACA,mBAAS,KAAI,CAAE,IAAI,QAAQ;AAAA,UAC7B,WAAW,SAAS,OAA6C;AAC/D,gBAAI,CAAC,QAAQ,oBAAoB;AAC/B,uBAASA,KAAI,GAAGA,KAAI,MAAM;AAAA,gBAAoB;AAAA,gBAAS;AAAA;AAAA,cAA8B,GAAG,EAAEA,IAAG;AAC3F,wBAAQ,qBAAqB,KAAK,IAAI,QAAQ,oBAAoB,MAAM,gBAAgB,SAASA,EAAC,EAAE,KAAK,SAAO,CAAC;AAAA,cACnH;AAAA,YACF;AACA,mBAAS,KAAI,CAAE,IAAI,QAAQ;AAAA,UAC7B,WAAW,SAAS,OAAsD;AACxE,gBAAI,CAAC,QAAQ,2BAA2B;AACtC,uBAASA,KAAI,GAAGA,KAAI,MAAM;AAAA,gBAAoB;AAAA,gBAAS;AAAA;AAAA,cAAkC,GAAG,EAAEA,IAAG;AAC/F,wBAAQ,4BAA4B,KAAK,IAAI,QAAQ,2BAA2B,MAAM,0BAA0B,SAASA,EAAC,EAAE,SAAO,CAAC;AAAA,cACtI;AAAA,YACF;AACA,mBAAS,KAAI,CAAE,IAAI,QAAQ;AAAA,UAC7B,OAAO;AACL,mBAAS,KAAI,CAAE,IAAI,MAAM,oBAAoB,SAAS,KAAK;AAAA,UAC7D;AAAA,QACF;AACF,YAAI,6BAA6B;AAIjC,YAAI,2BAA2B,CAAC,IAAI,OAAO,WAAW;AAClD,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,cAAI;AACJ,cAAI,GAAG,eAAe,UAAU,GAChC;AACE,oBAAQ,MAAM,sBAAsB,mBAAmB,EAAE,OAAO,KAAK;AAAA,UACvE,OACK;AACH,oBAAQ,MAAM,kBAAkB,OAAO,KAAK;AAAA,UAC9C;AACA,cAAI;AACJ,cAAI,OAAO,SAAS,WAAW;AAC7B,kBAAM,QAAQ,IAAI;AAAA,UACpB,OAAO;AACL,kBAAM;AAAA,UACR;AACA,wBAAc,QAAQ,GAAG;AAAA,QAC3B;AACF,YAAI,sCAAsC;AAG1C,YAAI,yBAAyB,CAAC,IAAI,OAAO,WAAW;AAChD,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,cAAI,QAAQ,MAAM,sBAAsB,mBAAmB,EAAE,OAAO,KAAK;AACzE,cAAI;AACJ,cAAI,OAAO,SAAS,WAAW;AAC7B,kBAAM,QAAQ,IAAI;AAAA,UACpB,OAAO;AACL,kBAAM;AAAA,UACR;AACA,iBAAS,UAAS,CAAE,IAAI;AAAA,QAC1B;AACF,YAAI,oCAAoC;AAIxC,YAAI,4BAA4B;AAChC,YAAI,uCAAuC;AAG3C,YAAI,uBAAuB,CAAC,IAAI,OAAO,WAAW;AAC9C,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,cAAI,QAAQ,MAAM,kBAAkB,OAAO,KAAK;AAChD,cAAI;AACJ,cAAI,OAAO,SAAS,WAAW;AAC7B,kBAAM,QAAQ,IAAI;AAAA,UACpB,OAAO;AACL,kBAAM;AAAA,UACR;AACA,iBAAS,UAAS,CAAE,IAAI;AAAA,QAC1B;AACF,YAAI,kCAAkC;AAItC,YAAI,0BAA0B;AAC9B,YAAI,qCAAqC;AAGzC,YAAI,gBAAgB,CAAC,QAAQ,OAAO,WAAW;AAC3C,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,UAAS,CAAE,IAAI,MAAM,SAAS,QAAQ,KAAK;AAAA,QACtD;AACF,YAAI,2BAA2B;AAG/B,YAAI,mBAAmB,CAAC,QAAQ,OAAO,WAAW;AAC9C,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,UAAS,CAAE,IAAI,MAAM,sBAAsB,aAAa,EAAE,QAAQ,KAAK;AAAA,QAClF;AACF,YAAI,8BAA8B;AAGlC,YAAI,gCAAgC,CAAC,QAAQ,OAAO,WAAW;AAC3D,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,UAAS,CAAE,IAAI,MAAM,yBAAyB,QAAQ,KAAK;AAAA,QACtE;AACF,YAAI,2CAA2C;AAG/C,YAAI,2BAA2B,CAAC,SAAS,OAAO,WAAW;AACvD,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,kBAAU,UAAS,CAAE,IAAI,MAAM,oBAAoB,GAAG,SAAS,OAAO,GAAG,KAAK;AAAA,QAChF;AACF,YAAI,sCAAsC;AAG1C,YAAI,2BAA2B,CAAC,SAAS,OAAO,WAAW;AACvD,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,UAAS,CAAE,IAAI,MAAM,oBAAoB,GAAG,SAAS,OAAO,GAAG,KAAK;AAAA,QAC/E;AACF,YAAI,sCAAsC;AAI1C,YAAI,sBAAsB,CAAC,QAAQ,WAAW,QAAQ,YAAY;AAC9D,cAAI,MAAM,MAAM,iBAAiB,GAAG,QAAQ,MAAM,CAAC;AACnD,cAAI,QAAQ,KAAM,OAAM;AACxB,cAAI,0BAA2B,YAAY,KAAK,UAAW,aAAa,KAAK,SAAS,SAAS,IAAI;AACnG,cAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,QACtC;AACF,YAAI,iCAAiC;AAGrC,YAAI,8BAA8B,CAAC,YAAY,eAAe,OAAO,cAAc;AAC/E,cAAI,SAAS,MAAM,yBAAyB,YAAY,aAAa;AACrE,iBAAS,SAAQ,CAAE,IAAI,OAAO;AAC9B,iBAAU,QAAQ,KAAK,CAAE,IAAI,OAAO;AACpC,iBAAS,aAAY,CAAE,IAAI,OAAO;AAAA,QACpC;AACF,YAAI,yCAAyC;AAG7C,YAAI,qBAAqB,CAAC,QAAQ,SAAS,QAAQ,WAAW;AAC1D,cAAI,SAAS,MAAM,gBAAgB,GAAG,QAAQ,MAAM,CAAC;AACrD,cAAI,CAAC,OAAQ;AACb,cAAI,0BAA2B,UAAU,KAAK,SAAU,aAAa,QAAQ,QAAQ,OAAO,IAAI;AAChG,cAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,QACtC;AACF,YAAI,gCAAgC;AAGpC,YAAI,iBAAiB,CAAC,QAAQ,OAAO,MAAM;AACvC,cAAI,CAAC,GAAG;AAIN,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,SAAS,OAAQ;AACnB,gBAAI,MAAM,MAAM,iBAAiB,GAAG,QAAQ,MAAM,CAAC;AACnD,gBAAI,QAAQ,KAAM,OAAM;AAKxB,gBAAI,YAAY,MAAM,IAAI,SAAS,IAAI;AACvC,mBAAS,KAAI,CAAE,IAAI;AAAA,UACrB,WAAW,SAAS,OAAQ;AAC1B,gBAAI,SAAS,MAAM,gBAAgB,GAAG,QAAQ,MAAM,CAAC;AAGrD,gBAAI,eAAe,SAAS,OAAO,SAAS,IAAI;AAChD,mBAAS,KAAI,CAAE,IAAI;AAAA,UACrB,OAAO;AACL,mBAAS,KAAI,CAAE,IAAI,MAAM,mBAAmB,GAAG,QAAQ,MAAM,GAAG,KAAK;AAAA,UACvE;AAAA,QACF;AACF,YAAI,4BAA4B;AAKhC,YAAI,eAAe,CAAC,UAAU;AAC1B,cAAI,MAAM,GAAG,YAAY,KAAK;AAC9B,cAAI,CAAC,KAAK;AACR,oBAAQ,OAAO;AAAA,cACb,KAAK;AACH,sBAAM,gBAAgB,mBAAmB,EAAE,KAAK,GAAG,CAAC;AACpD;AAAA,cACF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,oBAAI,IAAI,MAAM,aAAa,KAAK;AAChC,oBAAI,CAAC,GAAG;AACN,qBAAG;AAAA,oBAAY;AAAA;AAAA,kBAAwB;AAAA,gBACzC;AACA,sBAAM,IAAI,gBAAgB,CAAC,IAAI;AAC/B;AAAA,cAEF,KAAK;AACH,oBAAI,YAAY,MAAM;AAAA,kBAAa;AAAA;AAAA,gBAAqB;AAExD,oBAAI,GAAG,eAAe,WAAW,EAAG,aAAY,kBAAkB,SAAS;AAAA,qBAE3E;AACE,8BAAY,kBAAkB,SAAS;AAAA,gBACzC;AACA,sBAAM,gBAAgB,SAAS;AAC/B;AAAA,cACF,KAAK;AACH,oBAAI,cAAc,MAAM;AAAA,kBAAa;AAAA;AAAA,gBAAsC;AAE3E,oBAAI,SAAS;AACb,oBAAI,UAAU,YAAY,MAAM,MAAM;AACtC,oBAAI,YAAY,MAAM;AACpB,sBAAI,QAAQ,CAAC,EAAE,UAAU,EAAG,SAAQ,CAAC,IAAI,QAAQ,CAAC,IAAI;AACtD,gCAAc,qBAAqB,QAAQ,CAAC,CAAC,KAAK,WAAW;AAAA,gBAC/D;AACA,sBAAM,gBAAgB,WAAW;AACjC;AAAA,cACF;AACE,mBAAG;AAAA,kBAAY;AAAA;AAAA,gBAAwB;AAAA,YAE3C;AACA,eAAG,YAAY,KAAK,IAAI;AAAA,UAC1B;AACA,iBAAO;AAAA,QACT;AACF,YAAI,0BAA0B;AAI9B,YAAI,gBAAgB,CAAC,MAAM,UAAU;AACjC,cAAI,GAAG,eAAe,UAAU,GAAG;AACjC,eAAG;AAAA,cAAY;AAAA;AAAA,YAAgC;AAC/C,mBAAO;AAAA,UACT;AACA,cAAI,eAAe,GAAG,aAAa,IAAI;AACvC,cAAI,cAAc;AAChB,gBAAI,QAAQ,KAAK,SAAS,aAAa,QAAQ;AAC7C,iBAAG;AAAA,gBAAY;AAAA;AAAA,cAAyB;AACxC,qBAAO;AAAA,YACT;AACA,mBAAO,aAAa,KAAK;AAAA,UAC3B;AACA,kBAAQ,MAAM;AAAA,YACZ,KAAK;AACH,kBAAI,OAAO,mBAAmB,EAAE,IAAI,eAAe;AACnD,6BAAe,GAAG,aAAa,IAAI,IAAI;AACvC,kBAAI,QAAQ,KAAK,SAAS,aAAa,QAAQ;AAC7C,mBAAG;AAAA,kBAAY;AAAA;AAAA,gBAAyB;AACxC,uBAAO;AAAA,cACT;AACA,qBAAO,aAAa,KAAK;AAAA,YAC3B;AACE,iBAAG;AAAA,gBAAY;AAAA;AAAA,cAAwB;AACvC,qBAAO;AAAA,UACX;AAAA,QACF;AACF,YAAI,2BAA2B;AAG/B,YAAI,eAAe,CAAC,MAAM,OAAO,SAAS,QAAQ,WAAW;AACzD,cAAI,UAAU,GAAG;AAGf,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,CAAC,QAAQ;AAGX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,MAAM,MAAM,iBAAiB,GAAG,MAAM,IAAI,GAAG,KAAK;AACtD,cAAI,QAAQ,MAAM;AAChB,mBAAS,UAAS,CAAE,IAAI;AACxB,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,UACtC;AAAA,QACF;AACF,YAAI,0BAA0B;AAG9B,YAAI,uBAAuB,CAAC,QAAQ,OAAO,WAAW;AAClD,cAAI,CAAC,QAAQ;AAIX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,kBAAU,UAAS,CAAE,IAAI,MAAM,gBAAgB,QAAQ,KAAK;AAAA,QAC9D;AACF,YAAI,kCAAkC;AAGtC,YAAI,uBAAuB,CAAC,QAAQ,OAAO,WAAW;AAClD,cAAI,CAAC,QAAQ;AAIX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,UAAS,CAAE,IAAI,MAAM,gBAAgB,QAAQ,KAAK;AAAA,QAC7D;AACF,YAAI,kCAAkC;AAGtC,YAAI,iCAAiC,CAAC,SAAS,OAAO,SAAS,QAAQ,MAAMW,OAAM,SAAS;AACxF,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,OAAO,MAAM,4BAA4B,SAAS,KAAK;AAC3D,cAAI,CAAC,KAAM;AAEX,cAAI,QAAQ,UAAU,GAAG;AACvB,gBAAI,0BAA0B,aAAa,KAAK,MAAM,MAAM,OAAO;AACnE,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,UACtC,OAAO;AACL,gBAAI,OAAQ,QAAS,UAAS,CAAE,IAAI;AAAA,UACtC;AAEA,cAAI,KAAM,QAAS,QAAO,CAAE,IAAI,KAAK;AACrC,cAAIA,MAAM,QAASA,SAAO,CAAE,IAAI,KAAK;AAAA,QACvC;AACF,YAAI,4CAA4C;AAGhD,YAAI,0BAA0B,CAAC,SAAS,qBAAqB;AACzD,iBAAO,MAAM,qBAAqB,GAAG,SAAS,OAAO,GAAG,aAAa,gBAAgB,CAAC;AAAA,QACxF;AACF,YAAI,qCAAqC;AAGzC,YAAI,uBAAuB,CAAC,SAAS,cAAc,cAAc,mBAAmB;AAChF,cAAI,CAAC,gBAAgB;AAGnB,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,eAAe,MAAM,gBAAgB,KAAK,kBAAkB,IAAI;AAClE,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,QAAQ,CAAC;AACb,mBAASX,KAAI,GAAGA,KAAI,cAAcA;AAChC,kBAAM,KAAK,aAAa,OAAU,eAAeA,KAAE,KAAK,CAAE,CAAC,CAAC;AAE9D,cAAI,SAAS,MAAM,kBAAkB,SAAS,KAAK;AACnD,cAAI,CAAC,OAAQ;AAEb,cAAI,MAAM,OAAO;AACjB,mBAASA,KAAI,GAAGA,KAAI,KAAKA,MAAK;AAC5B,mBAAU,iBAAiBA,KAAE,KAAK,CAAE,IAAI,OAAOA,EAAC;AAAA,UAClD;AAAA,QACF;AACF,YAAI,kCAAkC;AAGtC,YAAI,UAAU,CAAC,QAAQ,SAAS,GAAG;AAGnC,YAAI,uBAAuB,CAAC,SAAS,KAAK,MAAM,EAAE,KAAK,OAAO,KAAK,YAAY,GAAG;AAElF,YAAI,6CAA6C,CAAC,YAAY;AAC1D,cAAI,kBAAkB,QAAQ,iBAC5B,0BAA0B,QAAQ,yBAClCA,IAAG;AAIL,cAAI,CAAC,iBAAiB;AAEpB,oBAAQ,kBAAkB,kBAAkB,CAAC;AAE7C,oBAAQ,wBAAwB,CAAC;AAEjC,iBAAKA,KAAI,GAAGA,KAAI,MAAM;AAAA,cAAoB;AAAA,cAAS;AAAA;AAAA,YAA4B,GAAG,EAAEA,IAAG;AACrF,kBAAI,IAAI,MAAM,iBAAiB,SAASA,EAAC;AACzC,kBAAI,KAAK,EAAE;AACX,kBAAI,KAAK,EAAE;AACX,kBAAI,KAAK,qBAAqB,EAAE;AAChC,kBAAI,YAAY,KAAK,IAAI,GAAG,MAAM,GAAG,EAAE,IAAI;AAG3C,kBAAI,KAAK,QAAQ;AACjB,sBAAQ,oBAAoB;AAM5B,sCAAwB,SAAS,IAAI,CAAC,IAAI,EAAE;AAI5C,mBAAK,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACvB,gCAAgB,EAAE,IAAI;AACtB,wBAAQ,sBAAsB,IAAI,IAAI;AAAA,cACxC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAKF,YAAI,wBAAwB,CAAC,SAAS,SAAS;AAE3C,iBAAO,aAAa,IAAI;AAExB,cAAI,UAAU,GAAG,SAAS,OAAO,GAAG;AAClC,uDAA2C,OAAO;AAClD,gBAAI,kBAAkB,QAAQ;AAC9B,gBAAI,aAAa;AACjB,gBAAI,kBAAkB;AAUtB,gBAAI,YAAY,qBAAqB,IAAI;AAGzC,gBAAI,YAAY,GAAG;AACjB,2BAAa,QAAQ,KAAK,MAAM,YAAY,CAAC,CAAC,MAAM;AACpD,gCAAkB,KAAK,MAAM,GAAG,SAAS;AAAA,YAC3C;AAIA,gBAAI,YAAY,QAAQ,wBAAwB,eAAe;AAK/D,gBAAI,aAAa,aAAa,UAAU,CAAC,GAAG;AAC1C,4BAAc,UAAU,CAAC;AACzB,kBAAK,gBAAgB,UAAU,IAAI,gBAAgB,UAAU,KAAK,MAAM,mBAAmB,SAAS,IAAI,GAAI;AAC1G,uBAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF,OACK;AAIH,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAAA,UAC7C;AACA,iBAAO;AAAA,QACT;AACF,YAAI,mCAAmC;AAEvC,YAAI,0BAA0B,CAAC8B,cAAa;AACxC,cAAI,IAAI,MAAM;AAEd,cAAI,GAAG;AACL,gBAAI,WAAW,EAAE,gBAAgBA,SAAQ;AAKzC,gBAAI,OAAO,YAAY,UAAU;AAC/B,gBAAE,gBAAgBA,SAAQ,IAAI,WAAW,MAAM,mBAAmB,GAAG,EAAE,sBAAsBA,SAAQ,KAAK,WAAW,IAAI,IAAI,QAAQ,MAAM,GAAG;AAAA,YAChJ;AAEA,mBAAO;AAAA,UACT,OAAO;AACL,eAAG;AAAA,cAAY;AAAA;AAAA,YAA6B;AAAA,UAC9C;AAAA,QACF;AAIF,YAAI,4BAA4B,CAAC,SAASA,WAAU,QAAQnB,UAAS;AACjE,cAAI,CAAC,QAAQ;AAIX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,oBAAU,GAAG,SAAS,OAAO;AAC7B,qDAA2C,OAAO;AAClD,cAAI,OAAO,MAAM,WAAW,SAAS,wBAAwBmB,SAAQ,CAAC;AACtE,cAAI,OAAO,QAAQ,YAAY,OAAO,QAAQ,WAAW;AACvD,oBAAQnB,OAAM;AAAA,cACZ,KAAK;AAAG,uBAAS,UAAS,CAAE,IAAI;AAAM;AAAA,cACtC,KAAK;AAAG,wBAAU,UAAS,CAAE,IAAI;AAAM;AAAA,YACzC;AAAA,UACF,OAAO;AACL,qBAASX,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,sBAAQW,OAAM;AAAA,gBACZ,KAAK;AAAG,yBAAU,SAASX,KAAE,KAAK,CAAE,IAAI,KAAKA,EAAC;AAAG;AAAA,gBACjD,KAAK;AAAG,0BAAW,SAASA,KAAE,KAAK,CAAE,IAAI,KAAKA,EAAC;AAAG;AAAA,cACpD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAGF,YAAI,kBAAkB,CAAC,SAAS8B,WAAU,WAAW;AACjD,oCAA0B,SAASA,WAAU,QAAQ,CAAC;AAAA,QACxD;AACF,YAAI,6BAA6B;AAIjC,YAAI,kBAAkB,CAAC,SAASA,WAAU,WAAW;AACjD,oCAA0B,SAASA,WAAU,QAAQ,CAAC;AAAA,QACxD;AACF,YAAI,6BAA6B;AAGjC,YAAI,mBAAmB,CAAC,SAASA,WAAU,WACvC,0BAA0B,SAASA,WAAU,QAAQ,CAAC;AAC1D,YAAI,8BAA8B;AAGlC,YAAI,iCAAiC,CAAC,OAAO,OAAO,QAAQnB,UAAS;AACjE,cAAI,CAAC,QAAQ;AAIX,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,cAAI,OAAO,MAAM,gBAAgB,OAAO,KAAK;AAC7C,cAAI,SAAS,OAA8C;AACzD,mBAAS,UAAS,CAAE,IAAI,QAAQ,KAAK,MAAM;AAAA,UAC7C,WAAW,OAAO,QAAQ,YAAY,OAAO,QAAQ,WAAW;AAC9D,oBAAQA,OAAM;AAAA,cACZ,KAAK;AAAG,uBAAS,UAAS,CAAE,IAAI;AAAM;AAAA,cACtC,KAAK;AAAG,wBAAU,UAAS,CAAE,IAAI;AAAM;AAAA,cACvC,KAAK;AAAG,uBAAS,UAAS,CAAE,IAAI,KAAK,OAAO,IAAI;AAAG;AAAA,YACrD;AAAA,UACF,OAAO;AACL,qBAASX,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,sBAAQW,OAAM;AAAA,gBACZ,KAAK;AAAG,yBAAU,SAASX,KAAE,KAAK,CAAE,IAAI,KAAKA,EAAC;AAAG;AAAA,gBACjD,KAAK;AAAG,0BAAW,SAASA,KAAE,KAAK,CAAE,IAAI,KAAKA,EAAC;AAAG;AAAA,gBAClD,KAAK;AAAG,yBAAU,SAASA,KAAE,KAAK,CAAE,IAAI,KAAK,OAAO,KAAKA,EAAC,CAAC;AAAG;AAAA,cAChE;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEF,YAAI,wBAAwB,CAAC,OAAO,OAAO,WAAW;AAGlD,yCAA+B,OAAO,OAAO,QAAQ,CAAC;AAAA,QACxD;AACF,YAAI,mCAAmC;AAIvC,YAAI,yBAAyB;AAC7B,YAAI,oCAAoC;AAGxC,YAAI,6BAA6B,CAAC,OAAO,OAAO,YAAY;AACxD,cAAI,CAAC,SAAS;AAIZ,eAAG;AAAA,cAAY;AAAA;AAAA,YAA4B;AAC3C;AAAA,UACF;AACA,iBAAS,WAAU,CAAE,IAAI,MAAM,sBAAsB,OAAO,KAAK;AAAA,QACnE;AACF,YAAI,wCAAwC;AAI5C,YAAI,uBAAuB,CAAC,OAAO,OAAO,WAAW;AAIjD,yCAA+B,OAAO,OAAO,QAAQ,CAAC;AAAA,QACxD;AACF,YAAI,kCAAkC;AAItC,YAAI,uBAAuB,CAAC,OAAO,OAAO,WAAW;AAIjD,yCAA+B,OAAO,OAAO,QAAQ,CAAC;AAAA,QACxD;AACF,YAAI,kCAAkC;AAGtC,iBAAS,QAAQ,IAAI,IAAI;AAAE,gBAAM,KAAK,IAAI,EAAE;AAAA,QAAE;AAC9C,YAAI,qBAAqB;AAGzB,YAAI,2BAA2B,CAAC,QAAQ,gBAAgB,gBAAgB;AACpE,cAAI,OAAO,qBAAqB,cAAc;AAC9C,mBAASA,KAAI,GAAGA,KAAI,gBAAgBA,MAAK;AACvC,iBAAKA,EAAC,IAAI,OAAU,cAAcA,KAAE,KAAK,CAAE;AAAA,UAC7C;AAEA,gBAAM,sBAAsB,QAAQ,IAAI;AAAA,QAC1C;AACF,YAAI,sCAAsC;AAG1C,YAAI,8BAA8B,CAAC,QAAQ,gBAAgB,aAAa,GAAG,GAAG,OAAO,WAAW;AAC5F,cAAI,OAAO,qBAAqB,cAAc;AAC9C,mBAASA,KAAI,GAAGA,KAAI,gBAAgBA,MAAK;AACvC,iBAAKA,EAAC,IAAI,OAAU,cAAcA,KAAE,KAAK,CAAE;AAAA,UAC7C;AAEA,gBAAM,yBAAyB,QAAQ,MAAM,GAAG,GAAG,OAAO,MAAM;AAAA,QAClE;AACF,YAAI,yCAAyC;AAG7C,YAAI,cAAc,CAAC,WAAW;AAC1B,cAAI,IAAI,GAAG,QAAQ,MAAM;AACzB,cAAI,CAAC,EAAG,QAAO;AACf,iBAAO,MAAM,SAAS,CAAC;AAAA,QACzB;AACF,YAAI,yBAAyB;AAG7B,iBAAS,aAAa,IAAI;AAAE,iBAAO,MAAM,UAAU,EAAE;AAAA,QAAE;AACvD,YAAI,0BAA0B;AAG9B,YAAI,mBAAmB,CAAC,gBAAgB;AACpC,cAAI,KAAK,GAAG,aAAa,WAAW;AACpC,cAAI,CAAC,GAAI,QAAO;AAChB,iBAAO,MAAM,cAAc,EAAE;AAAA,QAC/B;AACF,YAAI,8BAA8B;AAGlC,YAAI,eAAe,CAAC,YAAY;AAC5B,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,CAAC,QAAS,QAAO;AACrB,iBAAO,MAAM,UAAU,OAAO;AAAA,QAChC;AACF,YAAI,0BAA0B;AAG9B,YAAI,aAAa,CAAC,OAAO;AACrB,cAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,cAAI,CAAC,MAAO,QAAO;AACnB,iBAAO,MAAM,QAAQ,KAAK;AAAA,QAC5B;AACF,YAAI,wBAAwB;AAG5B,YAAI,gBAAgB,CAAC,OAAO;AACxB,cAAI,QAAQ,GAAG,QAAQ,EAAE;AACzB,cAAI,CAAC,MAAO,QAAO;AACnB,iBAAO,MAAM,sBAAsB,YAAY,EAAE,KAAK;AAAA,QACxD;AACF,YAAI,2BAA2B;AAG/B,YAAI,oBAAoB,CAAC,iBAAiB;AACtC,cAAI,KAAK,GAAG,cAAc,YAAY;AACtC,cAAI,CAAC,GAAI,QAAO;AAChB,iBAAO,MAAM,eAAe,EAAE;AAAA,QAChC;AACF,YAAI,+BAA+B;AAGnC,YAAI,eAAe,CAAC,OAAO;AACvB,cAAI,UAAU,GAAG,SAAS,EAAE;AAC5B,cAAI,CAAC,QAAS,QAAO;AACrB,iBAAO,MAAM,UAAU,OAAO;AAAA,QAChC;AACF,YAAI,0BAA0B;AAG9B,YAAI,cAAc,CAAC,WAAW;AAC1B,cAAI,IAAI,GAAG,QAAQ,MAAM;AACzB,cAAI,CAAC,EAAG,QAAO;AACf,iBAAO,MAAM,SAAS,CAAC;AAAA,QACzB;AACF,YAAI,yBAAyB;AAG7B,YAAI,YAAY,CAAC,SAAS,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC;AACrD,YAAI,uBAAuB;AAG3B,YAAI,eAAe,CAAC,OAAO;AACvB,cAAI,UAAU,GAAG,SAAS,EAAE;AAC5B,cAAI,CAAC,QAAS,QAAO;AACrB,iBAAO,MAAM,UAAU,OAAO;AAAA,QAChC;AACF,YAAI,0BAA0B;AAG9B,YAAI,yBAAyB,CAAC,OAAO,MAAM,oBAAoB,GAAG,mBAAmB,EAAE,CAAC;AACxF,YAAI,oCAAoC;AAGxC,YAAI,mBAAmB,CAACO,WAAU;AAE9B,cAAI,MAAM,GAAG,KAAKA,MAAK;AACvB,cAAI,CAAC,IAAK,QAAO;AACjB,iBAAO,MAAM,cAAc,GAAG;AAAA,QAChC;AACF,YAAI,8BAA8B;AAIlC,YAAI,sBAAsB;AAC1B,YAAI,iCAAiC;AAGrC,iBAAS,aAAa,IAAI;AAAE,gBAAM,UAAU,EAAE;AAAA,QAAE;AAChD,YAAI,0BAA0B;AAG9B,YAAI,iBAAiB,CAAC,YAAY;AAC9B,oBAAU,GAAG,SAAS,OAAO;AAC7B,gBAAM,YAAY,OAAO;AAEzB,kBAAQ,kBAAkB;AAC1B,kBAAQ,0BAA0B,CAAC;AAAA,QAErC;AACF,YAAI,4BAA4B;AAGhC,YAAI,+CAA+C,CAAC,MAAM,QAAQ,QAAQ,gBAAgB,eAAe,cAAc;AACnH,gBAAM,QAAQ,2CAA2C;AAAA,YACvD;AAAA,YACA;AAAA,YACA,UAAU;AAAA,YACV;AAAA,YACA,UAAU;AAAA,YACV;AAAA,YACA,kBAAkB;AAAA,YAClB;AAAA,YACA,iBAAiB;AAAA,YACjB;AAAA,UAAS;AAAA,QACb;AACF,YAAI,0DAA0D;AAG9D,YAAI,2DAA2D,CAAC,MAAM,QAAQI,OAAM,SAAS,gBAAgB,cAAc,eAAe,cAAc;AACpJ,gBAAM,QAAQ,uDAAuD;AAAA,YACnE;AAAA,YACA;AAAA,YACA,UAAU;AAAA,YACVA;AAAA,YACA;AAAA,YACA,WAAW;AAAA,YACX;AAAA,YACA,kBAAkB;AAAA,YAClB;AAAA,YACA,gBAAgB;AAAA,YAChB;AAAA,YACA,iBAAiB;AAAA,YACjB;AAAA,UAAS;AAAA,QACb;AACF,YAAI,sEAAsE;AAG1E,iBAAS,4BAA4B;AAAE,gBAAM,uBAAuB;AAAA,QAAE;AACtE,YAAI,uCAAuC;AAG3C,YAAI,iBAAiB,CAAC,OAAO,UAAU;AACnC,cAAI,SAAS,MAAiC;AAC5C,eAAG,kBAAkB;AAAA,UACvB;AACA,gBAAM,YAAY,OAAO,KAAK;AAAA,QAChC;AACF,YAAI,4BAA4B;AAGhC,iBAAS,iBAAiB,IAAI,IAAI;AAAE,gBAAM,cAAc,IAAI,EAAE;AAAA,QAAE;AAChE,YAAI,8BAA8B;AAGlC,YAAI,mBAAmB,CAAC,SAAS,cAAc,QAAQ,WAAW;AAC9D,aAAG;AAAA,YAAY;AAAA;AAAA,UAAwB;AAAA,QACzC;AACF,YAAI,8BAA8B;AAGlC,YAAI,uBAAuB,CAAC,SAAS,OAAO,UAAU;AAClD,aAAG;AAAA,YAAY;AAAA;AAAA,UAAwB;AAAA,QACzC;AACF,YAAI,kCAAkC;AAGtC,YAAI,qBAAqB,CAAC,IAAI,WAAW;AACrC,gBAAM,sBAAsB,iBAAiB,EAAE,GAAG,QAAQ,EAAE,GAAG,MAAM;AAAA,QACvE;AACF,YAAI,gCAAgC;AAGpC,iBAAS,cAAc,IAAI;AAAE,gBAAM,WAAW,EAAE;AAAA,QAAE;AAClD,YAAI,2BAA2B;AAE/B,YAAI,gCAAgC,CAAC,OAAO,QAAQ,cAAc,cAAc;AAC5E,mBAAS,wBAAwB,GAAG,GAAG;AACrC,mBAAQ,IAAI,IAAI,IAAK,CAAC;AAAA,UACxB;AACA,cAAI,eAAe,QAAQ;AAC3B,cAAI,iBAAiB,wBAAwB,cAAc,SAAS;AACpE,iBAAO,SAAS;AAAA,QAClB;AAEF,YAAI,iCAAiC,CAAC,WAAW;AAK7C,cAAI,gBAAgB;AAAA;AAAA;AAAA,YAGlB,GAAG;AAAA,YACH,GAAG;AAAA;AAAA,YAEH,GAAG;AAAA,YACH,OAAO;AAAA,YACP,OAAO;AAAA;AAAA,YAEP,OAAO;AAAA,YACP,OAAO;AAAA;AAAA,YAEP,OAAO;AAAA,YACP,OAAO;AAAA,UACT;AACA,iBAAO,cAAc,SAAS,IAAM,KAAG;AAAA,QACzC;AAEF,YAAI,yBAAyB,CAACA,UAAS;AAKnC,UAAAA,SAAQ;AACR,cAAIA,SAAQ,EAAG,QAAO;AAEtB,cAAIA,SAAQ,EAAG,QAAO;AAEtB,cAAIA,SAAQ,EAAG,QAAO;AAEtB,cAAIA,SAAQ,EAAG,QAAO;AAEtB,cAAIA,SAAQ,EAAG,QAAO;AAEtB,cAAIA,SAAQ,KACPA,SAAQ,SACRA,SAAQ,SACRA,SAAQ,SACRA,SAAQ;AAEX,mBAAO;AAET,iBAAO;AAAA,QACT;AAEF,YAAI,8BAA8B,CAAC,SAAS,KAAK,KAAK,MAAM,KAAK,iBAAiB;AAElF,YAAI,iCAAiC,CAACA,OAAM,QAAQ,OAAO,QAAQ,QAAQ,mBAAmB;AAC1F,cAAI,OAAO,uBAAuBA,KAAI;AACtC,cAAI,QAAQ,4BAA4B,IAAI;AAC5C,cAAI,WAAW,KAAG;AAClB,cAAI,eAAe,+BAA+B,MAAM,IAAI;AAC5D,cAAI,QAAQ,8BAA8B,OAAO,QAAQ,cAAc,GAAG,eAAe;AACzF,iBAAO,KAAK,SAAS,UAAU,OAAO,SAAS,SAAS,KAAK;AAAA,QAC/D;AAKF,YAAI,gBAAgB,CAAC,GAAG,GAAG,OAAO,QAAQ,QAAQA,OAAM,WAAW;AAC/D,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,gBAAI,MAAM,+BAA+B;AACvC,oBAAM,WAAW,GAAG,GAAG,OAAO,QAAQ,QAAQA,OAAM,MAAM;AAAA,YAC5D,OAAO;AACL,kBAAI,OAAO,uBAAuBA,KAAI;AACtC,oBAAM,WAAW,GAAG,GAAG,OAAO,QAAQ,QAAQA,OAAM,MAAM,UAAU,4BAA4B,IAAI,CAAC;AAAA,YACvG;AACA;AAAA,UACF;AACA,cAAI,YAAY,+BAA+BA,OAAM,QAAQ,OAAO,QAAQ,QAAQ,MAAM;AAC1F,cAAI,CAAC,WAAW;AACd,eAAG;AAAA,cAAY;AAAA;AAAA,YAAwB;AACvC;AAAA,UACF;AACA,gBAAM,WAAW,GAAG,GAAG,OAAO,QAAQ,QAAQA,OAAM,SAAS;AAAA,QAC/D;AACF,YAAI,2BAA2B;AAG/B,YAAI,2BAA2B,MAAM;AAAA,QAEnC;AACF,YAAI,sCAAsC;AAG1C,iBAAS,uBAAuB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,oBAAoB,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC5F,YAAI,oCAAoC;AAGxC,iBAAS,kCAAkC,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,+BAA+B,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC1H,YAAI,+CAA+C;AAGnD,iBAAS,6BAA6B;AAAE,gBAAM,wBAAwB;AAAA,QAAE;AACxE,YAAI,wCAAwC;AAG5C,YAAI,oBAAoB,CAAC,OAAO,WAAW;AACvC,gBAAM,eAAe,OAAO,CAAC,CAAC,MAAM;AAAA,QACtC;AACF,YAAI,+BAA+B;AAGnC,YAAI,uBAAuB,CAAC,SAAS,OAAO,UAAU;AAClD,gBAAM,kBAAkB,GAAG,SAAS,OAAO,GAAG,OAAO,KAAK;AAAA,QAC5D;AACF,YAAI,kCAAkC;AAGtC,YAAI,wBAAwB,CAAC,SAAS,OAAO,WAAW;AACpD,cAAI,QAAQ,QAAU,UAAS,CAAE;AACjC,gBAAM,kBAAkB,GAAG,SAAS,OAAO,GAAG,OAAO,KAAK;AAAA,QAC5D;AACF,YAAI,mCAAmC;AAGvC,YAAI,uBAAuB,CAAC,SAAS,OAAO,UAAU;AAClD,gBAAM,kBAAkB,GAAG,SAAS,OAAO,GAAG,OAAO,KAAK;AAAA,QAC5D;AACF,YAAI,kCAAkC;AAGtC,YAAI,wBAAwB,CAAC,SAAS,OAAO,WAAW;AACpD,cAAI,QAAQ,OAAS,UAAS,CAAE;AAChC,gBAAM,kBAAkB,GAAG,SAAS,OAAO,GAAG,OAAO,KAAK;AAAA,QAC5D;AACF,YAAI,mCAAmC;AAGvC,iBAAS,WAAW,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,QAAQ,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACpE,YAAI,wBAAwB;AAG5B,YAAI,kBAAkB,CAAC,OAAO,SAAS,cAAc,QAAQ,WAAW;AACpE,aAAG;AAAA,YAAY;AAAA;AAAA,UAAwB;AAAA,QACzC;AACF,YAAI,6BAA6B;AAGjC,YAAI,kBAAkB,CAAC,QAAQ,OAAOH,SAAQ,WAAW;AACrD,cAAI,SAAS,GAAG,UAAU,QAAQ,OAAOA,SAAQ,MAAM;AAEvD,cAAI,GAAG,eAAe,WAAW,GAAG;AAUlC,gBAAI,OAAO,SAAS,cAAc,GAAG;AACnC,uBAAS,OAAO,QAAQ,oDAAoD,EAAE;AAC9E,uBAAS,OAAO,QAAQ,kDAAkD,EAAE;AAC5E,kBAAI,UAAU;AACd,kBAAI,OAAO,SAAS,cAAc,GAAG;AACnC,2BAAW;AACX,yBAAS,OAAO,QAAQ,iBAAiB,cAAc;AAAA,cACzD;AACA,kBAAI,OAAO,SAAS,WAAW,GAAG;AAChC,yBAAS,OAAO,QAAQ,cAAc,IAAI;AAC1C,yBAAS,OAAO,QAAQ,YAAY,KAAK;AAAA,cAC3C,OAAO;AACL,yBAAS,OAAO,QAAQ,YAAY,IAAI;AAAA,cAC1C;AAEA,uBAAS,OAAO,QAAQ,sBAAsB,gBAAgB;AAC9D,uBAAS,OAAO,QAAQ,oBAAoB,cAAc;AAC1D,uBAAS,OAAO,QAAQ,wBAAwB,kBAAkB;AAClE,uBAAS,OAAO,QAAQ,qBAAqB,eAAe;AAC5D,uBAAS,OAAO,QAAQ,yBAAyB,mBAAmB;AACpE,uBAAS,OAAO,QAAQ,uBAAuB,iBAAiB;AAEhE,uBAAS,OAAO,QAAQ,gBAAgB,SAAS;AACjD,uBAAS,OAAO,QAAQ,cAAc,SAAS;AAC/C,uBAAS,OAAO,QAAQ,cAAc,SAAS;AAC/C,uBAAS,OAAO,QAAQ,cAAc,SAAS;AAC/C,uBAAS,OAAO,QAAQ,iBAAiB,sBAAsB,OAAO;AAAA,YACxE;AAAA,UACF;AAEA,gBAAM,aAAa,GAAG,QAAQ,MAAM,GAAG,MAAM;AAAA,QAC/C;AACF,YAAI,6BAA6B;AAGjC,iBAAS,eAAe,IAAI,IAAI,IAAI;AAAE,gBAAM,YAAY,IAAI,IAAI,EAAE;AAAA,QAAE;AACpE,YAAI,4BAA4B;AAGhC,iBAAS,uBAAuB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,oBAAoB,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC5F,YAAI,oCAAoC;AAGxC,iBAAS,eAAe,IAAI;AAAE,gBAAM,YAAY,EAAE;AAAA,QAAE;AACpD,YAAI,4BAA4B;AAGhC,iBAAS,uBAAuB,IAAI,IAAI;AAAE,gBAAM,oBAAoB,IAAI,EAAE;AAAA,QAAE;AAC5E,YAAI,oCAAoC;AAGxC,iBAAS,aAAa,IAAI,IAAI,IAAI;AAAE,gBAAM,UAAU,IAAI,IAAI,EAAE;AAAA,QAAE;AAChE,YAAI,0BAA0B;AAG9B,iBAAS,qBAAqB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,kBAAkB,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACxF,YAAI,kCAAkC;AAMtC,YAAI,gBAAgB,CAAC,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQG,OAAM,WAAW;AAChG,cAAI,GAAG,eAAe,WAAW,GAAG;AAIlC,gBAAI,UAAU,QAAgC,kBAAkB,QAAgCA,SAAQ,MAA2B;AACjI,+BAAiB;AAAA,YACnB;AACA,gBAAIA,SAAQ,OAA6B;AACvC,cAAAA,QAAO;AACP,kBAAI,UAAU,QAAqB,kBAAkB,MAAmB;AACtE,iCAAiB;AAAA,cACnB;AAAA,YACF;AACA,gBAAI,kBAAkB,OAA6B;AACjD,+BAAiB;AAAA,YACnB;AAAA,UACF;AACA,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,gBAAI,MAAM,iCAAiC;AACzC,oBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQA,OAAM,MAAM;AAAA,YAC7F,WAAW,QAAQ;AACjB,kBAAI,OAAO,uBAAuBA,KAAI;AACtC,oBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQA,OAAM,MAAM,UAAU,4BAA4B,IAAI,CAAC;AAAA,YACxI,OAAO;AACL,oBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQA,OAAM,IAAI;AAAA,YAC3F;AACA;AAAA,UACF;AACA,gBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,QAAQ,QAAQA,OAAM,SAAS,+BAA+BA,OAAM,QAAQ,OAAO,QAAQ,QAAQ,cAAc,IAAI,IAAI;AAAA,QAC1L;AACF,YAAI,2BAA2B;AAI/B,YAAI,gBAAgB,CAAC,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,QAAQA,OAAM,WAAW;AACvG,cAAI,MAAM,iCAAiC;AACzC,kBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,QAAQA,OAAM,MAAM;AAAA,UACpG,WAAW,QAAQ;AACjB,gBAAI,OAAO,uBAAuBA,KAAI;AACtC,kBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,QAAQA,OAAM,MAAM,UAAU,4BAA4B,IAAI,CAAC;AAAA,UAC/I,OAAO;AACL,kBAAM,WAAW,QAAQ,OAAO,gBAAgB,OAAO,QAAQ,OAAO,QAAQ,QAAQA,OAAM,IAAI;AAAA,UAClG;AAAA,QACF;AACF,YAAI,2BAA2B;AAG/B,iBAAS,iBAAiB,IAAI,IAAI,IAAI;AAAE,gBAAM,cAAc,IAAI,IAAI,EAAE;AAAA,QAAE;AACxE,YAAI,8BAA8B;AAGlC,YAAI,oBAAoB,CAAC,QAAQ,OAAO,WAAW;AAC/C,cAAI,QAAQ,QAAU,UAAS,CAAE;AACjC,gBAAM,cAAc,QAAQ,OAAO,KAAK;AAAA,QAC1C;AACF,YAAI,+BAA+B;AAGnC,iBAAS,iBAAiB,IAAI,IAAI,IAAI;AAAE,gBAAM,cAAc,IAAI,IAAI,EAAE;AAAA,QAAE;AACxE,YAAI,8BAA8B;AAGlC,YAAI,oBAAoB,CAAC,QAAQ,OAAO,WAAW;AAC/C,cAAI,QAAQ,OAAS,UAAS,CAAE;AAChC,gBAAM,cAAc,QAAQ,OAAO,KAAK;AAAA,QAC1C;AACF,YAAI,+BAA+B;AAGnC,iBAAS,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,aAAa,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACtF,YAAI,6BAA6B;AAGjC,iBAAS,gBAAgB,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,aAAa,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC9F,YAAI,6BAA6B;AAMjC,YAAI,mBAAmB,CAAC,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQA,OAAM,WAAW;AAC7F,cAAI,GAAG,eAAe,WAAW,GAAG;AAKlC,gBAAIA,SAAQ,MAA6B,CAAAA,QAAO;AAAA,UAClD;AACA,cAAI,GAAG,eAAe,WAAW,GAAG;AAGlC,gBAAI,MAAM,iCAAiC;AACzC,oBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQA,OAAM,MAAM;AAAA,YAC1F,WAAW,QAAQ;AACjB,kBAAI,OAAO,uBAAuBA,KAAI;AACtC,oBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQA,OAAM,MAAM,UAAU,4BAA4B,IAAI,CAAC;AAAA,YACrI,OAAO;AACL,oBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQA,OAAM,IAAI;AAAA,YACxF;AACA;AAAA,UACF;AACA,cAAI,YAAY;AAChB,cAAI,OAAQ,aAAY,+BAA+BA,OAAM,QAAQ,OAAO,QAAQ,QAAQ,CAAC;AAC7F,gBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,OAAO,QAAQ,QAAQA,OAAM,SAAS;AAAA,QAC7F;AACF,YAAI,8BAA8B;AAIlC,YAAI,mBAAmB,CAAC,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQA,OAAM,WAAW;AAC7G,cAAI,MAAM,iCAAiC;AACzC,kBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQA,OAAM,MAAM;AAAA,UAC1G,WAAW,QAAQ;AACjB,gBAAI,OAAO,uBAAuBA,KAAI;AACtC,kBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQA,OAAM,MAAM,UAAU,4BAA4B,IAAI,CAAC;AAAA,UACrJ,OAAO;AACL,kBAAM,cAAc,QAAQ,OAAO,SAAS,SAAS,SAAS,OAAO,QAAQ,OAAO,QAAQA,OAAM,IAAI;AAAA,UACxG;AAAA,QACF;AACF,YAAI,8BAA8B;AAGlC,YAAI,+BAA+B,CAAC,SAAS,OAAO,UAAU,eAAe;AACzE,oBAAU,GAAG,SAAS,OAAO;AAC7B,cAAI,OAAO,CAAC;AACZ,mBAASX,KAAI,GAAGA,KAAI,OAAOA;AACzB,iBAAK,KAAK,aAAa,OAAU,WAAWA,KAAE,KAAK,CAAE,CAAC,CAAC;AAEzD,gBAAM,0BAA0B,SAAS,MAAM,UAAU;AAAA,QAC3D;AACF,YAAI,0CAA0C;AAI9C,YAAI,eAAe,CAAC8B,WAAU,OAAO;AACjC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,EAAE;AAAA,QACvD;AACF,YAAI,0BAA0B;AAG9B,YAAI,4BAA4B,CAAC;AAGjC,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAE5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,KAAK;AACrF;AAAA,UACF;AAEA,cAAI,SAAS,KAAK;AAEhB,gBAAI,OAAO,0BAA0B,QAAM,CAAC;AAC5C,qBAAS9B,KAAI,GAAGA,KAAI,OAAO,EAAEA,IAAG;AAC9B,mBAAKA,EAAC,IAAI,QAAW,QAAQ,IAAEA,MAAK,CAAE;AAAA,YACxC;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,KAAI,CAAC;AAAA,UAC5D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAI/B,YAAI,eAAe,CAACA,WAAU,OAAO;AACjC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,EAAE;AAAA,QACvD;AACF,YAAI,0BAA0B;AAG9B,YAAI,0BAA0B,CAAC;AAG/B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAE5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,QAAQ,SAAO,GAAG,KAAK;AACpF;AAAA,UACF;AAEA,cAAI,SAAS,KAAK;AAEhB,gBAAI,OAAO,wBAAwB,QAAM,CAAC;AAC1C,qBAAS9B,KAAI,GAAGA,KAAI,OAAO,EAAEA,IAAG;AAC9B,mBAAKA,EAAC,IAAI,OAAU,QAAQ,IAAEA,MAAK,CAAE;AAAA,YACvC;AAAA,UACF,OACA;AACE,gBAAI,OAAO,OAAO,SAAU,SAAQ,GAAI,QAAM,QAAM,KAAI,CAAC;AAAA,UAC3D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAG/B,YAAI,gBAAgB,CAACA,WAAU,OAAO;AAClC,gBAAM,WAAW,wBAAwBA,SAAQ,GAAG,EAAE;AAAA,QACxD;AACF,YAAI,2BAA2B;AAG/B,YAAI,iBAAiB,CAACA,WAAU,OAAO,UAAU;AAC7C,mBAAS,MAAM,YAAY,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,KAAK;AAAA,QACxF;AACF,YAAI,4BAA4B;AAIhC,YAAI,eAAe,CAACA,WAAU,IAAI,OAAO;AACrC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,EAAE;AAAA,QAC3D;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAI5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AACvF;AAAA,UACF;AAEA,cAAI,SAAS,KAAK;AAEhB,gBAAI,OAAO,0BAA0B,IAAE,QAAM,CAAC;AAC9C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,QAAW,QAAQ,IAAEA,MAAK,CAAE;AACtC,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAAA,YAC5C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,KAAI,CAAC;AAAA,UAC5D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAI/B,YAAI,eAAe,CAACA,WAAU,IAAI,OAAO;AACrC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,EAAE;AAAA,QAC3D;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAE5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,QAAQ,SAAO,GAAG,QAAM,CAAC;AACtF;AAAA,UACF;AAEA,cAAI,SAAS,KAAK;AAEhB,gBAAI,OAAO,wBAAwB,IAAE,QAAM,CAAC;AAC5C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,OAAU,QAAQ,IAAEA,MAAK,CAAE;AACrC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAAA,YAC3C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,OAAO,SAAU,SAAQ,GAAI,QAAM,QAAM,KAAI,CAAC;AAAA,UAC3D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAG/B,YAAI,gBAAgB,CAACA,WAAU,IAAI,OAAO;AACtC,gBAAM,WAAW,wBAAwBA,SAAQ,GAAG,IAAI,EAAE;AAAA,QAC5D;AACF,YAAI,2BAA2B;AAG/B,YAAI,iBAAiB,CAACA,WAAU,OAAO,UAAU;AAC7C,mBAAS,MAAM,YAAY,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC1F;AACF,YAAI,4BAA4B;AAIhC,YAAI,eAAe,CAACA,WAAU,IAAI,IAAI,OAAO;AACzC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,EAAE;AAAA,QAC/D;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAI5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AACvF;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,0BAA0B,IAAE,QAAM,CAAC;AAC9C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,QAAW,QAAQ,IAAEA,MAAK,CAAE;AACtC,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAC1C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAAA,YAC5C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC7D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAI/B,YAAI,eAAe,CAACA,WAAU,IAAI,IAAI,OAAO;AACzC,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,EAAE;AAAA,QAC/D;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAE5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,QAAQ,SAAO,GAAG,QAAM,CAAC;AACtF;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,wBAAwB,IAAE,QAAM,CAAC;AAC5C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,OAAU,QAAQ,IAAEA,MAAK,CAAE;AACrC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,MAAK,CAAE;AACzC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAAA,YAC3C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,OAAO,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC5D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAG/B,YAAI,gBAAgB,CAACA,WAAU,IAAI,IAAI,OAAO;AAC1C,gBAAM,WAAW,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,EAAE;AAAA,QAChE;AACF,YAAI,2BAA2B;AAG/B,YAAI,iBAAiB,CAACA,WAAU,OAAO,UAAU;AAC7C,mBAAS,MAAM,YAAY,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC1F;AACF,YAAI,4BAA4B;AAIhC,YAAI,eAAe,CAACA,WAAU,IAAI,IAAI,IAAI,OAAO;AAC7C,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,QACnE;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAI5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AACvF;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,0BAA0B,IAAE,QAAM,CAAC;AAE9C,gBAAI,OAAO;AACX,sBAAU;AACV,qBAAS9B,KAAI,GAAGA,KAAI,IAAI,OAAOA,MAAK,GAAG;AACrC,kBAAI,MAAM,QAAQA;AAClB,mBAAKA,EAAC,IAAI,KAAK,GAAG;AAClB,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAAA,YAC5B;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC7D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAI/B,YAAI,eAAe,CAACA,WAAU,IAAI,IAAI,IAAI,OAAO;AAC7C,gBAAM,UAAU,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,QACnE;AACF,YAAI,0BAA0B;AAK9B,YAAI,gBAAgB,CAACA,WAAU,OAAO,UAAU;AAI5C,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,WAAW,wBAAwBA,SAAQ,GAAG,QAAQ,SAAO,GAAG,QAAM,CAAC;AACtF;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,wBAAwB,IAAE,QAAM,CAAC;AAC5C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,OAAU,QAAQ,IAAEA,MAAK,CAAE;AACrC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,MAAK,CAAE;AACzC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,MAAK,CAAE;AACzC,mBAAKA,KAAE,CAAC,IAAI,OAAU,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAAA,YAC5C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,OAAO,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC5D;AACA,gBAAM,WAAW,wBAAwB8B,SAAQ,GAAG,IAAI;AAAA,QAC1D;AACF,YAAI,2BAA2B;AAG/B,YAAI,gBAAgB,CAACA,WAAU,IAAI,IAAI,IAAI,OAAO;AAC9C,gBAAM,WAAW,wBAAwBA,SAAQ,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,QACpE;AACF,YAAI,2BAA2B;AAG/B,YAAI,iBAAiB,CAACA,WAAU,OAAO,UAAU;AAC7C,mBAAS,MAAM,YAAY,wBAAwBA,SAAQ,GAAG,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC1F;AACF,YAAI,4BAA4B;AAGhC,YAAI,yBAAyB,CAAC,SAAS,mBAAmB,wBAAwB;AAC9E,oBAAU,GAAG,SAAS,OAAO;AAE7B,gBAAM,oBAAoB,SAAS,mBAAmB,mBAAmB;AAAA,QAC3E;AACF,YAAI,oCAAoC;AAKxC,YAAI,sBAAsB,CAACA,WAAU,OAAO,WAAW,UAAU;AAI7D,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,iBAAiB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAC1G;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,0BAA0B,IAAE,QAAM,CAAC;AAC9C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,QAAW,QAAQ,IAAEA,MAAK,CAAE;AACtC,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAC1C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAC1C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAAA,YAC7C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC7D;AACA,gBAAM,iBAAiB,wBAAwB8B,SAAQ,GAAG,CAAC,CAAC,WAAW,IAAI;AAAA,QAC7E;AACF,YAAI,iCAAiC;AAGrC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC9G;AACF,YAAI,mCAAmC;AAGvC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC9G;AACF,YAAI,mCAAmC;AAKvC,YAAI,sBAAsB,CAACA,WAAU,OAAO,WAAW,UAAU;AAI7D,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,iBAAiB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAC1G;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,0BAA0B,IAAE,QAAM,CAAC;AAC9C,qBAAS9B,KAAI,GAAGA,KAAI,IAAE,OAAOA,MAAK,GAAG;AACnC,mBAAKA,EAAC,IAAI,QAAW,QAAQ,IAAEA,MAAK,CAAE;AACtC,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAC1C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,MAAK,CAAE;AAC1C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAC3C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAC3C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAC3C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAC3C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAC3C,mBAAKA,KAAE,CAAC,IAAI,QAAW,SAAQ,IAAEA,KAAE,OAAM,CAAE;AAAA,YAC7C;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC7D;AACA,gBAAM,iBAAiB,wBAAwB8B,SAAQ,GAAG,CAAC,CAAC,WAAW,IAAI;AAAA,QAC7E;AACF,YAAI,iCAAiC;AAGrC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC9G;AACF,YAAI,mCAAmC;AAGvC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,EAAE;AAAA,QAC/G;AACF,YAAI,mCAAmC;AAKvC,YAAI,sBAAsB,CAACA,WAAU,OAAO,WAAW,UAAU;AAI7D,cAAI,GAAG,eAAe,WAAW,GAAG;AAClC,qBAAS,MAAM,iBAAiB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,EAAE;AAC3G;AAAA,UACF;AAEA,cAAI,SAAS,IAAI;AAEf,gBAAI,OAAO,0BAA0B,KAAG,QAAM,CAAC;AAE/C,gBAAI,OAAO;AACX,sBAAU;AACV,qBAAS9B,KAAI,GAAGA,KAAI,KAAK,OAAOA,MAAK,IAAI;AACvC,kBAAI,MAAM,QAAQA;AAClB,mBAAKA,EAAC,IAAI,KAAK,GAAG;AAClB,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,CAAC,IAAI,KAAK,MAAM,CAAC;AAC1B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAC5B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAC5B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAC5B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAC5B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAC5B,mBAAKA,KAAI,EAAE,IAAI,KAAK,MAAM,EAAE;AAAA,YAC9B;AAAA,UACF,OACA;AACE,gBAAI,OAAO,QAAQ,SAAU,SAAQ,GAAI,QAAM,QAAM,MAAK,CAAC;AAAA,UAC7D;AACA,gBAAM,iBAAiB,wBAAwB8B,SAAQ,GAAG,CAAC,CAAC,WAAW,IAAI;AAAA,QAC7E;AACF,YAAI,iCAAiC;AAGrC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,CAAC;AAAA,QAC9G;AACF,YAAI,mCAAmC;AAGvC,YAAI,wBAAwB,CAACA,WAAU,OAAO,WAAW,UAAU;AAC/D,mBAAS,MAAM,mBAAmB,wBAAwBA,SAAQ,GAAG,CAAC,CAAC,WAAW,SAAS,SAAO,GAAG,QAAM,EAAE;AAAA,QAC/G;AACF,YAAI,mCAAmC;AAGvC,YAAI,gBAAgB,CAAC,YAAY;AAC7B,oBAAU,GAAG,SAAS,OAAO;AAC7B,gBAAM,WAAW,OAAO;AAGxB,gBAAM,iBAAiB;AAAA,QACzB;AACF,YAAI,2BAA2B;AAG/B,YAAI,qBAAqB,CAAC,YAAY;AAClC,gBAAM,gBAAgB,GAAG,SAAS,OAAO,CAAC;AAAA,QAC5C;AACF,YAAI,gCAAgC;AAGpC,iBAAS,kBAAkB,IAAI,IAAI;AAAE,gBAAM,eAAe,IAAI,EAAE;AAAA,QAAE;AAClE,YAAI,+BAA+B;AAGnC,YAAI,qBAAqB,CAAC,OAAO,MAAM;AAEnC,gBAAM,eAAe,OAAO,QAAQ,KAAG,CAAC,CAAC;AAAA,QAC3C;AACF,YAAI,gCAAgC;AAGpC,iBAAS,kBAAkB,IAAI,IAAI,IAAI;AAAE,gBAAM,eAAe,IAAI,IAAI,EAAE;AAAA,QAAE;AAC1E,YAAI,+BAA+B;AAGnC,YAAI,qBAAqB,CAAC,OAAO,MAAM;AAEnC,gBAAM,eAAe,OAAO,QAAQ,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,CAAC;AAAA,QAC5D;AACF,YAAI,gCAAgC;AAGpC,iBAAS,kBAAkB,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,eAAe,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAClF,YAAI,+BAA+B;AAGnC,YAAI,qBAAqB,CAAC,OAAO,MAAM;AAEnC,gBAAM,eAAe,OAAO,QAAQ,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,CAAC;AAAA,QAC7E;AACF,YAAI,gCAAgC;AAGpC,iBAAS,kBAAkB,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,eAAe,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC1F,YAAI,+BAA+B;AAGnC,YAAI,qBAAqB,CAAC,OAAO,MAAM;AAEnC,gBAAM,eAAe,OAAO,QAAQ,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,GAAG,QAAQ,IAAE,MAAI,CAAC,CAAC;AAAA,QAC/F;AACF,YAAI,gCAAgC;AAGpC,YAAI,yBAAyB,CAAC,OAAO,YAAY;AAC7C,gBAAM,oBAAoB,OAAO,OAAO;AAAA,QAC1C;AACF,YAAI,oCAAoC;AAIxC,YAAI,8BAA8B;AAClC,YAAI,yCAAyC;AAI7C,YAAI,4BAA4B;AAChC,YAAI,uCAAuC;AAI3C,YAAI,4BAA4B;AAChC,YAAI,uCAAuC;AAI3C,YAAI,2BAA2B;AAC/B,YAAI,sCAAsC;AAG1C,iBAAS,mBAAmB,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,gBAAgB,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC5F,YAAI,gCAAgC;AAGpC,YAAI,sBAAsB,CAAC,OAAO,MAAM;AACpC,gBAAM,gBAAgB,OAAO,OAAO,KAAG,CAAC,GAAG,OAAO,IAAE,KAAG,CAAC,GAAG,OAAO,IAAE,KAAG,CAAC,GAAG,OAAO,IAAE,MAAI,CAAC,CAAC;AAAA,QAC5F;AACF,YAAI,iCAAiC;AAGrC,iBAAS,oBAAoB,IAAI,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,iBAAiB,IAAI,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AAC9F,YAAI,iCAAiC;AAGrC,YAAI,uBAAuB,CAAC,OAAO,MAAM;AACrC,gBAAM,iBAAiB,OAAO,QAAQ,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,GAAG,QAAQ,IAAE,KAAG,CAAC,GAAG,QAAQ,IAAE,MAAI,CAAC,CAAC;AAAA,QACjG;AACF,YAAI,kCAAkC;AAGtC,YAAI,0BAA0B,CAAC,OAAO,MAAMnB,OAAM,QAAQ,QAAQ;AAC9D,gBAAM,qBAAqB,OAAO,MAAMA,OAAM,QAAQ,GAAG;AAAA,QAC3D;AACF,YAAI,qCAAqC;AAGzC,YAAI,yBAAyB,CAAC,OAAO,MAAMA,OAAM,YAAY,QAAQ,QAAQ;AACzE,gBAAM,oBAAoB,OAAO,MAAMA,OAAM,CAAC,CAAC,YAAY,QAAQ,GAAG;AAAA,QACxE;AACF,YAAI,oCAAoC;AAGxC,iBAAS,YAAY,IAAI,IAAI,IAAI,IAAI;AAAE,gBAAM,SAAS,IAAI,IAAI,IAAI,EAAE;AAAA,QAAE;AACtE,YAAI,yBAAyB;AAG7B,YAAI,cAAc,CAAC,MAAM,OAAO,YAAY;AAExC,oBAAU,OAAO,OAAO;AACxB,gBAAM,SAAS,GAAG,MAAM,IAAI,GAAG,OAAO,OAAO;AAAA,QAC/C;AACF,YAAI,yBAAyB;AAG7B,YAAI,aAAa,CAAC,SAAS;AACvB,cAAI,IAAI,WAAW;AACnB,cAAI,SAAS,OAAO,EAAE,aAAa,SAAS;AAC5C,cAAI;AAEF,uBAAW,KAAK,KAAK;AACrB,8BAAkB;AAClB,mBAAO;AAAA,UACT,SAAQ,GAAG;AACT,gBAAI,2CAA2C,EAAE,UAAU,aAAa,IAAI,0BAA0B,CAAC,EAAE;AAAA,UAC3G;AAAA,QAGF;AACF,YAAI,0BAA0B,CAAC,kBAAkB;AAC7C,cAAI,UAAU,OAAO;AAErB,6BAAmB;AAGnB,UAAAZ,QAAO,gBAAgB,OAAO;AAqB9B,cAAI,cAAc,WAAW;AAC7B,cAAI,gBAAgB,aAAa;AAC/B,gBAAI,oCAAoC,aAAa,4BAA4B,WAAW,SAAS;AACrG,mBAAO;AAAA,UACT;AAEA,cAAI,UAAU,CAAC,GAAG,aAAa,KAAK,WAAW,IAAI,YAAY;AAK/D,mBAAS,UAAU,GAAG,WAAW,GAAG,WAAW,GAAG;AAChD,gBAAI,oBAAoB,WAAW,IAAI,MAAM;AAE7C,gCAAoB,KAAK,IAAI,mBAAmB,gBAAgB,SAAU;AAE1E,gBAAI,UAAU,KAAK,IAAI,aAAa,QAAQ,KAAK,IAAI,eAAe,iBAAiB,GAAG,KAAK,CAAC;AAE9F,gBAAI,cAAc,WAAW,OAAO;AACpC,gBAAI,aAAa;AAEf,qBAAO;AAAA,YACT;AAAA,UACF;AACA,cAAI,gCAAgC,OAAO,aAAa,OAAO,4BAA4B;AAC3F,iBAAO;AAAA,QACT;AAEF,iBAAS,yCACL,UACA,aACA,YACA,kBACA,cACA,iBACA,eACA,gBACA,cACA;AACA,gBAAM,QAAQ,OAAO,aAAa,UAAU,WAAW,WAAW;AAClE,gBAAM,YAAY,OAAO,OAAO;AAAA,YAC9B;AAAA,YACA,eAAe;AAAA,UACjB;AAEA,gBAAM,SAAS,OAAO;AAEtB,gBAAM,gBAAgB;AAAA,YACpB;AAAA,YACA;AAAA,YACA;AAAA,YACA,aAAa;AAAA,UACf;AACA,cAAI;AACF,kBAAM,eAAe,OAAO;AAAA,cAC1B;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAGA,yBAAa,kBAAkB,aAAa,EAAE;AAAA,cAC5C,CAAC,cAAc;AACb,6BAAa,oBAAoB,CAAC;AAAA,cACpC;AAAA,cACA,MAAM;AACJ,6BAAa,oBAAoB;AAAA,cACnC;AAAA,YACF;AACA,yBAAa,UAAU,aAAa;AAEpC,mBAAO,mCAAmC,IAAI,QAAQ;AAAA,cACpD;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH,SAAS,OAAO;AACd,mBAAO,OAAO,wCAAwC,EAAE,MAAM,CAAC;AAAA,UACjE;AAEA,iBAAO,OAAO,wCAAwC,EAAE,OAAO,CAAC;AAAA,QAClE;AAEF,iBAAS,yCACL,OACA,aACA,YACA,kBACA,SACA,iBACA;AACA,gBAAM,cAAc,OAAO,aAAa,OAAO,QAAQ,WAAW;AAElE,gBAAM,SAAS,OAAO;AAEtB,gBAAM,qBAAqB;AAAA,YACzB,OAAO;AAAA,YACP;AAAA,YACA;AAAA,YACA,SAAS;AAAA,UACX;AACA,cAAI;AACF,kBAAM,eAAe,IAAI,aAAa;AAAA,cACpC,QAAQ,CAAC,UAAU;AACjB,sBAAM,MAAM,OAAO,QAAQ,MAAM,UAAU;AAC3C,sBAAM,OAAO,OAAO,OAAO,SAAS,KAAK,MAAM,MAAM,UAAU;AAC/D,sBAAM,OAAO,IAAI;AACjB,uBAAO;AAAA,kBACL;AAAA,kBACA;AAAA,kBACA,MAAM;AAAA,kBACN;AAAA,gBACF;AACA,uBAAO,MAAM,GAAG;AAAA,cAClB;AAAA,cACA,OAAO,CAAC,MAAM;AACZ,sBAAM,aAAa,OAAO,mCAAmC,IAAI,MAAM,EAAE;AACzE,oBAAG,aAAa,GAAG;AACjB,0BAAQ,MAAM,CAAC;AAAA,gBACjB;AAAA,cACF;AAAA,YACF,CAAC;AACD,yBAAa,UAAU,kBAAkB;AAEzC,mBAAO,mCAAmC,IAAI,QAAQ;AAAA,cACpD;AAAA,cACA;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,UACH,SAAS,OAAO;AACd,qBAAS,wBAAwB,cAAc;AAC/C,qBAAS,oBAAoB;AAC7B,qBAAS,iBAAiB;AAC1B,qBAAS,iBAAiB;AAC1B,mBAAO,OAAO,wCAAwC,EAAE,MAAM,CAAC;AAAA,UACjE;AAEA,iBAAO,OAAO,wCAAwC,EAAE,OAAO,CAAC;AAAA,QAClE;AAEF,iBAAS,yCACL,OACA,aACA,OACA,QACA,WACA,iBACA,iBACA;AACA,gBAAM,cAAc,OAAO,aAAa,OAAO,QAAQ,WAAW;AAClE,gBAAM,iBAAiB,OAAO,OAAO;AAAA,YACnC;AAAA,YACA,YAAY;AAAA,UACd;AACA,gBAAM,SAAS,OAAO;AAEtB,gBAAM,gBAAgB;AAAA,YACpB,OAAO;AAAA,YACP,YAAY;AAAA,YACZ,aAAa;AAAA,YACb,aAAa;AAAA,YACb,oBAAoB;AAAA,UACtB;AACA,cAAI;AACF,kBAAM,eAAe,OAAO;AAAA,cAC1B;AAAA,cACA;AAAA,YACF;AAGA,yBAAa,kBAAkB,aAAa,EAAE;AAAA,cAC5C,CAAC,cAAc;AACb,6BAAa,oBAAoB,CAAC;AAAA,cACpC;AAAA,cACA,MAAM;AACJ,6BAAa,oBAAoB;AAAA,cACnC;AAAA,YACF;AACA,yBAAa,UAAU,aAAa;AAEpC,mBAAO,mCAAmC,IAAI,QAAQ;AAAA,cACpD;AAAA,cACA;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH,SAAS,OAAO;AACd,mBAAO,OAAO,wCAAwC,EAAE,MAAM,CAAC;AAAA,UACjE;AAEA,iBAAO,OAAO,wCAAwC,EAAE,OAAO,CAAC;AAAA,QAClE;AAEF,iBAAS,yCACL,OACA,aACA,OACA,QACA,WACA,SACA,iBACA;AACA,gBAAM,cAAc,OAAO,aAAa,OAAO,QAAQ,WAAW;AAElE,gBAAM,SAAS,OAAO;AAGtB,gBAAM,SAAS,OAAO,mBAAmB,SAAS;AAClD,iBAAO,QAAQ;AACf,iBAAO,SAAS;AAEhB,gBAAM,gBAAgB;AAAA,YACpB,OAAO;AAAA,YACP;AAAA,YACA;AAAA,YACA,KAAK;AAAA,cACH,QAAQ;AAAA,YACV;AAAA,YACA;AAAA,UACF;AAEA,cAAI,UAAU,GAAG;AACf,0BAAc,UAAU;AAAA,UAC1B;AAEA,cAAI;AACF,kBAAM,eAAe,IAAI,aAAa;AAAA,cACpC,QAAQ,CAAC,UAAU;AACjB,sBAAM,MAAM,OAAO,QAAQ,MAAM,UAAU;AAC3C,sBAAM,OAAO,OAAO,OAAO,SAAS,KAAK,MAAM,MAAM,UAAU;AAC/D,sBAAM,OAAO,IAAI;AACjB,uBAAO;AAAA,kBACL;AAAA,kBACA;AAAA,kBACA,MAAM;AAAA,kBACN;AAAA,gBACF;AACA,uBAAO,MAAM,GAAG;AAAA,cAClB;AAAA,cACA,OAAO,CAAC,MAAM,QAAQ,MAAM,CAAC;AAAA,YAC/B,CAAC;AAED,yBAAa,kBAAkB,aAAa,EAAE;AAAA,cAC5C,CAAC,cAAc;AACb,6BAAa,oBAAoB,CAAC;AAAA,cACpC;AAAA,cACA,MAAM;AACJ,6BAAa,oBAAoB;AAAA,cACnC;AAAA,YACF;AACA,yBAAa,UAAU,aAAa;AAEpC,mBAAO,mCAAmC,IAAI,QAAQ;AAAA,cACpD;AAAA,cACA;AAAA,cACA,iBAAiB;AAAA,cACjB,YAAY;AAAA,YACd,CAAC;AAAA,UACH,SAAS,OAAO;AACd,qBAAS,wBAAwB,cAAc;AAC/C,qBAAS,mBAAmB,QAAQ,MAAM;AAC1C,mBAAO,OAAO,wCAAwC,EAAE,MAAM,CAAC;AAAA,UACjE;AAEA,iBAAO,OAAO,wCAAwC,EAAE,OAAO,CAAC;AAAA,QAClE;AAEF,iBAAS,uCACL,QACA,QACA,KACA,UACA,MACA,YACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AAEpE,cAAI,QAAQ,aAAa,iBAAiB;AACxC,mBAAO,OAAO,wCAAwC;AAAA,cACpD,MAAM;AAAA,cACN,OAAO,QAAQ,aAAa;AAAA,YAC9B,CAAC;AAAA,UACH;AAEA,cAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,oBAAQ,eAAe,OAAO;AAAA,cAC5B,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,QAAQ;AAAA,YACV;AACA,oBAAQ,aAAa,UAAU,QAAQ,aAAa;AAAA,UACtD;AACA,gBAAM,eAAe,QAAQ;AAE7B,gBAAM,YAAY,OAAO,OAAO,SAAS,MAAM,OAAO,UAAU;AAChE,gBAAM,QAAQ,IAAI,kBAAkB;AAAA,YAClC,MAAM,SAAS,QAAQ;AAAA,YACvB,WAAW;AAAA,YACX;AAAA,YACA,MAAM;AAAA,UACR,CAAC;AAED,cAAI;AACF,yBAAa,OAAO,KAAK;AAAA,UAC3B,SAAS,OAAO;AACd,gBAAI,aAAa,mBAAmB;AAClC,qBAAO,OAAO,wCAAwC;AAAA,gBACpD,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAAA,YACH;AACA,mBAAO,OAAO,wCAAwC,EAAE,MAAM,GAAG,MAAM,CAAC;AAAA,UAC1E;AAEA,iBAAO,OAAO,wCAAwC,EAAE,MAAM,EAAE,CAAC;AAAA,QACnE;AAEF,iBAAS,uCACL,QACA,QACA,KACA,UACA,SACA,YACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AAEpE,cAAI,QAAQ,aAAa,iBAAiB;AACxC,mBAAO,OAAO,wCAAwC;AAAA,cACpD,MAAM;AAAA,cACN,OAAO,QAAQ,aAAa;AAAA,YAC9B,CAAC;AAAA,UACH;AAEA,cAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,kBAAM,WAAW,QAAQ,aAAa;AACtC,oBAAQ,eAAe,OAAO;AAAA,cAC5B;AAAA,cACA,QAAQ;AAAA,YACV;AACA,oBAAQ,aAAa,WAAW;AAChC,oBAAQ,aAAa,UAAU,QAAQ,aAAa;AACpD,mBAAO,OAAO,wCAAwC;AAAA,cACpD,MAAM;AAAA,cACN,OAAO;AAAA,YACT,CAAC;AAAA,UACH;AACA,gBAAM,eAAe,QAAQ;AAE7B,gBAAM,YAAY,OAAO,OAAO,SAAS,SAAS,UAAU,UAAU;AACtE,gBAAM,QAAQ,IAAI,kBAAkB;AAAA,YAClC,MAAM,SAAS,QAAQ;AAAA,YACvB,WAAW;AAAA,YACX;AAAA,YACA,MAAM;AAAA,UACR,CAAC;AAED,cAAI;AACF,yBAAa,OAAO,KAAK;AAAA,UAC3B,SAAS,OAAO;AACd,gBAAI,aAAa,mBAAmB;AAClC,qBAAO,OAAO,wCAAwC;AAAA,gBACpD,MAAM;AAAA,gBACN;AAAA,cACF,CAAC;AAAA,YACH;AACA,mBAAO,OAAO,wCAAwC,EAAE,MAAM,GAAG,MAAM,CAAC;AAAA,UAC1E;AAEA,iBAAO,OAAO,wCAAwC,EAAE,MAAM,EAAE,CAAC;AAAA,QACnE;AAEF,iBAAS,0CAA0C,QAAQ;AACvD,cAAI,OAAO,mCAAmC,IAAI,MAAM,GAAG;AACzD,kBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,sBAAQ,aAAa,MAAM;AAAA,YAC7B;AACA,mBAAO,mCAAmC,OAAO,MAAM;AAAA,UACzD;AAAA,QACF;AAEF,iBAAS,0CAA0C,QAAQ;AACvD,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,cAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,oBAAQ,aAAa,MAAM;AAAA,UAC7B;AACA,iBAAO,mCAAmC,OAAO,MAAM;AAAA,QACzD;AAEF,iBAAS,0CAA0C,QAAQ;AACvD,cAAI,OAAO,mCAAmC,IAAI,MAAM,GAAG;AACzD,kBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,sBAAQ,aAAa,MAAM;AAAA,YAC7B;AACA,mBAAO,mCAAmC,OAAO,MAAM;AAAA,UACzD;AAAA,QACF;AAEF,iBAAS,0CAA0C,QAAQ;AACvD,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,cAAI,QAAQ,aAAa,UAAU,UAAU;AAC3C,oBAAQ,aAAa,MAAM;AAAA,UAC7B;AACA,iBAAO,mCAAmC,OAAO,MAAM;AAAA,QACzD;AAEF,iBAAS,sCAAsC,QAAQ,SAAS,YAAY;AACxE,gBAAM,eAAe;AACrB,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,aAAa,QAAQ,mBAAmB;AAC9C,gBAAM,mBAAmB,QAAQ,mBAAmB;AACpD,gBAAM,iBAAiB,aAAa;AACpC,gBAAM,YAAY,KAAK;AAAA,YACrB,gBAAiB,QAAQ,aAAa,iBAAkB;AAAA,UAC1D;AACA,gBAAM,WAAW,KAAK,MAAM,gBAAgB,iBAAiB,WAAW;AAExE,gBAAM,OAAO,OAAO,QAAQ,SAAS,UAAU,GAAG,UAAU,IAAI,UAAU;AAC1E,gBAAM,YAAY,IAAI,UAAU;AAAA,YAC9B,QAAQ;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAED,kBAAQ,aAAa,OAAO,SAAS;AACrC,kBAAQ;AACR,oBAAU,MAAM;AAAA,QAClB;AAEF,iBAAS,uCACL,QACA,SACA,YACA;AACA,gBAAM,eAAe;AACrB,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,YAAY,KAAK;AAAA,YACrB,gBAAgB,QAAQ,aAAa,QAAQ,cAAc;AAAA,UAC7D;AACA,gBAAM,WAAW,QAAQ,aAAa,QAAQ,oBAAoB;AAClE,gBAAM,WAAW,KAAK,MAAM,eAAe,QAAQ,cAAc,SAAS;AAI1E,gBAAM,SAAS,OAAO,mBAAmB,SAAS;AAClD,gBAAM,QAAQ,IAAI,WAAW,QAAQ,EAAE,WAAW,SAAS,CAAC;AAE5D,kBAAQ,aAAa,OAAO,OAAO,EAAE,SAAS,CAAC;AAC/C,gBAAM,MAAM;AACZ,kBAAQ;AAAA,QACV;AAEF,uBAAe,4CACX,QACA,iBACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AAIpE,cAAI;AACF,kBAAM,QAAQ,aAAa,MAAM;AAAA,UACnC,QAAQ;AACN,gBAAI,QAAQ,aAAa,GAAG;AAC1B,oBAAM,IAAI,MAAM,6BAA6B;AAAA,YAC/C;AAAA,UACF;AAEA,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAEF,uBAAe,4CACX,QACA,iBACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,QAAQ,aAAa,MAAM;AACjC,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAEF,uBAAe,wCACX,QACA,sBACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,eAAe,QAAQ;AAC7B,uBAAa,WAAW;AAIxB,cAAI;AACF,kBAAM,aAAa,MAAM;AAAA,UAC3B,QAAQ;AAAA,UAAC;AACT,uBAAa,WAAW;AACxB,uBAAa,gBAAgB;AAAA,QAC/B;AAEF,uBAAe,wCACX,QACA,sBACA,kBACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,eAAe,QAAQ;AAC7B,uBAAa,mBAAmB;AAChC,uBAAa,WAAW;AAIxB,cAAI;AACF,kBAAM,aAAa,MAAM;AAAA,UAC3B,QAAQ;AAAA,UAAC;AACT,uBAAa,WAAW;AACxB,uBAAa,mBAAmB;AAChC,uBAAa,gBAAgB;AAAA,QAC/B;AAEF,iBAAS,+CAA+C,QAAQ;AAC5D,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,iBAAO,QAAQ,aAAa;AAAA,QAC9B;AAEF,iBAAS,oDAAoD,QAAQ;AACjE,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,eAAe,QAAQ;AAC7B,iBAAO,aAAa;AAAA,QACtB;AAEF,iBAAS,4CAA4C,QAAQ;AACzD,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,iBAAO,QAAQ,aAAa;AAAA,QAC9B;AAEF,iBAAS,6CAA6C,QAAQ;AAC1D,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,iBAAO,QAAQ,aAAa;AAAA,QAC9B;AAEF,iBAAS,6CAA6C,QAAQ;AAC1D,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,iBAAO,QAAQ,aAAa;AAAA,QAC9B;AAEF,iBAAS,oCAAoC;AACzC,iBACE,OAAO,eAAe,eACtB,OAAO,iBAAiB,eACxB,OAAO,iBAAiB,eACxB,OAAO,iBAAiB,eACxB,OAAO,iBAAiB;AAAA,QAE5B;AAEF,iBAAS,6CACL,QACA,gBACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,kBAAQ,aAAa,iBAAiB;AAAA,QACxC;AAEF,iBAAS,uCACL,QACA,mBACA,QACA;AACA,gBAAM,UAAU,OAAO,mCAAmC,IAAI,MAAM;AACpE,gBAAM,sBAAsB,OAAO,QAAQ;AAAA,YACzC,oBAAoB;AAAA,YACpB,oBAAoB,IAAI;AAAA,UAC1B;AACA,kBAAQ,aAAa,WAAW,CAAC;AACjC,mBAASC,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,oBAAQ,aAAa,SAASA,EAAC,IAAI,GAAG,SAAS,oBAAoBA,EAAC,CAAC;AAAA,UACvE;AAAA,QACF;AAEF,iBAAS,0CAA0C,YAAY;AACvD,gBAAMK,WAAU,OAAO,iCAAiC,WAAW,UAAU;AAC7E,cAAIA,aAAY,QAAQA,aAAY,SAAS,SAASA,SAAQ,SAAS,GAAG;AACtE,mBAAO;AAAA,UACX,OACK;AACD,mBAAO;AAAA,UACX;AAAA,QACJ;AAEJ,iBAAS,8BAA8B;AAC/B,iBAAO,iCAAiC,MAAM;AAAA,QAClD;AAEJ,iBAAS,mCAAmC,KAAK,WAAW,OAAO,aAAa;AACxE,iBAAO,OAAO,iCAAiC,aAAa,KAAK,WAAW,OAAO,WAAW;AAAA,QAClG;AAEJ,iBAAS,mCAAmC,YAAY;AAChD,iBAAO,iCAAiC,aAAa,UAAU;AAAA,QACnE;AAEJ,iBAAS,yCAAyC,aAAa,KAAK,WAAW,eAAe,mBAAmB,aAAa,YAAY,aAAa,mBAAmB;AAClK,gBAAMA,WAAU,OAAO,iCAAiC,MAAM,aAAa,KAAK,WAAW,eAAe,mBAAmB,aAAa,YAAY,aAAa,iBAAiB;AACpL,iBAAOA,SAAQ;AAAA,QACnB;AAEJ,iBAAS,sCAAsC,YAAY;AACnD,iBAAO,OAAO,iCAAiC,cAAc,UAAU;AAAA,QAC3E;AAEJ,iBAAS,6CAA6C,YAAY;AAC1D,cAAI,IAAI;AACR,kBAAS,MAAM,KAAK,OAAO,iCAAiC,WAAW,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,oBAAoB,QAAQ,OAAO,SAAS,KAAK;AAAA,QACjL;AAEJ,iBAAS,4CAA4C,YAAY;AACzD,gBAAMA,WAAU,OAAO,iCAAiC,WAAW,UAAU;AAC7E,cAAIA,aAAY,QAAQA,aAAY,SAAS,SAASA,SAAQ,YAAY,GAAG;AACzE,mBAAOA,SAAQ;AAAA,UACnB,OACK;AACD,mBAAO;AAAA,UACX;AAAA,QACJ;AAEJ,iBAAS,2CAA2C,YAAY;AACxD,gBAAMA,WAAU,OAAO,iCAAiC,WAAW,UAAU;AAC7E,cAAIA,aAAY,QAAQA,aAAY,SAAS,SAASA,SAAQ,YAAY,GAAG;AACzE,mBAAOA,SAAQ;AAAA,UACnB,OACK;AACD,mBAAO;AAAA,UACX;AAAA,QACJ;AAEJ,iBAAS,oCAAoC,YAAY;AACjD,cAAI,IAAI;AACR,kBAAS,MAAM,KAAK,OAAO,iCAAiC,WAAW,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,WAAW,QAAQ,OAAO,SAAS,KAAK;AAAA,QACxK;AAEJ,iBAAS,yCAAyC,YAAY;AACtD,cAAI,IAAI;AACR,kBAAS,MAAM,KAAK,OAAO,iCAAiC,WAAW,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,gBAAgB,QAAQ,OAAO,SAAS,KAAK;AAAA,QAC7K;AAEJ,iBAAS,0CAA0C;AAC/C,iBAAO,CAAC,CAAC,OAAO;AAAA,QAClB;AAIF,YAAI,gBAAgB,CAAC,MAAM;AACvB,cAAI,QAAQ,UAAU;AACtB,cAAI,MAAM,EAAE;AACZ,uBAAa,KAAK;AAClB,iBAAO;AAAA,QACT;AACF,YAAI,WAAW;AAAA,UACf,0BAA0B;AACpB,mBAAO,SAAS,cAAc,QAAQ;AACpC,uBAAS,eAAe,SAAS,cAAc,SAAS,CAAC;AAAA,YAC3D;AACA,qBAAS,gBAAgB,CAAC;AAAA,UAC5B;AAAA,UACJ,gBAAe;AAAA,UACf,eAAc,CAAC;AAAA,UACf,UAAU,gBAAgB,YAAY,UAAU;AAC1C,qBAAS,uBAAuB,MAAM,MAAM;AAC1C,kBAAI,KAAK,UAAU,KAAK,OAAQ,QAAO;AAEvC,uBAASL,MAAK,MAAM;AAClB,oBAAI,KAAKA,EAAC,KAAK,KAAKA,EAAC,EAAG,QAAO;AAAA,cACjC;AACA,qBAAO;AAAA,YACT;AAEA,qBAASA,MAAK,SAAS,eAAe;AACpC,kBAAI,OAAO,SAAS,cAAcA,EAAC;AACnC,kBAAI,KAAK,kBAAkB,kBAAkB,uBAAuB,KAAK,UAAU,QAAQ,GAAG;AAC5F;AAAA,cACF;AAAA,YACF;AACA,qBAAS,cAAc,KAAK;AAAA,cAC1B;AAAA,cACA;AAAA,cACA;AAAA,YACF,CAAC;AAED,qBAAS,cAAc,KAAK,CAAC,GAAE,MAAM,EAAE,aAAa,EAAE,UAAU;AAAA,UAClE;AAAA,UACJ,oBAAoB,gBAAgB;AAC9B,qBAASA,KAAI,GAAGA,KAAI,SAAS,cAAc,QAAQ,EAAEA,IAAG;AACtD,kBAAI,SAAS,cAAcA,EAAC,EAAE,kBAAkB,gBAAgB;AAC9D,yBAAS,cAAc,OAAOA,IAAG,CAAC;AAClC,kBAAEA;AAAA,cACJ;AAAA,YACF;AAAA,UACF;AAAA,UACJ,iCAAiC;AAC3B,gBAAI,UAAU,gBAAgB;AAM5B,qBAAO,UAAU,eAAe;AAAA,YAClC;AAEA,mBAAO,SAAS,kBAAkB,SAAS,oBAAoB;AAAA,UACjE;AAAA,UACJ,mBAAmB;AACb,gBAAI,CAAC,SAAS,+BAA+B,GAAG;AAC9C;AAAA,YACF;AACA,qBAASA,KAAI,GAAGA,KAAI,SAAS,cAAc,QAAQ,EAAEA,IAAG;AACtD,kBAAI,OAAO,SAAS,cAAcA,EAAC;AACnC,uBAAS,cAAc,OAAOA,IAAG,CAAC;AAClC,gBAAEA;AACF,mBAAK,eAAe,MAAM,MAAM,KAAK,QAAQ;AAAA,YAC/C;AAAA,UACF;AAAA,UACJ,eAAc,CAAC;AAAA,UACf,2BAA0B,CAAC,QAAQ,oBAAoB;AACjD,qBAASA,KAAI,GAAGA,KAAI,SAAS,cAAc,QAAQ,EAAEA,IAAG;AACtD,kBAAI,SAAS,cAAcA,EAAC,EAAE,UAAU,WACrC,CAAC,mBAAmB,mBAAmB,SAAS,cAAcA,EAAC,EAAE,kBAAkB;AACnF,yBAAS,eAAeA,IAAG;AAAA,cAC7B;AAAA,YACH;AAAA,UACF;AAAA,UACJ,eAAeA,IAAG;AACZ,gBAAI,IAAI,SAAS,cAAcA,EAAC;AAChC,cAAE,OAAO,oBAAoB,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,UAAU;AACjF,qBAAS,cAAc,OAAOA,IAAG,CAAC;AAAA,UACpC;AAAA,UACJ,wBAAwB,cAAc;AAChC,gBAAI,CAAC,aAAa,QAAQ;AACxB,kBAAI,sJAAsJ;AAC1J,sBAAQ,IAAI,YAAY;AACxB,qBAAO;AAAA,YACT;AACA,gBAAI,aAAa,cAAc;AAC7B,2BAAa,oBAAoB,SAAS,OAAO;AAE/C,kBAAE,SAAS;AACX,yBAAS,sBAAsB;AAE/B,yBAAS,iBAAiB;AAE1B,6BAAa,YAAY,KAAK;AAE9B,yBAAS,iBAAiB;AAE1B,kBAAE,SAAS;AAAA,cACb;AAEA,2BAAa,OAAO;AAAA,gBAAiB,aAAa;AAAA,gBACb,aAAa;AAAA,gBACb,aAAa;AAAA,cAAU;AAC5D,uBAAS,cAAc,KAAK,YAAY;AAAA,YAC1C,OAAO;AACL,uBAASA,KAAI,GAAGA,KAAI,SAAS,cAAc,QAAQ,EAAEA,IAAG;AACtD,oBAAI,SAAS,cAAcA,EAAC,EAAE,UAAU,aAAa,UACjD,SAAS,cAAcA,EAAC,EAAE,mBAAmB,aAAa,iBAAiB;AAC5E,2BAAS,eAAeA,IAAG;AAAA,gBAC7B;AAAA,cACH;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAAA,UACJ,qBAAqB,QAAQ;AACvB,gBAAI,CAAC,OAAQ,QAAO;AACpB,gBAAI,UAAU,OAAQ,QAAO;AAC7B,gBAAI,UAAU,OAAQ,QAAO;AAC7B,mBAAO,QAAQ,YAAY;AAAA,UAC7B;AAAA,UACJ,oBAAoB;AACd,mBAAO,SAAS,qBAGb,SAAS;AAAA,UAEd;AAAA,QACJ;AAEA,YAAI,qCAAqC,CAAC,WAAW,aAAa,kBAAkB;AAEpF,YAAI,yBAAyB,CAAC,YAAY;AAKtC,iBAAO,UAAU,IAAI,aAAa,OAAO,IAAI;AAAA,QAC/C;AAEF,YAAI,qBAAqB,CAAC,GAAG,OAAO,YAAY,cAAc,WAAW,GAAG,OAAO,UAAU,cAAc,SAAS,CAAC;AACrH,YAAI,kBAAkB,CAAC,WAAW;AAC9B,mBAAS,uBAAuB,MAAM;AACtC,cAAI,aAAa,mBAAmB,MAAM,MAAM,OAAO,YAAY,cAAc,SAAS,cAAc,MAAM,IAAI;AAClH,iBAAO;AAAA,QACT;AAEF,YAAI,wBAAwB;AAG5B,YAAI,sCAAsC,CAAC,QAAQ,eAAe;AAC9D,UAAAD,QAAO,UAAU;AACjB,cAAI,IAAI,cAAc;AACtB,cAAI,kBAAkB,OAAO,KAAK,MAAI,EAAE;AACxC,cAAI,oBAAoB;AAAA,YACtB,SAAS,CAAC,CAAC,OAAO,KAAK,KAAG,EAAE;AAAA,YAC5B,SAAS,CAAC,CAAC,OAAO,KAAK,KAAG,EAAE;AAAA,YAC5B,WAAW,CAAC,CAAC,OAAO,KAAK,KAAG,EAAE;AAAA,YAC9B,aAAa,CAAC,CAAC,OAAO,KAAK,MAAI,EAAE;AAAA,YACjC,sBAAsB,CAAC,CAAC,OAAO,KAAK,MAAI,EAAE;AAAA,YAC1C,yBAAyB,CAAC,CAAC,OAAO,KAAK,MAAI,EAAE;AAAA,YAC7C,mBAAmB,mCAAmC,eAAe;AAAA,YACrE,gCAAgC,CAAC,CAAC,OAAO,KAAK,MAAI,EAAE;AAAA;AAAA,YAEpD,cAAc,OAAO,KAAK,MAAI,EAAE;AAAA,YAChC,cAAc,OAAO,KAAK,MAAI,EAAE;AAAA,YAChC,2BAA2B,OAAO,KAAK,MAAI,EAAE;AAAA,YAC7C,qBAAqB,OAAO,KAAK,MAAI,EAAE;AAAA,YACvC,0BAA0B,OAAO,KAAK,MAAI,EAAE;AAAA,YAC5C,8BAA8B,OAAO,KAAK,MAAI,EAAE;AAAA,UAClD;AAEA,cAAI,SAAS,sBAAsB,MAAM;AAEzC,cAAI,CAAC,QAAQ;AACX,mBAAO;AAAA,UACT;AAEA,cAAI,kBAAkB,qBAAqB;AACzC,mBAAO;AAAA,UACT;AAEA,cAAI,gBAAgB,GAAG,cAAc,QAAQ,iBAAiB;AAC9D,iBAAO;AAAA,QACT;AACF,YAAI,mCAAmC;AAGvC,YAAI,oCAAoC,CAAC,kBAAkB;AACvD,cAAI,GAAG,kBAAkB,cAAe,IAAG,iBAAiB;AAC5D,aAAG,cAAc,aAAa;AAAA,QAChC;AAEF,YAAI,uCAAuC,CAAC,QAAQ;AAEhD,cAAI,MAAM,IAAI,aAAa,yBAAyB;AACpD,cAAI,KAAK;AACP,gBAAI,mBAAmB,IAAI,MAAM,IAAI,sBAAsB,EAAE;AAC7D,gBAAI,mBAAmB,IAAI,CAAC,QAAQ,IAAI,sBAAsB,EAAE,GAAG;AACnE,gBAAI,iBAAiB,IAAI,CAAC,QAAQ,IAAI,oBAAoB,EAAE,GAAG;AAC/D,gBAAI,eAAe,IAAI,CAAC,QAAQ,IAAI,kBAAkB,EAAE,GAAG;AAC3D,mBAAO;AAAA,UACT;AAAA,QACF;AAEF,YAAI,mDAAmD,CAAC,QAAQ,qCAAqC,GAAG,SAAS,GAAG,EAAE,KAAK;AAE3H,YAAI,kCAAkC,CAAC,QAAQ;AAE3C,cAAI,MAAM,IAAI,aAAa,oBAAoB;AAC/C,cAAI,KAAK;AACP,gBAAI,aAAa,IAAI,CAAC,GAAG,SAAS,IAAI,kBAAkB,EAAE,GAAG,IAAI;AACjE,mBAAO;AAAA,UACT;AAAA,QACF;AAEF,YAAI,8CAA8C,CAAC,QAAQ,gCAAgC,GAAG,SAAS,GAAG,EAAE,KAAK;AAEjH,YAAI,gCAAgC,CAAC,QAAQ;AAEzC,iBAAO,CAAC,EAAE,IAAI,iBAAiB,IAAI,aAAa,kBAAkB;AAAA,QACpE;AAEF,YAAI,4CAA4C,CAAC,QAAQ,8BAA8B,GAAG,SAAS,GAAG,EAAE,KAAK;AAG7G,YAAI,qCAAqC,CAAC,eAAe,cAAc;AACnE,cAAI,UAAU,GAAG,WAAW,aAAa;AACzC,cAAI,YAAY,aAAa,SAAS;AACtC,cAAI,UAAU,WAAW,KAAK,EAAG,aAAY,UAAU,OAAO,CAAC;AAE/D,cAAI;AAAA,YAAC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAsD,EAAE,SAAS,SAAS,GAAG;AAChF,gBAAI,iJACY,YAAY,sEAAsE;AAAA,UACpG;AAEA,cAAI,MAAM,QAAQ,MAAM,aAAa,SAAS;AAC9C,iBAAO,CAAC,CAAC;AAAA,QACX;AAGF,YAAI,2CAA2C,CAAC,GAAG,MAAM;AACrD,cAAI,CAAC,EAAG,QAAO;AACf,cAAI,GAAG,SAAS,CAAC;AACjB,cAAI,CAAC,EAAG,QAAO;AACf,cAAI,IAAI,EAAE;AACV,cAAI,CAAC,EAAG,QAAO;AACf,cAAI,EAAE,qBAAqB;AAE3B,iBAAS,KAAI,CAAE,IAAI,EAAE;AACrB,iBAAU,IAAI,KAAK,CAAE,IAAI,EAAE;AAC3B,iBAAU,IAAI,KAAK,CAAE,IAAI,EAAE;AAC3B,iBAAU,IAAI,MAAM,CAAE,IAAI,EAAE;AAC5B,iBAAU,IAAI,MAAM,CAAE,IAAI,EAAE;AAC5B,iBAAU,IAAI,MAAM,CAAE,IAAI,EAAE;AAC5B,cAAI,QAAQ,EAAE,iBAAiB,KAAK,mCAAmC,QAAQ,EAAE,iBAAiB,CAAC;AACnG,iBAAU,IAAI,MAAM,CAAE,IAAI;AAC1B,iBAAU,IAAI,MAAM,CAAE,IAAI,EAAE;AAC5B,iBAAU,IAAI,MAAM,CAAE,IAAI,EAAE;AAC5B,iBAAU,IAAI,MAAM,CAAE,IAAI;AAC1B,iBAAO;AAAA,QACT;AAEF,YAAI,yCAAyC,CAAC,kBAAkB;AAC5D,cAAI,UAAU,GAAG,mBAAmB,aAAa;AACjD,iBAAO,UAAU,IAAI;AAAA,QACvB;AAEF,YAAI,MAAM,CACV;AAEA,YAAI,oBAAoB,MAAM;AAC1B,iBAAO,eAAe;AAAA,QACxB;AACF,YAAI,gBAAgB,MAAM;AACtB,cAAI,CAAC,cAAc,SAAS;AAG1B,gBAAI,QAAS,OAAO,aAAa,YAAY,UAAU,aAAa,UAAU,UAAU,CAAC,KAAM,KAAK,QAAQ,KAAK,GAAG,IAAI;AACxH,gBAAI,MAAM;AAAA,cACR,QAAQ;AAAA,cACR,WAAW;AAAA,cACX,QAAQ;AAAA,cACR,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,QAAQ;AAAA,cACR,KAAK,kBAAkB;AAAA,YACzB;AAEA,qBAAS,KAAK,KAAK;AAIjB,kBAAI,IAAI,CAAC,MAAM,OAAW,QAAO,IAAI,CAAC;AAAA,kBACjC,KAAI,CAAC,IAAI,IAAI,CAAC;AAAA,YACrB;AACA,gBAAI,UAAU,CAAC;AACf,qBAAS,KAAK,KAAK;AACjB,sBAAQ,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE;AAAA,YAC/B;AACA,0BAAc,UAAU;AAAA,UAC1B;AACA,iBAAO,cAAc;AAAA,QACvB;AAEF,YAAI,gBAAgB,CAAC,KAAK,WAAW;AACjC,mBAASC,KAAI,GAAGA,KAAI,IAAI,QAAQ,EAAEA,IAAG;AACnC,YAAAD,QAAO,IAAI,WAAWC,EAAC,OAAO,IAAI,WAAWA,EAAC,IAAI,IAAK;AACvD,kBAAQ,YAAW,CAAE,IAAI,IAAI,WAAWA,EAAC;AAAA,UAC3C;AAEA,gBAAQ,UAAS,CAAE,IAAI;AAAA,QACzB;AACF,YAAI,eAAe,CAAC,WAAW,gBAAgB;AAC3C,cAAI,UAAU;AACd,wBAAc,EAAE,QAAQ,CAACQ,SAAQR,OAAM;AACrC,gBAAI,MAAM,cAAc;AACxB,oBAAW,YAAYA,KAAE,KAAK,CAAE,IAAI;AACpC,0BAAcQ,SAAQ,GAAG;AACzB,uBAAWA,QAAO,SAAS;AAAA,UAC7B,CAAC;AACD,iBAAO;AAAA,QACT;AAEF,YAAI,qBAAqB,CAAC,gBAAgB,sBAAsB;AAC5D,cAAI,UAAU,cAAc;AAC5B,kBAAU,kBAAiB,CAAE,IAAI,QAAQ;AACzC,cAAI,UAAU;AACd,kBAAQ,QAAQ,CAACA,YAAW,WAAWA,QAAO,SAAS,CAAC;AACxD,kBAAU,qBAAoB,CAAE,IAAI;AACpC,iBAAO;AAAA,QACT;AAGF,iBAAS,UAAU,IAAI;AACvB,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,eAAG,MAAM,MAAM;AACf,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AAAA,QACA;AAEA,iBAAS,eAAe,IAAI,MAAM;AAClC,cAAI;AAEA,gBAAI,aAAa;AACjB,gBAAI,mBAAmB;AACvB,gBAAI,QAAQ;AACZ;AACE,kBAAI,SAAS,SAAS,gBAAgB,EAAE;AAGxC,kBAAIG,QAAO,OAAO,MAAM,IACb,GAAG,MAAM,OAAO,IAAI,IAAI,IACxB,GAAG,OAAO,OAAO,IAAI,IAAI,IACzB;AAAA,YACb;AACA,kBAAQ,QAAO,CAAE,IAAIA;AACrB,mBAAU,OAAO,KAAK,CAAE,IAAI;AAC5B,mBAAU,OAAO,KAAK,CAAE,IAAI,OAAO,UAAU;AAC7C,mBAAU,OAAO,MAAM,CAAE,IAAI,OAAO,gBAAgB;AACpD,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AAAA,QACA;AAGA,YAAI,UAAU,CAAC,QAAQ,KAAK,QAAQ,WAAW;AAC3C,cAAI,MAAM;AACV,mBAASX,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,gBAAI,MAAM,QAAU,OAAM,CAAE;AAC5B,gBAAI,MAAM,QAAW,MAAM,KAAK,CAAE;AAClC,mBAAO;AACP,gBAAI,OAAO,GAAG,KAAK,QAAQ,OAAO,KAAK,KAAK,MAAM;AAClD,gBAAI,OAAO,EAAG,QAAO;AACrB,mBAAO;AACP,gBAAI,OAAO,IAAK;AAChB,gBAAI,OAAO,WAAW,aAAa;AACjC,wBAAU;AAAA,YACZ;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAGF,iBAAS,UAAU,IAAI,KAAK,QAAQ,QAAQ,MAAM;AAChD,mBAAS,mBAAmB,MAAM;AAAE;AAGtC,cAAI;AAEA,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,QAAQ,QAAQ,KAAK,QAAQ,MAAM;AAC7C,oBAAU,QAAO,CAAE,IAAI;AACvB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AACA;AAAA,QACA;AAGA,iBAAS,SAAS,IAAI,KAAK,QAAQ,MAAM;AACzC,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,QAAQ,QAAQ,KAAK,MAAM;AACrC,oBAAU,QAAO,CAAE,IAAI;AACvB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AAAA,QACA;AAGA,iBAAS,SAAS,IAAI,QAAQ,QAAQ,WAAW;AAC/C,mBAAS,mBAAmB,MAAM;AAAE;AAGtC,cAAI;AAEA,gBAAI,MAAM,MAAM,EAAG,QAAO;AAC1B,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,eAAG,OAAO,QAAQ,QAAQ,MAAM;AAChC,mBAAS,aAAY,CAAE,IAAI,OAAO,OAAO,QAAQ;AACjD,gBAAI,OAAO,YAAY,WAAW,KAAK,WAAW,EAAG,QAAO,WAAW;AACvE,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AACA;AAAA,QACA;AAGA,YAAI,WAAW,CAAC,QAAQ,KAAK,QAAQ,WAAW;AAC5C,cAAI,MAAM;AACV,mBAASA,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC/B,gBAAI,MAAM,QAAU,OAAM,CAAE;AAC5B,gBAAI,MAAM,QAAW,MAAM,KAAK,CAAE;AAClC,mBAAO;AACP,gBAAI,OAAO,GAAG,MAAM,QAAQ,OAAO,KAAK,KAAK,MAAM;AACnD,gBAAI,OAAO,EAAG,QAAO;AACrB,mBAAO;AACP,gBAAI,OAAO,WAAW,aAAa;AACjC,wBAAU;AAAA,YACZ;AAAA,UACF;AACA,iBAAO;AAAA,QACT;AAEF,iBAAS,UAAU,IAAI,KAAK,QAAQ,MAAM;AAC1C,cAAI;AAEA,gBAAI,SAAS,SAAS,gBAAgB,EAAE;AACxC,gBAAI,MAAM,SAAS,QAAQ,KAAK,MAAM;AACtC,oBAAU,QAAO,CAAE,IAAI;AACvB,mBAAO;AAAA,UACT,SAAS,GAAG;AACZ,gBAAI,OAAO,MAAM,eAAe,EAAE,EAAE,SAAS,cAAe,OAAM;AAClE,mBAAO,EAAE;AAAA,UACX;AAAA,QACA;AAEA,YAAI,cAAc,CAAC,QAAQ,SAAS;AAChC,qBAAW,OAAO,SAAS,QAAQ,SAAS,IAAI,CAAC;AACjD,iBAAO;AAAA,QACT;AAGF,YAAI,WAAW,CAACO,QAAO,UAAU;AAC7B,cAAI,MAAM;AACV,mBAASP,KAAI,GAAGA,MAAK,OAAO,OAAOO,OAAMP,IAAG,GAAG;AAAA,UAE/C;AACA,iBAAO;AAAA,QACT;AAGF,YAAI,kBAAkB,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAE1D,YAAI,qBAAqB,CAAC,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAC7D,YAAI,UAAU,CAAC,MAAM,SAAS;AAC1B,cAAI,UAAU,IAAI,KAAK,KAAK,QAAQ,CAAC;AACrC,iBAAO,OAAO,GAAG;AACf,gBAAI,OAAO,WAAW,QAAQ,YAAY,CAAC;AAC3C,gBAAI,eAAe,QAAQ,SAAS;AACpC,gBAAI,sBAAsB,OAAO,kBAAkB,oBAAoB,YAAY;AAEnF,gBAAI,OAAO,qBAAmB,QAAQ,QAAQ,GAAG;AAE/C,sBAAS,qBAAmB,QAAQ,QAAQ,IAAE;AAC9C,sBAAQ,QAAQ,CAAC;AACjB,kBAAI,eAAe,IAAI;AACrB,wBAAQ,SAAS,eAAa,CAAC;AAAA,cACjC,OAAO;AACL,wBAAQ,SAAS,CAAC;AAClB,wBAAQ,YAAY,QAAQ,YAAY,IAAE,CAAC;AAAA,cAC7C;AAAA,YACF,OAAO;AAEL,sBAAQ,QAAQ,QAAQ,QAAQ,IAAE,IAAI;AACtC,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAKF,YAAI,qBAAqB,CAACO,QAAO,WAAW;AACxC,UAAAR,QAAOQ,OAAM,UAAU,GAAG,iFAAiF;AAC3G,gBAAM,IAAIA,QAAO,MAAM;AAAA,QACzB;AAEF,YAAI,YAAY,CAAC,GAAG,SAAS,QAAQ,OAAO;AAIxC,cAAI,UAAU,QAAW,KAAK,MAAM,CAAE;AAEtC,cAAI,OAAO;AAAA,YACT,QAAQ,OAAS,MAAK,CAAE;AAAA,YACxB,QAAQ,OAAU,KAAK,KAAK,CAAE;AAAA,YAC9B,SAAS,OAAU,KAAK,KAAK,CAAE;AAAA,YAC/B,SAAS,OAAU,KAAK,MAAM,CAAE;AAAA,YAChC,QAAQ,OAAU,KAAK,MAAM,CAAE;AAAA,YAC/B,SAAS,OAAU,KAAK,MAAM,CAAE;AAAA,YAChC,SAAS,OAAU,KAAK,MAAM,CAAE;AAAA,YAChC,SAAS,OAAU,KAAK,MAAM,CAAE;AAAA,YAChC,UAAU,OAAU,KAAK,MAAM,CAAE;AAAA,YACjC,WAAW,OAAU,KAAK,MAAM,CAAE;AAAA,YAClC,SAAS,UAAU,aAAa,OAAO,IAAI;AAAA,UAC7C;AAGA,cAAI,UAAU,aAAa,MAAM;AAGjC,cAAI,oBAAoB;AAAA,YACtmBAAS,QAAQ,mBAAmB;AAClC,sBAAU,QAAQ,QAAQ,IAAI,OAAO,MAAM,GAAG,GAAG,kBAAkB,IAAI,CAAC;AAAA,UAC1E;AAEA,cAAI,WAAW,CAAC,UAAU,UAAU,WAAW,aAAa,YAAY,UAAU,UAAU;AAC5F,cAAI,SAAS,CAAC,WAAW,YAAY,SAAS,SAAS,OAAO,QAAQ,QAAQ,UAAU,aAAa,WAAW,YAAY,UAAU;AAEtI,mBAAS,iBAAiB,OAAO,QAAQ,WAAW;AAClD,gBAAI,MAAM,OAAO,SAAS,WAAW,MAAM,SAAS,IAAK,SAAS;AAClE,mBAAO,IAAI,SAAS,QAAQ;AAC1B,oBAAM,UAAU,CAAC,IAAE;AAAA,YACrB;AACA,mBAAO;AAAA,UACT;AAEA,mBAAS,aAAa,OAAO,QAAQ;AACnC,mBAAO,iBAAiB,OAAO,QAAQ,GAAG;AAAA,UAC5C;AAEA,mBAAS,aAAa,OAAO,OAAO;AAClC,qBAAS,IAAI,OAAO;AAClB,qBAAO,QAAQ,IAAI,KAAM,QAAQ,IAAI,IAAI;AAAA,YAC3C;AAEA,gBAAI;AACJ,iBAAK,UAAU,IAAI,MAAM,YAAY,IAAE,MAAM,YAAY,CAAC,OAAO,GAAG;AAClE,mBAAK,UAAU,IAAI,MAAM,SAAS,IAAE,MAAM,SAAS,CAAC,OAAO,GAAG;AAC5D,0BAAU,IAAI,MAAM,QAAQ,IAAE,MAAM,QAAQ,CAAC;AAAA,cAC/C;AAAA,YACF;AACA,mBAAO;AAAA,UACT;AAEA,mBAAS,sBAAsB,WAAW;AACtC,oBAAQ,UAAU,OAAO,GAAG;AAAA,cAC1B,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,IAAE,GAAG,IAAI,EAAE;AAAA,cACnD,KAAK;AACH,uBAAO;AAAA,cACT,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,GAAG,GAAG,CAAC;AAAA,cAC/C,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,GAAG,GAAG,CAAC;AAAA,cAC/C,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,GAAG,GAAG,CAAC;AAAA,cAC/C,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,IAAE,GAAG,IAAI,EAAE;AAAA,cACnD,KAAK;AACH,uBAAO,IAAI,KAAK,UAAU,YAAY,IAAE,GAAG,IAAI,EAAE;AAAA,YACrD;AAAA,UACJ;AAEA,mBAAS,iBAAiBwB,OAAM;AAC5B,gBAAI,WAAW,QAAQ,IAAI,KAAKA,MAAK,UAAQ,MAAM,GAAG,CAAC,GAAGA,MAAK,OAAO;AAEtE,gBAAI,oBAAoB,IAAI,KAAK,SAAS,YAAY,GAAG,GAAG,CAAC;AAC7D,gBAAI,oBAAoB,IAAI,KAAK,SAAS,YAAY,IAAE,GAAG,GAAG,CAAC;AAE/D,gBAAI,yBAAyB,sBAAsB,iBAAiB;AACpE,gBAAI,yBAAyB,sBAAsB,iBAAiB;AAEpE,gBAAI,aAAa,wBAAwB,QAAQ,KAAK,GAAG;AAEvD,kBAAI,aAAa,wBAAwB,QAAQ,KAAK,GAAG;AACvD,uBAAO,SAAS,YAAY,IAAE;AAAA,cAChC;AACA,qBAAO,SAAS,YAAY;AAAA,YAC9B;AACA,mBAAO,SAAS,YAAY,IAAE;AAAA,UAClC;AAEA,cAAI,oBAAoB;AAAA,YACtB,MAAM,CAACA,UAAS,SAASA,MAAK,OAAO,EAAE,UAAU,GAAE,CAAC;AAAA,YACpD,MAAM,CAACA,UAAS,SAASA,MAAK,OAAO;AAAA,YACrC,MAAM,CAACA,UAAS,OAAOA,MAAK,MAAM,EAAE,UAAU,GAAE,CAAC;AAAA,YACjD,MAAM,CAACA,UAAS,OAAOA,MAAK,MAAM;AAAA,YAClC,MAAM,CAACA,UAAS;AACd,kBAAI,OAAOA,MAAK,UAAQ;AACxB,qBAAO,aAAc,OAAK,MAAK,GAAE,CAAC;AAAA,YACpC;AAAA,YACA,MAAM,CAACA,UAAS,aAAaA,MAAK,SAAS,CAAC;AAAA,YAC5C,MAAM,CAACA,UAAS,iBAAiBA,MAAK,SAAS,GAAG,GAAG;AAAA,YACrD,MAAM,CAACA,UAAS;AAWd,qBAAO,iBAAiBA,KAAI,EAAE,SAAS,EAAE,UAAU,CAAC;AAAA,YACtD;AAAA,YACA,MAAM;AAAA,YACN,MAAM,CAACA,UAAS,aAAaA,MAAK,SAAS,CAAC;AAAA,YAC5C,MAAM,CAACA,UAAS;AACd,kBAAI,aAAaA,MAAK;AACtB,kBAAI,cAAc,EAAG,cAAa;AAAA,uBACzB,aAAa,GAAI,eAAc;AACxC,qBAAO,aAAa,YAAY,CAAC;AAAA,YACnC;AAAA,YACA,MAAM,CAACA,UAAS;AAEd,qBAAO,aAAaA,MAAK,UAAU,SAAS,WAAWA,MAAK,UAAQ,IAAI,IAAI,kBAAkB,oBAAoBA,MAAK,SAAO,CAAC,GAAG,CAAC;AAAA,YACrI;AAAA,YACA,MAAM,CAACA,UAAS,aAAaA,MAAK,SAAO,GAAG,CAAC;AAAA,YAC7C,MAAM,CAACA,UAAS,aAAaA,MAAK,QAAQ,CAAC;AAAA,YAC3C,MAAM,MAAM;AAAA,YACZ,MAAM,CAACA,UAAS;AACd,kBAAIA,MAAK,WAAW,KAAKA,MAAK,UAAU,IAAI;AAC1C,uBAAO;AAAA,cACT;AACA,qBAAO;AAAA,YACT;AAAA,YACA,MAAM,CAACA,UAAS,aAAaA,MAAK,QAAQ,CAAC;AAAA,YAC3C,MAAM,MAAM;AAAA,YACZ,MAAM,CAACA,UAASA,MAAK,WAAW;AAAA,YAChC,MAAM,CAACA,UAAS;AACd,kBAAI,OAAOA,MAAK,UAAU,IAAIA,MAAK;AACnC,qBAAO,aAAa,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC;AAAA,YAC7C;AAAA,YACA,MAAM,CAACA,UAAS;AAMd,kBAAI,MAAM,KAAK,OAAOA,MAAK,UAAU,KAAKA,MAAK,UAAU,KAAK,KAAM,CAAC;AAGrE,mBAAKA,MAAK,UAAU,MAAMA,MAAK,UAAU,KAAK,KAAK,GAAG;AACpD;AAAA,cACF;AACA,kBAAI,CAAC,KAAK;AACR,sBAAM;AAGN,oBAAI,SAASA,MAAK,UAAU,IAAIA,MAAK,UAAU,KAAK;AACpD,oBAAI,SAAS,KAAM,SAAS,KAAK,WAAWA,MAAK,UAAQ,MAAI,CAAC,GAAI;AAChE;AAAA,gBACF;AAAA,cACF,WAAW,OAAO,IAAI;AAGpB,oBAAI,QAAQA,MAAK,UAAU,MAAMA,MAAK,WAAW;AACjD,oBAAI,QAAQ,MAAM,QAAQ,KAAK,CAAC,WAAWA,MAAK,OAAO;AACrD,wBAAM;AAAA,cACV;AACA,qBAAO,aAAa,KAAK,CAAC;AAAA,YAC5B;AAAA,YACA,MAAM,CAACA,UAASA,MAAK;AAAA,YACrB,MAAM,CAACA,UAAS;AACd,kBAAI,OAAOA,MAAK,UAAU,KAAMA,MAAK,UAAU,KAAK;AACpD,qBAAO,aAAa,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC;AAAA,YAC7C;AAAA,YACA,MAAM,CAACA,UAAS;AAEd,sBAAQA,MAAK,UAAQ,MAAM,SAAS,EAAE,UAAU,CAAC;AAAA,YACnD;AAAA;AAAA,YAEA,MAAM,CAACA,UAASA,MAAK,UAAQ;AAAA,YAC7B,MAAM,CAACA,UAAS;AAGd,kBAAI,MAAMA,MAAK;AACf,kBAAI,QAAQ,OAAO;AACnB,oBAAM,KAAK,IAAI,GAAG,IAAI;AAEtB,oBAAO,MAAM,KAAI,MAAO,MAAM;AAC9B,sBAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,GAAG,EAAE,MAAM,EAAE;AAAA,YAC5D;AAAA,YACA,MAAM,CAACA,UAASA,MAAK;AAAA,YACrB,MAAM,MAAM;AAAA,UACd;AAIA,oBAAU,QAAQ,QAAQ,OAAO,MAAM;AACvC,mBAAS,QAAQ,mBAAmB;AAClC,gBAAI,QAAQ,SAAS,IAAI,GAAG;AAC1B,wBAAU,QAAQ,QAAQ,IAAI,OAAO,MAAM,GAAG,GAAG,kBAAkB,IAAI,EAAE,IAAI,CAAC;AAAA,YAChF;AAAA,UACF;AACA,oBAAU,QAAQ,QAAQ,SAAS,GAAG;AAEtC,cAAI,QAAQ,mBAAmB,SAAS,KAAK;AAC7C,cAAI,MAAM,SAAS,SAAS;AAC1B,mBAAO;AAAA,UACT;AAEA,6BAAmB,OAAO,CAAC;AAC3B,iBAAO,MAAM,SAAO;AAAA,QACtB;AACF,YAAI,cAAc,CAAC,GAAG,SAAS,QAAQ,IAAI,QAAQ;AAC/C,iBAAO,UAAU,GAAG,SAAS,QAAQ,EAAE;AAAA,QACzC;AAKF,YAAI,sBAAsB,CAAC,QAAQ;AAC/B,cAAI,OAAO,gBAAgB,GAAG,IAAI;AAClC,cAAI,MAAM,WAAW,IAAI;AACzB,uBAAa,KAAK,KAAK,IAAI;AAC3B,iBAAO;AAAA,QACT;AAMF,YAAI,WAAW,CAAC,UAAU;AACtB,cAAI,OAAO,OAAO,MAAM,KAAK;AAC7B,UAAAhC,QAAO,MAAM,kCAAkC,QAAQ,4BAA4B;AACnF,iBAAO;AAAA,QACT;AAcF,YAAI,QAAQ,CAAC,OAAO,YAAY,UAAU,MAAM,SAAS;AAErD,cAAI,MAAM;AAAA,YACR,UAAU,CAAC,QAAQ;AACjB,kBAAIiC,OAAM;AACV,kBAAI,QAAQ,QAAQ,QAAQ,UAAa,QAAQ,GAAG;AAElD,gBAAAA,OAAM,oBAAoB,GAAG;AAAA,cAC/B;AACA,qBAAOA;AAAA,YACT;AAAA,YACA,SAAS,CAAC,QAAQ;AAChB,kBAAIA,OAAM,WAAW,IAAI,MAAM;AAC/B,iCAAmB,KAAKA,IAAG;AAC3B,qBAAOA;AAAA,YACT;AAAA,UACF;AAEA,mBAAS,mBAAmBA,MAAK;AAC/B,gBAAI,eAAe,UAAU;AAE3B,qBAAO,aAAaA,IAAG;AAAA,YACzB;AACA,gBAAI,eAAe,UAAW,QAAO,QAAQA,IAAG;AAChD,mBAAOA;AAAA,UACT;AAEA,cAAI,OAAO,SAAS,KAAK;AACzB,cAAI,QAAQ,CAAC;AACb,cAAI,QAAQ;AACZ,UAAAjC,QAAO,eAAe,SAAS,oCAAoC;AACnE,cAAI,MAAM;AACR,qBAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,kBAAI,YAAY,IAAI,SAASA,EAAC,CAAC;AAC/B,kBAAI,WAAW;AACb,oBAAI,UAAU,EAAG,SAAQ,UAAU;AACnC,sBAAMA,EAAC,IAAI,UAAU,KAAKA,EAAC,CAAC;AAAA,cAC9B,OAAO;AACL,sBAAMA,EAAC,IAAI,KAAKA,EAAC;AAAA,cACnB;AAAA,YACF;AAAA,UACF;AACA,cAAI,MAAM,KAAK,MAAM,MAAM,KAAK;AAChC,mBAAS,OAAOgC,MAAK;AACnB,gBAAI,UAAU,EAAG,cAAa,KAAK;AACnC,mBAAO,mBAAmBA,IAAG;AAAA,UAC/B;AAEA,gBAAM,OAAO,GAAG;AAChB,iBAAO;AAAA,QACT;AAKF,YAAI,YAAY,CAAC,SAAS,GAAG,OAAO,IAAI;AAExC,YAAI;AAAA;AAAA,UAA6B,SAAS,QAAQ,MAAM,MAAM,MAAM;AAClE,gBAAI,CAAC,QAAQ;AACX,uBAAS;AAAA,YACX;AACA,iBAAK,SAAS;AACd,iBAAK,QAAQ,OAAO;AACpB,iBAAK,UAAU;AACf,iBAAK,KAAK,GAAG;AACb,iBAAK,OAAO;AACZ,iBAAK,OAAO;AACZ,iBAAK,WAAW,CAAC;AACjB,iBAAK,aAAa,CAAC;AACnB,iBAAK,OAAO;AAAA,UACd;AAAA;AACA,YAAI,WAAW,MAAa;AAC5B,YAAI,YAAY;AAChB,eAAO,iBAAiB,OAAO,WAAW;AAAA,UACzC,MAAM;AAAA,YACL;AAAA;AAAA,cAAyB,WAAW;AACnC,wBAAQ,KAAK,OAAO,cAAc;AAAA,cACnC;AAAA;AAAA,YACA;AAAA;AAAA,cAAyB,SAAS,KAAK;AACtC,sBAAM,KAAK,QAAQ,WAAW,KAAK,QAAQ,CAAC;AAAA,cAC7C;AAAA;AAAA,UACD;AAAA,UACA,OAAO;AAAA,YACN;AAAA;AAAA,cAAyB,WAAW;AACnC,wBAAQ,KAAK,OAAO,eAAe;AAAA,cACpC;AAAA;AAAA,YACA;AAAA;AAAA,cAAyB,SAAS,KAAK;AACtC,sBAAM,KAAK,QAAQ,YAAY,KAAK,QAAQ,CAAC;AAAA,cAC9C;AAAA;AAAA,UACD;AAAA,UACA,UAAU;AAAA,YACT;AAAA;AAAA,cAAyB,WAAW;AACnC,uBAAO,GAAG,MAAM,KAAK,IAAI;AAAA,cAC1B;AAAA;AAAA,UACD;AAAA,UACA,UAAU;AAAA,YACT;AAAA;AAAA,cAAyB,WAAW;AACnC,uBAAO,GAAG,SAAS,KAAK,IAAI;AAAA,cAC7B;AAAA;AAAA,UACD;AAAA,QACD,CAAC;AACD,WAAG,SAAS;AACZ,WAAG,sBAAsB;AACzB,WAAG,WAAW;AAAE,eAAO,eAAe,IAAI,GAAG;AAAW,eAAO,mBAAmB,IAAI,GAAG;AAAe,eAAO,wBAAwB,IAAI,GAAG;AAAoB,eAAO,WAAW,IAAI,GAAG;AAAO,eAAO,mBAAmB,IAAI,GAAG;AAAe,eAAO,iBAAiB,IAAI,GAAG;AAAa;AAChS,wBAAgB,OAAO,eAAe,IAAI,MAAM,sBAAsB,MAAM;AAAA,UAAE,YAAY,SAAS;AAAE,kBAAM,OAAO;AAAG,iBAAK,OAAO;AAAA,UAAiB;AAAA,QAAC;AACnJ,8BAAsB;AACtB,uBAAe,OAAO,cAAc,IAAI,MAAM,qBAAqB,MAAM;AAAA,UAAE,YAAY,SAAS;AAAE,kBAAM,OAAO;AAAG,iBAAK,OAAO;AAAA,UAAgB;AAAA,QAAC;AAC/I,yBAAiB;AACjB,oBAAY;AAAE;AACd,+BAAuB;AACvB,2BAAmB,OAAO,kBAAkB,IAAI,YAAY,OAAO,kBAAkB;AAAE;AACvF,mBAAW;AAAE;AAGP,eAAO,mBAAmB,IAAI,QAAQ;AACtC,eAAO,mBAAmB,IAAI,QAAQ;AACtC,eAAO,uBAAuB,IAAI,QAAQ;AAC1C,eAAO,eAAe,IAAI,QAAQ;AAClC,eAAO,eAAe,IAAI,QAAQ,SAAS;AAC3C,eAAO,gBAAgB,IAAI,QAAQ,SAAS;AAC5C,eAAO,cAAc,IAAI,QAAQ;AACjC,eAAO,eAAe,IAAI,QAAQ;AAClC,YAAI,kBAAkB,CAAC;AACvB,YAAI,kBAAkB,CAAC;AAAE;AAC/B,YAAI;AAAM;AACV,iBAAS,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG,sBAAqB,KAAK,IAAI,MAAM,CAAC,CAAC;AAAE;AACrE,YAAI,mCAAmC,IAAI,aAAa,GAAG;AACzD,iBAAkC,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AACrD,oCAA0B,CAAC,IAAI,iCAAiC,SAAS,GAAG,IAAE,CAAC;AAAA,QACjF;AAAC;AACH,YAAI,iCAAiC,IAAI,WAAW,GAAG;AACrD,iBAAkC,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AACrD,kCAAwB,CAAC,IAAI,+BAA+B,SAAS,GAAG,IAAE,CAAC;AAAA,QAC7E;AAAC;AACH,iBAAS,yBAAyB;AAChC,4BAAkB,eAAe;AAAA,QACnC;AACA,YAAI,cAAc;AAAA;AAAA,UAEhB,eAAe;AAAA;AAAA,UAEf,mBAAmB;AAAA;AAAA,UAEnB,iBAAiB;AAAA;AAAA,UAEjB,6BAA6B;AAAA;AAAA,UAE7B,6BAA6B;AAAA;AAAA,UAE7B,aAAa;AAAA;AAAA,UAEb,mBAAmB;AAAA;AAAA,UAEnB,iBAAiB;AAAA;AAAA,UAEjB,kBAAkB;AAAA;AAAA,UAElB,mBAAmB;AAAA;AAAA,UAEnB,mBAAmB;AAAA;AAAA,UAEnB,iBAAiB;AAAA;AAAA,UAEjB,mBAAmB;AAAA;AAAA,UAEnB,sBAAsB;AAAA;AAAA,UAEtB,kBAAkB;AAAA;AAAA,UAElB,oBAAoB;AAAA;AAAA,UAEpB,iBAAiB;AAAA;AAAA,UAEjB,kBAAkB;AAAA;AAAA,UAElB,oBAAoB;AAAA;AAAA,UAEpB,8BAA8B;AAAA;AAAA,UAE9B,+BAA+B;AAAA;AAAA,UAE/B,yBAAyB;AAAA;AAAA,UAEzB,uBAAuB;AAAA;AAAA,UAEvB,wBAAwB;AAAA;AAAA,UAExB,oCAAoC;AAAA;AAAA,UAEpC,iCAAiC;AAAA;AAAA,UAEjC,wBAAwB;AAAA;AAAA,UAExB,uBAAuB;AAAA;AAAA,UAEvB,6BAA6B;AAAA;AAAA,UAE7B,wBAAwB;AAAA;AAAA,UAExB,2BAA2B;AAAA;AAAA,UAE3B,0BAA0B;AAAA;AAAA,UAE1B,8BAA8B;AAAA;AAAA,UAE9B,4BAA4B;AAAA;AAAA,UAE5B,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,8BAA8B;AAAA;AAAA,UAE9B,sCAAsC;AAAA;AAAA,UAEtC,+BAA+B;AAAA;AAAA,UAE/B,qCAAqC;AAAA;AAAA,UAErC,uBAAuB;AAAA;AAAA,UAEvB,kCAAkC;AAAA;AAAA,UAElC,2BAA2B;AAAA;AAAA,UAE3B,WAAW;AAAA;AAAA,UAEX,aAAa;AAAA;AAAA,UAEb,oBAAoB;AAAA;AAAA,UAEpB,eAAe;AAAA;AAAA,UAEf,eAAe;AAAA;AAAA,UAEf,mBAAmB;AAAA;AAAA,UAEnB,0BAA0B;AAAA;AAAA,UAE1B,qBAAqB;AAAA;AAAA,UAErB,eAAe;AAAA;AAAA,UAEf,mBAAmB;AAAA;AAAA,UAEnB,kBAAkB;AAAA;AAAA,UAElB,kBAAkB;AAAA;AAAA,UAElB,kBAAkB;AAAA;AAAA,UAElB,oBAAoB;AAAA;AAAA,UAEpB,mBAAmB;AAAA;AAAA,UAEnB,wBAAwB;AAAA;AAAA,UAExB,qBAAqB;AAAA;AAAA,UAErB,mBAAmB;AAAA;AAAA,UAEnB,cAAc;AAAA;AAAA,UAEd,eAAe;AAAA;AAAA,UAEf,YAAY;AAAA;AAAA,UAEZ,eAAe;AAAA;AAAA,UAEf,YAAY;AAAA;AAAA,UAEZ,UAAU;AAAA;AAAA,UAEV,YAAY;AAAA;AAAA,UAEZ,WAAW;AAAA;AAAA,UAEX,OAAO;AAAA;AAAA,UAEP;AAAA;AAAA,UAEA,iBAAiB;AAAA;AAAA,UAEjB,kBAAkB;AAAA;AAAA,UAElB,wBAAwB;AAAA;AAAA,UAExB,mBAAmB;AAAA;AAAA,UAEnB,mBAAmB;AAAA;AAAA,UAEnB,oBAAoB;AAAA;AAAA,UAEpB,eAAe;AAAA;AAAA,UAEf,aAAa;AAAA;AAAA,UAEb,eAAe;AAAA;AAAA,UAEf,gBAAgB;AAAA;AAAA,UAEhB,gBAAgB;AAAA;AAAA,UAEhB,cAAc;AAAA;AAAA,UAEd,0BAA0B;AAAA;AAAA,UAE1B,0BAA0B;AAAA;AAAA,UAE1B,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,qBAAqB;AAAA;AAAA,UAErB,qBAAqB;AAAA;AAAA,UAErB,gBAAgB;AAAA;AAAA,UAEhB,yBAAyB;AAAA;AAAA,UAEzB,oBAAoB;AAAA;AAAA,UAEpB,4BAA4B;AAAA;AAAA,UAE5B,2BAA2B;AAAA;AAAA,UAE3B,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,qCAAqC;AAAA;AAAA,UAErC,iCAAiC;AAAA;AAAA,UAEjC,yBAAyB;AAAA;AAAA,UAEzB,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,8BAA8B;AAAA;AAAA,UAE9B,+BAA+B;AAAA;AAAA,UAE/B,0BAA0B;AAAA;AAAA,UAE1B,0BAA0B;AAAA;AAAA,UAE1B,oCAAoC;AAAA;AAAA,UAEpC,8BAA8B;AAAA;AAAA,UAE9B,iCAAiC;AAAA;AAAA,UAEjC,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,oCAAoC;AAAA;AAAA,UAEpC,wBAAwB;AAAA;AAAA,UAExB,gCAAgC;AAAA;AAAA,UAEhC,8BAA8B;AAAA;AAAA,UAE9B,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,qCAAqC;AAAA;AAAA,UAErC,oBAAoB;AAAA;AAAA,UAEpB,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,6BAA6B;AAAA;AAAA,UAE7B,yBAAyB;AAAA;AAAA,UAEzB,0BAA0B;AAAA;AAAA,UAE1B,2BAA2B;AAAA;AAAA,UAE3B,6BAA6B;AAAA;AAAA,UAE7B,wBAAwB;AAAA;AAAA,UAExB,4BAA4B;AAAA;AAAA,UAE5B,mCAAmC;AAAA;AAAA,UAEnC,mCAAmC;AAAA;AAAA,UAEnC,sCAAsC;AAAA;AAAA,UAEtC,sCAAsC;AAAA;AAAA,UAEtC,gCAAgC;AAAA;AAAA,UAEhC,6BAA6B;AAAA;AAAA,UAE7B,gCAAgC;AAAA;AAAA,UAEhC,gCAAgC;AAAA;AAAA,UAEhC,4BAA4B;AAAA;AAAA,UAE5B,2BAA2B;AAAA;AAAA,UAE3B,uBAAuB;AAAA;AAAA,UAEvB,4BAA4B;AAAA;AAAA,UAE5B,iCAAiC;AAAA;AAAA,UAEjC,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,+BAA+B;AAAA;AAAA,UAE/B,kCAAkC;AAAA;AAAA,UAElC,6BAA6B;AAAA;AAAA,UAE7B,2BAA2B;AAAA;AAAA,UAE3B,yBAAyB;AAAA;AAAA,UAEzB,6BAA6B;AAAA;AAAA,UAE7B,uCAAuC;AAAA;AAAA,UAEvC,iCAAiC;AAAA;AAAA,UAEjC,oCAAoC;AAAA;AAAA,UAEpC,wBAAwB;AAAA;AAAA,UAExB,wBAAwB;AAAA;AAAA,UAExB,0BAA0B;AAAA;AAAA,UAE1B,2BAA2B;AAAA;AAAA,UAE3B,sBAAsB;AAAA;AAAA,UAEtB,uCAAuC;AAAA;AAAA,UAEvC,yBAAyB;AAAA;AAAA,UAEzB,kCAAkC;AAAA;AAAA,UAElC,uCAAuC;AAAA;AAAA,UAEvC,qCAAqC;AAAA;AAAA,UAErC,mDAAmD;AAAA;AAAA,UAEnD,qCAAqC;AAAA;AAAA,UAErC,oCAAoC;AAAA;AAAA,UAEpC,0BAA0B;AAAA;AAAA,UAE1B,6BAA6B;AAAA;AAAA,UAE7B,+BAA+B;AAAA;AAAA,UAE/B,2BAA2B;AAAA;AAAA,UAE3B,oCAAoC;AAAA;AAAA,UAEpC,yCAAyC;AAAA;AAAA,UAEzC,uCAAuC;AAAA;AAAA,UAEvC,+DAA+D;AAAA;AAAA,UAE/D,uCAAuC;AAAA;AAAA,UAEvC,sCAAsC;AAAA;AAAA,UAEtC,gCAAgC;AAAA;AAAA,UAEhC,qBAAqB;AAAA;AAAA,UAErB,sCAAsC;AAAA;AAAA,UAEtC,uBAAuB;AAAA;AAAA,UAEvB,0BAA0B;AAAA;AAAA,UAE1B,mCAAmC;AAAA;AAAA,UAEnC,wBAAwB;AAAA;AAAA,UAExB,qBAAqB;AAAA;AAAA,UAErB,oBAAoB;AAAA;AAAA,UAEpB,sCAAsC;AAAA;AAAA,UAEtC,mCAAmC;AAAA;AAAA,UAEnC,sCAAsC;AAAA;AAAA,UAEtC,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,8BAA8B;AAAA;AAAA,UAE9B,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,+BAA+B;AAAA;AAAA,UAE/B,0BAA0B;AAAA;AAAA,UAE1B,0BAA0B;AAAA;AAAA,UAE1B,oCAAoC;AAAA;AAAA,UAEpC,8BAA8B;AAAA;AAAA,UAE9B,iCAAiC;AAAA;AAAA,UAEjC,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,+BAA+B;AAAA;AAAA,UAE/B,wCAAwC;AAAA;AAAA,UAExC,sCAAsC;AAAA;AAAA,UAEtC,kCAAkC;AAAA;AAAA,UAElC,iCAAiC;AAAA;AAAA,UAEjC,gCAAgC;AAAA;AAAA,UAEhC,0BAA0B;AAAA;AAAA,UAE1B,qCAAqC;AAAA;AAAA,UAErC,mCAAmC;AAAA;AAAA,UAEnC,uBAAuB;AAAA;AAAA,UAEvB,wBAAwB;AAAA;AAAA,UAExB,kCAAkC;AAAA;AAAA,UAElC,kDAAkD;AAAA;AAAA,UAElD,8BAA8B;AAAA;AAAA,UAE9B,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,0BAA0B;AAAA;AAAA,UAE1B,kCAAkC;AAAA;AAAA,UAElC,+BAA+B;AAAA;AAAA,UAE/B,gCAAgC;AAAA;AAAA,UAEhC,2BAA2B;AAAA;AAAA,UAE3B,oCAAoC;AAAA;AAAA,UAEpC,kCAAkC;AAAA;AAAA,UAElC,qCAAqC;AAAA;AAAA,UAErC,gCAAgC;AAAA;AAAA,UAEhC,mCAAmC;AAAA;AAAA,UAEnC,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,yCAAyC;AAAA;AAAA,UAEzC,oCAAoC;AAAA;AAAA,UAEpC,oCAAoC;AAAA;AAAA,UAEpC,+BAA+B;AAAA;AAAA,UAE/B,uCAAuC;AAAA;AAAA,UAEvC,8BAA8B;AAAA;AAAA,UAE9B,0BAA0B;AAAA;AAAA,UAE1B,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,wBAAwB;AAAA;AAAA,UAExB,gCAAgC;AAAA;AAAA,UAEhC,gCAAgC;AAAA;AAAA,UAEhC,0CAA0C;AAAA;AAAA,UAE1C,mCAAmC;AAAA;AAAA,UAEnC,gCAAgC;AAAA;AAAA,UAEhC,iCAAiC;AAAA;AAAA,UAEjC,2BAA2B;AAAA;AAAA,UAE3B,2BAA2B;AAAA;AAAA,UAE3B,4BAA4B;AAAA;AAAA,UAE5B,iCAAiC;AAAA;AAAA,UAEjC,kCAAkC;AAAA;AAAA,UAElC,sCAAsC;AAAA;AAAA,UAEtC,gCAAgC;AAAA;AAAA,UAEhC,gCAAgC;AAAA;AAAA,UAEhC,mBAAmB;AAAA;AAAA,UAEnB,oCAAoC;AAAA;AAAA,UAEpC,uCAAuC;AAAA;AAAA,UAEvC,uBAAuB;AAAA;AAAA,UAEvB,wBAAwB;AAAA;AAAA,UAExB,4BAA4B;AAAA;AAAA,UAE5B,wBAAwB;AAAA;AAAA,UAExB,sBAAsB;AAAA;AAAA,UAEtB,yBAAyB;AAAA;AAAA,UAEzB,6BAA6B;AAAA;AAAA,UAE7B,wBAAwB;AAAA;AAAA,UAExB,uBAAuB;AAAA;AAAA,UAEvB,qBAAqB;AAAA;AAAA,UAErB,wBAAwB;AAAA;AAAA,UAExB,kCAAkC;AAAA;AAAA,UAElC,4BAA4B;AAAA;AAAA,UAE5B,+BAA+B;AAAA;AAAA,UAE/B,wBAAwB;AAAA;AAAA,UAExB,0BAA0B;AAAA;AAAA,UAE1B,wDAAwD;AAAA;AAAA,UAExD,oEAAoE;AAAA;AAAA,UAEpE,qCAAqC;AAAA;AAAA,UAErC,0BAA0B;AAAA;AAAA,UAE1B,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,gCAAgC;AAAA;AAAA,UAEhC,8BAA8B;AAAA;AAAA,UAE9B,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,oCAAoC;AAAA;AAAA,UAEpC,kCAAkC;AAAA;AAAA,UAElC,6CAA6C;AAAA;AAAA,UAE7C,sCAAsC;AAAA;AAAA,UAEtC,6BAA6B;AAAA;AAAA,UAE7B,gCAAgC;AAAA;AAAA,UAEhC,iCAAiC;AAAA;AAAA,UAEjC,gCAAgC;AAAA;AAAA,UAEhC,iCAAiC;AAAA;AAAA,UAEjC,sBAAsB;AAAA;AAAA,UAEtB,2BAA2B;AAAA;AAAA,UAE3B,2BAA2B;AAAA;AAAA,UAE3B,0BAA0B;AAAA;AAAA,UAE1B,kCAAkC;AAAA;AAAA,UAElC,0BAA0B;AAAA;AAAA,UAE1B,kCAAkC;AAAA;AAAA,UAElC,wBAAwB;AAAA;AAAA,UAExB,gCAAgC;AAAA;AAAA,UAEhC,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,4BAA4B;AAAA;AAAA,UAE5B,6BAA6B;AAAA;AAAA,UAE7B,4BAA4B;AAAA;AAAA,UAE5B,6BAA6B;AAAA;AAAA,UAE7B,2BAA2B;AAAA;AAAA,UAE3B,2BAA2B;AAAA;AAAA,UAE3B,4BAA4B;AAAA;AAAA,UAE5B,4BAA4B;AAAA;AAAA,UAE5B,wCAAwC;AAAA;AAAA,UAExC,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,0BAA0B;AAAA;AAAA,UAE1B,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,0BAA0B;AAAA;AAAA,UAE1B,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,0BAA0B;AAAA;AAAA,UAE1B,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,wBAAwB;AAAA;AAAA,UAExB,yBAAyB;AAAA;AAAA,UAEzB,yBAAyB;AAAA;AAAA,UAEzB,0BAA0B;AAAA;AAAA,UAE1B,kCAAkC;AAAA;AAAA,UAElC,+BAA+B;AAAA;AAAA,UAE/B,iCAAiC;AAAA;AAAA,UAEjC,iCAAiC;AAAA;AAAA,UAEjC,+BAA+B;AAAA;AAAA,UAE/B,iCAAiC;AAAA;AAAA,UAEjC,iCAAiC;AAAA;AAAA,UAEjC,+BAA+B;AAAA;AAAA,UAE/B,iCAAiC;AAAA;AAAA,UAEjC,iCAAiC;AAAA;AAAA,UAEjC,yBAAyB;AAAA;AAAA,UAEzB,8BAA8B;AAAA;AAAA,UAE9B,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,6BAA6B;AAAA;AAAA,UAE7B,8BAA8B;AAAA;AAAA,UAE9B,kCAAkC;AAAA;AAAA,UAElC,uCAAuC;AAAA;AAAA,UAEvC,qCAAqC;AAAA;AAAA,UAErC,qCAAqC;AAAA;AAAA,UAErC,oCAAoC;AAAA;AAAA,UAEpC,8BAA8B;AAAA;AAAA,UAE9B,+BAA+B;AAAA;AAAA,UAE/B,+BAA+B;AAAA;AAAA,UAE/B,gCAAgC;AAAA;AAAA,UAEhC,mCAAmC;AAAA;AAAA,UAEnC,kCAAkC;AAAA;AAAA,UAElC,uBAAuB;AAAA;AAAA,UAEvB,uBAAuB;AAAA;AAAA,UAEvB,wBAAwB;AAAA;AAAA,UAExB,yCAAyC;AAAA;AAAA,UAEzC,yCAAyC;AAAA;AAAA,UAEzC,yCAAyC;AAAA;AAAA,UAEzC,yCAAyC;AAAA;AAAA,UAEzC,uCAAuC;AAAA;AAAA,UAEvC,uCAAuC;AAAA;AAAA,UAEvC,0CAA0C;AAAA;AAAA,UAE1C,0CAA0C;AAAA;AAAA,UAE1C,0CAA0C;AAAA;AAAA,UAE1C,0CAA0C;AAAA;AAAA,UAE1C,sCAAsC;AAAA;AAAA,UAEtC,uCAAuC;AAAA;AAAA,UAEvC,4CAA4C;AAAA;AAAA,UAE5C,4CAA4C;AAAA;AAAA,UAE5C,wCAAwC;AAAA;AAAA,UAExC,wCAAwC;AAAA;AAAA,UAExC,+CAA+C;AAAA;AAAA,UAE/C,oDAAoD;AAAA;AAAA,UAEpD,4CAA4C;AAAA;AAAA,UAE5C,6CAA6C;AAAA;AAAA,UAE7C,6CAA6C;AAAA;AAAA,UAE7C,kCAAkC;AAAA;AAAA,UAElC,6CAA6C;AAAA;AAAA,UAE7C,uCAAuC;AAAA;AAAA,UAEvC,0CAA0C;AAAA;AAAA,UAE1C,4BAA4B;AAAA;AAAA,UAE5B,mCAAmC;AAAA;AAAA,UAEnC,mCAAmC;AAAA;AAAA,UAEnC,yCAAyC;AAAA;AAAA,UAEzC,sCAAsC;AAAA;AAAA,UAEtC,6CAA6C;AAAA;AAAA,UAE7C,4CAA4C;AAAA;AAAA,UAE5C,2CAA2C;AAAA;AAAA,UAE3C,oCAAoC;AAAA;AAAA,UAEpC,yCAAyC;AAAA;AAAA,UAEzC,wCAAwC;AAAA;AAAA,UAExC,iCAAiC;AAAA;AAAA,UAEjC,kCAAkC;AAAA;AAAA,UAElC,iDAAiD;AAAA;AAAA,UAEjD,4CAA4C;AAAA;AAAA,UAE5C,0CAA0C;AAAA;AAAA,UAE1C,mCAAmC;AAAA;AAAA,UAEnC,yCAAyC;AAAA;AAAA,UAEzC,uCAAuC;AAAA;AAAA,UAEvC,aAAa;AAAA;AAAA,UAEb,mBAAmB;AAAA;AAAA,UAEnB,MAAM;AAAA;AAAA,UAEN,UAAU;AAAA;AAAA,UAEV,eAAe;AAAA;AAAA,UAEf,UAAU;AAAA;AAAA,UAEV,SAAS;AAAA;AAAA,UAET,SAAS;AAAA;AAAA,UAET,UAAU;AAAA;AAAA,UAEV;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA,YAAY;AAAA;AAAA,UAEZ;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA;AAAA;AAAA,UAEA,QAAQ;AAAA;AAAA,UAER;AAAA;AAAA,UAEA,YAAY;AAAA,QACd;AACA,YAAI,cAAc,WAAW;AAC7B,YAAI,qBAAqB,oBAAoB,mBAAmB;AAChE,YAAI,UAAU,OAAO,SAAS,IAAI,oBAAoB,QAAQ;AAC9D,YAAI,QAAQ,OAAO,OAAO,IAAI,oBAAoB,kBAAkB;AACpE,YAAI,QAAQ,OAAO,OAAO,IAAI,oBAAoB,MAAM;AACxD,YAAI,wBAAwB,OAAO,uBAAuB,IAAI,oBAAoB,sBAAsB;AACxG,YAAI,sBAAsB,OAAO,qBAAqB,IAAI,oBAAoB,oBAAoB;AAClG,YAAI,kDAAkD,OAAO,iDAAiD,IAAI,oBAAoB,gDAAgD;AACtL,YAAI,mDAAmD,OAAO,kDAAkD,IAAI,oBAAoB,iDAAiD;AACzL,YAAI,UAAU,oBAAoB,QAAQ;AAC1C,YAAI,cAAc,oBAAoB,aAAa;AACnD,YAAI,iBAAiB,oBAAoB,eAAe;AACxD,YAAI,+BAA+B,oBAAoB,6BAA6B;AACpF,YAAI,YAAY,oBAAoB,UAAU;AAC9C,YAAI,yBAAyB,OAAO,yBAAyB,YAAY,uBAAuB,GAAG;AACnG,YAAI,6BAA6B,OAAO,6BAA6B,YAAY,2BAA2B,GAAG;AAC/G,YAAI,6BAA6B,OAAO,6BAA6B,YAAY,2BAA2B,GAAG;AAC/G,YAAI,4BAA4B,OAAO,4BAA4B,YAAY,0BAA0B,GAAG;AAC5G,YAAI,YAAY,oBAAoB,WAAW;AAC/C,YAAI,eAAe,oBAAoB,cAAc;AACrD,YAAI,aAAa,oBAAoB,YAAY;AACjD,YAAI,gCAAgC,OAAO,gCAAgC,YAAY,8BAA8B,GAAG;AACxH,YAAI,sCAAsC,oBAAoB,oCAAoC;AAClG,YAAI,sCAAsC,oBAAoB,oCAAoC;AAClG,YAAI,mBAAmB,oBAAoB,iBAAiB;AAC5D,YAAI,yBAAyB,oBAAoB,uBAAuB;AACxE,YAAI,iBAAiB,OAAO,gBAAgB,IAAI;AAChD,YAAI,gBAAgB,OAAO,eAAe,IAAI;AAC9C,iBAAS,WAAW,OAAM,IAAG,IAAI;AAC/B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,EAAE;AAAA,UACvC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,WAAW,OAAM,IAAG,IAAI;AAC/B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,EAAE;AAAA,UAChC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,UAAU,OAAM,IAAI;AAC3B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,EAAE;AAAA,UACpC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,SAAS,OAAO;AACvB,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE;AAAA,UAC3B,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,UAAU,OAAM,IAAI;AAC3B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,EAAE;AAAA,UAC7B,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,aAAa,OAAM,IAAG,IAAG,IAAG,IAAI;AACvC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,EAAE;AAAA,UACtC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,YAAY,OAAM,IAAG,IAAG,IAAI;AACnC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,EAAE;AAAA,UAC1C,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,UAAU,OAAM,IAAI;AAC3B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,EAAE;AAAA,UACpC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,WAAW,OAAM,IAAG,IAAI;AAC/B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,EAAE;AAAA,UACvC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,YAAY,OAAM,IAAG,IAAG,IAAI;AACnC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,EAAE;AAAA,UACnC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,wBAAwB,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,KAAK;AACzF,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,KAAI,KAAI,KAAI,KAAI,GAAG;AAAA,UACpF,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,YAAY,OAAM,IAAG,IAAG,IAAI;AACnC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,EAAE;AAAA,UACnC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,WAAW,OAAM,IAAG,IAAI;AAC/B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,EAAE;AAAA,UACvC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,WAAW,OAAM,IAAG,IAAI;AAC/B,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,EAAE;AAAA,UACvC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,SAAS,OAAO;AACvB,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE;AAAA,UAClC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,gBAAgB,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI;AACnD,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UAC/C,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,YAAY,OAAM,IAAG,IAAG,IAAI;AACnC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,EAAE;AAAA,UAC1C,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,cAAc,OAAM,IAAG,IAAG,IAAG,IAAG,IAAI;AAC3C,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UAChD,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,eAAe,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI;AAC/C,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UACnD,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,aAAa,OAAM,IAAG,IAAG,IAAG,IAAI;AACvC,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,EAAE;AAAA,UAC7C,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,cAAc,OAAM,IAAG,IAAG,IAAG,IAAG,IAAI;AAC3C,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UACzC,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,kBAAkB,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI;AAC3D,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UACrD,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,eAAe,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI;AAC/C,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,8BAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UAC5C,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAEA,iBAAS,kBAAkB,OAAM,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAI;AAC3D,cAAI,KAAK,UAAU;AACnB,cAAI;AACF,mBAAO,kBAAkB,KAAK,EAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,UAC5D,SAAQ,GAAG;AACT,yBAAa,EAAE;AACf,gBAAI,MAAM,IAAE,EAAG,OAAM;AACrB,sBAAU,GAAG,CAAC;AAAA,UAChB;AAAA,QACF;AAMA,eAAO,kBAAkB,IAAI;AAC7B,eAAO,qBAAqB,IAAI;AAChC,eAAO,eAAe,IAAI,GAAG;AAC7B,eAAO,mBAAmB,IAAI,GAAG;AACjC,eAAO,iBAAiB,IAAI,GAAG;AAC/B,eAAO,OAAO,IAAI;AAClB,eAAO,UAAU,IAAI;AACrB,eAAO,cAAc,IAAI;AACzB,eAAO,oBAAoB,IAAI;AAC/B,eAAO,wBAAwB,IAAI,GAAG;AACtC,eAAO,mBAAmB,IAAI,GAAG;AACjC,eAAO,WAAW,IAAI,GAAG;AACzB,YAAI,wBAAwsB,QAAQ,oBAAoB;AAElD,YAAI,oBAAoB;AAAA,UACtkB,QAAQ,uBAAuB;AAIjD,YAAI;AAEJ,gCAAwB,SAAS,YAAY;AAE3C,cAAI,CAAC,UAAW,CAAAC,KAAI;AACpB,cAAI,CAAC,UAAW,yBAAwB;AAAA,QAC1C;AAEA,iBAAS,SAAS,OAAO,CAAC,GAAG;AAC3B,UAAAlC,QAAO,mBAAmB,GAAG,6FAA6F;AAC1H,UAAAA,QAAO,aAAa,UAAU,GAAG,4DAA4D;AAE7F,cAAI,gBAAgB;AAEpB,eAAK,QAAQ,WAAW;AAExB,cAAI,OAAO,KAAK;AAChB,cAAI,OAAO,YAAY,OAAO,KAAK,CAAC;AACpC,cAAI,WAAW;AACf,eAAK,QAAQ,CAAC,QAAQ;AACpB,oBAAU,YAAW,CAAE,IAAI,oBAAoB,GAAG;AAClD,wBAAY;AAAA,UACd,CAAC;AACD,kBAAU,YAAW,CAAE,IAAI;AAE3B,cAAI;AAEF,gBAAI,MAAM,cAAc,MAAM,IAAI;AAGlC;AAAA,cAAO;AAAA;AAAA,cAAsB;AAAA,YAAI;AACjC,mBAAO;AAAA,UACT,SACO,GAAG;AACR,mBAAO,gBAAgB,CAAC;AAAA,UAC1B;AAAA,QACF;AAEA,iBAAS,iBAAiB;AAIxB,iCAAuB;AAEvB,2BAAiB;AAAA,QACnB;AAEA,iBAASkC,KAAI,OAAO,YAAY;AAE9B,cAAI,kBAAkB,GAAG;AACvB;AAAA,UACF;AAEE,yBAAe;AAEjB,iBAAO;AAGP,cAAI,kBAAkB,GAAG;AACvB;AAAA,UACF;AAEA,mBAAS,QAAQ;AAGf,gBAAI,UAAW;AACf,wBAAY;AACZ,mBAAO,WAAW,IAAI;AAEtB,gBAAI,MAAO;AAEX,wBAAY;AAEZ,oBAAQ;AAER,gCAAoB,MAAM;AAC1B,gBAAI,OAAO,sBAAsB,EAAG,QAAO,sBAAsB,EAAE;AAEnE,gBAAI,aAAc,UAAS,IAAI;AAE/B,oBAAQ;AAAA,UACV;AAEA,cAAI,OAAO,WAAW,GAAG;AACvB,mBAAO,WAAW,EAAE,YAAY;AAChC,uBAAW,WAAW;AACpB,yBAAW,WAAW;AACpB,uBAAO,WAAW,EAAE,EAAE;AAAA,cACxB,GAAG,CAAC;AACJ,oBAAM;AAAA,YACR,GAAG,CAAC;AAAA,UACN,OACA;AACE,kBAAM;AAAA,UACR;AACA,2BAAiB;AAAA,QACnB;AAEA,iBAAS,wBAAwB;AAY/B,cAAI,SAAS;AACb,cAAI,SAAS;AACb,cAAI,MAAM;AACV,gBAAM,MAAM,CAAC,MAAM;AACjB,kBAAM;AAAA,UACR;AACA,cAAI;AACF,oBAAQ,CAAC;AAET,aAAC,UAAU,QAAQ,EAAE,QAAQ,SAAS,MAAM;AAC1C,kBAAI,OAAO,GAAG,YAAY,UAAU,IAAI;AACxC,kBAAI,CAAC,KAAM;AACX,kBAAI,SAAS,KAAK;AAClB,kBAAI,OAAO,OAAO;AAClB,kBAAI,MAAM,IAAI,KAAK,IAAI;AACvB,kBAAI,KAAK,QAAQ,QAAQ;AACvB,sBAAM;AAAA,cACR;AAAA,YACF,CAAC;AAAA,UACH,SAAQ,GAAG;AAAA,UAAC;AACZ,gBAAM;AACN,gBAAM;AACN,cAAI,KAAK;AACP,qBAAS,wKAAwK;AAAA,UACnL;AAAA,QACF;AAEA,YAAI,OAAO,SAAS,GAAG;AACrB,cAAI,OAAO,OAAO,SAAS,KAAK,WAAY,QAAO,SAAS,IAAI,CAAC,OAAO,SAAS,CAAC;AAClF,iBAAO,OAAO,SAAS,EAAE,SAAS,GAAG;AACnC,mBAAO,SAAS,EAAE,IAAI,EAAE;AAAA,UAC1B;AAAA,QACF;AAGA,YAAI,eAAe;AAEnB,YAAI,OAAO,cAAc,EAAG,gBAAe;AAE3C,QAAAA,KAAI;AAMF,eAAO,UAAU;AAAA,MACnB;AAAA,IAEA,GAAG;AACH,QAAI,OAAO,YAAY,YAAY,OAAO,WAAW;AACnD,aAAO,UAAUpC;AAAA,aACV,OAAO,WAAW,cAAc,OAAO,KAAK;AACnD,aAAO,CAAC,GAAG,MAAMA,MAAK;AAAA;AAAA;;;ACjoejB,SAAS,WACd,aACA,eACiB;AACjB,QAAM,WAA4B,oBAAI,IAAI;AAE1C,WAAS,KAAK,UAAa,QAAmB;AAC5C,eAAW,WAAW,UAAU;AAC9B,cAAQ,KAAK;AACb,iBAAW,KAAK,QAAQ;AACtB,gBAAQ,CAAC;AAAA,MACX;AAAA,IACF;AAAA,EACF;AAEA,WAAS,OAAO,SAAqB;AACnC,aAAS,IAAI,OAAO;AACpB,UAAM,mBAA4B,CAAC,UAAU,WAAW;AACtD,cAAQ,KAAK;AACb,iBAAW,KAAK,QAAQ;AACtB,gBAAQ,CAAC;AAAA,MACX;AAAA,IACF;AACA,kBAAc,gBAAgB;AAC9B,UAAM,wBAAwB,MAAM;AAClC,eAAS,OAAO,OAAO;AACvB,sBAAgB;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AAEA,SAAO,OAAO;AACd,SAAO,WAAW;AAElB,SAAO;AACT;;;ACvCA,IAAM,WAAW,OAAO,UAAU;AAoD3B,SAAS,iBACd,cACyB;AACzB,MAAI,eAAoC;AAExC,QAAM,QAAQ,MAAS;AACrB,QAAI,iBAAiB,UAAU;AAC7B,qBAAe,aAAa;AAAA,IAC9B;AACA,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,WAAc;AAEhC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,OAAO,UAAU;AACf,qBAAe;AACf,gBAAU,KAAK,YAAiB;AAAA,IAClC;AAAA,EACF;AACF;;;AChJA,IAAK,WAAL,kBAAKqC,cAAL;AACE,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,UAAO;AACP,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,eAAY;AACZ,EAAAA,UAAA,YAAS;AACT,EAAAA,UAAA,SAAM;AACN,EAAAA,UAAA,SAAM;AAVH,SAAAA;AAAA,GAAA;AAaL,IAAO,mBAAQ;;;ICSFC,4BAAoBC,UAAAA;EAU/BC,YAAYC,SAAkBC,UAAAA;AAC5B,QAAIC;AACJ,UAAM;MAAEC;MAAS,GAAGC;IAAd,IAAuBJ;AAC7B,UAAM;MAAEK;IAAF,IAAWL;AACjB,UAAMM,MACJD,KAAKE,WAAW,IAAIJ,UAApB,cAA0CE,KAAKG,KAAK,GAAV,IAA1C,SAA+DL;AACjE,UAAMG,GAAN;SAfFG,QAAAA;SACAC,MAAAA;SACAC,OAAAA;SACAC,aAAAA;SACAP,OAAAA;SACAQ,SAAAA;SACAZ,WAAAA;AAUEa,WAAOC,OAAO,MAAMX,IAApB;AACA,SAAKY,OAAO,KAAKjB,YAAYiB;AAC7B,SAAKf,WAAW,MAAA;;AACd,cAAA,UAAQC,WAAR,OAAA,UAAQA,SAAW,CAACF,SAAS,GAAGC,SAAQ,CAArB;IACpB;EACF;;ACtCH,SAASgB,WAAcC,GAAvB;AACE,SAAOC,SAASD,CAAD,KAAO,OAAOA,EAAEE,OAAOC,QAAR,MAAsB;AACrD;SAMeF,SAASD,GAAAA;AACvB,SAAO,OAAOA,MAAM,YAAYA,KAAK;AACtC;SAmBeI,OAAMC,OAAAA;AACpB,SAAO,OAAOA,UAAU,WAAWC,KAAKC,UAAUF,KAAf,IAA5B,KAAuDA;AAC/D;SAOeG,cAAiBC,OAAAA;AAC/B,QAAM;IAAEC;IAAML;EAAR,IAAkBI,MAAME,KAAN;AACxB,SAAOD,OAAOE,SAAYP;AAC3B;SAMeQ,UACdC,QACAC,SACAC,QACAX,OAAAA;AAEA,MAAIS,WAAW,MAAM;AACnB;EACD,WAAUA,WAAW,OAAO;AAC3BA,aAAS,CAAA;EACV,WAAU,OAAOA,WAAW,UAAU;AACrCA,aAAS;MAAEG,SAASH;IAAX;EACV;AAED,QAAM;IAAEI;IAAMC;EAAR,IAAmBJ;AACzB,QAAM;IAAEK,MAAAA;EAAF,IAAWJ;AACjB,QAAM;IACJK;IACAJ,UAAO,+BAAiCG,QAAjC,OACLC,aAAU,uBAAyBA,aAAzB,MAA0C,MAD/C,sBAEcjB,OAAMC,KAAD,IAFnB;EAFH,IAKFS;AAEJ,SAAO;IACLT;IACAe,MAAAA;IACAC;IACAC,KAAKJ,KAAKA,KAAKK,SAAS,CAAf;IACTL;IACAC;IACA,GAAGL;IACHG;EARK;AAUR;UAMgBO,WACfV,QACAC,SACAC,QACAX,OAAAA;AAEA,MAAI,CAACoB,WAAWX,MAAD,GAAU;AACvBA,aAAS,CAACA,MAAD;EACV;AAED,aAAWY,KAAKZ,QAAQ;AACtB,UAAMa,UAAUd,UAAUa,GAAGX,SAASC,QAAQX,KAArB;AAEzB,QAAIsB,SAAS;AACX,YAAMA;IACP;EACF;AACF;UAOgBC,IACfvB,OACAW,QACAa,UAKI,CAAA,GAAA;AAEJ,QAAM;IAAEX,OAAO,CAAA;IAAIC,SAAS,CAACd,KAAD;IAASyB,SAAS;IAAOC,MAAAA,QAAO;EAAtD,IAAgEF;AACtE,QAAMG,MAAe;IAAEd;IAAMC;EAAR;AAErB,MAAIW,QAAQ;AACVzB,YAAQW,OAAOiB,QAAQ5B,OAAO2B,GAAtB;AAER,QACED,SACAf,OAAOI,SAAS,UAChBc,SAASlB,OAAOmB,MAAR,KACRD,SAAS7B,KAAD,KACR,CAAC+B,MAAMC,QAAQhC,KAAd,GACD;AACA,iBAAWiB,OAAOjB,OAAO;AACvB,YAAIW,OAAOmB,OAAOb,GAAd,MAAuBV,QAAW;AACpC,iBAAOP,MAAMiB,GAAD;QACb;MACF;IACF;EACF;AAED,MAAIgB,QAAQ;AAEZ,aAAWX,WAAWX,OAAOuB,UAAUlC,OAAO2B,GAAxB,GAA8B;AAClDM,YAAQ;AACR,UAAM,CAACX,SAASf,MAAV;EACP;AAED,WAAS,CAAC4B,GAAGC,GAAGC,CAAP,KAAa1B,OAAO2B,QAAQtC,OAAO2B,GAAtB,GAA4B;AAChD,UAAMY,KAAKhB,IAAIa,GAAGC,GAAa;MAC7BxB,MAAMsB,MAAM5B,SAAYM,OAAO,CAAC,GAAGA,MAAMsB,CAAV;MAC/BrB,QAAQqB,MAAM5B,SAAYO,SAAS,CAAC,GAAGA,QAAQsB,CAAZ;MACnCX;MACAC,MAAAA;IAJ6B,CAAjB;AAOd,eAAWc,KAAKD,IAAI;AAClB,UAAIC,EAAE,CAAD,GAAK;AACRP,gBAAQ;AACR,cAAM,CAACO,EAAE,CAAD,GAAKjC,MAAP;MACP,WAAUkB,QAAQ;AACjBW,YAAII,EAAE,CAAD;AAEL,YAAIL,MAAM5B,QAAW;AACnBP,kBAAQoC;QACT,WAAUpC,iBAAiByC,KAAK;AAC/BzC,gBAAM0C,IAAIP,GAAGC,CAAb;QACD,WAAUpC,iBAAiB2C,KAAK;AAC/B3C,gBAAM4C,IAAIR,CAAV;QACD,WAAUP,SAAS7B,KAAD,GAAS;AAC1BA,gBAAMmC,CAAD,IAAMC;QACZ;MACF;IACF;EACF;AAED,MAAIH,OAAO;AACT,eAAWX,WAAWX,OAAOkC,QAAQ7C,OAAY2B,GAA3B,GAAiC;AACrDM,cAAQ;AACR,YAAM,CAACX,SAASf,MAAV;IACP;EACF;AAED,MAAI0B,OAAO;AACT,UAAM,CAAC1B,QAAWP,KAAZ;EACP;AACF;ICxLY8C,eAAAA;EAYXC,YAAYC,OAAAA;SAXHC,OAAAA;SACTlC,OAAAA;SACAe,SAAAA;SACAF,UAAAA;SACAM,YAAAA;SACAW,UAAAA;SACAP,UAAAA;AAaE,UAAM;MACJvB,MAAAA;MACAe;MACAI;MACAW;MACAjB,UAAW5B,WAAmBA;MAC9BsC,UAAU,aAAA;MAAA;IANN,IAOFU;AAEJ,SAAKjC,OAAOA;AACZ,SAAKe,SAASA;AACd,SAAKQ,UAAUA;AACf,SAAKV,UAAUA;AAEf,QAAIM,WAAW;AACb,WAAKA,YAAY,CAAClC,OAAOU,YAAR;AACf,cAAMD,SAASyB,UAAUlC,OAAOU,OAAR;AACxB,eAAOS,WAAWV,QAAQC,SAAS,MAAMV,KAAxB;MAClB;IACF,OAAM;AACL,WAAKkC,YAAY,MAAM,CAAA;IACxB;AAED,QAAIW,SAAS;AACX,WAAKA,UAAU,CAAC7C,OAAOU,YAAR;AACb,cAAMD,SAASoC,QAAQ7C,OAAOU,OAAR;AACtB,eAAOS,WAAWV,QAAQC,SAAS,MAAMV,KAAxB;MAClB;IACF,OAAM;AACL,WAAK6C,UAAU,MAAM,CAAA;IACtB;EACF;;;;EAMDK,OAAOlD,OAAD;AACJ,WAAOkD,OAAOlD,OAAO,IAAR;EACd;;;;EAMDmD,OAAOnD,OAAD;AACJ,WAAOmD,OAAOnD,OAAO,IAAR;EACd;;;;EAMDoD,GAAGpD,OAAD;AACA,WAAOoD,GAAGpD,OAAO,IAAR;EACV;;;;;EAOD0B,KAAK1B,OAAD;AACF,WAAO0B,KAAK1B,OAAO,IAAR;EACZ;;;;;;;;;EAWDqD,SACErD,OACAwB,UAEI,CAAA,GAJE;AAMN,WAAO6B,SAASrD,OAAO,MAAMwB,OAAd;EAChB;;SAOa0B,OACdlD,OACAW,QAAAA;AAEA,QAAMF,SAAS4C,SAASrD,OAAOW,MAAR;AAEvB,MAAIF,OAAO,CAAD,GAAK;AACb,UAAMA,OAAO,CAAD;EACb;AACF;SAMe0C,OAAanD,OAAgBW,QAAAA;AAC3C,QAAMF,SAAS4C,SAASrD,OAAOW,QAAQ;IAAEc,QAAQ;EAAV,CAAhB;AAEvB,MAAIhB,OAAO,CAAD,GAAK;AACb,UAAMA,OAAO,CAAD;EACb,OAAM;AACL,WAAOA,OAAO,CAAD;EACd;AACF;SAMeiB,KAAW1B,OAAgBW,QAAAA;AACzC,QAAMF,SAAS4C,SAASrD,OAAOW,QAAQ;IAAEc,QAAQ;IAAMC,MAAM;EAAtB,CAAhB;AAEvB,MAAIjB,OAAO,CAAD,GAAK;AACb,UAAMA,OAAO,CAAD;EACb,OAAM;AACL,WAAOA,OAAO,CAAD;EACd;AACF;SAMe2C,GAASpD,OAAgBW,QAAAA;AACvC,QAAMF,SAAS4C,SAASrD,OAAOW,MAAR;AACvB,SAAO,CAACF,OAAO,CAAD;AACf;SAOe4C,SACdrD,OACAW,QACAa,UAGI,CAAA,GAAA;AAEJ,QAAM8B,SAAS/B,IAAIvB,OAAOW,QAAQa,OAAhB;AAClB,QAAM+B,SAAQpD,cAAcmD,MAAD;AAE3B,MAAIC,OAAM,CAAD,GAAK;AACZ,UAAMC,QAAQ,IAAIC,YAAYF,OAAM,CAAD,GAAK,aAAA;AACtC,iBAAWf,KAAKc,QAAQ;AACtB,YAAId,EAAE,CAAD,GAAK;AACR,gBAAMA,EAAE,CAAD;QACR;MACF;IACF,CANa;AAQd,WAAO,CAACgB,OAAOjD,MAAR;EACR,OAAM;AACL,UAAM6B,IAAImB,OAAM,CAAD;AACf,WAAO,CAAChD,QAAW6B,CAAZ;EACR;AACF;SCnIesB,QAAUC,MAAcC,WAAAA;AACtC,SAAO,IAAIC,OAAO;IAAEC,MAAMH;IAAMI,QAAQ;IAAMH;EAA5B,CAAX;AACR;SCpCeI,MAA6BC,UAAAA;AAC3C,SAAO,IAAIC,OAAO;IAChBC,MAAM;IACNC,QAAQH;IACR,CAACI,QAAQC,OAAT;AACE,UAAIL,YAAWM,MAAMC,QAAQF,KAAd,GAAsB;AACnC,mBAAW,CAACG,GAAGC,CAAJ,KAAUJ,MAAMD,QAAN,GAAiB;AACpC,gBAAM,CAACI,GAAGC,GAAGT,QAAP;QACP;MACF;IACF;IACDU,QAAQL,OAAD;AACL,aAAOC,MAAMC,QAAQF,KAAd,IAAuBA,MAAMM,MAAN,IAAgBN;IAC/C;IACDO,UAAUP,OAAD;AACP,aACEC,MAAMC,QAAQF,KAAd,KAAA,4CAC0CQ,OAAMR,KAAD;IAElD;EAlBe,CAAX;AAoBR;SAgBeS,UAAAA;AACd,SAAOC,QAAO,WAAYC,WAAD;AACvB,WAAO,OAAOA,UAAU;EACzB,CAFY;AAGd;SAmFeC,UAAAA;AACd,SAAOC,QAAO,WAAYC,WAAD;AACvB,WACG,OAAOA,UAAU,YAAY,CAACC,MAAMD,KAAD,KAAWE,OAAOC,UAAUH,KAAjB,KAA/C,wCACsCI,OAAMJ,KAAD;EAE9C,CALY;AAMd;SA4FeK,QAAAA;AACd,SAAOC,QAAO,SAAS,MAAM,KAAhB;AACd;SAkBeC,SAAAA;AACd,SAAOC,QAAO,UAAWC,WAAD;AACtB,WACG,OAAOA,UAAU,YAAY,CAACC,MAAMD,KAAD,KAApC,sCACoCE,OAAMF,KAAD;EAE5C,CALY;AAMd;SAaeG,OAA+BC,QAAAA;AAC7C,QAAMC,SAASD,SAASE,OAAOC,KAAKH,MAAZ,IAAsB,CAAA;AAC9C,QAAMI,QAAQC,MAAK;AACnB,SAAO,IAAIC,OAAO;IAChBC,MAAM;IACNP,QAAQA,SAASA,SAAS;IAC1B,CAACQ,QAAQZ,OAAT;AACE,UAAII,UAAUS,SAASb,KAAD,GAAS;AAC7B,cAAMc,WAAW,IAAIC,IAAIT,OAAOC,KAAKP,KAAZ,CAAR;AAEjB,mBAAWgB,OAAOX,QAAQ;AACxBS,mBAASG,OAAOD,GAAhB;AACA,gBAAM,CAACA,KAAKhB,MAAMgB,GAAD,GAAOZ,OAAOY,GAAD,CAAxB;QACP;AAED,mBAAWA,OAAOF,UAAU;AAC1B,gBAAM,CAACE,KAAKhB,MAAMgB,GAAD,GAAOR,KAAlB;QACP;MACF;IACF;IACDU,UAAUlB,OAAD;AACP,aACEa,SAASb,KAAD,KAAR,uCAAwDE,OAAMF,KAAD;IAEhE;IACDmB,QAAQnB,OAAD;AACL,aAAOa,SAASb,KAAD,IAAU;QAAE,GAAGA;MAAL,IAAeA;IACzC;EAxBe,CAAX;AA0BR;SA6FeoB,SAAAA;AACd,SAAOC,QAAO,UAAWC,WAAD;AACtB,WACE,OAAOA,UAAU,YAAjB,sCACoCC,OAAMD,KAAD;EAE5C,CALY;AAMd;AEnZD,SAASE,QAAQC,OAAjB;AACE,MAAIA,iBAAiBC,OAAOD,iBAAiBE,KAAK;AAChD,WAAOF,MAAMG;EACd,OAAM;AACL,WAAOH,MAAMI;EACd;AACF;SAMeC,IACdC,QACAC,WACAC,UAEI,CAAA,GAAA;AAEJ,QAAM;IAAEC;EAAF,IAAgBD;AACtB,SAAOE,OAAOJ,QAAQ,OAAQN,WAAD;AAC3B,WAAOS,YACHT,QAAQO,YACRP,SAASO,aAAT,gBACgBD,OAAOK,OADvB,iBAEIF,YAAY,KAAK,kBAChBF,YAHL,oBAGiCP,QAHjC;EAIL,CAPY;AAQd;SAMeY,IACdN,QACAC,WACAC,UAEI,CAAA,GAAA;AAEJ,QAAM;IAAEC;EAAF,IAAgBD;AACtB,SAAOE,OAAOJ,QAAQ,OAAQN,WAAD;AAC3B,WAAOS,YACHT,QAAQO,YACRP,SAASO,aAAT,gBACgBD,OAAOK,OADvB,oBAEIF,YAAY,KAAK,kBAChBF,YAHL,oBAGiCP,QAHjC;EAIL,CAPY;AAQd;SAMea,SAGdP,QAAAA;AACA,SAAOI,OAAOJ,QAAQ,YAAaN,WAAD;AAChC,UAAMG,OAAOJ,QAAQC,KAAD;AACpB,WACEG,OAAO,KAAP,yBAAmCG,OAAOK,OAA1C;EAEH,CALY;AAMd;SA2DeG,OACdC,QACAC,MACAC,SAAAA;AAEA,SAAO,IAAIC,OAAO;IAChB,GAAGH;IACH,CAACE,QAAQE,OAAOC,KAAhB;AACE,aAAOL,OAAOE,QAAQE,OAAOC,GAAtB;AACP,YAAMC,SAASJ,QAAQE,OAAOC,GAAR;AACtB,YAAME,WAAWC,WAAWF,QAAQD,KAAKL,QAAQI,KAAtB;AAE3B,iBAAWK,WAAWF,UAAU;AAC9B,cAAM;UAAE,GAAGE;UAASC,YAAYT;QAA1B;MACP;IACF;EAVe,CAAX;AAYR;;;ACjIc,SAARU,QACL,MACA,OACA,QACM;AACN,QAAM,CAAC,GAAG,IAAI,SAAe,OAAO,MAAM;AAC1C,MAAI,KAAK;AACP,QAAI,UAAU,sBAAsB,IAAI,MAAM,IAAI,OAAO;AACzD,UAAM;AAAA,EACR;AACF;AAaO,SAAS,WAAW;AACzB,QAAM,IACJ;AAEF,SAAOC,QAAiB,YAAY,CAAC,UAAU;AAC7C,QAAI,OAAO,UAAU,YAAY,EAAE,KAAK,KAAK,GAAG;AAC9C,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,QACL,SAAS,qKAAqK,KAAK;AAAA,MACrL;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,mBAAmB;AACjC,QAAM,UAAyB;AAAA,IAC7B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAOA,QAAoB,eAAe,CAAC,UAAU;AACnD,QAAI,OAAO,UAAU,YAAa,QAAqB,SAAS,KAAK,GAAG;AACtE,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,QACL,SAAS,mBAAmB,QACzB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EACnB,KAAK,IAAI,CAAC,cAAc,KAAK;AAAA,MAClC;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,uBAAuB;AACrC,QAAM,UAA6B,CAAC,cAAc,YAAY,MAAM;AACpE,SAAOA,QAAwB,mBAAmB,CAAC,UAAU;AAC3D,QAAI,OAAO,UAAU,YAAa,QAAqB,SAAS,KAAK,GAAG;AACtE,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,QACL,SAAS,mBAAmB,QACzB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EACnB,KAAK,IAAI,CAAC,cAAc,KAAK;AAAA,MAClC;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAcO,SAAS,kBAAkB;AAChC,QAAM,UAAwB,CAAC,SAAS,cAAc,MAAM;AAC5D,SAAOC,QAAmB,cAAc,CAAC,UAAU;AACjD,QAAI,OAAO,UAAU,YAAa,QAAqB,SAAS,KAAK,GAAG;AACtE,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,QACL,SAAS,mBAAmB,QACzB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EACnB,KAAK,IAAI,CAAC,cAAc,KAAK;AAAA,MAClC;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEO,SAAS,uBAAuB;AACrC,QAAM,UAA6B;AAAA,IACjC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAOA,QAAwB,mBAAmB,CAAC,UAAU;AAC3D,QAAI,OAAO,UAAU,YAAa,QAAqB,SAAS,KAAK,GAAG;AACtE,aAAO;AAAA,IACT,OAAO;AACL,aAAO;AAAA,QACL,SAAS,mBAAmB,QACzB,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG,EACnB,KAAK,IAAI,CAAC,cAAc,KAAK;AAAA,MAClC;AAAA,IACF;AAAA,EACF,CAAC;AACH;;;ACpJA,IAAM,QAAQ,OAAO,OAAO;AAgBrB,SAAS,OACd,QACA,SACM;AACN,SAAO,eAAe,QAAQ,OAAO;AAAA,IACnC,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,UAAU;AAAA,EACZ,CAAC;AACH;AAMO,SAAS,OACd,QACA,SACM;AACN,SAAO,eAAe,QAAQ,OAAO;AAAA,IACnC,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,UAAU;AAAA,EACZ,CAAC;AACH;;;ACkGO,SAAS,YAAY,OAAkC;AAC5D,SACE,OAAO,SACP,OAAO,SACP,MAAM,MAAM,UACZ,MAAM,MAAM;AAEhB;AAMO,SAAS,YAAY,OAAkC;AAC5D,SAAO,UAAU,SAAS,MAAM,SAAS;AAC3C;AAMO,SAAS,YAAY,OAAkC;AAC5D,SACE,OAAO,SACP,OAAO,SACP,OAAO,SACP,OAAO,SACP,MAAM,MAAM,UACZ,MAAM,MAAM,UACZ,MAAM,MAAM,UACZ,MAAM,MAAM;AAEhB;AAGO,IAAU;AAAA,CAAV,CAAUC,mBAAV;AACE,MAAK;AAAL,IAAKC,gBAAL;AACL,IAAAA,wBAAA,UAAO,KAAP;AACA,IAAAA,wBAAA,UAAO,KAAP;AACA,IAAAA,wBAAA,eAAY,KAAZ;AAAA,KAHU,aAAAD,eAAA,eAAAA,eAAA;AAML,WAAS,QAAQ,OAA6B;AACnD,YAAQ,MAAM,YAAY;AAAA,MACxB,KAAK;AACH,eAAO;AAAA,UACL,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,QACtB;AAAA,MACF,KAAK,mBAAsB;AACzB,eAAO;AAAA,UACL,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,UACZ,mBAAmB,MAAM;AAAA,QAC3B;AAAA,MACF;AAAA,MACA,KAAK;AACH,eAAO;AAAA,UACL,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,UACpB,GAAG,MAAM,WAAW;AAAA,UACpB,MAAM,MAAM;AAAA,QACd;AAAA,MACF;AACE,cAAM,IAAI,MAAM,sBAAsB;AAAA,IAC1C;AAAA,EACF;AA3BO,EAAAA,eAAS;AA6BT,WAAS,UAAU,OAA6B;AACrD,QAAI,YAAY,KAAK,GAAG;AACtB,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,YAAY,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,MAAM,EAAE;AAAA,QAC7D,eAAe;AAAA,QACf,MAAM;AAAA,QACN,mBAAmB;AAAA,MACrB;AAAA,IACF,WAAW,YAAY,KAAK,GAAG;AAC7B,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,YAAY,EAAE,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,MAAM,EAAE;AAAA,QAC7D,eAAe;AAAA,QACf,MAAM,MAAM;AAAA,QACZ,mBAAmB;AAAA,MACrB;AAAA,IACF,WAAW,YAAY,KAAK,GAAG;AAC7B,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,YAAY,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AAAA,QACrC,eAAe,MAAM;AAAA,QACrB,MAAM,MAAM;AAAA,QACZ,mBAAmB,MAAM;AAAA,MAC3B;AAAA,IACF;AACA,UAAM,IAAI,MAAM,sBAAsB;AAAA,EACxC;AA3BO,EAAAA,eAAS;AAAA,GApCD;;;AC5KV,SAAS,aAAgB,QAAyB;AACvD,MAAI,OAAO,QAAQ,GAAG;AACpB,UAAM,QAAQ,OAAO,MAAM;AAC3B,WAAO,OAAO;AACd,WAAO;AAAA,EACT,OAAO;AACL,UAAM,QAAQ,OAAO,MAAM;AAC3B,UAAM,eAAe,QACjB,MAAM,QAAQ,IACd,MAAM,cAAc;AACxB,UAAM,OAAO;AACb,WAAO,OAAO;AACd,UAAM,IAAI,MAAM,YAAY;AAAA,EAC9B;AACF;AASO,SAAS,YACd,SACY;AACZ,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,YAAQ,CAAC,cAAc;AACrB,UAAI;AACF,cAAM,SAAS,aAAa,SAAS;AACrC,gBAAQ,MAAM;AAAA,MAChB,SAAS,GAAG;AACV,eAAO,CAAC;AAAA,MACV;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH;;;ACjCA,IAAO,eAAQ,OAAO,SAAS,cAC3B,QACE,MAAM;AACN,MAAI;AAEF,WAAO,iBAAkB;AAAA,EAC3B,SAAS,GAAG;AACV,WAAO,SAASE,QAAO;AACrB,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,GAAG;;;AChBP,IAAO,2BAAQ,CAAI,WAAsB,UAAmB,SAAmB;AAC7E,QAAM,MAAM,CAAC;AACb,WAAS,QAAQ,GAAG,QAAQ,UAAU,KAAK,GAAG,SAAS,GAAG;AACxD,QAAI,KAAK,UAAU,IAAI,KAAK,CAAC;AAAA,EAC/B;AACA,MAAI,QAAS,WAAU,OAAO;AAE9B,SAAO;AACT;;;ACVA;AA8iBE,uBAAC,SAeD,2BAAC,SAkDD,eAAC,SAWD,mBAAC,SAWD,gBAAC,SAWD,gBAAC,SAYD,gBAAC,SAUD,eAAC,SAaD,oBAAC,SAYD,mBAAC,SAUD,wBAAC,SAoCD,oBAAC,SAWD,cAAC,SAUD,gBAAC,SAYD,mBAAC,SAYD,kBAAC,SAaD,qBAAC,SAiBD,gBAAC,SAYD,gBAAC,SAWD,gBAAC,SAUD,gBAAC,SAWD,mBAAC,SAYD,mBAAC,SAaD,mBAAC,SAYD,gBAAC,SAUD,4BAAC,SAYD,oBAAC,SAYD,iBAAC,SAWD,sBAAC,SAWD,iBAAC,SAcD,iBAAC,SAYD,kBAAC,SAYD,mBAAC,SAaD,kBAAC,SAYD,mBAAC,SAYD,0BAAC,SAWD,2BAAC,SAYD,qBAAC,SAWD,yBAAC,SAWD,qBAAC,SAWD,yBAAC,SAaD,qBAAC,SAaD,yBAAC,SAaD,qBAAC,SAaD,yBAAC,SAcD,uBAAC,SAeD,0BAAC,SAaD,sBAAC,SAYD,yBAAC,SAWD,qBAAC,SAWD,mBAAC,SAWD,qBAAC,SAWD,qBAAC,SAWD,oBAAC,SAYD,oBAAC,SAYD,0BAAC,SAcD,wBAAC,SAeD,0BAAC,SAaD,wBAAC,SAaD,2BAAC,SAWD,gCAAC,SAWD,iBAAC,SAWD,qBAAC,SAWD,kBAAC,SAWD,sBAAC,SAYD,iBAAC,SAaD,qBAAC,SAYD,kBAAC,SAaD,sBAAC,SAYD,kBAAC,SAYD,kBAAC,SAYD,sBAAC,SAYD,uBAAC,SAYD,2BAAC,SAWD,2BAAC,SAYD,kBAAC,SAWD,gBAAC,SAWD,gBAAC,SAWD,kBAAC,SAcD,oBAAC,SAcD,oBAAC,SAkBD,oBAAC,SAYD,+BAAC,SAYD,8BAAC,SAYD,8BAAC,SAYD,kCAAC,SAYD,mCAAC,SAWD,sCAAC,SAYD,0BAAC,SAiBD,wBAAC,SAcD,oBAAC,SAWD,+BAAC,SAWD,6BAAC,SAWD,wBAAC,SAYD,mBAAC,SAcD,2BAAC,SA2BD,cAAC,SAgBD,0BAAC,SAWD,2BAAC,SAWD,2BAAC,SAWD,wBAAC,SAYD,sBAAC,SAcD,gBAAC,SAcD,gBAAC,SAaD,eAAC,SAcD,eAAC,SAaD,iBAAC,SAcD,iBAAC,SAaD,kBAAC,SAcD,kBAAC,SAaD,kBAAC,SAcD,kBAAC,SAaD,iBAAC,SAeD,iBAAC,SAmBD,qBAAC,SAyBD,qBAAC,SAeD,qBAAC,SAqBD,yBAAC,SAcD,yBAAC,SAYD,8BAAC,SAyBD,8BAAC,SAuBD,qBAAC,SAaD,qBAAC,SAyBD,mCAAC,SAqBD,mCAAC,SAoBD,gBAAC,SAkBD,gBAAC,SAaD,gBAAC,SAWD,qBAAC,SAYD,sBAAC,SAaD,sBAAC,SAaD,wBAAC,SAeD,0BAAC,SAaD,4BAAC,SAaD,4BAAC,SAaD,kBAAC,SAWD,sBAAC,SAWD,sBAAC,SAWD,wBAAC,SAWD,0BAAC,SAWD,4BAAC,SAWD,4BAAC,SAWD,8BAAC,SAWD,2BAAC,SAUD,yBAAC,SAYD,mBAAC,SAWD,wBAAC,SAYD,mBAAC,SAYD,mBAAC,SAYD,qBAAC,SAWD,0BAAC,SAaD,qBAAC,SAYD,qBAAC,SAYD,qBAAC,SAWD,2BAAC,SAWD,4BAAC,SAiBD,yBAAC,SAsBD,yBAAC,SAYD,4BAAC,SAaD,2BAAC,SAWD,qBAAC,SAYD,mBAAC,SAWD,wBAAC,SAWD,mBAAC,SAgBD,qBAAC,SAmBD,qBAAC,SAaD,qBAAC,SAaD,yBAAC,SAWD,yBAAC,SAYD,wBAAC,SAaD,mBAAC,SAYD,gBAAC,SAWD,qBAAC,SAYD,gBAAC,SAYD,gBAAC,SAWD,uBAAC,SAYD,sBAAC,SAYD,2BAAC,SAWD,gCAAC,SAiBD,+BAAC,SAsBD,+BAAC,SAYD,kCAAC,SAYD,iCAAC,SAYD,kBAAC,SAWD,uBAAC,SAYD,yBAAC,SAYD,wBAAC,SAgBD,2BAAC,SAsBD,uBAAC,SAcD,2BAAC,SAWD,uBAAC,SAYD,uBAAC,SAYD,uBAAC,SAYD,uBAAC,SAWD,uBAAC,SAaD,0BAAC,SAWD,0BAAC,SAaD,gCAAC,SAcD,gCAAC,SAaD,sBAAC,SAWD,2BAAC,SAYD,6BAAC,SAYD,4BAAC,SAgBD,+BAAC,SAsBD,2BAAC,SAcD,+BAAC,SAWD,2BAAC,SAcD,6BAAC,SAYD,6BAAC,SAYD,6BAAC,SAYD,6BAAC,SAYD,iCAAC,SAYD,iCAAC,SAYD,iCAAC,SAYD,iCAAC,SAWD,0BAAC,SAWD,0BAAC,SAqBD,+BAAC,SA8BD,6BAAC,SAcD,kCAAC,SAqBD,oBAAC,SAuBD,mBAAC,SAoBD,qBAAC,SAyBD,sBAAC,SA4BD,0BAAC,SAuBD,2BAAC,SA0BD,wBAAC,SAuBD,yBAAC,SA0BD,yBAAC,SAuBD,0BAAC,SAwBD,qBAAC,SA0BD,oBAAC,SA0BD,0BAAC,SAsBD,4BAAC,SAsBD,uBAAC,SAkBD,yBAAC,SAkBD,gBAAC,SAgBD,oBAAC,SAiBD,oBAAC,SAWD,2BAAC,SAWD,gBAAC,SAWD,qBAAC,SAWD,sBAAC,SAaD,uBAAC,SAWD,gBAAC,SAaD,gBAAC,SAiBD,0BAAC,SAiBD,0BAAC,SAWD,8BAAC,SAYD,6BAAC,SAYD,+BAAC,SAWD,oCAAC,SAWD,sCAAC,SAWD,qCAAC,SAYD,+BAAC,SAWD,oCAAC,SAYD,6CAAC,SAiBD,4CAAC,SAWD,4CAAC,SAgBD,2CAAC,SAaD,oBAAC,SAeD,oBAAC,SAaD,oBAAC,SAaD,wBAAC,SAYD,uBAAC,SAaD,wBAAC,SAcD,uBAAC,SAaD,yBAAC,SAeD,oBAAC,SAWD,yBAAC,SAaD,oBAAC,SAYD,oBAAC,SAYD,sBAAC,SAWD,2BAAC,SAaD,sBAAC,SAYD,sBAAC,SAYD,gBAAC,SAWD,qBAAC,SAaD,sBAAC,SAaD,sBAAC,SAcD,sBAAC,SAYD,sBAAC,SAaD,8BAAC,SAWD,mBAAC,SAYD,kBAAC,SAYD,wBAAC,SAWD,6BAAC,SAWD,wBAAC,SAYD,wBAAC,SAWD,uCAAC,SAcD,+BAAC,SAaD,8BAAC,SAYD,2BAAC,SAWD,gCAAC,SAWD,mBAAC,SAYD,kBAAC,SAWD,iBAAC,SAYD,gBAAC,SAWD,kBAAC,SAYD,kBAAC,SAWD,4BAAC,SAWD,oCAAC,SAWD,mCAAC,SAWD,sBAAC,SAWD,uBAAC,SA8GD,8BAAC,SA2BD,mCAAC,SAqCD,8BAAC,SAgCD,wBAAC,SAWD,0BAAC,SAWD,uBAAC,SAYD,yBAAC,SAYD,wBAAC,SAYD,uBAAC,SAWD,yBAAC,SAWD,wBAAC,SAWD,6BAAC,SAuBD,iBAAC,SAWD,iBAAC,SAwCD,2BAAC;AAjrJH,IAAqB,WAArB,MAA8B;AAAA;AAAA,EAK5B,YAAY,KAAU;AALxB;AAEE;AAAA;AA+ZA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAqB,CAAC,aAAuC;AAC3D,YAAM,eAAe,mBAAK,MAAK,2BAA2B,QAAQ;AAClE,aAAO,MAAM;AACX,YAAI,mBAAK,MAAK,UAAU,EAAG;AAC3B,qBAAa,mBAAK,MAAK,YAAY,YAAY,CAAC;AAAA,MAClD;AAAA,IACF;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAY,CAAC,aAAwD;AACnE,YAAM,eAAe,mBAAK,MAAK,wBAAwB,QAAQ;AAC/D,aAAO,MAAM;AACX,YAAI,mBAAK,MAAK,UAAU,EAAG;AAC3B,qBAAa,mBAAK,MAAK,YAAY,YAAY,CAAC;AAAA,MAClD;AAAA,IACF;AAmuIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAiB,CACf,KACA,aACiB;AACjB,MAAAC,QAAO,OAAO,KAAK,MAAM,QAAQ,CAAC,CAAC;AACnC,YAAM,eAAe,mBAAK,MAAK,sBAAsB,KAAK,CAAC,aAAa;AACtE,YAAI;AACF,mBAAS,yBAAiB,UAAU,IAAI,CAAC;AAAA,QAC3C,SAAS,GAAG;AAEV,kBAAQ,MAAM,CAAC;AAAA,QACjB;AAAA,MACF,CAAC;AACD,aAAO,MAAM;AACX,YAAI,mBAAK,MAAK,UAAU,EAAG;AAC3B,qBAAa,mBAAK,MAAK,YAAY,YAAY,CAAC;AAAA,MAClD;AAAA,IACF;AAlqJE,uBAAK,MAAO;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,OACJ,QACAC,YAAqB,iBAAS,KAC9B,UAAyB,CAAC,GACX;AACf,IAAAD,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,IAAAA,QAAO,YAAYC,WAAU,SAAc,CAAC;AAC5C,IAAAD,QAAO,WAAW,SAAS,OAAO,CAAC;AAEnC,UAAM,gBACJ,QAAQ,eAAe,QAAQ,QAAQ,gBAAgB;AACzD,UAAM,cAAc,QAAQ,eAAe;AAC3C,UAAM,cAAc,QAAQ,eAAe;AAC3C,UAAM,sBAAsB,QAAQ,uBAAuB;AAG3D,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,IAC9C;AACA,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,IAC9C;AACA,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC;AAAA,IAC1B;AAGA,QAAI,QAAQ,eAAe,QAAQ,QAAQ,gBAAgB,MAAM;AAC/D,MAAAA,QAAO,eAAe,QAAQ,aAAuB,OAAO,CAAC;AAC7D,MAAAA,QAAO,gBAAgB,QAAQ,cAAwB,OAAO,CAAC;AAAA,IACjE;AAEA,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK;AAAA,QACR;AAAA,QACAC;AAAA,QACA,CAAC,WAAW;AACV,cAAI,WAAW,QAAQ;AACrB,mBAAO,OAAO,KAAK;AAAA,UACrB,OAAO;AACL,oBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAMA,UAAS,CAAC,CAAC;AAAA,UAChD;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,aAAa,QAAQ,eAAe;AAAA,UACpC,cAAc,QAAQ,gBAAgB;AAAA,UACtC,gCACE,QAAQ,kCAAkC;AAAA,UAC5C,yBAAyB,QAAQ,2BAA2B;AAAA,UAC5D,yBAAyB,QAAQ,2BAA2B;AAAA,UAC5D,kBAAkB,QAAQ,oBAAoB;AAAA,QAChD;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAM,oBACJ,QAEAA,YAAqB,iBAAS,KAC9B,YACA,YACA,YACA,UAAyB,CAAC,GACT;AACjB,IAAAD,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,IAAAA,QAAO,YAAYC,WAAU,SAAc,CAAC;AAC5C,IAAAD,QAAO,WAAW,SAAS,OAAO,CAAC;AAEnC,UAAM,gBACJ,QAAQ,eAAe,QAAQ,QAAQ,gBAAgB;AACzD,UAAM,cAAc,QAAQ,eAAe;AAC3C,UAAM,cAAc,QAAQ,eAAe;AAC3C,UAAM,sBAAsB,QAAQ,uBAAuB;AAG3D,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,IAC9C;AACA,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,IAC9C;AACA,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC;AAAA,IAC1B;AAGA,QAAI,QAAQ,eAAe,QAAQ,QAAQ,gBAAgB,MAAM;AAC/D,MAAAA,QAAO,eAAe,QAAQ,aAAuB,OAAO,CAAC;AAC7D,MAAAA,QAAO,gBAAgB,QAAQ,cAAwB,OAAO,CAAC;AAAA,IACjE;AAEA,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK;AAAA,QACR;AAAA,QACAC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,CAAC,aAAa,eAAe;AAC3B,cAAI,WAAW,aAAa;AAC1B,mBAAO,YAAY,KAAK;AAAA,UAC1B,WAAW,WAAW,YAAY;AAChC,mBAAO,WAAW,KAAK;AAAA,UACzB,OAAO;AACL,kBAAM,YAAY,IAAI,aAAK,CAAC,WAAW,GAAG;AAAA,cACxC,MAAMA;AAAA,YACR,CAAC;AACD,kBAAM,WAAW,IAAI,aAAK,CAAC,UAAU,GAAG;AAAA,cACtC,MAAMA;AAAA,YACR,CAAC;AACD,oBAAQ,CAAC,WAAW,QAAQ,CAAC;AAAA,UAC/B;AAAA,QACF;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA,aAAa,QAAQ,eAAe;AAAA,UACpC,cAAc,QAAQ,gBAAgB;AAAA,UACtC,gCACE,QAAQ,kCAAkC;AAAA,UAC5C,yBAAyB,QAAQ,2BAA2B;AAAA,UAC5D,yBAAyB,QAAQ,2BAA2B;AAAA,UAC5D,kBAAkB,QAAQ,oBAAoB;AAAA,QAChD;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,MAAM,YACJ,QAEAA,YAAiC,iBAAS,KAC1C,kBAKA,SACe;AACf,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,qBACJ,QAEAA,YAAiC,iBAAS,KAC1C,kBAKA,SACe;AACf,IAAAD,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,IAAAA,QAAO,YAAYC,WAAU,SAAc,CAAC;AAC5C,IAAAD,QAAO,WAAW,SAAS,OAAO,CAAC;AAEnC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK;AAAA,QACR;AAAA,QACA,QAAQ,cAAc;AAAA,QACtB,QAAQ,YAAY;AAAA,QACpBC;AAAA,QACA;AAAA,QACA,CAAC,WAAW;AACV,cAAI,WAAW,QAAQ;AACrB,mBAAO,OAAO,KAAK;AAAA,UACrB,OAAO;AACL,oBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAMA,UAAS,CAAC,CAAC;AAAA,UAChD;AAAA,QACF;AAAA,QACA;AAAA,UACE,YAAY,QAAQ,cAAc;AAAA,UAClC,kBAAkB,QAAQ,oBAAoB;AAAA,QAChD;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAUA,MAAM,eAAe,SAA2C;AAC9D,IAAAD,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,WAAO;AAAA,MAA4B,CAAC,OAClC,mBAAK,MAAK,qBAAqB,SAAS,EAAE;AAAA,IAC5C,EAAE,KAAK,CAAC,WAAW,yBAAiB,MAAM,CAAC;AAAA,EAC7C;AAAA,EAUA,mBAAmB,KAAuC;AACxD,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO;AAAA,MAA4B,CAAC,OAClC,mBAAK,MAAK,yBAAyB,KAAK,EAAE;AAAA,IAC5C,EAAE,KAAK,CAAC,WAAW,yBAAiB,MAAM,CAAC;AAAA,EAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,MAAM,aACJ,QACA,yBAAmC,CAAC,UAAU,QAAQ,OAAO,GAC5C;AACjB,IAAAA,QAAO,UAAU,QAAQ,MAAM,OAAO,CAAC,CAAC;AACxC,WAAO;AAAA,MAAY,CAAC,OAClB,mBAAK,MAAK,mBAAmB,QAAQ,IAAI,sBAAsB;AAAA,IACjE;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,cAAc,QAAwC;AAC1D,IAAAA,QAAO,UAAU,QAAQ,MAAM,OAAO,CAAC,CAAC;AACxC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK,oBAAoB,QAAQ,CAAC,WAAW;AAChD,YAAI,WAAW,QAAQ;AACrB,iBAAO,OAAO,KAAK;AAAA,QACrB,OAAO;AACL,kBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAM,iBAAS,IAAI,CAAC,CAAC;AAAA,QACpD;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAQA,OAAOE,OAAsC;AAC3C,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,OAAOA,KAAI,CAAC;AAAA,EAC5C;AAAA,EAQA,WAAWA,OAA+B;AACxC,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,WAAWA,KAAI,CAAC;AAAA,EAChD;AAAA,EAQA,QAAQ,IAAuC;AAC7C,IAAAF,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,QAAQ,IAA2B;AACjC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EASA,QAAQ,IAAmB,MAAoB;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,QAAQ,IAAI,IAAI,CAAC;AAAA,EAC1C;AAAA,EAOA,OAAO,IAAyB;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,OAAO,EAAE,CAAC;AAAA,EAC1C;AAAA,EAUA,YAAY,IAAmB,UAAyB;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,WAAO,aAAa,mBAAK,MAAK,YAAY,IAAI,QAAQ,CAAC;AAAA,EACzD;AAAA,EAQA,WAAW,IAA4B;AACrC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EAOA,kBAAmC;AACjC,WAAO,yBAAiB,mBAAK,MAAK,gBAAgB,CAAC;AAAA,EACrD;AAAA,EAkCA,YAAY,KAA+B;AACzC,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,YAAY,GAAG,CAAC;AAAA,EAChD;AAAA,EAQA,MAAM,KAAqC;AACzC,IAAAA,QAAO,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,CAAC,CAAC;AAC5C,WAAO,aAAa,mBAAK,MAAK,MAAM,GAAG,CAAC;AAAA,EAC1C;AAAA,EAOA,QAAQ,IAAyB;AAC/B,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EASA,WAAW,IAAyB;AAClC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EASA,UAAU,IAAyB;AACjC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAUA,aAAa,KAA+B;AAC1C,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,aAAa,GAAG,CAAC;AAAA,EACjD;AAAA,EAcA,QAAQ,KAAsB,IAAqC;AACjE,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,QAAQ,KAAK,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,QAAQ,IAAmB,MAAc;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,IAAI,CAAC;AAAA,EACjD;AAAA,EAOA,QAAQ,IAA2B;AACjC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAOA,QAAQ,IAA2B;AACjC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,WAAW,MAA+B;AACxC,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,UAAM,SAAS,mBAAK,MAAK,WAAW,IAAI;AACxC,WAAO,yBAAiB,MAAM;AAAA,EAChC;AAAA,EAQA,WAAWE,OAAmC;AAC5C,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,UAAM,SAAS,mBAAK,MAAK,WAAWA,KAAI;AACxC,UAAM,SAAS,aAAa,MAAM;AAClC,WAAO,yBAAiB,MAAM;AAAA,EAChC;AAAA,EAQA,WAAW,MAA+B;AACxC,IAAAF,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,UAAM,SAAS,mBAAK,MAAK,WAAW,IAAI;AACxC,UAAM,SAAS,aAAa,MAAM;AAClC,WAAO,yBAAiB,MAAM;AAAA,EAChC;AAAA,EAOA,UAAqD;AAEnD,WAAO,yBAAiB,mBAAK,MAAK,QAAQ,CAAC;AAAA,EAC7C;AAAA,EAOA,sBAAuC;AACrC,WAAO,yBAAiB,mBAAK,MAAK,oBAAoB,CAAC;AAAA,EACzD;AAAA,EAUA,YAAYE,OAAgC;AAC1C,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,YAAYA,KAAI,CAAC;AAAA,EACjD;AAAA,EASA,SAAS,IAA4B;AACnC,IAAAF,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,SAAS,EAAE,CAAC;AAAA,EAC5C;AAAA,EAQA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,SAAS,IAAkC;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,SAAS,EAAE,CAAC;AAAA,EAC5C;AAAA,EAWA,SAAS,IAAmB,OAA4B;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,QAAQ,CAAC;AAChC,WAAO,aAAa,mBAAK,MAAK,SAAS,IAAI,KAAK,CAAC;AAAA,EACnD;AAAA,EAQA,UAAU,IAA4B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EASA,WAAW,IAAmB,SAAwB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,WAAW,IAAI,OAAO,CAAC;AAAA,EACvD;AAAA,EASA,UAAU,IAA4B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EASA,WAAW,IAAmB,SAAwB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,WAAW,IAAI,OAAO,CAAC;AAAA,EACvD;AAAA,EAQA,kBAAkB,IAA4B;AAC5C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAQA,mBAAmB,IAAmB,QAAuB;AAC3D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,QAAQ,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,mBAAmB,IAAI,MAAM,CAAC;AAAA,EAC9D;AAAA,EAQA,aAAa,IAA2B;AACtC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,iBAAiB,IAAiC;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EAQA,aAAa,IAA2B;AACtC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,iBAAiB,IAAiC;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EAUA,aAAa,IAAmB,OAAqB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,KAAK,CAAC;AAAA,EACvD;AAAA,EASA,iBAAiB,IAAmB,MAA0B;AAC5D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,IAAI,CAAC;AAAA,EAC1D;AAAA,EAUA,aAAa,IAAmB,OAAqB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,KAAK,CAAC;AAAA,EACvD;AAAA,EASA,iBAAiB,IAAmB,MAA0B;AAC5D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,IAAI,CAAC;AAAA,EAC1D;AAAA,EAWA,eAAe,IAAmB,SAAwB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,eAAe,IAAI,OAAO,CAAC;AAAA,EAC3D;AAAA,EAWA,kBAAkB,IAAmB,SAAwB;AAC3D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,OAAO,CAAC;AAAA,EAC9D;AAAA,EASA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,iBAAiB,IAA4B;AAC3C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EAQA,aAAa,IAAyB;AACpC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,WAAW,IAAyB;AAClC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EAQA,aAAa,IAAyB;AACpC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,aAAa,IAAyB;AACpC,IAAAA,QAAO,MAAM,IAAI,OAAO,CAAC;AACzB,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,YAAY,IAA2B;AACrC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,YAAY,EAAE,CAAC;AAAA,EAC/C;AAAA,EASA,YAAY,IAAmB,SAAuB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,WAAO,aAAa,mBAAK,MAAK,YAAY,IAAI,OAAO,CAAC;AAAA,EACxD;AAAA,EAQA,kBAAkB,IAA4B;AAC5C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAI1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC,EAAE;AAAA,EAC7C;AAAA,EAQA,gBAAgB,IAA4B;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAI1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC,EAAE;AAAA,EAC7C;AAAA,EASA,kBAAkB,IAAmB,MAAqB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,IAAI,CAAC;AAAA,EAC3D;AAAA,EASA,gBAAgB,IAAmB,MAAqB;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,IAAI,IAAI,CAAC;AAAA,EACzD;AAAA,EASA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,wBAAwB,IAA4B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,wBAAwB,EAAE,CAAC;AAAA,EAC3D;AAAA,EAQA,SAAS,IAA2B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,SAAS,EAAE,CAAC;AAAA,EAC5C;AAAA,EAQA,aAAa,IAA6B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,UAAU,IAA2B;AACnC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,cAAc,IAA6B;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,SAAS,IAAmB,OAAqB;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,SAAS,IAAI,KAAK,CAAC;AAAA,EACnD;AAAA,EASA,aAAa,IAAmB,MAAsB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,IAAI,CAAC;AAAA,EACtD;AAAA,EASA,UAAU,IAAmB,OAAqB;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,UAAU,IAAI,KAAK,CAAC;AAAA,EACpD;AAAA,EASA,cAAc,IAAmB,MAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,IAAI,CAAC;AAAA,EACvD;AAAA,EASA,UAAU,IAA2B;AACnC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,UAAU,IAA2B;AACnC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EASA,eAAe,IAA2B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EASA,mBAAmB,IAAmB,MAA6B;AACjE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,IAAI,IAAI,CAAC;AAAA,EAC5D;AAAA,EAQA,mBAAmB,IAAoC;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EASA,UAAU,IAAkC;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,QAAQ,IAAyB;AAC/B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,QAAQ,IAA4B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,mBAAK,MAAK,QAAQ,EAAE;AAAA,EAC7B;AAAA,EAQA,UAAU,IAAyC;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,QAAI,CAAC,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC,EAAG,QAAO;AACnD,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAUA,YAAY,IAAoC;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,SAAS,aAAa,mBAAK,MAAK,YAAY,EAAE,CAAC;AACrD,WAAO,yBAAiB,MAAM;AAAA,EAChC;AAAA,EAUA,YACE,QACA,OACA,OACM;AACN,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,IAAAA,QAAO,SAAS,OAAO,IAAI,OAAO,GAAG,CAAC,CAAC;AACvC,WAAO,aAAa,mBAAK,MAAK,YAAY,QAAQ,OAAO,KAAK,CAAC;AAAA,EACjE;AAAA,EASA,YAAY,QAAuB,OAA4B;AAC7D,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,YAAY,QAAQ,KAAK,CAAC;AAAA,EAC1D;AAAA,EAQA,uBAAuB,IAA4B;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,uBAAuB,EAAE,CAAC;AAAA,EAC1D;AAAA,EASA,sBAAsB,IAA2B;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,sBAAsB,EAAE,CAAC;AAAA,EACzD;AAAA,EASA,sBAAsB,IAA2B;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,sBAAsB,EAAE,CAAC;AAAA,EACzD;AAAA,EASA,0BAA0B,IAA2B;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,0BAA0B,EAAE,CAAC;AAAA,EAC7D;AAAA,EASA,2BAA2B,IAA2B;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,2BAA2B,EAAE,CAAC;AAAA,EAC9D;AAAA,EAQA,8BAA8B,KAA4B;AACxD,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,8BAA8B,GAAG,CAAC;AAAA,EAClE;AAAA,EASA,kBACE,KACA,0BACM;AACN,IAAAA,QAAO,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,CAAC,CAAC;AAC5C,WAAO;AAAA,MACL,mBAAK,MAAK,kBAAkB,KAAK,wBAAwB;AAAA,IAC3D;AAAA,EACF;AAAA,EASA,gBACE,KACA,wBACM;AACN,IAAAA,QAAO,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,CAAC,CAAC;AAC5C,WAAO,aAAa,mBAAK,MAAK,gBAAgB,KAAK,sBAAsB,CAAC;AAAA,EAC5E;AAAA,EAQA,YAAY,KAA+B;AACzC,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,YAAY,GAAG,CAAC;AAAA,EAChD;AAAA,EAQA,uBAAuB,KAA4B;AACjD,IAAAA,QAAO,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,CAAC,CAAC;AAC5C,WAAO,aAAa,mBAAK,MAAK,uBAAuB,GAAG,CAAC;AAAA,EAC3D;AAAA,EAQA,qBAAqB,KAA4B;AAC/C,IAAAA,QAAO,OAAO,KAAK,SAAS,MAAM,OAAO,CAAC,CAAC,CAAC;AAC5C,WAAO,aAAa,mBAAK,MAAK,qBAAqB,GAAG,CAAC;AAAA,EACzD;AAAA,EAQA,gBAAgB,KAA+B;AAC7C,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,WAAO,aAAa,mBAAK,MAAK,gBAAgB,GAAG,CAAC;AAAA,EACpD;AAAA,EASA,WAAW,IAAyB;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EAWA,mBACE,KACA,OACA,QACM;AACN,IAAAA,QAAO,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC;AAClC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,mBAAmB,KAAK,OAAO,MAAM,CAAC;AAAA,EACtE;AAAA,EAkBA,MACE,IACA,OACA,UAAkB,GAClB,UAAkB,GACZ;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,MAAM,IAAI,OAAO,SAAS,OAAO,CAAC;AAAA,EAClE;AAAA,EAQA,kBAAkB,IAA6B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,yBAAiB,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC,CAAC;AAAA,EACvE;AAAA,EAQA,mBAAmB,UAA2B;AAC5C,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,mBAAK,MAAK,mBAAmB,QAAQ;AAAA,EAC9C;AAAA,EAQA,mBAAmB,UAA2B;AAC5C,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,mBAAK,MAAK,mBAAmB,QAAQ;AAAA,EAC9C;AAAA,EAQA,gBAAgB,UAAgC;AAC9C,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,UAAME,QAAO,aAAa,mBAAK,MAAK,gBAAgB,QAAQ,CAAC;AAC7D,WAAOA;AAAA,EACT;AAAA,EAQA,cAA0B,cAA2B;AACnD,IAAAF,QAAO,gBAAgB,cAAc,OAAO,CAAC;AAC7C,WAAO;AAAA,MACL,aAAa,mBAAK,MAAK,cAAc,YAAY,CAAC;AAAA,IACpD;AAAA,EACF;AAAA,EASA,QAAQ,IAAmB,UAAkB,OAAsB;AACjE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,QAAQ,CAAC;AAChC,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,UAAU,KAAK,CAAC;AAAA,EAC5D;AAAA,EASA,QAAQ,IAAmB,UAA2B;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,QAAQ,CAAC;AAAA,EACrD;AAAA,EASA,OAAO,IAAmB,UAAkB,OAAqB;AAC/D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,QAAQ,CAAC;AAChC,WAAO,aAAa,mBAAK,MAAK,OAAO,IAAI,UAAU,KAAK,CAAC;AAAA,EAC3D;AAAA,EASA,OAAO,IAAmB,UAA0B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,OAAO,IAAI,QAAQ,CAAC;AAAA,EACpD;AAAA,EASA,SAAS,IAAmB,UAAkB,OAAqB;AACjE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,SAAS,IAAI,UAAU,KAAK,CAAC;AAAA,EAC7D;AAAA,EASA,SAAS,IAAmB,UAA0B;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,SAAS,IAAI,QAAQ,CAAC;AAAA,EACtD;AAAA,EASA,UAAU,IAAmB,UAAkB,OAAqB;AAClE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,UAAU,IAAI,UAAU,KAAK,CAAC;AAAA,EAC9D;AAAA,EASA,UAAU,IAAmB,UAA0B;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,UAAU,IAAI,QAAQ,CAAC;AAAA,EACvD;AAAA,EASA,UAAU,IAAmB,UAAkB,OAAqB;AAClE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,UAAU,IAAI,UAAU,KAAK,CAAC;AAAA,EAC9D;AAAA,EASA,UAAU,IAAmB,UAA0B;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,UAAU,IAAI,QAAQ,CAAC;AAAA,EACvD;AAAA,EASA,SAAS,IAAmB,UAAkB,OAAoB;AAChE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO;AAAA,MACL,mBAAK,MAAK,SAAS,IAAI,UAAU,cAAc,UAAU,KAAK,CAAC;AAAA,IACjE;AAAA,EACF;AAAA,EASA,SAAS,IAAmB,UAAyB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,cAAc;AAAA,MACnB,aAAa,mBAAK,MAAK,SAAS,IAAI,QAAQ,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA,EAaA,aACE,IACA,UACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,UAAU,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EACtE;AAAA,EAUA,aAAa,IAAmB,UAAwB;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,QAAQ,CAAC;AAAA,EAC1D;AAAA,EAWA,aACE,IACA,UACA,MACA,OAAe,GACT;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,UAAU,MAAM,IAAI,CAAC;AAAA,EACtE;AAAA,EAUA,iBAAiB,IAAmB,UAA0B;AAC5D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,QAAQ,CAAC;AAAA,EAC9D;AAAA,EAUA,iBAAiB,IAAmB,UAA0B;AAC5D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,QAAQ,CAAC;AAAA,EAC9D;AAAA,EAQA,sBACE,IACA,UACA,QACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,UAAM,eAAe,OAAO,IAAI,CAAC,cAAc;AAC7C,aAAO;AAAA,QACL,OAAO,cAAc,UAAU,UAAU,KAAK;AAAA,QAC9C,MAAM,UAAU;AAAA,MAClB;AAAA,IACF,CAAC;AACD,WAAO;AAAA,MACL,mBAAK,MAAK,sBAAsB,IAAI,UAAU,YAAY;AAAA,IAC5D;AAAA,EACF;AAAA,EASA,sBACE,IACA,UACqB;AACrB,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,UAAM,SAAS,mBAAK,MAAK,sBAAsB,IAAI,QAAQ;AAC3D,UAAM,SAAS,aAAa,MAAM;AAClC,WAAO,yBAAiB,MAAM,EAAE,IAAI,CAAC,cAAc;AACjD,aAAO;AAAA,QACL,OAAO,cAAc,QAAQ,UAAU,KAAK;AAAA,QAC5C,MAAM,UAAU;AAAA,MAClB;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EASA,aAAa,IAAmB,UAA4B;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,yBAAiB,aAAa,mBAAK,MAAK,aAAa,IAAI,QAAQ,CAAC,CAAC;AAAA,EAC5E;AAAA,EASA,aAAa,IAAmB,UAAkB,WAA2B;AAC3E,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,QACE,OAAO;AAAA,UACL,KAAK,OAAO;AAAA,UACZ,OAAO,OAAO;AAAA,UACd,QAAQ,OAAO;AAAA,QACjB,CAAC;AAAA,MACH;AAAA,IACF;AACA,iBAAa,mBAAK,MAAK,aAAa,IAAI,UAAU,SAAS,CAAC;AAAA,EAC9D;AAAA,EAUA,2BACE,IACA,UACA,KACe;AACf,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO;AAAA,MAAY,CAAC,OAClB,mBAAK,MAAK,2BAA2B,IAAI,UAAU,KAAK,EAAE;AAAA,IAC5D;AAAA,EACF;AAAA,EAUA,2BACE,IACA,UACA,KACe;AACf,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO;AAAA,MAAY,CAAC,OAClB,mBAAK,MAAK,2BAA2B,IAAI,UAAU,KAAK,EAAE;AAAA,IAC5D;AAAA,EACF;AAAA,EASA,QACE,IACA,UACA,OACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,UAAU,KAAK,CAAC;AAAA,EAC5D;AAAA,EASA,QAAmC,IAAmB,UAAqB;AACzE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,QAAQ,CAAC;AAAA,EACrD;AAAA,EASA,QAAQ,IAA4B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EASA,cAAc,IAAmB,QAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EASA,cAAc,IAAmB,QAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EASA,gBAAgB,IAAmB,UAAwB;AACzD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,gBAAgB,IAAI,QAAQ,CAAC;AAAA,EAC7D;AAAA,EAWA,kBAAkB,IAAmB,YAA0B;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,cAAc,YAAY,OAAO,CAAC;AACzC,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,UAAU,CAAC;AAAA,EACjE;AAAA,EASA,oBAAoB,IAAmB,cAA4B;AACjE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,gBAAgB,cAAc,OAAO,CAAC;AAC7C,WAAO,aAAa,mBAAK,MAAK,oBAAoB,IAAI,YAAY,CAAC;AAAA,EACrE;AAAA,EASA,oBAAoB,IAAmB,cAA4B;AACjE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,gBAAgB,cAAc,OAAO,CAAC;AAC7C,WAAO,aAAa,mBAAK,MAAK,oBAAoB,IAAI,YAAY,CAAC;AAAA,EACrE;AAAA,EASA,UAAU,IAAyB;AACjC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,gBAAgB,IAA2B;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAQA,kBAAkB,IAA2B;AAC3C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAQA,oBAAoB,IAA2B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,oBAAoB,EAAE,CAAC;AAAA,EACvD;AAAA,EAQA,oBAAoB,IAA2B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,oBAAoB,EAAE,CAAC;AAAA,EACvD;AAAA,EAQA,sBAAsB,IAAmB,eAA+B;AACtE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,iBAAiB,eAAe,OAAO,CAAC;AAC/C,WAAO,aAAa,mBAAK,MAAK,sBAAsB,IAAI,aAAa,CAAC;AAAA,EACxE;AAAA,EAOA,mBAAmB,IAAyB;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAOA,iBAAiB,IAAyB;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EASA,WAAW,IAA4B;AACrC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EAQA,gBAAgB,IAA4B;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EASA,WAAW,IAAmB,SAAuB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,WAAO,aAAa,mBAAK,MAAK,WAAW,IAAI,OAAO,CAAC;AAAA,EACvD;AAAA,EAQA,WAAW,IAA2B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EASA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,kBAAkB,IAA4B;AAC5C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAUA,aAAa,IAAmB,WAA4B;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,aAAa,WAAW,OAAO,CAAC;AACvC,WAAO,aAAa,mBAAK,MAAK,aAAa,IAAI,SAAS,CAAC;AAAA,EAC3D;AAAA,EAQA,aAAa,IAA8B;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EASA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,oBAAoB,IAAmB,SAAwB;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,oBAAoB,IAAI,OAAO,CAAC;AAAA,EAChE;AAAA,EAaA,iBACE,IACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAChE;AAAA,EASA,iBAAiB,IAAyB;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EASA,oBAAoB,IAAmB,SAAwB;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,oBAAoB,IAAI,OAAO,CAAC;AAAA,EAChE;AAAA,EASA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,aAAaE,OAAiC;AAC5C,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,aAAaA,KAAI,CAAC;AAAA,EAClD;AAAA,EASA,WAAW,IAA4B;AACrC,IAAAF,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,WAAW,EAAE,CAAC;AAAA,EAC9C;AAAA,EAQA,gBAAgB,IAA4B;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAQA,WAAW,IAAoC;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,SAAS,mBAAK,MAAK,WAAW,EAAE;AACtC,UAAM,SAAS,aAAa,MAAM;AAClC,WAAO,yBAAiB,MAAM;AAAA,EAChC;AAAA,EAWA,aACE,IACA,UACA,OACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,IAAAA,QAAO,SAAS,OAAO,IAAI,QAAQ,GAAG,CAAC,CAAC;AACxC,iBAAa,mBAAK,MAAK,aAAa,IAAI,UAAU,KAAK,CAAC;AAAA,EAC1D;AAAA,EAUA,aAAa,IAAmB,UAA+B;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,iBAAa,mBAAK,MAAK,aAAa,IAAI,QAAQ,CAAC;AAAA,EACnD;AAAA,EASA,aAAa,IAAmB,OAAqB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,IAAI,QAAQ,GAAG,CAAC,CAAC;AACxC,iBAAa,mBAAK,MAAK,aAAa,IAAI,KAAK,CAAC;AAAA,EAChD;AAAA,EASA,iBAAiB,UAAkC;AACjD,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,WAAO,aAAa,mBAAK,MAAK,iBAAiB,QAAQ,CAAC;AAAA,EAC1D;AAAA,EAQA,iBAAiB,UAAyB,SAAwB;AAChE,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,iBAAa,mBAAK,MAAK,iBAAiB,UAAU,OAAO,CAAC;AAAA,EAC5D;AAAA,EAQA,gBAAgB,UAAkC;AAChD,IAAAA,QAAO,YAAY,UAAU,QAAQ,CAAC;AACtC,WAAO,aAAa,mBAAK,MAAK,gBAAgB,QAAQ,CAAC;AAAA,EACzD;AAAA,EAUA,WAAWE,OAA+B;AACxC,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,WAAWA,KAAI,CAAC;AAAA,EAChD;AAAA,EASA,QAAQ,IAA4B;AAClC,IAAAF,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EASA,QAAQ,IAAmB,QAA6B;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,QAAQ,CAAC;AAClC,iBAAa,mBAAK,MAAK,QAAQ,IAAI,MAAM,CAAC;AAAA,EAC5C;AAAA,EAQA,QAAQ,IAAkC;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,eAAe,IAAmB,SAAwB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,iBAAa,mBAAK,MAAK,eAAe,IAAI,OAAO,CAAC;AAAA,EACpD;AAAA,EAQA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,wBAAwB,IAA4B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,wBAAwB,EAAE,CAAC;AAAA,EAC3D;AAAA,EAcA,uBACE,IACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,WAAO,aAAa,mBAAK,MAAK,uBAAuB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EACtE;AAAA,EASA,uBAAuB,IAAyB;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,uBAAuB,EAAE,CAAC;AAAA,EAC1D;AAAA,EASA,0BAA0B,IAAmB,SAAwB;AACnE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,0BAA0B,IAAI,OAAO,CAAC;AAAA,EACtE;AAAA,EAQA,yBAAyB,IAA4B;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,yBAAyB,EAAE,CAAC;AAAA,EAC5D;AAAA,EASA,UAAU,IAA4B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,eAAe,IAA4B;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC;AAAA,EAClD;AAAA,EASA,iBAAiB,IAAmB,SAAwB;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,OAAO,CAAC;AAAA,EAC7D;AAAA,EAQA,gBAAgB,IAA4B;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAaA,mBACE,IACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,WAAO,aAAa,mBAAK,MAAK,mBAAmB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAClE;AAAA,EASA,eAAe,IAAmB,OAAoB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,mBAAK,MAAK,eAAe,IAAI,cAAc,UAAU,KAAK,CAAC;AAAA,IAC7D;AAAA,EACF;AAAA,EASA,mBAAmB,IAAyB;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,eAAe,IAA0B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,cAAc,QAAQ,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC,CAAC;AAAA,EACzE;AAAA,EASA,eAAe,IAAmB,OAAqB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,WAAO,aAAa,mBAAK,MAAK,eAAe,IAAI,KAAK,CAAC;AAAA,EACzD;AAAA,EAQA,eAAe,IAA2B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC;AAAA,EAClD;AAAA,EASA,eAAe,IAAmB,OAA0B;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,IAAI,KAAK,CAAC;AAAA,EACzD;AAAA,EAQA,eAAe,IAAgC;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,QAAQ,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC;AACvD,WAAO;AAAA,EACT;AAAA,EASA,kBAAkB,IAAmB,UAAgC;AACnE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,QAAQ,CAAC;AAAA,EAC/D;AAAA,EAQA,kBAAkB,IAAmC;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,WAAW,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAC7D,WAAO;AAAA,EACT;AAAA,EASA,wBACE,IACA,gBACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,wBAAwB,IAAI,cAAc,CAAC;AAAA,EAC3E;AAAA,EAQA,wBAAwB,IAAyC;AAC/D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,iBAAiB,aAAa,mBAAK,MAAK,wBAAwB,EAAE,CAAC;AACzE,WAAO;AAAA,EACT;AAAA,EASA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EASA,qBAAqB,IAAmB,SAAwB;AAC9D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,qBAAqB,IAAI,OAAO,CAAC;AAAA,EACjE;AAAA,EAQA,oBAAoB,IAA4B;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,oBAAoB,EAAE,CAAC;AAAA,EACvD;AAAA,EAaA,uBACE,IACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,IAAAA,QAAO,KAAK,GAAG,OAAO,CAAC;AACvB,WAAO,aAAa,mBAAK,MAAK,uBAAuB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EACtE;AAAA,EASA,mBAAmB,IAAmB,OAAoB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,mBAAK,MAAK,mBAAmB,IAAI,cAAc,UAAU,KAAK,CAAC;AAAA,IACjE;AAAA,EACF;AAAA,EASA,uBAAuB,IAAyB;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,uBAAuB,EAAE,CAAC;AAAA,EAC1D;AAAA,EAQA,mBAAmB,IAA0B;AAC3C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,cAAc;AAAA,MACnB,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,IAC/C;AAAA,EACF;AAAA,EASA,qBAAqB,IAAmB,SAAuB;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,WAAO,aAAa,mBAAK,MAAK,qBAAqB,IAAI,OAAO,CAAC;AAAA,EACjE;AAAA,EAQA,qBAAqB,IAA2B;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,qBAAqB,EAAE,CAAC;AAAA,EACxD;AAAA,EASA,qBAAqB,IAAmB,SAAuB;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,WAAO,aAAa,mBAAK,MAAK,qBAAqB,IAAI,OAAO,CAAC;AAAA,EACjE;AAAA,EAQA,qBAAqB,IAA2B;AAC9C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,qBAAqB,EAAE,CAAC;AAAA,EACxD;AAAA,EASA,yBAAyB,IAAmB,aAA2B;AACrE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,eAAe,aAAa,OAAO,CAAC;AAC3C,WAAO,aAAa,mBAAK,MAAK,yBAAyB,IAAI,WAAW,CAAC;AAAA,EACzE;AAAA,EAQA,yBAAyB,IAA2B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,yBAAyB,EAAE,CAAC;AAAA,EAC5D;AAAA,EASA,yBAAyB,IAAmB,aAA2B;AACrE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,eAAe,aAAa,OAAO,CAAC;AAC3C,WAAO,aAAa,mBAAK,MAAK,yBAAyB,IAAI,WAAW,CAAC;AAAA,EACzE;AAAA,EAQA,yBAAyB,IAA2B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,yBAAyB,EAAE,CAAC;AAAA,EAC5D;AAAA,EAQA,kBAAkB,IAAmB,MAAqB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,IAAI,CAAC;AAAA,EAC3D;AAAA,EAQA,kBAAkB,IAA4B;AAC5C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAkBA,uBACE,KACA,6BAAqC,GACrC,4BAAoC,GACpC,8BAAuC,MACxB;AACf,IAAAA,QAAO,OAAO,KAAK,MAAM,QAAQ,CAAC,CAAC;AACnC,IAAAA,QAAO,8BAA8B,4BAA4B,OAAO,CAAC;AACzE,IAAAA,QAAO,wBAAwB,2BAA2B,OAAO,CAAC;AAClE,IAAAA;AAAA,MACE;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,IACV;AACA,WAAO;AAAA,MACL,mBAAK,MAAK;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAQA,qBAAqB,MAA6B;AAChD,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,qBAAqB,IAAI,CAAC;AAAA,EAC1D;AAAA,EAWA,0BACE,KACA,IACe;AACf,IAAAA,QAAO,OAAO,KAAK,MAAM,QAAQ,CAAC,CAAC;AACnC,IAAAA,QAAO,MAAM,IAAI,qBAAqB,CAAC;AACvC,WAAO,aAAa,mBAAK,MAAK,0BAA0B,KAAK,EAAE,CAAC;AAAA,EAClE;AAAA,EAcA,YACE,IACA,MACA,OAAe,IACf,KAAa,IACb;AACA,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,YAAY,IAAI,MAAM,MAAM,EAAE,CAAC;AAAA,EACxD;AAAA,EAYA,WAAW,IAAmB,OAAe,IAAI,KAAa,IAAI;AAChE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,WAAW,IAAI,MAAM,EAAE,CAAC;AAAA,EACjD;AAAA,EAeA,aACE,IACA,OACA,OAAe,IACf,KAAa,IACb;AACA,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B;AAAA,MACE,mBAAK,MAAK,aAAa,IAAI,cAAc,UAAU,KAAK,GAAG,MAAM,EAAE;AAAA,IACrE;AAAA,EACF;AAAA,EAaA,cACE,IACA,OAAe,IACf,KAAa,IACC;AACd,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,UAAM,SAAS,mBAAK,MAAK,cAAc,IAAI,MAAM,EAAE;AACnD,UAAM,iBAAiB,yBAAiB,aAAa,MAAM,CAAC;AAC5D,WAAO,eAAe,IAAI,CAAC,kBAAkB;AAC3C,aAAO,cAAc,QAAQ,aAAa;AAAA,IAC5C,CAAC;AAAA,EACH;AAAA,EAeA,kBACE,IACA,YACA,OAAe,IACf,KAAa,IACb;AACA,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,kBAAkB,IAAI,YAAY,MAAM,EAAE,CAAC;AAAA,EACpE;AAAA,EAaA,mBACE,IACA,OAAe,IACf,KAAa,IACC;AACd,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,aAAa,mBAAK,MAAK,mBAAmB,IAAI,MAAM,EAAE,CAAC;AAAA,IACzD;AAAA,EACF;AAAA,EAeA,gBACE,IACA,UACA,OAAe,IACf,KAAa,IACb;AACA,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,gBAAgB,IAAI,UAAU,MAAM,EAAE,CAAC;AAAA,EAChE;AAAA,EAaA,iBACE,IACA,OAAe,IACf,KAAa,IACH;AACV,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,aAAa,mBAAK,MAAK,iBAAiB,IAAI,MAAM,EAAE,CAAC;AAAA,IACvD;AAAA,EACF;AAAA,EAeA,iBACE,IACA,WACA,OAAe,IACf,KAAa,IACb;AACA,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,iBAAiB,IAAI,WAAW,MAAM,EAAE,CAAC;AAAA,EAClE;AAAA,EAaA,kBACE,IACA,OAAe,IACf,KAAa,IACA;AACb,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,aAAa,mBAAK,MAAK,kBAAkB,IAAI,MAAM,EAAE,CAAC;AAAA,IACxD;AAAA,EACF;AAAA,EAaA,aACE,IACA,OAAe,IACf,KAAa,IACD;AACZ,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO;AAAA,MACL,aAAa,mBAAK,MAAK,aAAa,IAAI,MAAM,EAAE,CAAC;AAAA,IACnD;AAAA,EACF;AAAA,EAeA,YACE,IACA,UACA,OAAe,IACf,KAAa,IACP;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,YAAY,IAAI,UAAU,MAAM,EAAE,CAAC;AAAA,EAC5D;AAAA,EAeA,kBACE,IACA,OAAe,IACf,KAAa,IACJ;AACT,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,IAAI,MAAM,EAAE,CAAC;AAAA,EAC/D;AAAA,EAeA,oBACE,IACA,OAAe,IACf,KAAa,IACJ;AACT,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,oBAAoB,IAAI,MAAM,EAAE,CAAC;AAAA,EACjE;AAAA,EAeA,eAAe,IAAmB,OAAe,IAAI,KAAa,IAAU;AAC1E,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,eAAe,IAAI,MAAM,EAAE,CAAC;AAAA,EACrD;AAAA,EAeA,iBACE,IACA,OAAe,IACf,KAAa,IACP;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,iBAAiB,IAAI,MAAM,EAAE,CAAC;AAAA,EACvD;AAAA,EAWA,QAAQ,IAAmB,aAAqB,UAA0B;AACxE,IAAAA,QAAO,SAAS,IAAI,QAAQ,CAAC;AAC7B,IAAAA,QAAO,eAAe,aAAa,OAAO,CAAC;AAC3C,iBAAa,mBAAK,MAAK,QAAQ,IAAI,aAAa,QAAQ,CAAC;AAAA,EAC3D;AAAA,EAYA,YACE,IACA,qBACA,UACM;AACN,IAAAA,QAAO,SAAS,IAAI,QAAQ,CAAC;AAC7B,IAAAA,QAAO,eAAe,qBAAqB,OAAO,CAAC;AACnD,iBAAa,mBAAK,MAAK,YAAY,IAAI,qBAAqB,QAAQ,CAAC;AAAA,EACvE;AAAA,EASA,YAAY,IAA6B;AACvC,IAAAA,QAAO,SAAS,IAAI,QAAQ,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,YAAY,EAAE,CAAC;AAAA,EAC/C;AAAA,EAQA,qBAA4B;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,CAAC;AAAA,EACpD;AAAA,EASA,QAAQ,IAA4B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAQA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAUA,eAAe,IAAmB,SAAwB;AACxD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,IAAI,OAAO,CAAC;AAAA,EAC3D;AAAA,EAQA,QAAQ,IAAkC;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAUA,QAAQ,IAAmB,MAA2B;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,WAAO,aAAa,mBAAK,MAAK,QAAQ,IAAI,IAAI,CAAC;AAAA,EACjD;AAAA,EAaA,kBACE,IACA,GACA,GACA,GACA,IAAY,GACN;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,kBAAkB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AAAA,EAC1D;AAAA,EAQA,kBAAkB,IAAyB;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAQA,sBAAsB,IAAmB,SAAwB;AAC/D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,iBAAa,mBAAK,MAAK,sBAAsB,IAAI,OAAO,CAAC;AAAA,EAC3D;AAAA,EAQA,qBAAqB,IAA4B;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,qBAAqB,EAAE,CAAC;AAAA,EACxD;AAAA,EASA,uBAAuB,IAA4B;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,uBAAuB,EAAE,CAAC;AAAA,EAC1D;AAAA,EAQA,4BAA4B,IAA4B;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,4BAA4B,EAAE,CAAC;AAAA,EAC/D;AAAA,EAQA,8BAA8B,IAAmB,SAAwB;AACvE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,8BAA8B,IAAI,OAAO,CAAC;AAAA,EACnE;AAAA,EAQA,6BAA6B,IAA4B;AACvD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,6BAA6B,EAAE,CAAC;AAAA,EAChE;AAAA,EASA,uBAAuB,IAA4B;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,uBAAuB,EAAE,CAAC;AAAA,EAC1D;AAAA,EAQA,4BAA4B,IAA4B;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,4BAA4B,EAAE,CAAC;AAAA,EAC/D;AAAA,EASA,qCACE,IACA,SACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO;AAAA,MACL,mBAAK,MAAK,qCAAqC,IAAI,OAAO;AAAA,IAC5D;AAAA,EACF;AAAA,EAQA,oCAAoC,IAA4B;AAC9D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,oCAAoC,EAAE,CAAC;AAAA,EACvE;AAAA,EAQA,oCACE,IACA,SACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO;AAAA,MACL,mBAAK,MAAK,oCAAoC,IAAI,OAAO;AAAA,IAC3D;AAAA,EACF;AAAA,EAOA,mCAAmC,IAA4B;AAC7D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mCAAmC,EAAE,CAAC;AAAA,EACtE;AAAA,EAUA,YAAY,IAAmB,KAAa,OAAqB;AAC/D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,IAAAA,QAAO,SAAS,OAAO,OAAO,CAAC;AAC/B,iBAAa,mBAAK,MAAK,YAAY,IAAI,KAAK,KAAK,CAAC;AAAA,EACpD;AAAA,EAUA,YAAY,IAAmB,KAAqB;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO,aAAa,mBAAK,MAAK,YAAY,IAAI,GAAG,CAAC;AAAA,EACpD;AAAA,EASA,YAAY,IAAmB,KAAsB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO,aAAa,mBAAK,MAAK,YAAY,IAAI,GAAG,CAAC;AAAA,EACpD;AAAA,EASA,gBAAgB,IAA6B;AAC3C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,yBAAiB,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC,CAAC;AAAA,EACrE;AAAA,EASA,eAAe,IAAmB,KAAmB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,iBAAa,mBAAK,MAAK,eAAe,IAAI,GAAG,CAAC;AAAA,EAChD;AAAA,EASA,gBAAgB,IAAmB,KAAY,SAAwB;AACrE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,iBAAa,mBAAK,MAAK,gBAAgB,IAAI,KAAK,OAAO,CAAC;AAAA,EAC1D;AAAA,EASA,eAAe,IAAmB,KAAqB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO,aAAa,mBAAK,MAAK,eAAe,IAAI,GAAG,CAAC;AAAA,EACvD;AAAA,EASA,iBAAiB,IAAmB,KAAqB;AACvD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,OAAO,KAAK,OAAO,CAAC;AAC3B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,IAAI,GAAG,CAAC;AAAA,EACzD;AAAA,EAWA,YAAY,IAA4B;AACtC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,YAAY,EAAE,CAAC;AAAA,EAC/C;AAAA,EAQA,iBAAiB,IAA4B;AAC3C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EAUA,YAAY,IAAmB,UAAwB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,YAAY,UAAU,OAAO,CAAC;AACrC,WAAO,aAAa,mBAAK,MAAK,YAAY,IAAI,QAAQ,CAAC;AAAA,EACzD;AAAA,EAQA,YAAY,IAA2B;AACrC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,YAAY,EAAE,CAAC;AAAA,EAC/C;AAAA,EASA,cAAc,IAA4B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAUA,cAAc,IAAmB,QAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EAQA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EASA,QAAQ,IAA4B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,aAAa,IAA4B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,aAAa,EAAE,CAAC;AAAA,EAChD;AAAA,EAUA,cAAc,IAAmB,QAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EASA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAWA,cAAc,IAAmB,QAAsB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,WAAO,aAAa,mBAAK,MAAK,cAAc,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EAQA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAUA,sBAAsB,OAA8B;AAClD,IAAAA,QAAO,SAAS,OAAO,QAAQ,CAAC;AAChC,WAAO,aAAa,mBAAK,MAAK,sBAAsB,KAAK,CAAC;AAAA,EAC5D;AAAA,EAQA,WAAW,IAAmB,SAAwB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,WAAW,IAAI,OAAO,CAAC;AAAA,EACvD;AAAA,EAQA,UAAU,IAA4B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EASA,gBAAgB,IAA4B;AAC1C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAQA,qBAAqB,IAA4B;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,qBAAqB,EAAE,CAAC;AAAA,EACxD;AAAA,EAQA,gBAAgB,IAAmB,MAAoB;AACrD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,QAAQ,MAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,IAAI,IAAI,CAAC;AAAA,EACzD;AAAA,EAQA,gBAAgB,IAA2B;AACzC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAQA,+BAA+B,IAA4B;AACzD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,+BAA+B,EAAE,CAAC;AAAA,EAClE;AAAA,EAWA,uBAAuB,IAAmB,SAAwB;AAChE,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,WAAO,aAAa,mBAAK,MAAK,uBAAuB,IAAI,OAAO,CAAC;AAAA,EACnE;AAAA,EASA,sBAAsB,IAA4B;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,sBAAsB,EAAE,CAAC;AAAA,EACzD;AAAA,EASA,mBAAmB,IAA4B;AAC7C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,mBAAmB,EAAE,CAAC;AAAA,EACtD;AAAA,EAQA,wBAAwB,IAA4B;AAClD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,wBAAwB,EAAE,CAAC;AAAA,EAC3D;AAAA,EAQA,WAAW,IAAmB,SAAwB;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,WAAW,SAAS,QAAQ,CAAC;AACpC,iBAAa,mBAAK,MAAK,WAAW,IAAI,OAAO,CAAC;AAAA,EAChD;AAAA,EAQA,UAAU,IAA4B;AACpC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,SAAS,IAAmB,OAAsB;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,SAAS,OAAO,QAAQ,CAAC;AAChC,iBAAa,mBAAK,MAAK,SAAS,IAAI,KAAK,CAAC;AAAA,EAC5C;AAAA,EAQA,QAAQ,IAA4B;AAClC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,QAAQ,EAAE,CAAC;AAAA,EAC3C;AAAA,EAQA,UAAU,IAAmB,QAAsB;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,UAAU,QAAQ,OAAO,CAAC;AACjC,iBAAa,mBAAK,MAAK,UAAU,IAAI,MAAM,CAAC;AAAA,EAC9C;AAAA,EAQA,UAAU,IAA2B;AACnC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,UAAU,EAAE,CAAC;AAAA,EAC7C;AAAA,EAQA,MAAM,oBAAoB,IAAkC;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,YAAY,CAAC,OAAO,mBAAK,MAAK,oBAAoB,IAAI,EAAE,CAAC;AAAA,EAClE;AAAA,EAQA,4BAA4B,IAA4B;AACtD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,4BAA4B,EAAE,CAAC;AAAA,EAC/D;AAAA,EAQA,2BAA2B,IAA2B;AACpD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,2BAA2B,EAAE,CAAC;AAAA,EAC9D;AAAA,EAQA,cAAc,IAA2B;AACvC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,cAAc,EAAE,CAAC;AAAA,EACjD;AAAA,EAQA,eAAe,IAA2B;AACxC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,+BACE,IACA,iBACA,WACA,SACA,gBACA,SACY;AACZ,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,IAAAA,QAAO,aAAa,WAAW,OAAO,CAAC;AACvC,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,IAAAA,QAAO,kBAAkB,gBAAgB,QAAQ,CAAC;AAClD,UAAM,SAAS,mBAAK,MAAK;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,WAAW;AACV,YAAI,WAAW,QAAQ;AACrB,kBAAQ,GAAG,IAAI,MAAM,OAAO,KAAK,CAAC;AAAA,QACpC,OAAO;AACL;AAAA,YACE,OAAO;AAAA,YACP,IAAI;AAAA,cACF,IAAI,kBAAkB,OAAO,SAAS;AAAA,cACtC,OAAO;AAAA,cACP,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AACA,WAAO,MAAM;AACX,yBAAK,MAAK,uCAAuC,MAAM;AAAA,IACzD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,+BACE,IACA,iBACA,WACA,SACA,iBACA,kBACA,SACY;AACZ,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,IAAAA,QAAO,aAAa,WAAW,OAAO,CAAC;AACvC,IAAAA,QAAO,WAAW,SAAS,OAAO,CAAC;AACnC,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,IAAAA,QAAO,oBAAoB,kBAAkB,QAAQ,CAAC;AACtD,UAAM,SAAS,mBAAK,MAAK;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,CAAC,WAAW;AACV,YAAI,WAAW,QAAQ;AACrB,kBAAQ,GAAG,IAAI,MAAM,OAAO,KAAK,CAAC;AAAA,QACpC,OAAO;AACL,kBAAQ,OAAO,YAAY,OAAO,UAAU;AAAA,QAC9C;AAAA,MACF;AAAA,IACF;AACA,WAAO,MAAM;AACX,yBAAK,MAAK,uCAAuC,MAAM;AAAA,IACzD;AAAA,EACF;AAAA,EAUA,MAAM,sBACJ,IACA,iBACe;AACf,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK,sBAAsB,IAAI,iBAAiB,CAAC,WAAW;AAC/D,YAAI,WAAW,QAAQ;AACrB,iBAAO,OAAO,KAAK;AAAA,QACrB,OAAO;AACL,kBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAM,aAAa,CAAC,CAAC;AAAA,QACpD;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EAYA,MAAM,2BACJ,IACA,iBACA,cACA,iBACe;AACf,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,IAAAA,QAAO,gBAAgB,cAAc,QAAQ,CAAC;AAC9C,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,CAAC,WAAW;AACV,cAAI,WAAW,QAAQ;AACrB,mBAAO,OAAO,KAAK;AAAA,UACrB,OAAO;AACL,oBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAM,aAAa,CAAC,CAAC;AAAA,UACpD;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAYA,MAAM,sBACJ,IACA,iBACA,cACA,iBACe;AACf,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,mBAAmB,iBAAiB,QAAQ,CAAC;AACpD,IAAAA,QAAO,gBAAgB,cAAc,QAAQ,CAAC;AAC9C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,yBAAK,MAAK;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,CAAC,WAAW;AACV,cAAI,WAAW,QAAQ;AACrB,mBAAO,OAAO,KAAK;AAAA,UACrB,OAAO;AACL,oBAAQ,IAAI,aAAK,CAAC,MAAM,GAAG,EAAE,MAAM,aAAa,CAAC,CAAC;AAAA,UACpD;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAQA,gBAAgBE,OAAoC;AAClD,IAAAF,QAAO,QAAQE,OAAM,OAAO,CAAC;AAC7B,WAAO,aAAa,mBAAK,MAAK,gBAAgBA,KAAI,CAAC;AAAA,EACrD;AAAA,EAQA,kBAAkB,IAA4B;AAC5C,IAAAF,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,kBAAkB,EAAE,CAAC;AAAA,EACrD;AAAA,EAQA,eAAe,IAAmB,WAA0B;AAC1D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,aAAa,WAAW,QAAQ,CAAC;AACxC,iBAAa,mBAAK,MAAK,eAAe,IAAI,SAAS,CAAC;AAAA,EACtD;AAAA,EAQA,iBAAiB,IAAmB,WAA0B;AAC5D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,aAAa,WAAW,QAAQ,CAAC;AACxC,iBAAa,mBAAK,MAAK,iBAAiB,IAAI,SAAS,CAAC;AAAA,EACxD;AAAA,EAQA,gBAAgB,IAAmB,WAA0B;AAC3D,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,IAAAA,QAAO,aAAa,WAAW,QAAQ,CAAC;AACxC,iBAAa,mBAAK,MAAK,gBAAgB,IAAI,SAAS,CAAC;AAAA,EACvD;AAAA,EAQA,eAAe,IAAkC;AAC/C,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,eAAe,EAAE,CAAC;AAAA,EAClD;AAAA,EAQA,iBAAiB,IAAkC;AACjD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,iBAAiB,EAAE,CAAC;AAAA,EACpD;AAAA,EAQA,gBAAgB,IAAkC;AAChD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,gBAAgB,EAAE,CAAC;AAAA,EACnD;AAAA,EAQA,qBACE,IACA,QACM;AACN,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,QAAI,kBAAkB,kBAAkB;AACtC,aAAO,QAAQ,OAAO;AACtB,aAAO,SAAS,OAAO;AAAA,IACzB;AACA,iBAAa,mBAAK,MAAK,qBAAqB,IAAI,MAAM,CAAC;AAAA,EACzD;AAAA,EAaA,SAAS,IAA+B;AACtC,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,WAAO,aAAa,mBAAK,MAAK,SAAS,EAAE,CAAC;AAAA,EAC5C;AAAA,EAQA,SAAS,IAAmB,OAAyB;AACnD,IAAAA,QAAO,MAAM,IAAI,QAAQ,CAAC;AAC1B,iBAAa,mBAAK,MAAK,SAAS,IAAI,KAAK,CAAC;AAAA,EAC5C;AAAA,EAqCA,MAAM,mBAAmB,KAAqC;AAC5D,IAAAA,QAAO,OAAO,KAAK,MAAM,QAAQ,CAAC,CAAC;AACnC,WAAO,YAAY,CAAC,OAAO,mBAAK,MAAK,mBAAmB,KAAK,EAAE,CAAC;AAAA,EAClE;AACF;AAtrJA;AAEE;AA2PA,4BAAM,kBADN,qBA5PmB;AA4QnB,kDADA,yBA3QmB;AA8TnB,sCADA,aA7TmB;AAyUnB,0CADA,iBAxUmB;AAoVnB,uCADA,cAnVmB;AA+VnB,uCADA,cA9VmB;AA2WnB,uCADA,cA1WmB;AAqXnB,sCADA,aApXmB;AAkYnB,2CADA,kBAjYmB;AA8YnB,0CADA,iBA7YmB;AAwZnB,+CADA,sBAvZmB;AA4bnB,2CADA,kBA3bmB;AAucnB,qCADA,YAtcmB;AAidnB,uCADA,cAhdmB;AA6dnB,0CADA,iBA5dmB;AAyenB,yCADA,gBAxemB;AAsfnB,4CADA,mBArfmB;AAugBnB,uCADA,cAtgBmB;AAmhBnB,uCADA,cAlhBmB;AA8hBnB,uCADA,cA7hBmB;AAwiBnB,uCADA,cAviBmB;AAmjBnB,0CADA,iBAljBmB;AA+jBnB,0CADA,iBA9jBmB;AA4kBnB,0CADA,iBA3kBmB;AAwlBnB,uCADA,cAvlBmB;AAkmBnB,mDADA,0BAjmBmB;AA8mBnB,2CADA,kBA7mBmB;AA0nBnB,wCADA,eAznBmB;AAqoBnB,6CADA,oBApoBmB;AAgpBnB,wCADA,eA/oBmB;AA8pBnB,wCADA,eA7pBmB;AA0qBnB,yCADA,gBAzqBmB;AAsrBnB,0CADA,iBArrBmB;AAmsBnB,yCADA,gBAlsBmB;AA+sBnB,0CADA,iBA9sBmB;AA2tBnB,iDADA,wBA1tBmB;AAsuBnB,kDADA,yBAruBmB;AAkvBnB,4CADA,mBAjvBmB;AA6vBnB,gDADA,uBA5vBmB;AAwwBnB,4CADA,mBAvwBmB;AAmxBnB,gDADA,uBAlxBmB;AAgyBnB,4CADA,mBA/xBmB;AA6yBnB,gDADA,uBA5yBmB;AA0zBnB,4CADA,mBAzzBmB;AAu0BnB,gDADA,uBAt0BmB;AAq1BnB,8CADA,qBAp1BmB;AAo2BnB,iDADA,wBAn2BmB;AAi3BnB,6CADA,oBAh3BmB;AA63BnB,gDADA,uBA53BmB;AAw4BnB,4CADA,mBAv4BmB;AAm5BnB,0CADA,iBAl5BmB;AA85BnB,4CADA,mBA75BmB;AAy6BnB,4CADA,mBAx6BmB;AAo7BnB,2CADA,kBAn7BmB;AAg8BnB,2CADA,kBA/7BmB;AA48BnB,iDADA,wBA38BmB;AA09BnB,+CADA,sBAz9BmB;AAy+BnB,iDADA,wBAx+BmB;AAs/BnB,+CADA,sBAr/BmB;AAmgCnB,kDADA,yBAlgCmB;AA8gCnB,uDADA,8BA7gCmB;AAyhCnB,wCADA,eAxhCmB;AAoiCnB,4CADA,mBAniCmB;AA+iCnB,yCADA,gBA9iCmB;AA0jCnB,6CADA,oBAzjCmB;AAskCnB,wCADA,eArkCmB;AAmlCnB,4CADA,mBAllCmB;AA+lCnB,yCADA,gBA9lCmB;AA4mCnB,6CADA,oBA3mCmB;AAwnCnB,yCADA,gBAvnCmB;AAooCnB,yCADA,gBAnoCmB;AAgpCnB,6CADA,oBA/oCmB;AA4pCnB,8CADA,qBA3pCmB;AAwqCnB,kDADA,yBAvqCmB;AAmrCnB,kDADA,yBAlrCmB;AA+rCnB,yCADA,gBA9rCmB;AA0sCnB,uCADA,cAzsCmB;AAqtCnB,uCADA,cAptCmB;AAguCnB,yCADA,gBA/tCmB;AA8uCnB,2CADA,kBA7uCmB;AA4vCnB,2CADA,kBA3vCmB;AA8wCnB,2CADA,kBA7wCmB;AA0xCnB,sDADA,6BAzxCmB;AAsyCnB,qDADA,4BAryCmB;AAkzCnB,qDADA,4BAjzCmB;AA8zCnB,yDADA,gCA7zCmB;AA00CnB,0DADA,iCAz0CmB;AAq1CnB,6DADA,oCAp1CmB;AAi2CnB,iDADA,wBAh2CmB;AAk3CnB,+CADA,sBAj3CmB;AAg4CnB,2CADA,kBA/3CmB;AA24CnB,sDADA,6BA14CmB;AAs5CnB,oDADA,2BAr5CmB;AAi6CnB,+CADA,sBAh6CmB;AA66CnB,0CADA,iBA56CmB;AA27CnB,kDADA,yBA17CmB;AAs9CnB,qCADA,YAr9CmB;AAs+CnB,iDADA,wBAr+CmB;AAi/CnB,kDADA,yBAh/CmB;AA4/CnB,kDADA,yBA3/CmB;AAugDnB,+CADA,sBAtgDmB;AAmhDnB,6CADA,oBAlhDmB;AAiiDnB,uCADA,cAhiDmB;AA+iDnB,uCADA,cA9iDmB;AA4jDnB,sCADA,aA3jDmB;AA0kDnB,sCADA,aAzkDmB;AAulDnB,wCADA,eAtlDmB;AAqmDnB,wCADA,eApmDmB;AAknDnB,yCADA,gBAjnDmB;AAgoDnB,yCADA,gBA/nDmB;AA6oDnB,yCADA,gBA5oDmB;AA2pDnB,yCADA,gBA1pDmB;AAwqDnB,wCADA,eAvqDmB;AAurDnB,wCADA,eAtrDmB;AA0sDnB,4CADA,mBAzsDmB;AAmuDnB,4CADA,mBAluDmB;AAkvDnB,4CADA,mBAjvDmB;AAuwDnB,gDADA,uBAtwDmB;AAqxDnB,gDADA,uBApxDmB;AAiyDnB,qDADA,4BAhyDmB;AA0zDnB,qDADA,4BAzzDmB;AAi1DnB,4CADA,mBAh1DmB;AA81DnB,4CADA,mBA71DmB;AAu3DnB,0DADA,iCAt3DmB;AA44DnB,0DADA,iCA34DmB;AAg6DnB,uCADA,cA/5DmB;AAk7DnB,uCADA,cAj7DmB;AA+7DnB,uCADA,cA97DmB;AA08DnB,4CADA,mBAz8DmB;AAs9DnB,6CADA,oBAr9DmB;AAm+DnB,6CADA,oBAl+DmB;AAg/DnB,+CADA,sBA/+DmB;AA+/DnB,iDADA,wBA9/DmB;AA4gEnB,mDADA,0BA3gEmB;AAyhEnB,mDADA,0BAxhEmB;AAsiEnB,yCADA,gBAriEmB;AAijEnB,6CADA,oBAhjEmB;AA4jEnB,6CADA,oBA3jEmB;AAukEnB,+CADA,sBAtkEmB;AAklEnB,iDADA,wBAjlEmB;AA6lEnB,mDADA,0BA5lEmB;AAwmEnB,mDADA,0BAvmEmB;AAmnEnB,qDADA,4BAlnEmB;AA8nEnB,kDADA,yBA7nEmB;AAwoEnB,gDADA,uBAvoEmB;AAopEnB,0CADA,iBAnpEmB;AA+pEnB,+CADA,sBA9pEmB;AA2qEnB,0CADA,iBA1qEmB;AAurEnB,0CADA,iBAtrEmB;AAmsEnB,4CADA,mBAlsEmB;AA8sEnB,iDADA,wBA7sEmB;AA2tEnB,4CADA,mBA1tEmB;AAuuEnB,4CADA,mBAtuEmB;AAmvEnB,4CADA,mBAlvEmB;AA8vEnB,kDADA,yBA7vEmB;AAywEnB,mDADA,0BAxwEmB;AA0xEnB,gDADA,uBAzxEmB;AAgzEnB,gDADA,uBA/yEmB;AA4zEnB,mDADA,0BA3zEmB;AAy0EnB,kDADA,yBAx0EmB;AAo1EnB,4CADA,mBAn1EmB;AAg2EnB,0CADA,iBA/1EmB;AA22EnB,+CADA,sBA12EmB;AAs3EnB,0CADA,iBAr3EmB;AAs4EnB,4CADA,mBAr4EmB;AAy5EnB,4CADA,mBAx5EmB;AAs6EnB,4CADA,mBAr6EmB;AAm7EnB,gDADA,uBAl7EmB;AA87EnB,gDADA,uBA77EmB;AA08EnB,+CADA,sBAz8EmB;AAu9EnB,0CADA,iBAt9EmB;AAm+EnB,uCADA,cAl+EmB;AA8+EnB,4CADA,mBA7+EmB;AA0/EnB,uCADA,cAz/EmB;AAsgFnB,uCADA,cArgFmB;AAihFnB,8CADA,qBAhhFmB;AA6hFnB,6CADA,oBA5hFmB;AAyiFnB,kDADA,yBAxiFmB;AAojFnB,uDADA,8BAnjFmB;AAqkFnB,sDADA,6BApkFmB;AA2lFnB,sDADA,6BA1lFmB;AAumFnB,yDADA,gCAtmFmB;AAmnFnB,wDADA,+BAlnFmB;AA+nFnB,yCADA,gBA9nFmB;AA0oFnB,8CADA,qBAzoFmB;AAspFnB,gDADA,uBArpFmB;AAkqFnB,+CADA,sBAjqFmB;AAkrFnB,kDADA,yBAjrFmB;AAwsFnB,8CADA,qBAvsFmB;AAstFnB,kDADA,yBArtFmB;AAiuFnB,8CADA,qBAhuFmB;AA6uFnB,8CADA,qBA5uFmB;AAyvFnB,8CADA,qBAxvFmB;AAqwFnB,8CADA,qBApwFmB;AAgxFnB,8CADA,qBA/wFmB;AA6xFnB,iDADA,wBA5xFmB;AAwyFnB,iDADA,wBAvyFmB;AAqzFnB,uDADA,8BApzFmB;AAm0FnB,uDADA,8BAl0FmB;AAg1FnB,6CADA,oBA/0FmB;AA21FnB,kDADA,yBA11FmB;AAu2FnB,oDADA,2BAt2FmB;AAm3FnB,mDADA,0BAl3FmB;AAm4FnB,sDADA,6BAl4FmB;AAy5FnB,kDADA,yBAx5FmB;AAu6FnB,sDADA,6BAt6FmB;AAk7FnB,kDADA,yBAj7FmB;AAg8FnB,oDADA,2BA/7FmB;AA48FnB,oDADA,2BA38FmB;AAw9FnB,oDADA,2BAv9FmB;AAo+FnB,oDADA,2BAn+FmB;AAg/FnB,wDADA,+BA/+FmB;AA4/FnB,wDADA,+BA3/FmB;AAwgGnB,wDADA,+BAvgGmB;AAohGnB,wDADA,+BAnhGmB;AA+hGnB,iDADA,wBA9hGmB;AA0iGnB,iDADA,wBAziGmB;AA+jGnB,sDADA,6BA9jGmB;AA6lGnB,oDADA,2BA5lGmB;AA2mGnB,yDADA,gCA1mGmB;AAgoGnB,2CADA,kBA/nGmB;AAupGnB,0CADA,iBAtpGmB;AA2qGnB,4CADA,mBA1qGmB;AAosGnB,6CADA,oBAnsGmB;AAguGnB,iDADA,wBA/tGmB;AAuvGnB,kDADA,yBAtvGmB;AAixGnB,+CADA,sBAhxGmB;AAwyGnB,gDADA,uBAvyGmB;AAk0GnB,gDADA,uBAj0GmB;AAy1GnB,iDADA,wBAx1GmB;AAi3GnB,4CADA,mBAh3GmB;AA24GnB,2CADA,kBA14GmB;AAq6GnB,iDADA,wBAp6GmB;AA27GnB,mDADA,0BA17GmB;AAi9GnB,8CADA,qBAh9GmB;AAm+GnB,gDADA,uBAl+GmB;AAq/GnB,uCADA,cAp/GmB;AAqgHnB,2CADA,kBApgHmB;AAshHnB,2CADA,kBArhHmB;AAiiHnB,kDADA,yBAhiHmB;AA4iHnB,uCADA,cA3iHmB;AAujHnB,4CADA,mBAtjHmB;AAkkHnB,6CADA,oBAjkHmB;AA+kHnB,8CADA,qBA9kHmB;AA0lHnB,uCADA,cAzlHmB;AAumHnB,uCADA,cAtmHmB;AAwnHnB,iDADA,wBAvnHmB;AAyoHnB,iDADA,wBAxoHmB;AAopHnB,qDADA,4BAnpHmB;AAgqHnB,oDADA,2BA/pHmB;AA4qHnB,sDADA,6BA3qHmB;AAurHnB,2DADA,kCAtrHmB;AAksHnB,6DADA,oCAjsHmB;AA6sHnB,4DADA,mCA5sHmB;AAytHnB,sDADA,6BAxtHmB;AAouHnB,2DADA,kCAnuHmB;AAgvHnB,oEADA,2CA/uHmB;AAiwHnB,mEADA,0CAhwHmB;AA4wHnB,mEADA,0CA3wHmB;AA4xHnB,kEADA,yCA3xHmB;AAyyHnB,2CADA,kBAxyHmB;AAwzHnB,2CADA,kBAvzHmB;AAq0HnB,2CADA,kBAp0HmB;AAk1HnB,+CADA,sBAj1HmB;AA81HnB,8CADA,qBA71HmB;AA22HnB,+CADA,sBA12HmB;AAy3HnB,8CADA,qBAx3HmB;AAs4HnB,gDADA,uBAr4HmB;AAq5HnB,2CADA,kBAp5HmB;AAg6HnB,gDADA,uBA/5HmB;AA66HnB,2CADA,kBA56HmB;AAy7HnB,2CADA,kBAx7HmB;AAq8HnB,6CADA,oBAp8HmB;AAg9HnB,kDADA,yBA/8HmB;AA69HnB,6CADA,oBA59HmB;AAy+HnB,6CADA,oBAx+HmB;AAq/HnB,uCADA,cAp/HmB;AAggInB,4CADA,mBA//HmB;AA6gInB,6CADA,oBA5gImB;AA0hInB,6CADA,oBAzhImB;AAwiInB,6CADA,oBAviImB;AAojInB,6CADA,oBAnjImB;AAikInB,qDADA,4BAhkImB;AA4kInB,0CADA,iBA3kImB;AAwlInB,yCADA,gBAvlImB;AAomInB,+CADA,sBAnmImB;AA+mInB,oDADA,2BA9mImB;AA0nInB,+CADA,sBAznImB;AAsoInB,+CADA,sBAroImB;AAipInB,8DADA,qCAhpImB;AA+pInB,sDADA,6BA9pImB;AA4qInB,qDADA,4BA3qImB;AAwrInB,kDADA,yBAvrImB;AAmsInB,uDADA,8BAlsImB;AA8sInB,0CADA,iBA7sImB;AA0tInB,yCADA,gBAztImB;AAquInB,wCADA,eApuImB;AAivInB,uCADA,cAhvImB;AA4vInB,yCADA,gBA3vImB;AAwwInB,yCADA,gBAvwImB;AAmxInB,4BAAM,uBADN,0BAlxImB;AA8xInB,2DADA,kCA7xImB;AAyyInB,0DADA,iCAxyImB;AAozInB,6CADA,oBAnzImB;AA+zInB,8CADA,qBA9zImB;AA66InB,4BAAM,yBADN,4BA56ImB;AAw8InB,4BAAM,8BADN,iCAv8ImB;AA6+InB,4BAAM,yBADN,4BA5+ImB;AA6gJnB,+CADA,sBA5gJmB;AAwhJnB,iDADA,wBAvhJmB;AAmiJnB,8CADA,qBAliJmB;AA+iJnB,gDADA,uBA9iJmB;AA2jJnB,+CADA,sBA1jJmB;AAukJnB,8CADA,qBAtkJmB;AAklJnB,gDADA,uBAjlJmB;AA6lJnB,+CADA,sBA5lJmB;AAwmJnB,oDADA,2BAvmJmB;AA+nJnB,wCADA,eA9nJmB;AA0oJnB,wCADA,eAzoJmB;AAkrJnB,4BAAM,sBAD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CH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP;AAAA,IACF,KAAK;AACH,aAAO;AACP,aAAO,aAAa;AACpB;AAAA,IACF,KAAK;AACH,aAAO;AACP,aAAO,aAAa;AACpB;AAAA,IACF,KAAK;AACH,aAAO;AACP,aAAO,aAAa;AACpB;AAAA,IACF,KAAK;AACH,aAAO;AACP,aAAO,aAAa,OAAO,cAAc,WAAW;AACp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",
  "names": ["len", "i", "len2", "Buffer", "string", "array", "max", "read", "i", "byteLength", "min", "type", "CESDK", "err", "assert", "i", "files", "emscripten_ubq_FetchState", "emscripten_ubq_FetchMethod", "init", "process", "fs", "array", "string", "max", "module", "type", "byteArray", "getter", "xhr", "lazyArray", "typeConverters", "elementTypes", "setter", "fieldTypes", "handle", "rv", "argTypes", "HEAP", "object", "canvas", "audio", "canvasContainer", "fixedGetContext", "read", "location", "date", "ret", "run", "MimeType", "StructError", "TypeError", "constructor", "failure", "failures", "cached", "message", "rest", "path", "msg", "length", "join", "value", "key", "type", "refinement", "branch", "Object", "assign", "name", "isIterable", "x", "isObject", "Symbol", "iterator", "print", "value", "JSON", "stringify", "shiftIterator", "input", "done", "next", "undefined", "toFailure", "result", "context", "struct", "message", "path", "branch", "type", "refinement", "key", "length", "toFailures", "isIterable", "r", "failure", "run", "options", "coerce", "mask", "ctx", "coercer", "isObject", "schema", "Array", "isArray", "valid", "validator", "k", "v", "s", "entries", "ts", "t", "Map", "set", "Set", "add", "refiner", "Struct", "constructor", "props", "TYPE", "assert", "create", "is", "validate", "tuples", "tuple", "error", "StructError", "define", "name", "validator", "Struct", "type", "schema", "array", "Element", "Struct", "type", "schema", "entries", "value", "Array", "isArray", "i", "v", "coercer", "slice", "validator", "print", "boolean", "define", "value", "integer", "define", "value", "isNaN", "Number", "isInteger", "print", "never", "define", "number", "define", "value", "isNaN", "print", "object", "schema", "knowns", "Object", "keys", "Never", "never", "Struct", "type", "entries", "isObject", "unknowns", "Set", "key", "delete", "validator", "coercer", "string", "define", "value", "print", "getSize", "value", "Map", "Set", "size", "length", "max", "struct", "threshold", "options", "exclusive", "refine", "type", "min", "nonempty", "refine", "struct", "name", "refiner", "Struct", "value", "ctx", "result", "failures", "toFailures", "failure", "refinement", "assert", "define", "define", "ColorInternal", "ColorSpace", "Blob", "assert", "mimeType", "type", "_ubq", "_init", "assert", "type", "_create_dec", "_loadFromArchiveURL_dec", "_loadFromString_dec", "_ubq", "_init", "assert", "type", "NotificationType", "SceneLayoutNumeric", "_init", "_getString_dec", "_setString_dec", "_findAll_dec", "_ubq", "_init", "assert", "CESDK", "cesdk_default", "getPreloadedPackage", "update", "resolverWithError", "ExportVideo"]
}
